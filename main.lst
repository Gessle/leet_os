Module: D:\LEETSRC\490\main.c
GROUP: 'DGROUP' CONST,CONST2,_DATA,_BSS

Segment: main_TEXT BYTE USE16 0000E711 bytes
0000                          load_settings_:
0000    53                        push        bx 
0001    51                        push        cx 
0002    52                        push        dx 
0003    56                        push        si 
0004    57                        push        di 
0005    C8 A8 00 00               enter       0x00a8,0x00 
0009    81 ED 80 00               sub         bp,0x0080 
000D    B9 2A 00                  mov         cx,0x002a 
0010    8D 7E D8                  lea         di,-0x28[bp] 
0013    16                        push        ss 
0014    07                        pop         es 
0015    16                        push        ss 
0016    1F                        pop         ds 
0017    BE BA 00                  mov         si,offset DGROUP:L$1907 
001A    BB BC 00                  mov         bx,offset DGROUP:L$1744 
001D    F3 A5                     rep movsw   
001F    8C D2                     mov         dx,ss 
0021    8D 7E 6C                  lea         di,0x6c[bp] 
0024    36 A1 0E 01               mov         ax,word ptr ss:L$1908 
0028    BE 12 01                  mov         si,offset DGROUP:L$1910 
002B    89 46 74                  mov         word ptr 0x74[bp],ax 
002E    36 A1 10 01               mov         ax,word ptr ss:L$1909 
0032    8C D1                     mov         cx,ss 
0034    89 46 76                  mov         word ptr 0x76[bp],ax 
0037    B8 BE 00                  mov         ax,offset DGROUP:L$1745 
003A    A5                        movsw       
003B    A5                        movsw       
003C    A5                        movsw       
003D    A5                        movsw       
003E    9A 00 00 00 00            call        fopen_ 
0043    89 C3                     mov         bx,ax 
0045    89 56 7E                  mov         word ptr 0x7e[bp],dx 
0048    85 D2                     test        dx,dx 
004A    75 06                     jne         L$1 
004C    85 C0                     test        ax,ax 
004E    0F 84 F5 00               je          L$14 
0052                          L$1:
0052    C7 46 7A 00 00            mov         word ptr 0x7a[bp],0x0000 
0057    31 FF                     xor         di,di 
0059    EB 2D                     jmp         L$5 
005B                          L$2:
005B    C6 42 5E 00               mov         byte ptr 0x5e[bp+si],0x00 
005F    83 7E 7A 00               cmp         word ptr 0x7a[bp],0x0000 
0063    75 08                     jne         L$3 
0065    36 83 3E 00 00 00         cmp         word ptr ss:_videodriver,0x0000 
006B    7D 0F                     jge         L$4 
006D                          L$3:
006D    8D 46 5E                  lea         ax,0x5e[bp] 
0070    8C D2                     mov         dx,ss 
0072    9A 00 00 00 00            call        atoi_ 
0077    C5 73 D8                  lds         si,dword ptr -0x28[bp+di] 
007A    88 04                     mov         byte ptr [si],al 
007C                          L$4:
007C    FF 46 7A                  inc         word ptr 0x7a[bp] 
007F    83 C7 04                  add         di,0x0004 
0082    83 7E 7A 15               cmp         word ptr 0x7a[bp],0x0015 
0086    73 27                     jae         L$7 
0088                          L$5:
0088    31 F6                     xor         si,si 
008A                          L$6:
008A    8B 56 7E                  mov         dx,word ptr 0x7e[bp] 
008D    89 D8                     mov         ax,bx 
008F    9A 00 00 00 00            call        fgetc_ 
0094    89 C1                     mov         cx,ax 
0096    3D 0A 00                  cmp         ax,0x000a 
0099    74 C0                     je          L$2 
009B    8E 5E 7E                  mov         ds,word ptr 0x7e[bp] 
009E    F6 47 0A 10               test        byte ptr 0xa[bx],0x10 
00A2    75 B7                     jne         L$2 
00A4    83 FE 0C                  cmp         si,0x000c 
00A7    73 B2                     jae         L$2 
00A9    46                        inc         si 
00AA    88 42 5D                  mov         byte ptr 0x5d[bp+si],al 
00AD    EB DB                     jmp         L$6 
00AF                          L$7:
00AF    31 FF                     xor         di,di 
00B1    31 F6                     xor         si,si 
00B3                          L$8:
00B3    8B 56 7E                  mov         dx,word ptr 0x7e[bp] 
00B6    89 D8                     mov         ax,bx 
00B8    9A 00 00 00 00            call        fgetc_ 
00BD    89 C1                     mov         cx,ax 
00BF    3D 0A 00                  cmp         ax,0x000a 
00C2    74 14                     je          L$9 
00C4    8E 5E 7E                  mov         ds,word ptr 0x7e[bp] 
00C7    F6 47 0A 10               test        byte ptr 0xa[bx],0x10 
00CB    75 0B                     jne         L$9 
00CD    83 FE 0C                  cmp         si,0x000c 
00D0    73 06                     jae         L$9 
00D2    46                        inc         si 
00D3    88 42 5D                  mov         byte ptr 0x5d[bp+si],al 
00D6    EB DB                     jmp         L$8 
00D8                          L$9:
00D8    8D 46 5E                  lea         ax,0x5e[bp] 
00DB    8C D2                     mov         dx,ss 
00DD    C6 42 5E 00               mov         byte ptr 0x5e[bp+si],0x00 
00E1    9A 00 00 00 00            call        atoi_ 
00E6    C5 73 74                  lds         si,dword ptr 0x74[bp+di] 
00E9    89 04                     mov         word ptr [si],ax 
00EB    31 F6                     xor         si,si 
00ED    EB 14                     jmp         L$11 
00EF                          L$10:
00EF    8B 7A 6C                  mov         di,word ptr 0x6c[bp+si] 
00F2    03 7E 7C                  add         di,word ptr 0x7c[bp] 
00F5    8E 5A 6E                  mov         ds,word ptr 0x6e[bp+si] 
00F8    83 C6 04                  add         si,0x0004 
00FB    C6 05 00                  mov         byte ptr [di],0x00 
00FE    83 FE 08                  cmp         si,0x0008 
0101    74 3A                     je          L$13 
0103                          L$11:
0103    C7 46 7C 00 00            mov         word ptr 0x7c[bp],0x0000 
0108    89 76 78                  mov         word ptr 0x78[bp],si 
010B                          L$12:
010B    8B 56 7E                  mov         dx,word ptr 0x7e[bp] 
010E    89 D8                     mov         ax,bx 
0110    9A 00 00 00 00            call        fgetc_ 
0115    89 C1                     mov         cx,ax 
0117    3D 0A 00                  cmp         ax,0x000a 
011A    74 D3                     je          L$10 
011C    8E 5E 7E                  mov         ds,word ptr 0x7e[bp] 
011F    F6 47 0A 10               test        byte ptr 0xa[bx],0x10 
0123    75 CA                     jne         L$10 
0125    83 7E 7C 0C               cmp         word ptr 0x7c[bp],0x000c 
0129    73 C4                     jae         L$10 
012B    8B 7E 78                  mov         di,word ptr 0x78[bp] 
012E    C5 43 6C                  lds         ax,dword ptr 0x6c[bp+di] 
0131    8B 7E 7C                  mov         di,word ptr 0x7c[bp] 
0134    01 C7                     add         di,ax 
0136    FF 46 7C                  inc         word ptr 0x7c[bp] 
0139    88 0D                     mov         byte ptr [di],cl 
013B    EB CE                     jmp         L$12 
013D                          L$13:
013D    8B 56 7E                  mov         dx,word ptr 0x7e[bp] 
0140    89 D8                     mov         ax,bx 
0142    9A 00 00 00 00            call        fclose_ 
0147                          L$14:
0147    16                        push        ss 
0148    68 00 00                  push        offset _wallpaper 
014B    16                        push        ss 
014C    68 C8 00                  push        offset DGROUP:L$1746 
014F    8D 56 2C                  lea         dx,0x2c[bp] 
0152    16                        push        ss 
0153    BB 00 00                  mov         bx,offset _wallpaper_struct 
0156    52                        push        dx 
0157    8C D1                     mov         cx,ss 
0159    9A 00 00 00 00            call        sprintf_ 
015E    8D 46 2C                  lea         ax,0x2c[bp] 
0161    83 C4 0C                  add         sp,0x000c 
0164    8C D2                     mov         dx,ss 
0166    9A 00 00 00 00            call        load_xpm_bitmap_ 
016B    85 C0                     test        ax,ax 
016D    74 0A                     je          L$15 
016F    31 C0                     xor         ax,ax 
0171    36 A3 04 00               mov         word ptr ss:_wallpaper_struct+0x4,ax 
0175    36 A3 06 00               mov         word ptr ss:_wallpaper_struct+0x6,ax 
0179                          L$15:
0179    36 83 3E 00 00 00         cmp         word ptr ss:_videodriver,0x0000 
017F    7D 28                     jge         L$18 
0181    36 80 3E 00 00 13         cmp         byte ptr ss:_video,0x13 
0187    76 10                     jbe         L$16 
0189    B0 56                     mov         al,0x56 
018B    36 C6 06 00 00 10         mov         byte ptr ss:__FONT_HEIGHT,0x10 
0191    36 80 2E 00 00 20         sub         byte ptr ss:_video,0x20 
0197    EB 08                     jmp         L$17 
0199                          L$16:
0199    B0 43                     mov         al,0x43 
019B    36 C6 06 00 00 08         mov         byte ptr ss:__FONT_HEIGHT,0x08 
01A1                          L$17:
01A1    36 A2 06 00               mov         byte ptr ss:_system_font_file+0x6,al 
01A5    36 A2 06 00               mov         byte ptr ss:_monospace_font_file+0x6,al 
01A9                          L$18:
01A9    8D A6 80 00               lea         sp,0x80[bp] 
01AD    5D                        pop         bp 
	     01AF		; The label referred to here is an undefined location
01AE    E9 83 CF                  jmp         0xffffd134 
01B1                          get_paths_:
01B1    51                        push        cx 
01B2    56                        push        si 
01B3    57                        push        di 
01B4    C8 08 00 00               enter       0x0008,0x00 
01B8    89 C6                     mov         si,ax 
01BA    89 56 F8                  mov         word ptr -0x8[bp],dx 
01BD    89 5E FC                  mov         word ptr -0x4[bp],bx 
01C0    B8 43 00                  mov         ax,0x0043 
01C3    9A 00 00 00 00            call        malloc_ 
01C8    31 C9                     xor         cx,cx 
01CA    8E DA                     mov         ds,dx 
01CC    85 D2                     test        dx,dx 
01CE    75 0F                     jne         L$20 
01D0    85 C0                     test        ax,ax 
01D2    75 0B                     jne         L$20 
01D4    0E                        push        cs 
01D5    E8 00 00                  call        nomemory_ 
01D8                          L$19:
01D8    31 C0                     xor         ax,ax 
01DA    31 DB                     xor         bx,bx 
01DC    E9 79 00                  jmp         L$28 
01DF                          L$20:
01DF    83 7E F8 00               cmp         word ptr -0x8[bp],0x0000 
01E3    75 04                     jne         L$21 
01E5    85 F6                     test        si,si 
01E7    74 EF                     je          L$19 
01E9                          L$21:
01E9    FF 4E FC                  dec         word ptr -0x4[bp] 
01EC    83 7E FC FF               cmp         word ptr -0x4[bp],0xffff 
01F0    74 64                     je          L$27 
01F2    89 F3                     mov         bx,si 
01F4    8E 46 F8                  mov         es,word ptr -0x8[bp] 
01F7    01 CB                     add         bx,cx 
01F9    26 80 3F 3B               cmp         byte ptr es:[bx],0x3b 
01FD    75 05                     jne         L$22 
01FF    89 CA                     mov         dx,cx 
0201    42                        inc         dx 
0202    01 D6                     add         si,dx 
0204                          L$22:
0204    89 F3                     mov         bx,si 
0206    8E 46 F8                  mov         es,word ptr -0x8[bp] 
0209    01 CB                     add         bx,cx 
020B    26 80 3F 00               cmp         byte ptr es:[bx],0x00 
020F    74 06                     je          L$23 
0211    26 80 3C 00               cmp         byte ptr es:[si],0x00 
0215    75 0D                     jne         L$24 
0217                          L$23:
0217    8C DA                     mov         dx,ds 
0219    9A 00 00 00 00            call        free_ 
021E    31 DB                     xor         bx,bx 
0220    31 C0                     xor         ax,ax 
0222    EB 34                     jmp         L$28 
0224                          L$24:
0224    89 F3                     mov         bx,si 
0226    8C 46 FE                  mov         word ptr -0x2[bp],es 
0229    89 C7                     mov         di,ax 
022B    8C 5E FA                  mov         word ptr -0x6[bp],ds 
022E    31 C9                     xor         cx,cx 
0230                          L$25:
0230    8E 46 FE                  mov         es,word ptr -0x2[bp] 
0233    26 80 3F 00               cmp         byte ptr es:[bx],0x00 
0237    74 14                     je          L$26 
0239    26 80 3F 3B               cmp         byte ptr es:[bx],0x3b 
023D    74 0E                     je          L$26 
023F    41                        inc         cx 
0240    26 8A 17                  mov         dl,byte ptr es:[bx] 
0243    8E 46 FA                  mov         es,word ptr -0x6[bp] 
0246    43                        inc         bx 
0247    26 88 15                  mov         byte ptr es:[di],dl 
024A    47                        inc         di 
024B    EB E3                     jmp         L$25 
024D                          L$26:
024D    89 C3                     mov         bx,ax 
024F    01 CB                     add         bx,cx 
0251    C6 07 00                  mov         byte ptr [bx],0x00 
0254    EB 93                     jmp         L$21 
0256                          L$27:
0256    8C DB                     mov         bx,ds 
0258                          L$28:
0258    89 DA                     mov         dx,bx 
025A    E9 AC 48                  jmp         L$600 
025D                          str_char_lastocc_:
025D    51                        push        cx 
025E    56                        push        si 
025F    57                        push        di 
0260    89 C6                     mov         si,ax 
0262    8E DA                     mov         ds,dx 
0264    89 C7                     mov         di,ax 
0266    8E C2                     mov         es,dx 
0268    B9 FF FF                  mov         cx,0xffff 
026B    33 C0                     xor         ax,ax 
026D    F2 AE                     repne scasb 
026F    F7 D1                     not         cx 
0271    49                        dec         cx 
0272    01 CE                     add         si,cx 
0274                          L$29:
0274    3A 1C                     cmp         bl,byte ptr [si] 
0276    74 05                     je          L$30 
0278    83 C6 FF                  add         si,0xffff 
027B    EB F7                     jmp         L$29 
027D                          L$30:
027D    89 F0                     mov         ax,si 
027F    8C DA                     mov         dx,ds 
0281    E9 86 48                  jmp         L$601 

Routine Size: 644 bytes,    Routine Base: main_TEXT + 0000

0284                          dosexec_:
0284    56                        push        si 
0285    57                        push        di 
0286    C8 8E 00 00               enter       0x008e,0x00 
028A    50                        push        ax 
028B    52                        push        dx 
028C    81 ED 88 00               sub         bp,0x0088 
0290    89 CA                     mov         dx,cx 
0292    B9 40 00                  mov         cx,0x0040 
0295    8D 7E FA                  lea         di,-0x6[bp] 
0298    16                        push        ss 
0299    07                        pop         es 
029A    16                        push        ss 
029B    1F                        pop         ds 
029C    BE 1A 01                  mov         si,offset DGROUP:L$1911 
029F    F3 A5                     rep movsw   
02A1    85 D2                     test        dx,dx 
02A3    75 04                     jne         L$31 
02A5    85 DB                     test        bx,bx 
02A7    74 34                     je          L$32 
02A9                          L$31:
02A9    89 DF                     mov         di,bx 
02AB    8E C2                     mov         es,dx 
02AD    B9 FF FF                  mov         cx,0xffff 
02B0    33 C0                     xor         ax,ax 
02B2    F2 AE                     repne scasb 
02B4    F7 D1                     not         cx 
02B6    49                        dec         cx 
02B7    89 DE                     mov         si,bx 
02B9    8D 7E FB                  lea         di,-0x5[bp] 
02BC    88 4E FA                  mov         byte ptr -0x6[bp],cl 
02BF    0F B6 C1                  movzx       ax,cl 
02C2    16                        push        ss 
02C3    07                        pop         es 
02C4    89 D1                     mov         cx,dx 
02C6    1E                        push        ds 
02C7    57                        push        di 
02C8    91                        xchg        ax,cx 
02C9    8E D8                     mov         ds,ax 
02CB    D1 E9                     shr         cx,0x01 
02CD    F3 A5                     rep movsw   
02CF    13 C9                     adc         cx,cx 
02D1    F3 A4                     rep movsb   
02D3    5F                        pop         di 
02D4    1F                        pop         ds 
02D5    0F B6 76 FA               movzx       si,byte ptr -0x6[bp] 
02D9    C6 42 FB 0D               mov         byte ptr -0x5[bp+si],0x0d 
02DD                          L$32:
02DD    B9 0E 00                  mov         cx,0x000e 
02E0    8D 7E 7A                  lea         di,0x7a[bp] 
02E3    8D 56 FA                  lea         dx,-0x6[bp] 
02E6    16                        push        ss 
02E7    07                        pop         es 
02E8    30 C0                     xor         al,al 
02EA    8D 5E 7A                  lea         bx,0x7a[bp] 
02ED    57                        push        di 
02EE    8A E0                     mov         ah,al 
02F0    D1 E9                     shr         cx,0x01 
02F2    F3 AB                     rep stosw   
02F4    13 C9                     adc         cx,cx 
02F6    F3 AA                     rep stosb   
02F8    5F                        pop         di 
02F9    8B 4E F6                  mov         cx,word ptr -0xa[bp] 
02FC    89 56 7C                  mov         word ptr 0x7c[bp],dx 
02FF    8C 56 7E                  mov         word ptr 0x7e[bp],ss 
0302    30 E4                     xor         ah,ah 
0304    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
0307    89 46 7A                  mov         word ptr 0x7a[bp],ax 
030A    9A 00 00 00 00            call        _heapshrink_ 
030F    16                        push        ss 
0310    07                        pop         es 
0311    55                        push        bp 
0312    56                        push        si 
0313    57                        push        di 
0314    1E                        push        ds 
0315    8E D9                     mov         ds,cx 
0317    B8 00 4B                  mov         ax,0x4b00 
031A    CD 21                     int         0x21 
031C    0F 83 03 00               jae         L$33 
0320    E9 02 00                  jmp         L$34 
0323                          L$33:
0323    33 C0                     xor         ax,ax 
0325                          L$34:
0325    1F                        pop         ds 
0326    5F                        pop         di 
0327    5E                        pop         si 
0328    5D                        pop         bp 
0329    8D A6 88 00               lea         sp,0x88[bp] 
032D    5D                        pop         bp 
032E    5F                        pop         di 
032F    5E                        pop         si 
0330    CB                        retf        

Routine Size: 173 bytes,    Routine Base: main_TEXT + 0284

0331                          make_sound_:
0331    52                        push        dx 
0332    3D 01 00                  cmp         ax,0x0001 
0335    75 16                     jne         L$35 
0337    B8 F4 01                  mov         ax,0x01f4 
033A    9A 00 00 00 00            call        sound_ 
033F    31 D2                     xor         dx,dx 
0341    B8 80 3E                  mov         ax,0x3e80 
0344    0E                        push        cs 
0345    E8 00 00                  call        shortdelay_ 
0348    9A 00 00 00 00            call        nosound_ 
034D                          L$35:
034D    5A                        pop         dx 
034E    CB                        retf        
034F                          pixel_is_inside_window_:
034F    8E D9                     mov         ds,cx 
0351    8B 4F 04                  mov         cx,word ptr 0x4[bx] 
0354    49                        dec         cx 
0355    39 C8                     cmp         ax,cx 
0357    7C 0A                     jl          L$36 
0359    8B 4F 04                  mov         cx,word ptr 0x4[bx] 
035C    03 4F 12                  add         cx,word ptr 0x12[bx] 
035F    39 C8                     cmp         ax,cx 
0361    7E 03                     jle         L$37 
0363                          L$36:
0363    31 C0                     xor         ax,ax 
0365    C3                        ret         
0366                          L$37:
0366    8B 47 06                  mov         ax,word ptr 0x6[bx] 
0369    48                        dec         ax 
036A    39 C2                     cmp         dx,ax 
036C    7C F5                     jl          L$36 
036E    8B 47 06                  mov         ax,word ptr 0x6[bx] 
0371    03 47 14                  add         ax,word ptr 0x14[bx] 
0374    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
037A    01 D8                     add         ax,bx 
037C    40                        inc         ax 
037D    40                        inc         ax 
037E    39 C2                     cmp         dx,ax 
0380    7F E1                     jg          L$36 
0382    B8 01 00                  mov         ax,0x0001 
0385    C3                        ret         

Routine Size: 85 bytes,    Routine Base: main_TEXT + 0331

0386                          windowpos_visible_:
0386    56                        push        si 
0387    57                        push        di 
0388    C8 0A 00 00               enter       0x000a,0x00 
038C    89 C6                     mov         si,ax 
038E    89 56 FE                  mov         word ptr -0x2[bp],dx 
0391    89 5E F8                  mov         word ptr -0x8[bp],bx 
0394    89 4E F6                  mov         word ptr -0xa[bp],cx 
0397    36 A1 00 00               mov         ax,word ptr ss:_window_count 
039B    36 8B 0E 02 00            mov         cx,word ptr ss:_draw_window_box+0x2 
03A0    89 46 FA                  mov         word ptr -0x6[bp],ax 
03A3    36 A1 00 00               mov         ax,word ptr ss:_draw_window_box 
03A7    85 C9                     test        cx,cx 
03A9    75 04                     jne         L$38 
03AB    85 C0                     test        ax,ax 
03AD    74 16                     je          L$40 
03AF                          L$38:
03AF    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
03B2    89 C3                     mov         bx,ax 
03B4    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
03B7    E8 00 00                  call        pixel_is_inside_window_ 
03BA    85 C0                     test        ax,ax 
03BC    0F 85 14 01               jne         L$51 
03C0                          L$39:
03C0    30 C0                     xor         al,al 
03C2    E9 11 01                  jmp         L$52 
03C5                          L$40:
03C5    85 D2                     test        dx,dx 
03C7    75 06                     jne         L$41 
03C9    85 F6                     test        si,si 
03CB    0F 84 05 01               je          L$51 
03CF                          L$41:
03CF    83 FA FF                  cmp         dx,0xffff 
03D2    75 07                     jne         L$42 
03D4    83 FE FF                  cmp         si,0xffff 
03D7    0F 84 7A 00               je          L$47 
03DB                          L$42:
03DB    8E DA                     mov         ds,dx 
03DD    F6 44 17 01               test        byte ptr 0x17[si],0x01 
03E1    75 DD                     jne         L$39 
03E3    36 A1 00 00               mov         ax,word ptr ss:_active_window 
03E7    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
03EC    C1 E0 02                  shl         ax,0x02 
03EF    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
03F4    01 C3                     add         bx,ax 
03F6    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
03F9    8B 07                     mov         ax,word ptr [bx] 
03FB    39 D1                     cmp         cx,dx 
03FD    75 04                     jne         L$43 
03FF    39 F0                     cmp         ax,si 
0401    74 0F                     je          L$44 
0403                          L$43:
0403    89 C7                     mov         di,ax 
0405    8E D9                     mov         ds,cx 
0407    8A 45 16                  mov         al,byte ptr 0x16[di] 
040A    A8 40                     test        al,0x40 
040C    75 B2                     jne         L$39 
040E    A8 04                     test        al,0x04 
0410    75 AE                     jne         L$39 
0412                          L$44:
0412    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0415    8A 44 16                  mov         al,byte ptr 0x16[si] 
0418    A8 40                     test        al,0x40 
041A    75 04                     jne         L$45 
041C    A8 04                     test        al,0x04 
041E    74 23                     je          L$46 
0420                          L$45:
0420    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
0425    36 A1 00 00               mov         ax,word ptr ss:_windows 
0429    C1 E3 02                  shl         bx,0x02 
042C    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
0431    01 C3                     add         bx,ax 
0433    8B 07                     mov         ax,word ptr [bx] 
0435    8B 5F 02                  mov         bx,word ptr 0x2[bx] 
0438    3B 5E FE                  cmp         bx,word ptr -0x2[bp] 
043B    75 06                     jne         L$46 
043D    39 F0                     cmp         ax,si 
043F    0F 84 91 00               je          L$51 
0443                          L$46:
0443    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0446    8A 44 16                  mov         al,byte ptr 0x16[si] 
0449    A8 08                     test        al,0x08 
044B    0F 85 71 FF               jne         L$39 
044F    A8 20                     test        al,0x20 
0451    0F 85 6B FF               jne         L$39 
0455                          L$47:
0455    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
0458    01 C0                     add         ax,ax 
045A    89 46 FC                  mov         word ptr -0x4[bp],ax 
045D                          L$48:
045D    FF 4E FA                  dec         word ptr -0x6[bp] 
0460    83 6E FC 02               sub         word ptr -0x4[bp],0x0002 
0464    83 7E FA FF               cmp         word ptr -0x6[bp],0xffff 
0468    74 6A                     je          L$51 
046A    83 7E FE FF               cmp         word ptr -0x2[bp],0xffff 
046E    75 05                     jne         L$49 
0470    83 FE FF                  cmp         si,0xffff 
0473    74 27                     je          L$50 
0475                          L$49:
0475    36 C5 1E 00 00            lds         bx,dword ptr ss:_window_visibility_order 
047A    03 5E FC                  add         bx,word ptr -0x4[bp] 
047D    8B 07                     mov         ax,word ptr [bx] 
047F    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
0484    C1 E0 02                  shl         ax,0x02 
0487    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
048C    01 C3                     add         bx,ax 
048E    8B 47 02                  mov         ax,word ptr 0x2[bx] 
0491    8B 0F                     mov         cx,word ptr [bx] 
0493    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
0496    75 04                     jne         L$50 
0498    39 F1                     cmp         cx,si 
049A    74 38                     je          L$51 
049C                          L$50:
049C    36 C5 1E 00 00            lds         bx,dword ptr ss:_window_visibility_order 
04A1    03 5E FC                  add         bx,word ptr -0x4[bp] 
04A4    8B 07                     mov         ax,word ptr [bx] 
04A6    36 8B 3E 00 00            mov         di,word ptr ss:_windows 
04AB    C1 E0 02                  shl         ax,0x02 
04AE    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
04B3    01 C7                     add         di,ax 
04B5    C5 1D                     lds         bx,dword ptr [di] 
04B7    8A 47 16                  mov         al,byte ptr 0x16[bx] 
04BA    A8 08                     test        al,0x08 
04BC    75 9F                     jne         L$48 
04BE    A8 20                     test        al,0x20 
04C0    75 9B                     jne         L$48 
04C2    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
04C5    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
04C8    8C D9                     mov         cx,ds 
04CA    E8 00 00                  call        pixel_is_inside_window_ 
04CD    85 C0                     test        ax,ax 
04CF    74 8C                     je          L$48 
04D1    E9 EC FE                  jmp         L$39 
04D4                          L$51:
04D4    B0 01                     mov         al,0x01 
04D6                          L$52:
04D6    C9                        leave       
04D7    5F                        pop         di 
04D8    5E                        pop         si 
04D9    CB                        retf        

Routine Size: 340 bytes,    Routine Base: main_TEXT + 0386

04DA                          load_system_font_:
04DA    56                        push        si 
04DB    57                        push        di 
04DC    C8 04 00 00               enter       0x0004,0x00 
04E0    89 DE                     mov         si,bx 
04E2    89 4E FC                  mov         word ptr -0x4[bp],cx 
04E5    BB D3 00                  mov         bx,offset DGROUP:L$1747 
04E8    8C D1                     mov         cx,ss 
04EA    9A 00 00 00 00            call        fopen_ 
04EF    89 46 FE                  mov         word ptr -0x2[bp],ax 
04F2    89 D7                     mov         di,dx 
04F4    85 D2                     test        dx,dx 
04F6    75 04                     jne         L$53 
04F8    85 C0                     test        ax,ax 
04FA    74 DA                     je          L$52 
04FC                          L$53:
04FC    6A 02                     push        0x0002 
04FE    31 DB                     xor         bx,bx 
0500    31 C9                     xor         cx,cx 
0502    9A 00 00 00 00            call        fseek_ 
0507    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
050A    89 FA                     mov         dx,di 
050C    9A 00 00 00 00            call        ftell_ 
0511    89 C1                     mov         cx,ax 
0513    89 FA                     mov         dx,di 
0515    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
0518    9A 00 00 00 00            call        rewind_ 
051D    BA 01 00                  mov         dx,0x0001 
0520    89 C8                     mov         ax,cx 
0522    9A 00 00 00 00            call        calloc_ 
0527    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
052A    89 04                     mov         word ptr [si],ax 
052C    89 54 02                  mov         word ptr 0x2[si],dx 
052F    8B 04                     mov         ax,word ptr [si] 
0531    85 D2                     test        dx,dx 
0533    75 0A                     jne         L$54 
0535    85 C0                     test        ax,ax 
0537    75 06                     jne         L$54 
0539    0E                        push        cs 
053A    E8 00 00                  call        nomemory_ 
053D    EB 97                     jmp         L$52 
053F                          L$54:
053F    57                        push        di 
0540    FF 76 FE                  push        word ptr -0x2[bp] 
0543    BB 01 00                  mov         bx,0x0001 
0546    9A 00 00 00 00            call        fread_ 
054B    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
054E    89 FA                     mov         dx,di 
0550    9A 00 00 00 00            call        fclose_ 
0555    E9 7E FF                  jmp         L$52 

Routine Size: 126 bytes,    Routine Base: main_TEXT + 04DA

0558                          string_width_:
0558    56                        push        si 
0559    57                        push        di 
055A    C8 10 00 00               enter       0x0010,0x00 
055E    89 C6                     mov         si,ax 
0560    8E DA                     mov         ds,dx 
0562    89 4E FE                  mov         word ptr -0x2[bp],cx 
0565    31 FF                     xor         di,di 
0567    83 7E 0A 00               cmp         word ptr 0xa[bp],0x0000 
056B    74 29                     je          L$56 
056D    89 C7                     mov         di,ax 
056F    8E C2                     mov         es,dx 
0571    B9 FF FF                  mov         cx,0xffff 
0574    33 C0                     xor         ax,ax 
0576    F2 AE                     repne scasb 
0578    F7 D1                     not         cx 
057A    49                        dec         cx 
057B    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
057E    39 C1                     cmp         cx,ax 
0580    73 0E                     jae         L$55 
0582    89 F7                     mov         di,si 
0584    B9 FF FF                  mov         cx,0xffff 
0587    33 C0                     xor         ax,ax 
0589    F2 AE                     repne scasb 
058B    F7 D1                     not         cx 
058D    49                        dec         cx 
058E    89 C8                     mov         ax,cx 
0590                          L$55:
0590    C1 E0 03                  shl         ax,0x03 
0593    E9 EF 00                  jmp         L$78 
0596                          L$56:
0596    36 A1 00 00               mov         ax,word ptr ss:_system_font 
059A    89 46 F0                  mov         word ptr -0x10[bp],ax 
059D    36 A1 02 00               mov         ax,word ptr ss:_system_font+0x2 
05A1    89 46 FA                  mov         word ptr -0x6[bp],ax 
05A4    89 D8                     mov         ax,bx 
05A6    D1 E8                     shr         ax,0x01 
05A8    8E 46 FA                  mov         es,word ptr -0x6[bp] 
05AB    89 46 F8                  mov         word ptr -0x8[bp],ax 
05AE    89 D8                     mov         ax,bx 
05B0    C1 EB 04                  shr         bx,0x04 
05B3    C1 E8 02                  shr         ax,0x02 
05B6    89 5E F2                  mov         word ptr -0xe[bp],bx 
05B9    89 46 F6                  mov         word ptr -0xa[bp],ax 
05BC    8A 4E F2                  mov         cl,byte ptr -0xe[bp] 
05BF                          L$57:
05BF    FF 4E FE                  dec         word ptr -0x2[bp] 
05C2    83 7E FE FF               cmp         word ptr -0x2[bp],0xffff 
05C6    0F 84 B9 00               je          L$77 
05CA    80 3C 20                  cmp         byte ptr [si],0x20 
05CD    75 06                     jne         L$58 
05CF    83 C7 04                  add         di,0x0004 
05D2    E9 A4 00                  jmp         L$76 
05D5                          L$58:
05D5    0F B6 04                  movzx       ax,byte ptr [si] 
05D8    2D 21 00                  sub         ax,0x0021 
05DB    89 46 FC                  mov         word ptr -0x4[bp],ax 
05DE    3D DE 00                  cmp         ax,0x00de 
05E1    0F 83 94 00               jae         L$76 
05E5    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
05E8                          L$59:
05E8    FF 4E FC                  dec         word ptr -0x4[bp] 
05EB    26 0F B6 07               movzx       ax,byte ptr es:[bx] 
05EF    43                        inc         bx 
05F0    83 7E FC FF               cmp         word ptr -0x4[bp],0xffff 
05F4    74 06                     je          L$60 
05F6    D3 E0                     shl         ax,cl 
05F8    01 C3                     add         bx,ax 
05FA    EB EC                     jmp         L$59 
05FC                          L$60:
05FC    3D 02 00                  cmp         ax,0x0002 
05FF    72 0F                     jb          L$61 
0601    76 12                     jbe         L$62 
0603    3D 08 00                  cmp         ax,0x0008 
0606    74 3F                     je          L$70 
0608    3D 04 00                  cmp         ax,0x0004 
060B    74 0D                     je          L$64 
060D    E9 69 00                  jmp         L$76 
0610                          L$61:
0610    3D 01 00                  cmp         ax,0x0001 
0613    75 64                     jne         L$76 
0615                          L$62:
0615    40                        inc         ax 
0616                          L$63:
0616    01 C7                     add         di,ax 
0618    EB 5F                     jmp         L$76 
061A                          L$64:
061A    C7 46 F4 04 00            mov         word ptr -0xc[bp],0x0004 
061F    31 C0                     xor         ax,ax 
0621    31 D2                     xor         dx,dx 
0623                          L$65:
0623    3B 46 F6                  cmp         ax,word ptr -0xa[bp] 
0626    73 0F                     jae         L$67 
0628    26 F7 07 11 11            test        word ptr es:[bx],0x1111 
062D    74 03                     je          L$66 
062F    42                        inc         dx 
0630    EB 05                     jmp         L$67 
0632                          L$66:
0632    40                        inc         ax 
0633    43                        inc         bx 
0634    43                        inc         bx 
0635    EB EC                     jmp         L$65 
0637                          L$67:
0637    85 D2                     test        dx,dx 
0639    74 05                     je          L$68 
063B    B8 01 00                  mov         ax,0x0001 
063E    EB 02                     jmp         L$69 
0640                          L$68:
0640    31 C0                     xor         ax,ax 
0642                          L$69:
0642    03 46 F4                  add         ax,word ptr -0xc[bp] 
0645    EB CF                     jmp         L$63 
0647                          L$70:
0647    31 D2                     xor         dx,dx 
0649    31 C0                     xor         ax,ax 
064B                          L$71:
064B    3B 56 F8                  cmp         dx,word ptr -0x8[bp] 
064E    73 08                     jae         L$72 
0650    42                        inc         dx 
0651    26 0B 07                  or          ax,word ptr es:[bx] 
0654    43                        inc         bx 
0655    43                        inc         bx 
0656    EB F3                     jmp         L$71 
0658                          L$72:
0658    A9 01 01                  test        ax,0x0101 
065B    74 05                     je          L$73 
065D    83 C7 09                  add         di,0x0009 
0660    EB 17                     jmp         L$76 
0662                          L$73:
0662    A9 02 02                  test        ax,0x0202 
0665    74 05                     je          L$74 
0667    83 C7 08                  add         di,0x0008 
066A    EB 0D                     jmp         L$76 
066C                          L$74:
066C    A9 04 04                  test        ax,0x0404 
066F    74 05                     je          L$75 
0671    83 C7 07                  add         di,0x0007 
0674    EB 03                     jmp         L$76 
0676                          L$75:
0676    83 C7 06                  add         di,0x0006 
0679                          L$76:
0679    89 F3                     mov         bx,si 
067B    46                        inc         si 
067C    80 3F 00                  cmp         byte ptr [bx],0x00 
067F    0F 85 3C FF               jne         L$57 
0683                          L$77:
0683    89 F8                     mov         ax,di 
0685                          L$78:
0685    C9                        leave       
0686    5F                        pop         di 
0687    5E                        pop         si 
0688    CA 02 00                  retf        0x0002 

Routine Size: 307 bytes,    Routine Base: main_TEXT + 0558

068B                          draw_char_:
068B    56                        push        si 
068C    57                        push        di 
068D    C8 4A 00 00               enter       0x004a,0x00 
0691    89 CF                     mov         di,cx 
0693    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
0698    89 56 FC                  mov         word ptr -0x4[bp],dx 
069B    2C 21                     sub         al,0x21 
069D    89 DE                     mov         si,bx 
069F    3C DE                     cmp         al,0xde 
06A1    0F 83 14 05               jae         L$144 
06A5    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
06A8    C1 EA 04                  shr         dx,0x04 
06AB    89 56 CA                  mov         word ptr -0x36[bp],dx 
06AE    8E 5E 0E                  mov         ds,word ptr 0xe[bp] 
06B1    8A 4E CA                  mov         cl,byte ptr -0x36[bp] 
06B4                          L$79:
06B4    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
06B7    FE C8                     dec         al 
06B9    FF 46 0C                  inc         word ptr 0xc[bp] 
06BC    0F B6 17                  movzx       dx,byte ptr [bx] 
06BF    3C FF                     cmp         al,0xff 
06C1    74 07                     je          L$80 
06C3    D3 E2                     shl         dx,cl 
06C5    01 56 0C                  add         word ptr 0xc[bp],dx 
06C8    EB EA                     jmp         L$79 
06CA                          L$80:
06CA    83 FA 02                  cmp         dx,0x0002 
06CD    72 25                     jb          L$81 
06CF    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
06D2    41                        inc         cx 
06D3    83 FA 02                  cmp         dx,0x0002 
06D6    76 66                     jbe         L$86 
06D8    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
06DB    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
06DE    43                        inc         bx 
06DF    43                        inc         bx 
06E0    05 03 00                  add         ax,0x0003 
06E3    83 FA 08                  cmp         dx,0x0008 
06E6    0F 84 1E 03               je          L$125 
06EA    83 FA 04                  cmp         dx,0x0004 
06ED    0F 84 A3 01               je          L$105 
06F1    E9 C5 04                  jmp         L$144 
06F4                          L$81:
06F4    83 FA 01                  cmp         dx,0x0001 
06F7    0F 85 BE 04               jne         L$144 
06FB    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
06FE    89 46 FA                  mov         word ptr -0x6[bp],ax 
0701                          L$82:
0701    FF 4E FA                  dec         word ptr -0x6[bp] 
0704    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
0707    3D FF FF                  cmp         ax,0xffff 
070A    74 2C                     je          L$85 
070C    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
070F    89 C1                     mov         cx,ax 
0711    B8 01 00                  mov         ax,0x0001 
0714    80 E1 07                  and         cl,0x07 
0717    0F B6 17                  movzx       dx,byte ptr [bx] 
071A    D3 E0                     shl         ax,cl 
071C    85 C2                     test        dx,ax 
071E    74 0C                     je          L$83 
0720    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0723    89 FB                     mov         bx,di 
0725    89 F2                     mov         dx,si 
0727    9A 00 00 00 00            call        put_pixel_ 
072C                          L$83:
072C    F6 46 FA 07               test        byte ptr -0x6[bp],0x07 
0730    75 03                     jne         L$84 
0732    FF 46 0C                  inc         word ptr 0xc[bp] 
0735                          L$84:
0735    46                        inc         si 
0736    EB C9                     jmp         L$82 
0738                          L$85:
0738    B8 02 00                  mov         ax,0x0002 
073B    E9 7D 04                  jmp         L$145 
073E                          L$86:
073E    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
0741    89 4E DC                  mov         word ptr -0x24[bp],cx 
0744    89 4E C0                  mov         word ptr -0x40[bp],cx 
0747    89 4E BE                  mov         word ptr -0x42[bp],cx 
074A    89 4E D6                  mov         word ptr -0x2a[bp],cx 
074D    89 4E DA                  mov         word ptr -0x26[bp],cx 
0750    89 4E D8                  mov         word ptr -0x28[bp],cx 
0753    89 4E C6                  mov         word ptr -0x3a[bp],cx 
0756    C1 E8 03                  shr         ax,0x03 
0759    89 4E C4                  mov         word ptr -0x3c[bp],cx 
075C    89 46 F6                  mov         word ptr -0xa[bp],ax 
075F                          L$87:
075F    FF 4E F6                  dec         word ptr -0xa[bp] 
0762    83 7E F6 FF               cmp         word ptr -0xa[bp],0xffff 
0766    0F 84 24 01               je          L$104 
076A    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
076D    8B 0F                     mov         cx,word ptr [bx] 
076F    F6 C1 80                  test        cl,0x80 
0772    74 0C                     je          L$88 
0774    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0777    89 FB                     mov         bx,di 
0779    89 F2                     mov         dx,si 
077B    9A 00 00 00 00            call        put_pixel_ 
0780                          L$88:
0780    F6 C1 40                  test        cl,0x40 
0783    74 0C                     je          L$89 
0785    8B 46 C4                  mov         ax,word ptr -0x3c[bp] 
0788    89 FB                     mov         bx,di 
078A    89 F2                     mov         dx,si 
078C    9A 00 00 00 00            call        put_pixel_ 
0791                          L$89:
0791    46                        inc         si 
0792    F6 C1 20                  test        cl,0x20 
0795    74 0C                     je          L$90 
0797    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
079A    89 FB                     mov         bx,di 
079C    89 F2                     mov         dx,si 
079E    9A 00 00 00 00            call        put_pixel_ 
07A3                          L$90:
07A3    F6 C1 10                  test        cl,0x10 
07A6    74 0C                     je          L$91 
07A8    8B 46 C6                  mov         ax,word ptr -0x3a[bp] 
07AB    89 FB                     mov         bx,di 
07AD    89 F2                     mov         dx,si 
07AF    9A 00 00 00 00            call        put_pixel_ 
07B4                          L$91:
07B4    46                        inc         si 
07B5    F6 C1 08                  test        cl,0x08 
07B8    74 0C                     je          L$92 
07BA    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
07BD    89 FB                     mov         bx,di 
07BF    89 F2                     mov         dx,si 
07C1    9A 00 00 00 00            call        put_pixel_ 
07C6                          L$92:
07C6    F6 C1 04                  test        cl,0x04 
07C9    74 0C                     je          L$93 
07CB    8B 46 D8                  mov         ax,word ptr -0x28[bp] 
07CE    89 FB                     mov         bx,di 
07D0    89 F2                     mov         dx,si 
07D2    9A 00 00 00 00            call        put_pixel_ 
07D7                          L$93:
07D7    46                        inc         si 
07D8    F6 C1 02                  test        cl,0x02 
07DB    74 0C                     je          L$94 
07DD    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
07E0    89 FB                     mov         bx,di 
07E2    89 F2                     mov         dx,si 
07E4    9A 00 00 00 00            call        put_pixel_ 
07E9                          L$94:
07E9    F6 C1 01                  test        cl,0x01 
07EC    74 0C                     je          L$95 
07EE    8B 46 DA                  mov         ax,word ptr -0x26[bp] 
07F1    89 FB                     mov         bx,di 
07F3    89 F2                     mov         dx,si 
07F5    9A 00 00 00 00            call        put_pixel_ 
07FA                          L$95:
07FA    46                        inc         si 
07FB    F6 C5 80                  test        ch,0x80 
07FE    74 0C                     je          L$96 
0800    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0803    89 FB                     mov         bx,di 
0805    89 F2                     mov         dx,si 
0807    9A 00 00 00 00            call        put_pixel_ 
080C                          L$96:
080C    F6 C5 40                  test        ch,0x40 
080F    74 0C                     je          L$97 
0811    8B 46 D6                  mov         ax,word ptr -0x2a[bp] 
0814    89 FB                     mov         bx,di 
0816    89 F2                     mov         dx,si 
0818    9A 00 00 00 00            call        put_pixel_ 
081D                          L$97:
081D    46                        inc         si 
081E    F6 C5 20                  test        ch,0x20 
0821    74 0C                     je          L$98 
0823    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0826    89 FB                     mov         bx,di 
0828    89 F2                     mov         dx,si 
082A    9A 00 00 00 00            call        put_pixel_ 
082F                          L$98:
082F    F6 C5 10                  test        ch,0x10 
0832    74 0C                     je          L$99 
0834    8B 46 BE                  mov         ax,word ptr -0x42[bp] 
0837    89 FB                     mov         bx,di 
0839    89 F2                     mov         dx,si 
083B    9A 00 00 00 00            call        put_pixel_ 
0840                          L$99:
0840    46                        inc         si 
0841    F6 C5 08                  test        ch,0x08 
0844    74 0C                     je          L$100 
0846    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0849    89 FB                     mov         bx,di 
084B    89 F2                     mov         dx,si 
084D    9A 00 00 00 00            call        put_pixel_ 
0852                          L$100:
0852    F6 C5 04                  test        ch,0x04 
0855    74 0C                     je          L$101 
0857    8B 46 C0                  mov         ax,word ptr -0x40[bp] 
085A    89 FB                     mov         bx,di 
085C    89 F2                     mov         dx,si 
085E    9A 00 00 00 00            call        put_pixel_ 
0863                          L$101:
0863    46                        inc         si 
0864    F6 C5 02                  test        ch,0x02 
0867    74 0C                     je          L$102 
0869    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
086C    89 FB                     mov         bx,di 
086E    89 F2                     mov         dx,si 
0870    9A 00 00 00 00            call        put_pixel_ 
0875                          L$102:
0875    F6 C5 01                  test        ch,0x01 
0878    74 0C                     je          L$103 
087A    8B 46 DC                  mov         ax,word ptr -0x24[bp] 
087D    89 FB                     mov         bx,di 
087F    89 F2                     mov         dx,si 
0881    9A 00 00 00 00            call        put_pixel_ 
0886                          L$103:
0886    83 46 0C 02               add         word ptr 0xc[bp],0x0002 
088A    46                        inc         si 
088B    E9 D1 FE                  jmp         L$87 
088E                          L$104:
088E    B8 03 00                  mov         ax,0x0003 
0891    E9 27 03                  jmp         L$145 
0894                          L$105:
0894    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
0897    89 46 B8                  mov         word ptr -0x48[bp],ax 
089A    89 5E E6                  mov         word ptr -0x1a[bp],bx 
089D    89 4E D0                  mov         word ptr -0x30[bp],cx 
08A0    89 46 D4                  mov         word ptr -0x2c[bp],ax 
08A3    89 5E BC                  mov         word ptr -0x44[bp],bx 
08A6    89 4E D2                  mov         word ptr -0x2e[bp],cx 
08A9    89 46 CE                  mov         word ptr -0x32[bp],ax 
08AC    89 5E E8                  mov         word ptr -0x18[bp],bx 
08AF    89 4E B6                  mov         word ptr -0x4a[bp],cx 
08B2    89 46 C8                  mov         word ptr -0x38[bp],ax 
08B5    89 5E E4                  mov         word ptr -0x1c[bp],bx 
08B8    C1 EA 02                  shr         dx,0x02 
08BB    89 4E EA                  mov         word ptr -0x16[bp],cx 
08BE    89 56 F4                  mov         word ptr -0xc[bp],dx 
08C1                          L$106:
08C1    FF 4E F4                  dec         word ptr -0xc[bp] 
08C4    83 7E F4 FF               cmp         word ptr -0xc[bp],0xffff 
08C8    0F 84 2C 01               je          L$123 
08CC    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
08CF    8B 0F                     mov         cx,word ptr [bx] 
08D1    F6 C1 80                  test        cl,0x80 
08D4    74 0C                     je          L$107 
08D6    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
08D9    89 FB                     mov         bx,di 
08DB    89 F2                     mov         dx,si 
08DD    9A 00 00 00 00            call        put_pixel_ 
08E2                          L$107:
08E2    F6 C1 40                  test        cl,0x40 
08E5    74 0C                     je          L$108 
08E7    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
08EA    89 FB                     mov         bx,di 
08EC    89 F2                     mov         dx,si 
08EE    9A 00 00 00 00            call        put_pixel_ 
08F3                          L$108:
08F3    F6 C1 20                  test        cl,0x20 
08F6    74 0C                     je          L$109 
08F8    8B 46 E4                  mov         ax,word ptr -0x1c[bp] 
08FB    89 FB                     mov         bx,di 
08FD    89 F2                     mov         dx,si 
08FF    9A 00 00 00 00            call        put_pixel_ 
0904                          L$109:
0904    F6 C1 10                  test        cl,0x10 
0907    74 0F                     je          L$110 
0909    8B 46 C8                  mov         ax,word ptr -0x38[bp] 
090C    89 FB                     mov         bx,di 
090E    89 F2                     mov         dx,si 
0910    FF 46 FE                  inc         word ptr -0x2[bp] 
0913    9A 00 00 00 00            call        put_pixel_ 
0918                          L$110:
0918    46                        inc         si 
0919    F6 C1 08                  test        cl,0x08 
091C    74 0C                     je          L$111 
091E    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0921    89 FB                     mov         bx,di 
0923    89 F2                     mov         dx,si 
0925    9A 00 00 00 00            call        put_pixel_ 
092A                          L$111:
092A    F6 C1 04                  test        cl,0x04 
092D    74 0C                     je          L$112 
092F    8B 46 B6                  mov         ax,word ptr -0x4a[bp] 
0932    89 FB                     mov         bx,di 
0934    89 F2                     mov         dx,si 
0936    9A 00 00 00 00            call        put_pixel_ 
093B                          L$112:
093B    F6 C1 02                  test        cl,0x02 
093E    74 0C                     je          L$113 
0940    8B 46 E8                  mov         ax,word ptr -0x18[bp] 
0943    89 FB                     mov         bx,di 
0945    89 F2                     mov         dx,si 
0947    9A 00 00 00 00            call        put_pixel_ 
094C                          L$113:
094C    F6 C1 01                  test        cl,0x01 
094F    74 0F                     je          L$114 
0951    8B 46 CE                  mov         ax,word ptr -0x32[bp] 
0954    89 FB                     mov         bx,di 
0956    89 F2                     mov         dx,si 
0958    FF 46 FE                  inc         word ptr -0x2[bp] 
095B    9A 00 00 00 00            call        put_pixel_ 
0960                          L$114:
0960    46                        inc         si 
0961    F6 C5 80                  test        ch,0x80 
0964    74 0C                     je          L$115 
0966    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0969    89 FB                     mov         bx,di 
096B    89 F2                     mov         dx,si 
096D    9A 00 00 00 00            call        put_pixel_ 
0972                          L$115:
0972    F6 C5 40                  test        ch,0x40 
0975    74 0C                     je          L$116 
0977    8B 46 D2                  mov         ax,word ptr -0x2e[bp] 
097A    89 FB                     mov         bx,di 
097C    89 F2                     mov         dx,si 
097E    9A 00 00 00 00            call        put_pixel_ 
0983                          L$116:
0983    F6 C5 20                  test        ch,0x20 
0986    74 0C                     je          L$117 
0988    8B 46 BC                  mov         ax,word ptr -0x44[bp] 
098B    89 FB                     mov         bx,di 
098D    89 F2                     mov         dx,si 
098F    9A 00 00 00 00            call        put_pixel_ 
0994                          L$117:
0994    F6 C5 10                  test        ch,0x10 
0997    74 0F                     je          L$118 
0999    8B 46 D4                  mov         ax,word ptr -0x2c[bp] 
099C    89 FB                     mov         bx,di 
099E    89 F2                     mov         dx,si 
09A0    FF 46 FE                  inc         word ptr -0x2[bp] 
09A3    9A 00 00 00 00            call        put_pixel_ 
09A8                          L$118:
09A8    46                        inc         si 
09A9    F6 C5 08                  test        ch,0x08 
09AC    74 0C                     je          L$119 
09AE    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
09B1    89 FB                     mov         bx,di 
09B3    89 F2                     mov         dx,si 
09B5    9A 00 00 00 00            call        put_pixel_ 
09BA                          L$119:
09BA    F6 C5 04                  test        ch,0x04 
09BD    74 0C                     je          L$120 
09BF    8B 46 D0                  mov         ax,word ptr -0x30[bp] 
09C2    89 FB                     mov         bx,di 
09C4    89 F2                     mov         dx,si 
09C6    9A 00 00 00 00            call        put_pixel_ 
09CB                          L$120:
09CB    F6 C5 02                  test        ch,0x02 
09CE    74 0C                     je          L$121 
09D0    8B 46 E6                  mov         ax,word ptr -0x1a[bp] 
09D3    89 FB                     mov         bx,di 
09D5    89 F2                     mov         dx,si 
09D7    9A 00 00 00 00            call        put_pixel_ 
09DC                          L$121:
09DC    F6 C5 01                  test        ch,0x01 
09DF    74 0F                     je          L$122 
09E1    8B 46 B8                  mov         ax,word ptr -0x48[bp] 
09E4    89 FB                     mov         bx,di 
09E6    89 F2                     mov         dx,si 
09E8    FF 46 FE                  inc         word ptr -0x2[bp] 
09EB    9A 00 00 00 00            call        put_pixel_ 
09F0                          L$122:
09F0    83 46 0C 02               add         word ptr 0xc[bp],0x0002 
09F4    46                        inc         si 
09F5    E9 C9 FE                  jmp         L$106 
09F8                          L$123:
09F8    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
09FB    85 C0                     test        ax,ax 
09FD    74 03                     je          L$124 
09FF    B8 01 00                  mov         ax,0x0001 
0A02                          L$124:
0A02    05 04 00                  add         ax,0x0004 
0A05    E9 B3 01                  jmp         L$145 
0A08                          L$125:
0A08    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
0A0B    D1 EA                     shr         dx,0x01 
0A0D    89 56 F8                  mov         word ptr -0x8[bp],dx 
0A10    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
0A13    83 C2 07                  add         dx,0x0007 
0A16    89 56 EC                  mov         word ptr -0x14[bp],dx 
0A19    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
0A1C    89 46 E0                  mov         word ptr -0x20[bp],ax 
0A1F    83 C2 06                  add         dx,0x0006 
0A22    89 5E DE                  mov         word ptr -0x22[bp],bx 
0A25    89 56 EE                  mov         word ptr -0x12[bp],dx 
0A28    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
0A2B    89 4E CC                  mov         word ptr -0x34[bp],cx 
0A2E    83 C2 05                  add         dx,0x0005 
0A31    89 46 E2                  mov         word ptr -0x1e[bp],ax 
0A34    89 56 F0                  mov         word ptr -0x10[bp],dx 
0A37    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
0A3A    89 5E C2                  mov         word ptr -0x3e[bp],bx 
0A3D    83 C2 04                  add         dx,0x0004 
0A40    89 4E BA                  mov         word ptr -0x46[bp],cx 
0A43    89 56 F2                  mov         word ptr -0xe[bp],dx 
0A46                          L$126:
0A46    FF 4E F8                  dec         word ptr -0x8[bp] 
0A49    83 7E F8 FF               cmp         word ptr -0x8[bp],0xffff 
0A4D    0F 84 60 01               je          L$143 
0A51    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
0A54    8B 0F                     mov         cx,word ptr [bx] 
0A56    F6 C1 80                  test        cl,0x80 
0A59    74 0C                     je          L$127 
0A5B    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0A5E    89 FB                     mov         bx,di 
0A60    89 F2                     mov         dx,si 
0A62    9A 00 00 00 00            call        put_pixel_ 
0A67                          L$127:
0A67    F6 C1 40                  test        cl,0x40 
0A6A    74 0C                     je          L$128 
0A6C    8B 46 BA                  mov         ax,word ptr -0x46[bp] 
0A6F    89 FB                     mov         bx,di 
0A71    89 F2                     mov         dx,si 
0A73    9A 00 00 00 00            call        put_pixel_ 
0A78                          L$128:
0A78    F6 C1 20                  test        cl,0x20 
0A7B    74 0C                     je          L$129 
0A7D    8B 46 C2                  mov         ax,word ptr -0x3e[bp] 
0A80    89 FB                     mov         bx,di 
0A82    89 F2                     mov         dx,si 
0A84    9A 00 00 00 00            call        put_pixel_ 
0A89                          L$129:
0A89    F6 C1 10                  test        cl,0x10 
0A8C    74 0C                     je          L$130 
0A8E    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
0A91    89 FB                     mov         bx,di 
0A93    89 F2                     mov         dx,si 
0A95    9A 00 00 00 00            call        put_pixel_ 
0A9A                          L$130:
0A9A    F6 C1 08                  test        cl,0x08 
0A9D    74 0C                     je          L$131 
0A9F    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
0AA2    89 FB                     mov         bx,di 
0AA4    89 F2                     mov         dx,si 
0AA6    9A 00 00 00 00            call        put_pixel_ 
0AAB                          L$131:
0AAB    F6 C1 04                  test        cl,0x04 
0AAE    74 17                     je          L$132 
0AB0    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
0AB3    89 FB                     mov         bx,di 
0AB5    89 F2                     mov         dx,si 
0AB7    9A 00 00 00 00            call        put_pixel_ 
0ABC    83 7E FE 01               cmp         word ptr -0x2[bp],0x0001 
0AC0    73 05                     jae         L$132 
0AC2    C7 46 FE 01 00            mov         word ptr -0x2[bp],0x0001 
0AC7                          L$132:
0AC7    F6 C1 02                  test        cl,0x02 
0ACA    74 17                     je          L$133 
0ACC    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
0ACF    89 FB                     mov         bx,di 
0AD1    89 F2                     mov         dx,si 
0AD3    9A 00 00 00 00            call        put_pixel_ 
0AD8    83 7E FE 02               cmp         word ptr -0x2[bp],0x0002 
0ADC    73 05                     jae         L$133 
0ADE    C7 46 FE 02 00            mov         word ptr -0x2[bp],0x0002 
0AE3                          L$133:
0AE3    F6 C1 01                  test        cl,0x01 
0AE6    74 17                     je          L$134 
0AE8    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
0AEB    89 FB                     mov         bx,di 
0AED    89 F2                     mov         dx,si 
0AEF    9A 00 00 00 00            call        put_pixel_ 
0AF4    83 7E FE 03               cmp         word ptr -0x2[bp],0x0003 
0AF8    73 05                     jae         L$134 
0AFA    C7 46 FE 03 00            mov         word ptr -0x2[bp],0x0003 
0AFF                          L$134:
0AFF    46                        inc         si 
0B00    F6 C5 80                  test        ch,0x80 
0B03    74 0C                     je          L$135 
0B05    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0B08    89 FB                     mov         bx,di 
0B0A    89 F2                     mov         dx,si 
0B0C    9A 00 00 00 00            call        put_pixel_ 
0B11                          L$135:
0B11    F6 C5 40                  test        ch,0x40 
0B14    74 0C                     je          L$136 
0B16    8B 46 CC                  mov         ax,word ptr -0x34[bp] 
0B19    89 FB                     mov         bx,di 
0B1B    89 F2                     mov         dx,si 
0B1D    9A 00 00 00 00            call        put_pixel_ 
0B22                          L$136:
0B22    F6 C5 20                  test        ch,0x20 
0B25    74 0C                     je          L$137 
0B27    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
0B2A    89 FB                     mov         bx,di 
0B2C    89 F2                     mov         dx,si 
0B2E    9A 00 00 00 00            call        put_pixel_ 
0B33                          L$137:
0B33    F6 C5 10                  test        ch,0x10 
0B36    74 0C                     je          L$138 
0B38    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
0B3B    89 FB                     mov         bx,di 
0B3D    89 F2                     mov         dx,si 
0B3F    9A 00 00 00 00            call        put_pixel_ 
0B44                          L$138:
0B44    F6 C5 08                  test        ch,0x08 
0B47    74 0C                     je          L$139 
0B49    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
0B4C    89 FB                     mov         bx,di 
0B4E    89 F2                     mov         dx,si 
0B50    9A 00 00 00 00            call        put_pixel_ 
0B55                          L$139:
0B55    F6 C5 04                  test        ch,0x04 
0B58    74 17                     je          L$140 
0B5A    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
0B5D    89 FB                     mov         bx,di 
0B5F    89 F2                     mov         dx,si 
0B61    9A 00 00 00 00            call        put_pixel_ 
0B66    83 7E FE 01               cmp         word ptr -0x2[bp],0x0001 
0B6A    73 05                     jae         L$140 
0B6C    C7 46 FE 01 00            mov         word ptr -0x2[bp],0x0001 
0B71                          L$140:
0B71    F6 C5 02                  test        ch,0x02 
0B74    74 17                     je          L$141 
0B76    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
0B79    89 FB                     mov         bx,di 
0B7B    89 F2                     mov         dx,si 
0B7D    9A 00 00 00 00            call        put_pixel_ 
0B82    83 7E FE 02               cmp         word ptr -0x2[bp],0x0002 
0B86    73 05                     jae         L$141 
0B88    C7 46 FE 02 00            mov         word ptr -0x2[bp],0x0002 
0B8D                          L$141:
0B8D    F6 C5 01                  test        ch,0x01 
0B90    74 17                     je          L$142 
0B92    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
0B95    89 FB                     mov         bx,di 
0B97    89 F2                     mov         dx,si 
0B99    9A 00 00 00 00            call        put_pixel_ 
0B9E    83 7E FE 03               cmp         word ptr -0x2[bp],0x0003 
0BA2    73 05                     jae         L$142 
0BA4    C7 46 FE 03 00            mov         word ptr -0x2[bp],0x0003 
0BA9                          L$142:
0BA9    83 46 0C 02               add         word ptr 0xc[bp],0x0002 
0BAD    46                        inc         si 
0BAE    E9 95 FE                  jmp         L$126 
0BB1                          L$143:
0BB1    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
0BB4    05 06 00                  add         ax,0x0006 
0BB7    EB 02                     jmp         L$145 
0BB9                          L$144:
0BB9    31 C0                     xor         ax,ax 
0BBB                          L$145:
0BBB    C9                        leave       
0BBC    5F                        pop         di 
0BBD    5E                        pop         si 
0BBE    CA 06 00                  retf        0x0006 

Routine Size: 1334 bytes,    Routine Base: main_TEXT + 068B

0BC1                          gprint_text_:
0BC1    56                        push        si 
0BC2    57                        push        di 
0BC3    C8 08 00 00               enter       0x0008,0x00 
0BC7    89 C7                     mov         di,ax 
0BC9    89 56 FC                  mov         word ptr -0x4[bp],dx 
0BCC    89 DE                     mov         si,bx 
0BCE    89 4E FE                  mov         word ptr -0x2[bp],cx 
0BD1    85 C9                     test        cx,cx 
0BD3    75 06                     jne         L$146 
0BD5    85 DB                     test        bx,bx 
0BD7    0F 84 CE 00               je          L$153 
0BDB                          L$146:
0BDB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0BDE    8A 04                     mov         al,byte ptr [si] 
0BE0    3C 20                     cmp         al,0x20 
0BE2    74 04                     je          L$147 
0BE4    3C 09                     cmp         al,0x09 
0BE6    75 0E                     jne         L$148 
0BE8                          L$147:
0BE8    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0BEC    0F 85 9B 00               jne         L$151 
0BF0    83 C7 04                  add         di,0x0004 
0BF3    E9 95 00                  jmp         L$151 
0BF6                          L$148:
0BF6    3C 11                     cmp         al,0x11 
0BF8    75 49                     jne         L$149 
0BFA    0F B6 46 0C               movzx       ax,byte ptr 0xc[bp] 
0BFE    0F B6 4E 0A               movzx       cx,byte ptr 0xa[bp] 
0C02    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
0C05    36 FF 36 02 00            push        word ptr ss:_system_font+0x2 
0C0A    46                        inc         si 
0C0B    89 FA                     mov         dx,di 
0C0D    36 FF 36 00 00            push        word ptr ss:_system_font 
0C12    89 46 FA                  mov         word ptr -0x6[bp],ax 
0C15    50                        push        ax 
0C16    0F B6 04                  movzx       ax,byte ptr [si] 
0C19    0E                        push        cs 
0C1A    E8 00 00                  call        draw_char_ 
0C1D    89 FA                     mov         dx,di 
0C1F    01 C2                     add         dx,ax 
0C21    0F B6 46 0A               movzx       ax,byte ptr 0xa[bp] 
0C25    89 56 F8                  mov         word ptr -0x8[bp],dx 
0C28    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
0C2B    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
0C2E    50                        push        ax 
0C2F    03 56 FA                  add         dx,word ptr -0x6[bp] 
0C32    4B                        dec         bx 
0C33    4B                        dec         bx 
0C34    4A                        dec         dx 
0C35    89 F8                     mov         ax,di 
0C37    89 D1                     mov         cx,dx 
0C39    8B 7E F8                  mov         di,word ptr -0x8[bp] 
0C3C    9A 00 00 00 00            call        draw_line_ 
0C41    EB 48                     jmp         L$151 
0C43                          L$149:
0C43    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0C47    75 23                     jne         L$150 
0C49    0F B6 46 0C               movzx       ax,byte ptr 0xc[bp] 
0C4D    0F B6 4E 0A               movzx       cx,byte ptr 0xa[bp] 
0C51    36 FF 36 02 00            push        word ptr ss:_system_font+0x2 
0C56    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
0C59    36 FF 36 00 00            push        word ptr ss:_system_font 
0C5E    89 FA                     mov         dx,di 
0C60    50                        push        ax 
0C61    0F B6 04                  movzx       ax,byte ptr [si] 
0C64    0E                        push        cs 
0C65    E8 00 00                  call        draw_char_ 
0C68    01 C7                     add         di,ax 
0C6A    EB 1F                     jmp         L$151 
0C6C                          L$150:
0C6C    0F B6 46 0C               movzx       ax,byte ptr 0xc[bp] 
0C70    0F B6 4E 0A               movzx       cx,byte ptr 0xa[bp] 
0C74    36 FF 36 02 00            push        word ptr ss:_monospace_font+0x2 
0C79    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
0C7C    36 FF 36 00 00            push        word ptr ss:_monospace_font 
0C81    89 FA                     mov         dx,di 
0C83    50                        push        ax 
0C84    0F B6 04                  movzx       ax,byte ptr [si] 
0C87    0E                        push        cs 
0C88    E8 00 00                  call        draw_char_ 
0C8B                          L$151:
0C8B    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0C8F    74 03                     je          L$152 
0C91    83 C7 08                  add         di,0x0008 
0C94                          L$152:
0C94    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0C97    89 F3                     mov         bx,si 
0C99    46                        inc         si 
0C9A    80 3F 00                  cmp         byte ptr [bx],0x00 
0C9D    74 0A                     je          L$153 
0C9F    8D 45 08                  lea         ax,0x8[di] 
0CA2    3B 46 0E                  cmp         ax,word ptr 0xe[bp] 
0CA5    0F 82 32 FF               jb          L$146 
0CA9                          L$153:
0CA9    C9                        leave       
0CAA                          L$154:
0CAA    5F                        pop         di 
0CAB    5E                        pop         si 
0CAC    CA 08 00                  retf        0x0008 

Routine Size: 238 bytes,    Routine Base: main_TEXT + 0BC1

0CAF                          cprint_text_:
0CAF    57                        push        di 
0CB0    C8 0C 00 00               enter       0x000c,0x00 
0CB4    56                        push        si 
0CB5    89 C7                     mov         di,ax 
0CB7    89 56 FA                  mov         word ptr -0x6[bp],dx 
0CBA    89 4E FC                  mov         word ptr -0x4[bp],cx 
0CBD    89 DE                     mov         si,bx 
0CBF    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
0CC4    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
0CC8    75 03                     jne         L$155 
0CCA    FF 4E 0E                  dec         word ptr 0xe[bp] 
0CCD                          L$155:
0CCD    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
0CD0    80 3C 00                  cmp         byte ptr [si],0x00 
0CD3    0F 84 87 00               je          L$162 
0CD7                          L$156:
0CD7    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
0CDA    8A 04                     mov         al,byte ptr [si] 
0CDC    3C 20                     cmp         al,0x20 
0CDE    74 04                     je          L$157 
0CE0    3C 09                     cmp         al,0x09 
0CE2    75 0B                     jne         L$158 
0CE4                          L$157:
0CE4    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0CE8    75 4D                     jne         L$160 
0CEA    83 C7 04                  add         di,0x0004 
0CED    EB 48                     jmp         L$160 
0CEF                          L$158:
0CEF    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0CF3    75 23                     jne         L$159 
0CF5    0F B6 46 0A               movzx       ax,byte ptr 0xa[bp] 
0CF9    0F B6 4E 08               movzx       cx,byte ptr 0x8[bp] 
0CFD    36 FF 36 02 00            push        word ptr ss:_system_font+0x2 
0D02    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
0D05    36 FF 36 00 00            push        word ptr ss:_system_font 
0D0A    89 FA                     mov         dx,di 
0D0C    50                        push        ax 
0D0D    0F B6 04                  movzx       ax,byte ptr [si] 
0D10    0E                        push        cs 
0D11    E8 00 00                  call        draw_char_ 
0D14    01 C7                     add         di,ax 
0D16    EB 1F                     jmp         L$160 
0D18                          L$159:
0D18    0F B6 46 0A               movzx       ax,byte ptr 0xa[bp] 
0D1C    0F B6 4E 08               movzx       cx,byte ptr 0x8[bp] 
0D20    36 FF 36 02 00            push        word ptr ss:_monospace_font+0x2 
0D25    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
0D28    36 FF 36 00 00            push        word ptr ss:_monospace_font 
0D2D    89 FA                     mov         dx,di 
0D2F    50                        push        ax 
0D30    0F B6 04                  movzx       ax,byte ptr [si] 
0D33    0E                        push        cs 
0D34    E8 00 00                  call        draw_char_ 
0D37                          L$160:
0D37    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
0D3B    74 03                     je          L$161 
0D3D    83 C7 08                  add         di,0x0008 
0D40                          L$161:
0D40    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
0D43    46                        inc         si 
0D44    80 3C 00                  cmp         byte ptr [si],0x00 
0D47    74 15                     je          L$162 
0D49    8D 45 08                  lea         ax,0x8[di] 
0D4C    3B 46 0C                  cmp         ax,word ptr 0xc[bp] 
0D4F    73 0D                     jae         L$162 
0D51    FF 46 FE                  inc         word ptr -0x2[bp] 
0D54    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
0D57    3B 46 0E                  cmp         ax,word ptr 0xe[bp] 
0D5A    0F 82 79 FF               jb          L$156 
0D5E                          L$162:
0D5E    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0D61    89 76 F6                  mov         word ptr -0xa[bp],si 
0D64    89 7E F4                  mov         word ptr -0xc[bp],di 
0D67    16                        push        ss 
0D68    07                        pop         es 
0D69    16                        push        ss 
0D6A    1F                        pop         ds 
0D6B    8B 7E F2                  mov         di,word ptr -0xe[bp] 
0D6E    8D 76 F4                  lea         si,-0xc[bp] 
0D71    89 46 F8                  mov         word ptr -0x8[bp],ax 
0D74    A5                        movsw       
0D75    A5                        movsw       
0D76    A5                        movsw       
0D77    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
0D7A    C9                        leave       
0D7B    5F                        pop         di 
0D7C    CA 0A 00                  retf        0x000a 

Routine Size: 208 bytes,    Routine Base: main_TEXT + 0CAF

0D7F                          new_menu_:
0D7F    56                        push        si 
0D80    57                        push        di 
0D81    C8 0C 00 00               enter       0x000c,0x00 
0D85    89 C6                     mov         si,ax 
0D87    89 56 F8                  mov         word ptr -0x8[bp],dx 
0D8A    89 5E FA                  mov         word ptr -0x6[bp],bx 
0D8D    89 4E FC                  mov         word ptr -0x4[bp],cx 
0D90    BA 0E 00                  mov         dx,0x000e 
0D93    B8 01 00                  mov         ax,0x0001 
0D96    9A 00 00 00 00            call        calloc_ 
0D9B    89 C3                     mov         bx,ax 
0D9D    89 56 FE                  mov         word ptr -0x2[bp],dx 
0DA0    89 46 F4                  mov         word ptr -0xc[bp],ax 
0DA3    89 56 F6                  mov         word ptr -0xa[bp],dx 
0DA6    85 D2                     test        dx,dx 
0DA8    75 0B                     jne         L$164 
0DAA    85 C0                     test        ax,ax 
0DAC    75 07                     jne         L$164 
0DAE                          L$163:
0DAE    31 C0                     xor         ax,ax 
0DB0    31 D2                     xor         dx,dx 
0DB2    E9 21 F7                  jmp         L$52 
0DB5                          L$164:
0DB5    8E 46 F8                  mov         es,word ptr -0x8[bp] 
0DB8    89 F7                     mov         di,si 
0DBA    B9 FF FF                  mov         cx,0xffff 
0DBD    33 C0                     xor         ax,ax 
0DBF    F2 AE                     repne scasb 
0DC1    F7 D1                     not         cx 
0DC3    49                        dec         cx 
0DC4    89 C8                     mov         ax,cx 
0DC6    40                        inc         ax 
0DC7    9A 00 00 00 00            call        malloc_ 
0DCC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0DCF    89 07                     mov         word ptr [bx],ax 
0DD1    89 57 02                  mov         word ptr 0x2[bx],dx 
0DD4    8B 47 02                  mov         ax,word ptr 0x2[bx] 
0DD7    8B 17                     mov         dx,word ptr [bx] 
0DD9    85 C0                     test        ax,ax 
0DDB    75 0F                     jne         L$165 
0DDD    85 D2                     test        dx,dx 
0DDF    75 0B                     jne         L$165 
0DE1    89 D8                     mov         ax,bx 
0DE3    8C DA                     mov         dx,ds 
0DE5    9A 00 00 00 00            call        free_ 
0DEA    EB C2                     jmp         L$163 
0DEC                          L$165:
0DEC    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
0DEF    89 D7                     mov         di,dx 
0DF1    8E C0                     mov         es,ax 
0DF3    57                        push        di 
0DF4                          L$166:
0DF4    AC                        lodsb       
0DF5    AA                        stosb       
0DF6    3C 00                     cmp         al,0x00 
0DF8    75 FA                     jne         L$166 
0DFA    5F                        pop         di 
0DFB    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
0DFF    75 06                     jne         L$167 
0E01    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
0E05    74 0E                     je          L$168 
0E07                          L$167:
0E07    C5 76 FA                  lds         si,dword ptr -0x6[bp] 
0E0A    89 5C 08                  mov         word ptr 0x8[si],bx 
0E0D    89 F3                     mov         bx,si 
0E0F    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
0E12    89 47 0A                  mov         word ptr 0xa[bx],ax 
0E15                          L$168:
0E15    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
0E18    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
0E1B    E9 B8 F6                  jmp         L$52 

Routine Size: 159 bytes,    Routine Base: main_TEXT + 0D7F

0E1E                          new_menuitem_:
0E1E    56                        push        si 
0E1F    57                        push        di 
0E20    C8 02 00 00               enter       0x0002,0x00 
0E24    89 C6                     mov         si,ax 
0E26    89 56 FE                  mov         word ptr -0x2[bp],dx 
0E29    89 D8                     mov         ax,bx 
0E2B    89 CA                     mov         dx,cx 
0E2D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0E30    8B 7C 06                  mov         di,word ptr 0x6[si] 
0E33    8B 5C 04                  mov         bx,word ptr 0x4[si] 
0E36    85 FF                     test        di,di 
0E38    75 1B                     jne         L$169 
0E3A    85 DB                     test        bx,bx 
0E3C    75 17                     jne         L$169 
0E3E    31 DB                     xor         bx,bx 
0E40    31 C9                     xor         cx,cx 
0E42    0E                        push        cs 
0E43    E8 00 00                  call        new_menu_ 
0E46    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0E49    89 C3                     mov         bx,ax 
0E4B    89 44 04                  mov         word ptr 0x4[si],ax 
0E4E    89 D7                     mov         di,dx 
0E50    89 54 06                  mov         word ptr 0x6[si],dx 
0E53    EB 20                     jmp         L$172 
0E55                          L$169:
0E55    8E DF                     mov         ds,di 
0E57    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
0E5A    8B 77 08                  mov         si,word ptr 0x8[bx] 
0E5D    85 C9                     test        cx,cx 
0E5F    75 04                     jne         L$170 
0E61    85 F6                     test        si,si 
0E63    74 06                     je          L$171 
0E65                          L$170:
0E65    89 CF                     mov         di,cx 
0E67    89 F3                     mov         bx,si 
0E69    EB EA                     jmp         L$169 
0E6B                          L$171:
0E6B    89 F9                     mov         cx,di 
0E6D    0E                        push        cs 
0E6E    E8 00 00                  call        new_menu_ 
0E71    89 C3                     mov         bx,ax 
0E73    89 D7                     mov         di,dx 
0E75                          L$172:
0E75    85 FF                     test        di,di 
0E77    75 04                     jne         L$173 
0E79    85 DB                     test        bx,bx 
0E7B    74 08                     je          L$174 
0E7D                          L$173:
0E7D    8E DF                     mov         ds,di 
0E7F    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
0E82    89 47 0C                  mov         word ptr 0xc[bx],ax 
0E85                          L$174:
0E85    89 D8                     mov         ax,bx 
0E87    89 FA                     mov         dx,di 
0E89    E9 F9 F7                  jmp         L$78 
0E8C                          init_desktop_menu_:
0E8C    53                        push        bx 
0E8D    51                        push        cx 
0E8E    52                        push        dx 
0E8F    56                        push        si 
0E90    57                        push        di 
0E91    B8 D6 00                  mov         ax,offset DGROUP:L$1748 
0E94    8C D2                     mov         dx,ss 
0E96    31 DB                     xor         bx,bx 
0E98    31 C9                     xor         cx,cx 
0E9A    0E                        push        cs 
0E9B    E8 00 00                  call        new_menu_ 
0E9E    6A 32                     push        0x0032 
0EA0    BB DE 00                  mov         bx,offset DGROUP:L$1749 
0EA3    36 A3 00 00               mov         word ptr ss:_desktop_menu,ax 
0EA7    8C D1                     mov         cx,ss 
0EA9    36 89 16 02 00            mov         word ptr ss:_desktop_menu+0x2,dx 
0EAE    0E                        push        cs 
0EAF    E8 00 00                  call        new_menuitem_ 
0EB2    6A 3C                     push        0x003c 
0EB4    BB EB 00                  mov         bx,offset DGROUP:L$1750 
0EB7    36 A1 00 00               mov         ax,word ptr ss:_desktop_menu 
0EBB    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_menu+0x2 
0EC0    8C D1                     mov         cx,ss 
0EC2    0E                        push        cs 
0EC3    E8 00 00                  call        new_menuitem_ 
0EC6    B8 F7 00                  mov         ax,offset DGROUP:L$1751 
0EC9    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_menu 
0ECE    36 8B 0E 02 00            mov         cx,word ptr ss:_desktop_menu+0x2 
0ED3    8C D2                     mov         dx,ss 
0ED5    0E                        push        cs 
0ED6    E8 00 00                  call        new_menu_ 
0ED9    6A 33                     push        0x0033 
0EDB    BB FE 00                  mov         bx,offset DGROUP:L$1752 
0EDE    89 C7                     mov         di,ax 
0EE0    8C D1                     mov         cx,ss 
0EE2    89 D6                     mov         si,dx 
0EE4    0E                        push        cs 
0EE5    E8 00 00                  call        new_menuitem_ 
0EE8    6A 34                     push        0x0034 
0EEA    BB 03 01                  mov         bx,offset DGROUP:L$1753 
0EED    8C D1                     mov         cx,ss 
0EEF    89 F8                     mov         ax,di 
0EF1    89 F2                     mov         dx,si 
0EF3    0E                        push        cs 
0EF4    E8 00 00                  call        new_menuitem_ 
	     0EF8		; The label referred to here is an undefined location
0EF7    E9 3A C2                  jmp         0xffffd134 
0EFA                          print_menuitem_:
0EFA    56                        push        si 
0EFB    57                        push        di 
0EFC    C8 0A 00 00               enter       0x000a,0x00 
0F00    89 C6                     mov         si,ax 
0F02    89 D7                     mov         di,dx 
0F04    89 5E FC                  mov         word ptr -0x4[bp],bx 
0F07    89 4E FE                  mov         word ptr -0x2[bp],cx 
0F0A    40                        inc         ax 
0F0B    40                        inc         ax 
0F0C    89 46 FA                  mov         word ptr -0x6[bp],ax 
0F0F    8D 45 01                  lea         ax,0x1[di] 
0F12    89 46 F6                  mov         word ptr -0xa[bp],ax 
0F15    89 F0                     mov         ax,si 
0F17    05 64 00                  add         ax,0x0064 
0F1A    89 46 F8                  mov         word ptr -0x8[bp],ax 
0F1D    83 7E 08 00               cmp         word ptr 0x8[bp],0x0000 
0F21    75 33                     jne         L$175 
0F23    BB 64 00                  mov         bx,0x0064 
0F26    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__MENU_BGCOLOR 
0F2C    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
0F32    50                        push        ax 
0F33    41                        inc         cx 
0F34    41                        inc         cx 
0F35    89 F0                     mov         ax,si 
0F37    9A 00 00 00 00            call        draw_rectangle_ 
0F3C    6A 00                     push        0x0000 
0F3E    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
0F41    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
0F47    FF 76 F8                  push        word ptr -0x8[bp] 
0F4A    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
0F4D    50                        push        ax 
0F4E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
0F54    EB 31                     jmp         L$176 
0F56                          L$175:
0F56    BB 64 00                  mov         bx,0x0064 
0F59    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__MENU_SELCOLOR 
0F5F    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
0F65    50                        push        ax 
0F66    41                        inc         cx 
0F67    41                        inc         cx 
0F68    89 F0                     mov         ax,si 
0F6A    9A 00 00 00 00            call        draw_rectangle_ 
0F6F    6A 00                     push        0x0000 
0F71    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
0F74    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
0F7A    FF 76 F8                  push        word ptr -0x8[bp] 
0F7D    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
0F80    50                        push        ax 
0F81    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__MENU_ATEXTCOLOR 
0F87                          L$176:
0F87    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
0F8A    50                        push        ax 
0F8B    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
0F8E    0E                        push        cs 
0F8F    E8 00 00                  call        gprint_text_ 
0F92    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__MENU_LINECOLOR 
0F98    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
0F9E    8D 5C 62                  lea         bx,0x62[si] 
0FA1    50                        push        ax 
0FA2    01 FA                     add         dx,di 
0FA4    8D 44 02                  lea         ax,0x2[si] 
0FA7    89 D1                     mov         cx,dx 
0FA9    9A 00 00 00 00            call        draw_line_ 
0FAE    C9                        leave       
0FAF    5F                        pop         di 
0FB0    5E                        pop         si 
0FB1    C2 02 00                  ret         0x0002 
0FB4                          draw_menubar_menu_:
0FB4    53                        push        bx 
0FB5    51                        push        cx 
0FB6    56                        push        si 
0FB7    57                        push        di 
0FB8    C8 02 00 00               enter       0x0002,0x00 
0FBC    89 C6                     mov         si,ax 
0FBE    89 56 FE                  mov         word ptr -0x2[bp],dx 
0FC1    B8 06 00                  mov         ax,0x0006 
0FC4                          L$177:
0FC4    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
0FC8    75 06                     jne         L$178 
0FCA    85 F6                     test        si,si 
0FCC    0F 84 BA 7F               je          L$1094 
0FD0                          L$178:
0FD0    89 C7                     mov         di,ax 
0FD2    6A 00                     push        0x0000 
0FD4    83 C7 28                  add         di,0x0028 
0FD7    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
0FDD    57                        push        di 
0FDE    BA 01 00                  mov         dx,0x0001 
0FE1    53                        push        bx 
0FE2    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
0FE8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0FEB    53                        push        bx 
0FEC    8B 1C                     mov         bx,word ptr [si] 
0FEE    8B 4C 02                  mov         cx,word ptr 0x2[si] 
0FF1    0E                        push        cs 
0FF2    E8 00 00                  call        gprint_text_ 
0FF5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
0FF8    89 F8                     mov         ax,di 
0FFA    8B 4C 08                  mov         cx,word ptr 0x8[si] 
0FFD    8B 5C 0A                  mov         bx,word ptr 0xa[si] 
1000    89 CE                     mov         si,cx 
1002    89 5E FE                  mov         word ptr -0x2[bp],bx 
1005    85 DB                     test        bx,bx 
1007    75 04                     jne         L$179 
1009    85 C9                     test        cx,cx 
100B    74 B7                     je          L$177 
100D                          L$179:
100D    BA 01 00                  mov         dx,0x0001 
1010    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__MENU_LINECOLOR 
1016    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
101C    89 FB                     mov         bx,di 
101E    50                        push        ax 
101F    89 F8                     mov         ax,di 
1021    9A 00 00 00 00            call        draw_line_ 
1026    8D 45 0A                  lea         ax,0xa[di] 
1029    EB 99                     jmp         L$177 
102B                          draw_menubar_:
102B    53                        push        bx 
102C    51                        push        cx 
102D    52                        push        dx 
102E    56                        push        si 
102F    55                        push        bp 
1030    31 ED                     xor         bp,bp 
1032    0F B6 86 00 00            movzx       ax,byte ptr __WINDOW_BGCOLOR[bp] 
1037    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
103C    8B 9E 00 00               mov         bx,word ptr __RES_X[bp] 
1040    31 D2                     xor         dx,dx 
1042    50                        push        ax 
1043    41                        inc         cx 
1044    41                        inc         cx 
1045    31 C0                     xor         ax,ax 
1047    9A 00 00 00 00            call        draw_rectangle_ 
104C    0F B6 86 00 00            movzx       ax,byte ptr __BORDERCOLOR_SHADOW[bp] 
1051    0F B6 96 00 00            movzx       dx,byte ptr __FONT_HEIGHT[bp] 
1056    8B 9E 00 00               mov         bx,word ptr __RES_X[bp] 
105A    42                        inc         dx 
105B    42                        inc         dx 
105C    50                        push        ax 
105D    89 D1                     mov         cx,dx 
105F    31 C0                     xor         ax,ax 
1061    9A 00 00 00 00            call        draw_line_ 
1066    36 A1 00 00               mov         ax,word ptr ss:_active_window 
106A    85 C0                     test        ax,ax 
106C    7C 19                     jl          L$180 
106E    89 C3                     mov         bx,ax 
1070    36 A1 00 00               mov         ax,word ptr ss:_windows 
1074    C1 E3 02                  shl         bx,0x02 
1077    8E 9E 02 00               mov         ds,word ptr _windows+0x2[bp] 
107B    01 C3                     add         bx,ax 
107D    C5 37                     lds         si,dword ptr [bx] 
107F    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
1082    8B 54 1E                  mov         dx,word ptr 0x1e[si] 
1085    EB 08                     jmp         L$181 
1087                          L$180:
1087    36 A1 00 00               mov         ax,word ptr ss:_desktop_menu 
108B    8B 96 02 00               mov         dx,word ptr _desktop_menu+0x2[bp] 
108F                          L$181:
108F    E8 00 00                  call        draw_menubar_menu_ 
1092                          L$182:
1092    5D                        pop         bp 
	     1094		; The label referred to here is an undefined location
1093    E9 9F C0                  jmp         0xffffd135 
1096                          print_menu_:
1096    56                        push        si 
1097    57                        push        di 
1098    C8 14 00 00               enter       0x0014,0x00 
109C    89 C6                     mov         si,ax 
109E    89 56 FE                  mov         word ptr -0x2[bp],dx 
10A1    89 DF                     mov         di,bx 
10A3    89 4E EE                  mov         word ptr -0x12[bp],cx 
10A6    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
10AC    40                        inc         ax 
10AD    40                        inc         ax 
10AE    BA 46 00                  mov         dx,0x0046 
10B1    89 46 F6                  mov         word ptr -0xa[bp],ax 
10B4    89 46 F0                  mov         word ptr -0x10[bp],ax 
10B7    B8 01 00                  mov         ax,0x0001 
10BA    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
10BF    9A 00 00 00 00            call        calloc_ 
10C4    36 A3 00 00               mov         word ptr ss:_menu_window,ax 
10C8    36 89 16 02 00            mov         word ptr ss:_menu_window+0x2,dx 
10CD    85 DB                     test        bx,bx 
10CF    0F 85 B6 00               jne         L$186 
10D3    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
10D6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
10D9    6A 01                     push        0x0001 
10DB    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
10E1    03 44 06                  add         ax,word ptr 0x6[si] 
10E4    8B 54 06                  mov         dx,word ptr 0x6[si] 
10E7    89 46 F8                  mov         word ptr -0x8[bp],ax 
10EA    89 46 F6                  mov         word ptr -0xa[bp],ax 
10ED    4B                        dec         bx 
10EE    4B                        dec         bx 
10EF    42                        inc         dx 
10F0    42                        inc         dx 
10F1    8B 44 04                  mov         ax,word ptr 0x4[si] 
10F4    89 D9                     mov         cx,bx 
10F6    89 46 F4                  mov         word ptr -0xc[bp],ax 
10F9    40                        inc         ax 
10FA    40                        inc         ax 
10FB    9A 00 00 00 00            call        draw_borders_ 
1100    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1103    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
1109    0F B6 44 24               movzx       ax,byte ptr 0x24[si] 
110D    41                        inc         cx 
110E    41                        inc         cx 
110F    0F AF C8                  imul        cx,ax 
1112    BB 64 00                  mov         bx,0x0064 
1115    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
1118    57                        push        di 
1119    8B 44 04                  mov         ax,word ptr 0x4[si] 
111C    89 7E F2                  mov         word ptr -0xe[bp],di 
111F    9A 00 00 00 00            call        draw_borders_ 
1124                          L$183:
1124    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1127    0F B6 44 24               movzx       ax,byte ptr 0x24[si] 
112B    39 C7                     cmp         di,ax 
112D    0F 83 E8 00               jae         L$195 
1131    3B 7E EE                  cmp         di,word ptr -0x12[bp] 
1134    75 1D                     jne         L$184 
1136    8B 5C 20                  mov         bx,word ptr 0x20[si] 
1139    03 5E F2                  add         bx,word ptr -0xe[bp] 
113C    8E 5C 22                  mov         ds,word ptr 0x22[si] 
113F    6A 01                     push        0x0001 
1141    8B 17                     mov         dx,word ptr [bx] 
1143    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
1146    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1149    89 D3                     mov         bx,dx 
114B    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
114E    8B 44 04                  mov         ax,word ptr 0x4[si] 
1151    EB 21                     jmp         L$185 
1153                          L$184:
1153    8B 5C 20                  mov         bx,word ptr 0x20[si] 
1156    03 5E F2                  add         bx,word ptr -0xe[bp] 
1159    8E 5C 22                  mov         ds,word ptr 0x22[si] 
115C    8B 07                     mov         ax,word ptr [bx] 
115E    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
1161    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1164    6A 00                     push        0x0000 
1166    8B 54 04                  mov         dx,word ptr 0x4[si] 
1169    89 C3                     mov         bx,ax 
116B    89 56 EC                  mov         word ptr -0x14[bp],dx 
116E    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
1171    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
1174                          L$185:
1174    E8 00 00                  call        print_menuitem_ 
1177    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
117D    83 46 F2 04               add         word ptr -0xe[bp],0x0004 
1181    40                        inc         ax 
1182    40                        inc         ax 
1183    47                        inc         di 
1184    01 46 F8                  add         word ptr -0x8[bp],ax 
1187    EB 9B                     jmp         L$183 
1189                          L$186:
1189    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
118C    85 C0                     test        ax,ax 
118E    75 0B                     jne         L$187 
1190    85 F6                     test        si,si 
1192    75 07                     jne         L$187 
1194    36 C5 1E 00 00            lds         bx,dword ptr ss:_desktop_menu 
1199    EB 05                     jmp         L$188 
119B                          L$187:
119B    8E D8                     mov         ds,ax 
119D    C5 5C 1C                  lds         bx,dword ptr 0x1c[si] 
11A0                          L$188:
11A0    4F                        dec         di 
11A1    74 0B                     je          L$189 
11A3    83 46 FA 32               add         word ptr -0x6[bp],0x0032 
11A7    C5 47 08                  lds         ax,dword ptr 0x8[bx] 
11AA    89 C3                     mov         bx,ax 
11AC    EB F2                     jmp         L$188 
11AE                          L$189:
11AE    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
11B1    89 46 F4                  mov         word ptr -0xc[bp],ax 
11B4    8B 47 06                  mov         ax,word ptr 0x6[bx] 
11B7    8B 77 04                  mov         si,word ptr 0x4[bx] 
11BA    89 46 FC                  mov         word ptr -0x4[bp],ax 
11BD                          L$190:
11BD    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
11C1    75 04                     jne         L$191 
11C3    85 F6                     test        si,si 
11C5    74 38                     je          L$194 
11C7                          L$191:
11C7    3B 7E EE                  cmp         di,word ptr -0x12[bp] 
11CA    75 04                     jne         L$192 
11CC    6A 01                     push        0x0001 
11CE    EB 02                     jmp         L$193 
11D0                          L$192:
11D0    6A 00                     push        0x0000 
11D2                          L$193:
11D2    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
11D5    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
11D8    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
11DB    8B 1C                     mov         bx,word ptr [si] 
11DD    8B 4C 02                  mov         cx,word ptr 0x2[si] 
11E0    E8 00 00                  call        print_menuitem_ 
11E3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
11E9    47                        inc         di 
11EA    40                        inc         ax 
11EB    40                        inc         ax 
11EC    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
11EF    01 46 F0                  add         word ptr -0x10[bp],ax 
11F2    8B 54 0A                  mov         dx,word ptr 0xa[si] 
11F5    8B 44 08                  mov         ax,word ptr 0x8[si] 
11F8    89 56 FC                  mov         word ptr -0x4[bp],dx 
11FB    89 C6                     mov         si,ax 
11FD    EB BE                     jmp         L$190 
11FF                          L$194:
11FF    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
1205    89 F9                     mov         cx,di 
1207    42                        inc         dx 
1208    42                        inc         dx 
1209    0F AF CA                  imul        cx,dx 
120C    6A 00                     push        0x0000 
120E    BB 64 00                  mov         bx,0x0064 
1211    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
1214    9A 00 00 00 00            call        draw_borders_ 
1219                          L$195:
1219    36 A1 02 00               mov         ax,word ptr ss:_menu_window+0x2 
121D    36 8B 1E 00 00            mov         bx,word ptr ss:_menu_window 
1222    85 C0                     test        ax,ax 
1224    75 04                     jne         L$196 
1226    85 DB                     test        bx,bx 
1228    74 31                     je          L$197 
122A                          L$196:
122A    8E D8                     mov         ds,ax 
122C    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
122F    89 47 04                  mov         word ptr 0x4[bx],ax 
1232    36 C5 1E 00 00            lds         bx,dword ptr ss:_menu_window 
1237    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
123A    89 47 06                  mov         word ptr 0x6[bx],ax 
123D    36 C5 1E 00 00            lds         bx,dword ptr ss:_menu_window 
1242    C7 47 12 64 00            mov         word ptr 0x12[bx],0x0064 
1247    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
124D    4F                        dec         di 
124E    40                        inc         ax 
124F    40                        inc         ax 
1250    0F AF C7                  imul        ax,di 
1253    36 C5 1E 00 00            lds         bx,dword ptr ss:_menu_window 
1258    89 47 14                  mov         word ptr 0x14[bx],ax 
125B                          L$197:
125B    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
125E    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
1261    E9 3D 08                  jmp         L$279 
1264                          menu_count_:
1264    53                        push        bx 
1265    56                        push        si 
1266    89 C6                     mov         si,ax 
1268    31 C0                     xor         ax,ax 
126A    85 D2                     test        dx,dx 
126C    75 10                     jne         L$198 
126E    85 F6                     test        si,si 
1270    75 0C                     jne         L$198 
1272    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_menu 
1277    36 8B 36 02 00            mov         si,word ptr ss:_desktop_menu+0x2 
127C    EB 08                     jmp         L$199 
127E                          L$198:
127E    8E DA                     mov         ds,dx 
1280    8B 5C 1C                  mov         bx,word ptr 0x1c[si] 
1283    8B 74 1E                  mov         si,word ptr 0x1e[si] 
1286                          L$199:
1286    85 F6                     test        si,si 
1288    75 04                     jne         L$200 
128A    85 DB                     test        bx,bx 
128C    74 0D                     je          L$201 
128E                          L$200:
128E    8E DE                     mov         ds,si 
1290    40                        inc         ax 
1291    8B 57 08                  mov         dx,word ptr 0x8[bx] 
1294    8B 77 0A                  mov         si,word ptr 0xa[bx] 
1297    89 D3                     mov         bx,dx 
1299    EB EB                     jmp         L$199 
129B                          L$201:
129B    5E                        pop         si 
129C    5B                        pop         bx 
129D    C3                        ret         
129E                          dropmenu_action_:
129E    56                        push        si 
129F    55                        push        bp 
12A0    31 ED                     xor         bp,bp 
12A2    89 C6                     mov         si,ax 
12A4    89 D8                     mov         ax,bx 
12A6    85 D2                     test        dx,dx 
12A8    75 0A                     jne         L$202 
12AA    85 F6                     test        si,si 
12AC    75 06                     jne         L$202 
12AE    C5 9E 00 00               lds         bx,dword ptr _desktop_menu[bp] 
12B2    EB 05                     jmp         L$203 
12B4                          L$202:
12B4    8E DA                     mov         ds,dx 
12B6    C5 5C 1C                  lds         bx,dword ptr 0x1c[si] 
12B9                          L$203:
12B9    FF 8E 00 00               dec         word ptr _menu_selected[bp] 
12BD    74 07                     je          L$204 
12BF    C5 77 08                  lds         si,dword ptr 0x8[bx] 
12C2    89 F3                     mov         bx,si 
12C4    EB F3                     jmp         L$203 
12C6                          L$204:
12C6    C5 77 04                  lds         si,dword ptr 0x4[bx] 
12C9                          L$205:
12C9    89 F3                     mov         bx,si 
12CB    48                        dec         ax 
12CC    3D FF FF                  cmp         ax,0xffff 
12CF    74 05                     je          L$206 
12D1    C5 77 08                  lds         si,dword ptr 0x8[bx] 
12D4    EB F3                     jmp         L$205 
12D6                          L$206:
12D6    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
12D9    5D                        pop         bp 
12DA    5E                        pop         si 
12DB    C3                        ret         
12DC                          menu_draw_screen_:
12DC    52                        push        dx 
12DD    36 A1 00 00               mov         ax,word ptr ss:_menu_window 
12E1    36 8B 16 02 00            mov         dx,word ptr ss:_menu_window+0x2 
12E6    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
12EA    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
12EE    36 89 16 02 00            mov         word ptr ss:_draw_window_box+0x2,dx 
12F3    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
12F8    74 05                     je          L$207 
12FA    9A 00 00 00 00            call        restore_videomode_ 
12FF                          L$207:
12FF    E8 00 00                  call        draw_desktop_ 
1302    E8 00 00                  call        draw_windows_ 
1305    36 A1 00 00               mov         ax,word ptr ss:_draw_window_box 
1309    36 8B 16 02 00            mov         dx,word ptr ss:_draw_window_box+0x2 
130E    9A 00 00 00 00            call        free_ 
1313    31 C0                     xor         ax,ax 
1315    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
1319    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
131D    5A                        pop         dx 
131E    C3                        ret         
131F                          dropmenu_handler_:
131F    53                        push        bx 
1320    51                        push        cx 
1321    56                        push        si 
1322    57                        push        di 
1323    C8 02 00 00               enter       0x0002,0x00 
1327    89 C6                     mov         si,ax 
1329    89 D7                     mov         di,dx 
132B    E8 00 00                  call        menu_count_ 
132E    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
1333    36 3B 06 00 00            cmp         ax,word ptr ss:_menu_selected 
1338    73 0A                     jae         L$208 
133A    36 C7 06 00 00 FF FF      mov         word ptr ss:_menu_selected,0xffff 
1341    E9 E2 01                  jmp         L$228 
1344                          L$208:
1344    36 83 3E A0 01 FE         cmp         word ptr ss:L$1912,0xfffe 
134A    75 38                     jne         L$210 
134C    B9 FF FF                  mov         cx,0xffff 
134F    36 8B 1E 00 00            mov         bx,word ptr ss:_menu_selected 
1354    89 F0                     mov         ax,si 
1356    89 FA                     mov         dx,di 
1358    36 C7 06 A0 01 FF FF      mov         word ptr ss:L$1912,0xffff 
135F    E8 00 00                  call        print_menu_ 
1362    36 A3 9B 01               mov         word ptr ss:L$1924,ax 
1366    36 89 16 9D 01            mov         word ptr ss:L$1925,dx 
136B    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
136F    36 8B 16 00 00            mov         dx,word ptr ss:_mouse 
1374    85 C0                     test        ax,ax 
1376    75 06                     jne         L$209 
1378    85 D2                     test        dx,dx 
137A    0F 84 A8 01               je          L$228 
137E                          L$209:
137E    E8 00 00                  call        wait_leftbutton_release_ 
1381    E9 A2 01                  jmp         L$228 
1384                          L$210:
1384    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
1388    36 8B 16 00 00            mov         dx,word ptr ss:_mouse 
138D    85 C0                     test        ax,ax 
138F    75 04                     jne         L$211 
1391    85 D2                     test        dx,dx 
1393    74 69                     je          L$212 
1395                          L$211:
1395    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
139A    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
139E    74 5E                     je          L$212 
13A0    0E                        push        cs 
13A1    E8 00 00                  call        get_mouse_movement_ 
13A4    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
13A9    8B 07                     mov         ax,word ptr [bx] 
13AB    36 3B 06 9B 01            cmp         ax,word ptr ss:L$1924 
13B0    0F 8E 55 01               jle         L$227 
13B4    8B 47 02                  mov         ax,word ptr 0x2[bx] 
13B7    36 3B 06 9D 01            cmp         ax,word ptr ss:L$1925 
13BC    0F 8E 49 01               jle         L$227 
13C0    36 A1 9B 01               mov         ax,word ptr ss:L$1924 
13C4    05 64 00                  add         ax,0x0064 
13C7    3B 07                     cmp         ax,word ptr [bx] 
13C9    0F 8E 3C 01               jle         L$227 
13CD    8B 47 02                  mov         ax,word ptr 0x2[bx] 
13D0    31 D2                     xor         dx,dx 
13D2    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
13D8    36 2B 06 9D 01            sub         ax,word ptr ss:L$1925 
13DD    43                        inc         bx 
13DE    43                        inc         bx 
13DF    F7 F3                     div         bx 
13E1    36 8B 1E 00 00            mov         bx,word ptr ss:_menu_selected 
13E6    36 A3 A0 01               mov         word ptr ss:L$1912,ax 
13EA    89 C1                     mov         cx,ax 
13EC    89 FA                     mov         dx,di 
13EE    89 F0                     mov         ax,si 
13F0    E8 00 00                  call        print_menu_ 
13F3    E8 00 00                  call        wait_leftbutton_release_ 
13F6    31 C0                     xor         ax,ax 
13F8    36 A3 A2 01               mov         word ptr ss:L$1913,ax 
13FC    EB 97                     jmp         L$211 
13FE                          L$212:
13FE    9A 00 00 00 00            call        kbhit_ 
1403    85 C0                     test        ax,ax 
1405    0F 84 D2 00               je          L$224 
1409    31 C0                     xor         ax,ax 
140B    36 C7 06 A2 01 01 00      mov         word ptr ss:L$1913,0x0001 
1412    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
1416    9A 00 00 00 00            call        getch_ 
141B    3D 1B 00                  cmp         ax,0x001b 
141E    0F 84 E7 00               je          L$227 
1422    3D 0D 00                  cmp         ax,0x000d 
1425    74 07                     je          L$213 
1427    85 C0                     test        ax,ax 
1429    74 0C                     je          L$214 
142B    E9 9C 00                  jmp         L$223 
142E                          L$213:
142E    31 C0                     xor         ax,ax 
1430    36 A3 A2 01               mov         word ptr ss:L$1913,ax 
1434    E9 93 00                  jmp         L$223 
1437                          L$214:
1437    9A 00 00 00 00            call        getch_ 
143C    3D 4B 00                  cmp         ax,0x004b 
143F    72 0F                     jb          L$215 
1441    76 32                     jbe         L$218 
1443    3D 50 00                  cmp         ax,0x0050 
1446    74 26                     je          L$217 
1448    3D 4D 00                  cmp         ax,0x004d 
144B    74 52                     je          L$221 
144D    E9 7A 00                  jmp         L$223 
1450                          L$215:
1450    3D 48 00                  cmp         ax,0x0048 
1453    0F 85 73 00               jne         L$223 
1457    36 83 3E A0 01 00         cmp         word ptr ss:L$1912,0x0000 
145D    7C 07                     jl          L$216 
145F    36 FF 0E A0 01            dec         word ptr ss:L$1912 
1464    EB 64                     jmp         L$223 
1466                          L$216:
1466    31 C0                     xor         ax,ax 
1468    36 A3 A0 01               mov         word ptr ss:L$1912,ax 
146C    EB 5C                     jmp         L$223 
146E                          L$217:
146E    36 FF 06 A0 01            inc         word ptr ss:L$1912 
1473    EB 55                     jmp         L$223 
1475                          L$218:
1475    36 FF 0E 00 00            dec         word ptr ss:_menu_selected 
147A    85 FF                     test        di,di 
147C    75 0C                     jne         L$219 
147E    85 F6                     test        si,si 
1480    75 08                     jne         L$219 
1482    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
1488    74 08                     je          L$220 
148A                          L$219:
148A    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
1490    7D 35                     jge         L$222 
1492                          L$220:
1492    89 F0                     mov         ax,si 
1494    89 FA                     mov         dx,di 
1496    E8 00 00                  call        menu_count_ 
1499    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
149D    EB 28                     jmp         L$222 
149F                          L$221:
149F    89 F0                     mov         ax,si 
14A1    89 FA                     mov         dx,di 
14A3    36 FF 06 00 00            inc         word ptr ss:_menu_selected 
14A8    E8 00 00                  call        menu_count_ 
14AB    36 3B 06 00 00            cmp         ax,word ptr ss:_menu_selected 
14B0    73 15                     jae         L$222 
14B2    31 C0                     xor         ax,ax 
14B4    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
14B8    85 FF                     test        di,di 
14BA    75 0B                     jne         L$222 
14BC    85 F6                     test        si,si 
14BE    75 07                     jne         L$222 
14C0    36 C7 06 00 00 01 00      mov         word ptr ss:_menu_selected,0x0001 
14C7                          L$222:
14C7    E8 00 00                  call        menu_draw_screen_ 
14CA                          L$223:
14CA    36 8B 0E A0 01            mov         cx,word ptr ss:L$1912 
14CF    36 8B 1E 00 00            mov         bx,word ptr ss:_menu_selected 
14D4    89 F0                     mov         ax,si 
14D6    89 FA                     mov         dx,di 
14D8    E8 00 00                  call        print_menu_ 
14DB                          L$224:
14DB    36 83 3E A2 01 00         cmp         word ptr ss:L$1913,0x0000 
14E1    75 43                     jne         L$228 
14E3    36 83 3E A0 01 00         cmp         word ptr ss:L$1912,0x0000 
14E9    7C 3B                     jl          L$228 
14EB    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
14F1    7E 0E                     jle         L$225 
14F3    36 8B 1E A0 01            mov         bx,word ptr ss:L$1912 
14F8    89 F0                     mov         ax,si 
14FA    89 FA                     mov         dx,di 
14FC    E8 00 00                  call        dropmenu_action_ 
14FF    EB 05                     jmp         L$226 
1501                          L$225:
1501    36 A1 A0 01               mov         ax,word ptr ss:L$1912 
1505    40                        inc         ax 
1506                          L$226:
1506    89 46 FE                  mov         word ptr -0x2[bp],ax 
1509                          L$227:
1509    36 C7 06 00 00 FF FF      mov         word ptr ss:_menu_selected,0xffff 
1510    31 C0                     xor         ax,ax 
1512    36 C7 06 A0 01 FE FF      mov         word ptr ss:L$1912,0xfffe 
1519    36 A3 A2 01               mov         word ptr ss:L$1913,ax 
151D    E8 00 00                  call        menu_draw_screen_ 
1520    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
1523    E9 64 7A                  jmp         L$1094 
1526                          L$228:
1526    31 C0                     xor         ax,ax 
1528    E9 5F 7A                  jmp         L$1094 
152B                          desktop_iconmov_:
152B    53                        push        bx 
152C    52                        push        dx 
152D    3D 9B 00                  cmp         ax,0x009b 
1530    72 0F                     jb          L$229 
1532    76 22                     jbe         L$232 
1534    3D A0 00                  cmp         ax,0x00a0 
1537    74 18                     je          L$231 
1539    3D 9D 00                  cmp         ax,0x009d 
153C    74 23                     je          L$233 
153E    5A                        pop         dx 
153F    5B                        pop         bx 
1540    C3                        ret         
1541                          L$229:
1541    3D 98 00                  cmp         ax,0x0098 
1544    75 3A                     jne         L$235 
1546    BB F6 FF                  mov         bx,0xfff6 
1549                          L$230:
1549    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
154D    31 D2                     xor         dx,dx 
154F    EB 19                     jmp         L$234 
1551                          L$231:
1551    BB 0A 00                  mov         bx,0x000a 
1554    EB F3                     jmp         L$230 
1556                          L$232:
1556    BA F6 FF                  mov         dx,0xfff6 
1559    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
155D    31 DB                     xor         bx,bx 
155F    EB 09                     jmp         L$234 
1561                          L$233:
1561    BA 0A 00                  mov         dx,0x000a 
1564    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
1568    31 DB                     xor         bx,bx 
156A                          L$234:
156A    E8 00 00                  call        move_icon_ 
156D    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
1571    36 3B 06 00 00            cmp         ax,word ptr ss:_desktop_icon_count 
1576    72 08                     jb          L$235 
1578    36 2B 06 00 00            sub         ax,word ptr ss:_desktop_icon_count 
157D    E8 00 00                  call        save_desktop_shortcut_ 
1580                          L$235:
1580    5A                        pop         dx 
1581    5B                        pop         bx 
1582    C3                        ret         
1583                          desktop_iconnav_:
1583    53                        push        bx 
1584    51                        push        cx 
1585    52                        push        dx 
1586    56                        push        si 
1587    57                        push        di 
1588    C8 26 00 00               enter       0x0026,0x00 
158C    50                        push        ax 
158D    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_icon_count 
1592    36 03 1E 00 00            add         bx,word ptr ss:_shortcut_count 
1597    C7 46 F4 FF FF            mov         word ptr -0xc[bp],0xffff 
159C    89 DE                     mov         si,bx 
159E    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
15A2    C1 E6 02                  shl         si,0x02 
15A5    89 46 EA                  mov         word ptr -0x16[bp],ax 
15A8    89 F0                     mov         ax,si 
15AA    89 D9                     mov         cx,bx 
15AC    9A 00 00 00 00            call        malloc_ 
15B1    89 46 EC                  mov         word ptr -0x14[bp],ax 
15B4    89 56 FE                  mov         word ptr -0x2[bp],dx 
15B7    85 D2                     test        dx,dx 
15B9    75 06                     jne         L$236 
15BB    85 C0                     test        ax,ax 
	     15BF		; The label referred to here is an undefined location
15BD    0F 84 72 BB               je          0xffffd133 
15C1                          L$236:
15C1    89 C7                     mov         di,ax 
15C3    8E DA                     mov         ds,dx 
15C5    01 F7                     add         di,si 
15C7    6B DB 0E                  imul        bx,0x000e 
15CA                          L$237:
15CA    83 C7 FC                  add         di,0xfffc 
15CD    49                        dec         cx 
15CE    83 EB 0E                  sub         bx,0x000e 
15D1    83 F9 FF                  cmp         cx,0xffff 
15D4    74 56                     je          L$240 
15D6    36 3B 0E 00 00            cmp         cx,word ptr ss:_desktop_icon_count 
15DB    72 35                     jb          L$239 
15DD    89 C8                     mov         ax,cx 
15DF    36 2B 06 00 00            sub         ax,word ptr ss:_desktop_icon_count 
15E4    69 F0 D2 00               imul        si,ax,0x00d2 
15E8    36 C4 16 00 00            les         dx,dword ptr ss:_desktop_shortcuts 
15ED    01 D6                     add         si,dx 
15EF    26 8B 84 C4 00            mov         ax,word ptr es:0xc4[si] 
15F4    89 05                     mov         word ptr [di],ax 
15F6    89 C8                     mov         ax,cx 
15F8    36 2B 06 00 00            sub         ax,word ptr ss:_desktop_icon_count 
15FD    69 F0 D2 00               imul        si,ax,0x00d2 
1601    36 C4 16 00 00            les         dx,dword ptr ss:_desktop_shortcuts 
1606    01 D6                     add         si,dx 
1608    26 8B 84 C6 00            mov         ax,word ptr es:0xc6[si] 
160D                          L$238:
160D    89 45 02                  mov         word ptr 0x2[di],ax 
1610    EB B8                     jmp         L$237 
1612                          L$239:
1612    36 C4 36 00 00            les         si,dword ptr ss:_desktop_icons 
1617    01 DE                     add         si,bx 
1619    26 8B 44 08               mov         ax,word ptr es:0x8[si] 
161D    89 05                     mov         word ptr [di],ax 
161F    36 C4 36 00 00            les         si,dword ptr ss:_desktop_icons 
1624    01 DE                     add         si,bx 
1626    26 8B 44 0A               mov         ax,word ptr es:0xa[si] 
162A    EB E1                     jmp         L$238 
162C                          L$240:
162C    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
162F    36 8B 1E 00 00            mov         bx,word ptr ss:_icon_selected 
1634    89 46 FA                  mov         word ptr -0x6[bp],ax 
1637    8E D8                     mov         ds,ax 
1639    36 A1 00 00               mov         ax,word ptr ss:_desktop_icon_count 
163D    8B 7E EC                  mov         di,word ptr -0x14[bp] 
1640    36 03 06 00 00            add         ax,word ptr ss:_shortcut_count 
1645    C1 E3 02                  shl         bx,0x02 
1648    89 C1                     mov         cx,ax 
164A    C1 E0 02                  shl         ax,0x02 
164D    03 5E EC                  add         bx,word ptr -0x14[bp] 
1650    01 C7                     add         di,ax 
1652    8B 46 D8                  mov         ax,word ptr -0x28[bp] 
1655    8D 77 02                  lea         si,0x2[bx] 
1658    3D 4B 00                  cmp         ax,0x004b 
165B    72 13                     jb          L$241 
165D    0F 86 79 00               jbe         L$244 
1661    3D 50 00                  cmp         ax,0x0050 
1664    0F 84 D7 00               je          L$246 
1668    3D 4D 00                  cmp         ax,0x004d 
166B    74 0D                     je          L$242 
166D    E9 8E 01                  jmp         L$250 
1670                          L$241:
1670    3D 48 00                  cmp         ax,0x0048 
1673    0F 84 26 01               je          L$248 
1677    E9 84 01                  jmp         L$250 
167A                          L$242:
167A    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
167E    89 46 DA                  mov         word ptr -0x26[bp],ax 
1681    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
1685    89 46 E4                  mov         word ptr -0x1c[bp],ax 
1688    8C D8                     mov         ax,ds 
168A    89 46 F0                  mov         word ptr -0x10[bp],ax 
168D                          L$243:
168D    49                        dec         cx 
168E    83 C7 FC                  add         di,0xfffc 
1691    83 F9 FF                  cmp         cx,0xffff 
1694    0F 84 66 01               je          L$250 
1698    8E 46 F0                  mov         es,word ptr -0x10[bp] 
169B    26 8B 05                  mov         ax,word ptr es:[di] 
169E    8E 46 FA                  mov         es,word ptr -0x6[bp] 
16A1    26 3B 07                  cmp         ax,word ptr es:[bx] 
16A4    7E E7                     jle         L$243 
16A6    8E 46 F0                  mov         es,word ptr -0x10[bp] 
16A9    26 8B 05                  mov         ax,word ptr es:[di] 
16AC    3B 46 DA                  cmp         ax,word ptr -0x26[bp] 
16AF    7F DC                     jg          L$243 
16B1    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
16B5    2B 04                     sub         ax,word ptr [si] 
16B7    99                        cwd         
16B8    33 C2                     xor         ax,dx 
16BA    2B C2                     sub         ax,dx 
16BC    3B 46 E4                  cmp         ax,word ptr -0x1c[bp] 
16BF    7F CC                     jg          L$243 
16C1    26 8B 05                  mov         ax,word ptr es:[di] 
16C4    89 46 DA                  mov         word ptr -0x26[bp],ax 
16C7    8B 04                     mov         ax,word ptr [si] 
16C9    26 2B 45 02               sub         ax,word ptr es:0x2[di] 
16CD    89 4E F4                  mov         word ptr -0xc[bp],cx 
16D0    99                        cwd         
16D1    33 C2                     xor         ax,dx 
16D3    2B C2                     sub         ax,dx 
16D5    89 46 E4                  mov         word ptr -0x1c[bp],ax 
16D8    EB B3                     jmp         L$243 
16DA                          L$244:
16DA    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
16DE    C7 46 E0 00 00            mov         word ptr -0x20[bp],0x0000 
16E3    89 46 E6                  mov         word ptr -0x1a[bp],ax 
16E6    8C D8                     mov         ax,ds 
16E8    89 7E FC                  mov         word ptr -0x4[bp],di 
16EB    89 46 F2                  mov         word ptr -0xe[bp],ax 
16EE                          L$245:
16EE    49                        dec         cx 
16EF    83 46 FC FC               add         word ptr -0x4[bp],0xfffc 
16F3    83 F9 FF                  cmp         cx,0xffff 
16F6    0F 84 04 01               je          L$250 
16FA    8E 46 F2                  mov         es,word ptr -0xe[bp] 
16FD    8B 7E FC                  mov         di,word ptr -0x4[bp] 
1700    26 8B 05                  mov         ax,word ptr es:[di] 
1703    8E 46 FA                  mov         es,word ptr -0x6[bp] 
1706    26 3B 07                  cmp         ax,word ptr es:[bx] 
1709    7D E3                     jge         L$245 
170B    8E 46 F2                  mov         es,word ptr -0xe[bp] 
170E    26 8B 05                  mov         ax,word ptr es:[di] 
1711    3B 46 E0                  cmp         ax,word ptr -0x20[bp] 
1714    7C D8                     jl          L$245 
1716    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
171A    2B 04                     sub         ax,word ptr [si] 
171C    99                        cwd         
171D    33 C2                     xor         ax,dx 
171F    2B C2                     sub         ax,dx 
1721    3B 46 E6                  cmp         ax,word ptr -0x1a[bp] 
1724    7F C8                     jg          L$245 
1726    26 8B 05                  mov         ax,word ptr es:[di] 
1729    89 46 E0                  mov         word ptr -0x20[bp],ax 
172C    8B 04                     mov         ax,word ptr [si] 
172E    26 2B 45 02               sub         ax,word ptr es:0x2[di] 
1732    89 4E F4                  mov         word ptr -0xc[bp],cx 
1735    99                        cwd         
1736    33 C2                     xor         ax,dx 
1738    2B C2                     sub         ax,dx 
173A    89 46 E6                  mov         word ptr -0x1a[bp],ax 
173D    EB AF                     jmp         L$245 
173F                          L$246:
173F    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
1743    89 46 DE                  mov         word ptr -0x22[bp],ax 
1746    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
174A    89 46 DC                  mov         word ptr -0x24[bp],ax 
174D    8C D8                     mov         ax,ds 
174F    89 46 F6                  mov         word ptr -0xa[bp],ax 
1752                          L$247:
1752    49                        dec         cx 
1753    83 C7 FC                  add         di,0xfffc 
1756    83 F9 FF                  cmp         cx,0xffff 
1759    0F 84 A1 00               je          L$250 
175D    8E 46 F6                  mov         es,word ptr -0xa[bp] 
1760    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
1764    3B 04                     cmp         ax,word ptr [si] 
1766    7E EA                     jle         L$247 
1768    3B 46 DC                  cmp         ax,word ptr -0x24[bp] 
176B    7F E5                     jg          L$247 
176D    26 8B 05                  mov         ax,word ptr es:[di] 
1770    8E 46 FA                  mov         es,word ptr -0x6[bp] 
1773    26 2B 07                  sub         ax,word ptr es:[bx] 
1776    99                        cwd         
1777    33 C2                     xor         ax,dx 
1779    2B C2                     sub         ax,dx 
177B    3B 46 DE                  cmp         ax,word ptr -0x22[bp] 
177E    7F D2                     jg          L$247 
1780    26 8B 07                  mov         ax,word ptr es:[bx] 
1783    8E 46 F6                  mov         es,word ptr -0xa[bp] 
1786    26 2B 05                  sub         ax,word ptr es:[di] 
1789    99                        cwd         
178A    33 C2                     xor         ax,dx 
178C    2B C2                     sub         ax,dx 
178E    89 46 DE                  mov         word ptr -0x22[bp],ax 
1791    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
1795    89 4E F4                  mov         word ptr -0xc[bp],cx 
1798    89 46 DC                  mov         word ptr -0x24[bp],ax 
179B    EB B5                     jmp         L$247 
179D                          L$248:
179D    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
17A1    C7 46 E8 00 00            mov         word ptr -0x18[bp],0x0000 
17A6    89 46 E2                  mov         word ptr -0x1e[bp],ax 
17A9    8C D8                     mov         ax,ds 
17AB    89 7E F8                  mov         word ptr -0x8[bp],di 
17AE    89 46 EE                  mov         word ptr -0x12[bp],ax 
17B1                          L$249:
17B1    49                        dec         cx 
17B2    83 46 F8 FC               add         word ptr -0x8[bp],0xfffc 
17B6    83 F9 FF                  cmp         cx,0xffff 
17B9    74 43                     je          L$250 
17BB    8E 46 EE                  mov         es,word ptr -0x12[bp] 
17BE    8B 7E F8                  mov         di,word ptr -0x8[bp] 
17C1    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
17C5    3B 04                     cmp         ax,word ptr [si] 
17C7    7D E8                     jge         L$249 
17C9    3B 46 E8                  cmp         ax,word ptr -0x18[bp] 
17CC    7C E3                     jl          L$249 
17CE    26 8B 05                  mov         ax,word ptr es:[di] 
17D1    8E 46 FA                  mov         es,word ptr -0x6[bp] 
17D4    26 2B 07                  sub         ax,word ptr es:[bx] 
17D7    99                        cwd         
17D8    33 C2                     xor         ax,dx 
17DA    2B C2                     sub         ax,dx 
17DC    3B 46 E2                  cmp         ax,word ptr -0x1e[bp] 
17DF    7F D0                     jg          L$249 
17E1    26 8B 07                  mov         ax,word ptr es:[bx] 
17E4    8E 46 EE                  mov         es,word ptr -0x12[bp] 
17E7    26 2B 05                  sub         ax,word ptr es:[di] 
17EA    99                        cwd         
17EB    33 C2                     xor         ax,dx 
17ED    2B C2                     sub         ax,dx 
17EF    89 46 E2                  mov         word ptr -0x1e[bp],ax 
17F2    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
17F6    89 4E F4                  mov         word ptr -0xc[bp],cx 
17F9    89 46 E8                  mov         word ptr -0x18[bp],ax 
17FC    EB B3                     jmp         L$249 
17FE                          L$250:
17FE    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
1801    85 C0                     test        ax,ax 
1803    7C 04                     jl          L$251 
1805    36 A3 00 00               mov         word ptr ss:_icon_selected,ax 
1809                          L$251:
1809    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
180D    3B 46 EA                  cmp         ax,word ptr -0x16[bp] 
1810    74 11                     je          L$252 
1812    89 C3                     mov         bx,ax 
1814    31 D2                     xor         dx,dx 
1816    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
1819    E8 00 00                  call        draw_desktop_icon_ 
181C    89 D8                     mov         ax,bx 
181E    31 D2                     xor         dx,dx 
1820    E8 00 00                  call        draw_desktop_icon_ 
1823                          L$252:
1823    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
1826    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
1829    9A 00 00 00 00            call        free_ 
	     182F		; The label referred to here is an undefined location
182E    E9 02 B9                  jmp         0xffffd133 
1831                          window_kbdresize_:
1831    53                        push        bx 
1832    51                        push        cx 
1833    56                        push        si 
1834    57                        push        di 
1835    55                        push        bp 
1836    31 ED                     xor         bp,bp 
1838    89 C6                     mov         si,ax 
183A    89 D7                     mov         di,dx 
183C    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
1841    8E DA                     mov         ds,dx 
1843    80 4C 16 20               or          byte ptr 0x16[si],0x20 
1847    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
184B    89 B6 00 00               mov         word ptr _draw_window_box[bp],si 
184F    89 96 02 00               mov         word ptr _draw_window_box+0x2[bp],dx 
1853    3A 86 00 00               cmp         al,byte ptr _video[bp] 
1857    74 05                     je          L$253 
1859    9A 00 00 00 00            call        restore_videomode_ 
185E                          L$253:
185E    E8 00 00                  call        draw_desktop_ 
1861    E8 00 00                  call        draw_windows_ 
1864    31 C0                     xor         ax,ax 
1866    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
186A    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
186E    50                        push        ax 
186F    8E DF                     mov         ds,di 
1871    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
1876    8B 44 14                  mov         ax,word ptr 0x14[si] 
1879    8B 5C 12                  mov         bx,word ptr 0x12[si] 
187C    40                        inc         ax 
187D    40                        inc         ax 
187E                          L$254:
187E    8B 54 06                  mov         dx,word ptr 0x6[si] 
1881    01 C1                     add         cx,ax 
1883    8B 44 04                  mov         ax,word ptr 0x4[si] 
1886    9A 00 00 00 00            call        draw_move_borders_ 
188B    9A 00 00 00 00            call        getch_ 
1890    89 C3                     mov         bx,ax 
1892    3D 1B 00                  cmp         ax,0x001b 
1895    0F 84 87 00               je          L$265 
1899    3D 0D 00                  cmp         ax,0x000d 
189C    0F 84 80 00               je          L$265 
18A0    E8 00 00                  call        call_drv_screenupdate_ 
18A3    85 DB                     test        bx,bx 
18A5    75 65                     jne         L$264 
18A7    9A 00 00 00 00            call        getch_ 
18AC    89 C3                     mov         bx,ax 
18AE    3D 4B 00                  cmp         ax,0x004b 
18B1    72 0E                     jb          L$255 
18B3    76 13                     jbe         L$256 
18B5    3D 50 00                  cmp         ax,0x0050 
18B8    74 4D                     je          L$263 
18BA    3D 4D 00                  cmp         ax,0x004d 
18BD    74 25                     je          L$259 
18BF    EB 4B                     jmp         L$264 
18C1                          L$255:
18C1    3D 48 00                  cmp         ax,0x0048 
18C4    74 3A                     je          L$262 
18C6    EB 44                     jmp         L$264 
18C8                          L$256:
18C8    36 A1 02 00               mov         ax,word ptr ss:_titlebar_drag+0x2 
18CC    8B 9E 00 00               mov         bx,word ptr _titlebar_drag[bp] 
18D0    85 C0                     test        ax,ax 
18D2    75 04                     jne         L$257 
18D4    85 DB                     test        bx,bx 
18D6    74 05                     je          L$258 
18D8                          L$257:
18D8    8E D8                     mov         ds,ax 
18DA    FF 4F 04                  dec         word ptr 0x4[bx] 
18DD                          L$258:
18DD    8E DF                     mov         ds,di 
18DF    FF 4C 12                  dec         word ptr 0x12[si] 
18E2    EB 28                     jmp         L$264 
18E4                          L$259:
18E4    36 A1 02 00               mov         ax,word ptr ss:_titlebar_drag+0x2 
18E8    8B 9E 00 00               mov         bx,word ptr _titlebar_drag[bp] 
18EC    85 C0                     test        ax,ax 
18EE    75 04                     jne         L$260 
18F0    85 DB                     test        bx,bx 
18F2    74 05                     je          L$261 
18F4                          L$260:
18F4    8E D8                     mov         ds,ax 
18F6    FF 47 04                  inc         word ptr 0x4[bx] 
18F9                          L$261:
18F9    8E DF                     mov         ds,di 
18FB    FF 44 12                  inc         word ptr 0x12[si] 
18FE    EB 0C                     jmp         L$264 
1900                          L$262:
1900    8E DF                     mov         ds,di 
1902    FF 4C 14                  dec         word ptr 0x14[si] 
1905    EB 05                     jmp         L$264 
1907                          L$263:
1907    8E DF                     mov         ds,di 
1909    FF 44 14                  inc         word ptr 0x14[si] 
190C                          L$264:
190C    6A 03                     push        0x0003 
190E    8E DF                     mov         ds,di 
1910    0F B6 86 00 00            movzx       ax,byte ptr __FONT_HEIGHT[bp] 
1915    8B 4C 14                  mov         cx,word ptr 0x14[si] 
1918    8B 5C 12                  mov         bx,word ptr 0x12[si] 
191B    41                        inc         cx 
191C    41                        inc         cx 
191D    E9 5E FF                  jmp         L$254 
1920                          L$265:
1920    8E DF                     mov         ds,di 
1922    81 64 16 EF E3            and         word ptr 0x16[si],0xe3ef 
1927    6A 02                     push        0x0002 
1929    8B 44 14                  mov         ax,word ptr 0x14[si] 
192C    8B 5C 12                  mov         bx,word ptr 0x12[si] 
192F    81 4C 16 10 10            or          word ptr 0x16[si],0x1010 
1934    40                        inc         ax 
1935    40                        inc         ax 
1936    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
193B                          L$266:
193B    8B 54 06                  mov         dx,word ptr 0x6[si] 
193E    01 C1                     add         cx,ax 
1940    8B 44 04                  mov         ax,word ptr 0x4[si] 
1943    9A 00 00 00 00            call        draw_move_borders_ 
1948    BB 01 00                  mov         bx,0x0001 
194B    8E DF                     mov         ds,di 
194D    89 F0                     mov         ax,si 
194F    89 FA                     mov         dx,di 
1951    31 C9                     xor         cx,cx 
1953    80 64 16 DF               and         byte ptr 0x16[si],0xdf 
1957    0E                        push        cs 
1958    E8 00 00                  call        draw_window_ 
195B    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
1960                          L$267:
1960    5D                        pop         bp 
1961    E9 27 76                  jmp         L$1095 
1964                          window_kbdmove_:
1964    53                        push        bx 
1965    51                        push        cx 
1966    56                        push        si 
1967    57                        push        di 
1968    55                        push        bp 
1969    31 ED                     xor         bp,bp 
196B    89 C6                     mov         si,ax 
196D    89 D7                     mov         di,dx 
196F    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
1974    8E DA                     mov         ds,dx 
1976    80 4C 16 20               or          byte ptr 0x16[si],0x20 
197A    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
197E    89 B6 00 00               mov         word ptr _draw_window_box[bp],si 
1982    89 96 02 00               mov         word ptr _draw_window_box+0x2[bp],dx 
1986    3A 86 00 00               cmp         al,byte ptr _video[bp] 
198A    74 05                     je          L$268 
198C    9A 00 00 00 00            call        restore_videomode_ 
1991                          L$268:
1991    E8 00 00                  call        draw_desktop_ 
1994    E8 00 00                  call        draw_windows_ 
1997    31 C0                     xor         ax,ax 
1999    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
199D    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
19A1    50                        push        ax 
19A2                          L$269:
19A2    8E DF                     mov         ds,di 
19A4    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
19A9    8B 44 14                  mov         ax,word ptr 0x14[si] 
19AC    8B 5C 12                  mov         bx,word ptr 0x12[si] 
19AF    40                        inc         ax 
19B0    40                        inc         ax 
19B1    8B 54 06                  mov         dx,word ptr 0x6[si] 
19B4    01 C1                     add         cx,ax 
19B6    8B 44 04                  mov         ax,word ptr 0x4[si] 
19B9    9A 00 00 00 00            call        draw_move_borders_ 
19BE    9A 00 00 00 00            call        getch_ 
19C3    89 C3                     mov         bx,ax 
19C5    3D 1B 00                  cmp         ax,0x001b 
19C8    0F 84 79 00               je          L$278 
19CC    3D 0D 00                  cmp         ax,0x000d 
19CF    0F 84 72 00               je          L$278 
19D3    E8 00 00                  call        call_drv_screenupdate_ 
19D6    31 D2                     xor         dx,dx 
19D8    31 C9                     xor         cx,cx 
19DA    85 DB                     test        bx,bx 
19DC    75 31                     jne         L$275 
19DE    9A 00 00 00 00            call        getch_ 
19E3    3D 4B 00                  cmp         ax,0x004b 
19E6    72 0E                     jb          L$270 
19E8    76 13                     jbe         L$271 
19EA    3D 50 00                  cmp         ax,0x0050 
19ED    74 1D                     je          L$274 
19EF    3D 4D 00                  cmp         ax,0x004d 
19F2    74 0E                     je          L$272 
19F4    EB 19                     jmp         L$275 
19F6                          L$270:
19F6    3D 48 00                  cmp         ax,0x0048 
19F9    74 0C                     je          L$273 
19FB    EB 12                     jmp         L$275 
19FD                          L$271:
19FD    BA FF FF                  mov         dx,0xffff 
1A00    EB 0D                     jmp         L$275 
1A02                          L$272:
1A02    BA 01 00                  mov         dx,0x0001 
1A05    EB 08                     jmp         L$275 
1A07                          L$273:
1A07    B9 FF FF                  mov         cx,0xffff 
1A0A    EB 03                     jmp         L$275 
1A0C                          L$274:
1A0C    B9 01 00                  mov         cx,0x0001 
1A0F                          L$275:
1A0F    8E DF                     mov         ds,di 
1A11    01 54 04                  add         word ptr 0x4[si],dx 
1A14    01 4C 06                  add         word ptr 0x6[si],cx 
1A17    36 A1 02 00               mov         ax,word ptr ss:_titlebar_drag+0x2 
1A1B    8B 9E 00 00               mov         bx,word ptr _titlebar_drag[bp] 
1A1F    85 C0                     test        ax,ax 
1A21    75 04                     jne         L$276 
1A23    85 DB                     test        bx,bx 
1A25    74 19                     je          L$277 
1A27                          L$276:
1A27    8E D8                     mov         ds,ax 
1A29    01 17                     add         word ptr [bx],dx 
1A2B    C5 9E 00 00               lds         bx,dword ptr _titlebar_drag[bp] 
1A2F    01 57 04                  add         word ptr 0x4[bx],dx 
1A32    C5 9E 00 00               lds         bx,dword ptr _titlebar_drag[bp] 
1A36    01 4F 02                  add         word ptr 0x2[bx],cx 
1A39    C5 9E 00 00               lds         bx,dword ptr _titlebar_drag[bp] 
1A3D    01 4F 06                  add         word ptr 0x6[bx],cx 
1A40                          L$277:
1A40    6A 01                     push        0x0001 
1A42    E9 5D FF                  jmp         L$269 
1A45                          L$278:
1A45    6A 02                     push        0x0002 
1A47    8E DF                     mov         ds,di 
1A49    0F B6 86 00 00            movzx       ax,byte ptr __FONT_HEIGHT[bp] 
1A4E    8B 4C 14                  mov         cx,word ptr 0x14[si] 
1A51    8B 5C 12                  mov         bx,word ptr 0x12[si] 
1A54    41                        inc         cx 
1A55    41                        inc         cx 
1A56    E9 E2 FE                  jmp         L$266 
1A59                          load_icon_bitmap_:
1A59    56                        push        si 
1A5A    57                        push        di 
1A5B    C8 06 00 00               enter       0x0006,0x00 
1A5F    89 C6                     mov         si,ax 
1A61    89 56 FE                  mov         word ptr -0x2[bp],dx 
1A64    89 DF                     mov         di,bx 
1A66    89 4E FA                  mov         word ptr -0x6[bp],cx 
1A69    B8 64 00                  mov         ax,0x0064 
1A6C    9A 00 00 00 00            call        malloc_ 
1A71    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1A74    BB D3 00                  mov         bx,offset DGROUP:L$1747 
1A77    89 04                     mov         word ptr [si],ax 
1A79    8C D1                     mov         cx,ss 
1A7B    89 54 02                  mov         word ptr 0x2[si],dx 
1A7E    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
1A81    89 F8                     mov         ax,di 
1A83    9A 00 00 00 00            call        fopen_ 
1A88    89 C7                     mov         di,ax 
1A8A    89 56 FC                  mov         word ptr -0x4[bp],dx 
1A8D    85 D2                     test        dx,dx 
1A8F    75 14                     jne         L$280 
1A91    85 C0                     test        ax,ax 
1A93    75 10                     jne         L$280 
1A95    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
1A98    89 F0                     mov         ax,si 
1A9A    9A 00 00 00 00            call        free_ 
1A9F    31 C0                     xor         ax,ax 
1AA1                          L$279:
1AA1    C9                        leave       
1AA2    5F                        pop         di 
1AA3    5E                        pop         si 
1AA4    C3                        ret         
1AA5                          L$280:
1AA5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1AA8    B9 64 00                  mov         cx,0x0064 
1AAB    52                        push        dx 
1AAC    BB 01 00                  mov         bx,0x0001 
1AAF    50                        push        ax 
1AB0    8B 54 02                  mov         dx,word ptr 0x2[si] 
1AB3    8B 04                     mov         ax,word ptr [si] 
1AB5    9A 00 00 00 00            call        fread_ 
1ABA    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
1ABD    89 F8                     mov         ax,di 
1ABF    9A 00 00 00 00            call        fclose_ 
1AC4    B8 01 00                  mov         ax,0x0001 
1AC7    EB D8                     jmp         L$279 
1AC9                          load_icon_:
1AC9    56                        push        si 
1ACA    57                        push        di 
1ACB    C8 02 00 00               enter       0x0002,0x00 
1ACF    89 C6                     mov         si,ax 
1AD1    89 56 FE                  mov         word ptr -0x2[bp],dx 
1AD4    E8 00 00                  call        load_icon_bitmap_ 
1AD7    83 7E 0A 00               cmp         word ptr 0xa[bp],0x0000 
1ADB    75 06                     jne         L$281 
1ADD    83 7E 08 00               cmp         word ptr 0x8[bp],0x0000 
1AE1    74 2E                     je          L$283 
1AE3                          L$281:
1AE3    C4 7E 08                  les         di,dword ptr 0x8[bp] 
1AE6    B9 FF FF                  mov         cx,0xffff 
1AE9    33 C0                     xor         ax,ax 
1AEB    F2 AE                     repne scasb 
1AED    F7 D1                     not         cx 
1AEF    49                        dec         cx 
1AF0    89 C8                     mov         ax,cx 
1AF2    40                        inc         ax 
1AF3    9A 00 00 00 00            call        malloc_ 
1AF8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
1AFB    89 44 04                  mov         word ptr 0x4[si],ax 
1AFE    89 54 06                  mov         word ptr 0x6[si],dx 
1B01    8B 7C 04                  mov         di,word ptr 0x4[si] 
1B04    C5 76 08                  lds         si,dword ptr 0x8[bp] 
1B07    8E C2                     mov         es,dx 
1B09    57                        push        di 
1B0A                          L$282:
1B0A    AC                        lodsb       
1B0B    AA                        stosb       
1B0C    3C 00                     cmp         al,0x00 
1B0E    75 FA                     jne         L$282 
1B10    5F                        pop         di 
1B11                          L$283:
1B11    C9                        leave       
1B12    5F                        pop         di 
1B13    5E                        pop         si 
1B14    C2 04 00                  ret         0x0004 
1B17                          init_desktop_:
1B17    53                        push        bx 
1B18    51                        push        cx 
1B19    52                        push        dx 
1B1A    56                        push        si 
1B1B    57                        push        di 
1B1C    C8 2A 00 00               enter       0x002a,0x00 
1B20    B9 14 00                  mov         cx,0x0014 
1B23    8D 7E D6                  lea         di,-0x2a[bp] 
1B26    16                        push        ss 
1B27    07                        pop         es 
1B28    16                        push        ss 
1B29    1F                        pop         ds 
1B2A    BE A4 01                  mov         si,offset DGROUP:L$1914 
1B2D    B8 46 00                  mov         ax,0x0046 
1B30    F3 A5                     rep movsw   
1B32    9A 00 00 00 00            call        malloc_ 
1B37    36 A3 00 00               mov         word ptr ss:_desktop_icons,ax 
1B3B    B8 04 00                  mov         ax,0x0004 
1B3E    36 89 16 02 00            mov         word ptr ss:_desktop_icons+0x2,dx 
1B43    9A 00 00 00 00            call        malloc_ 
1B48    36 A3 00 00               mov         word ptr ss:_default_icons,ax 
1B4C    B8 04 00                  mov         ax,0x0004 
1B4F    36 89 16 02 00            mov         word ptr ss:_default_icons+0x2,dx 
1B54    9A 00 00 00 00            call        malloc_ 
1B59    36 C5 36 00 00            lds         si,dword ptr ss:_default_icons 
1B5E    89 04                     mov         word ptr [si],ax 
1B60    BB 0B 01                  mov         bx,offset DGROUP:L$1754 
1B63    89 54 02                  mov         word ptr 0x2[si],dx 
1B66    8C D1                     mov         cx,ss 
1B68    36 A1 00 00               mov         ax,word ptr ss:_default_icons 
1B6C    36 8B 16 02 00            mov         dx,word ptr ss:_default_icons+0x2 
1B71    BF 14 00                  mov         di,0x0014 
1B74    E8 00 00                  call        load_icon_bitmap_ 
1B77                          L$284:
1B77    36 A1 00 00               mov         ax,word ptr ss:_desktop_icon_count 
1B7B    3D 05 00                  cmp         ax,0x0005 
1B7E    73 52                     jae         L$285 
1B80    89 C6                     mov         si,ax 
1B82    6B C0 0E                  imul        ax,0x000e 
1B85    C1 E6 03                  shl         si,0x03 
1B88    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_icons+0x2 
1B8D    FF 72 DC                  push        word ptr -0x24[bp+si] 
1B90    8B 5A D6                  mov         bx,word ptr -0x2a[bp+si] 
1B93    8B 4A D8                  mov         cx,word ptr -0x28[bp+si] 
1B96    89 46 FE                  mov         word ptr -0x2[bp],ax 
1B99    36 A1 00 00               mov         ax,word ptr ss:_desktop_icons 
1B9D    FF 72 DA                  push        word ptr -0x26[bp+si] 
1BA0    03 46 FE                  add         ax,word ptr -0x2[bp] 
1BA3    E8 00 00                  call        load_icon_ 
1BA6    36 6B 36 00 00 0E         imul        si,word ptr ss:_desktop_icon_count,0x000e 
1BAC    36 C5 06 00 00            lds         ax,dword ptr ss:_desktop_icons 
1BB1    01 C6                     add         si,ax 
1BB3    89 7C 08                  mov         word ptr 0x8[si],di 
1BB6    36 6B 36 00 00 0E         imul        si,word ptr ss:_desktop_icon_count,0x000e 
1BBC    36 C5 16 00 00            lds         dx,dword ptr ss:_desktop_icons 
1BC1    01 D6                     add         si,dx 
1BC3    C7 44 0A 14 00            mov         word ptr 0xa[si],0x0014 
1BC8    83 C7 3C                  add         di,0x003c 
1BCB    36 FF 06 00 00            inc         word ptr ss:_desktop_icon_count 
1BD0    EB A5                     jmp         L$284 
1BD2                          L$285:
1BD2    E8 00 00                  call        init_desktop_menu_ 
	     1BD6		; The label referred to here is an undefined location
1BD5    E9 5B B5                  jmp         0xffffd133 
1BD8                          draw_icon_:
1BD8    56                        push        si 
1BD9    57                        push        di 
1BDA    C8 0C 00 00               enter       0x000c,0x00 
1BDE    50                        push        ax 
1BDF    89 D6                     mov         si,dx 
1BE1    89 DF                     mov         di,bx 
1BE3    89 4E FA                  mov         word ptr -0x6[bp],cx 
1BE6    8A 46 0C                  mov         al,byte ptr 0xc[bp] 
1BE9    C7 46 FC 14 00            mov         word ptr -0x4[bp],0x0014 
1BEE    36 3A 06 00 00            cmp         al,byte ptr ss:__DESKTOP_BGCOLOR 
1BF3    75 08                     jne         L$286 
1BF5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__DESKTOP_BGCOLOR 
1BFB    EB 06                     jmp         L$287 
1BFD                          L$286:
1BFD    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
1C03                          L$287:
1C03    89 46 F8                  mov         word ptr -0x8[bp],ax 
1C06                          L$288:
1C06    FF 4E FC                  dec         word ptr -0x4[bp] 
1C09    83 7E FC FF               cmp         word ptr -0x4[bp],0xffff 
1C0D    74 4B                     je          L$294 
1C0F    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
1C12    C7 46 FE 05 00            mov         word ptr -0x2[bp],0x0005 
1C17    89 46 F6                  mov         word ptr -0xa[bp],ax 
1C1A                          L$289:
1C1A    FF 4E FE                  dec         word ptr -0x2[bp] 
1C1D    83 7E FE FF               cmp         word ptr -0x2[bp],0xffff 
1C21    74 34                     je          L$293 
1C23    C7 46 F4 80 00            mov         word ptr -0xc[bp],0x0080 
1C28    EB 0C                     jmp         L$291 
1C2A                          L$290:
1C2A    D1 6E F4                  shr         word ptr -0xc[bp],0x01 
1C2D    FF 46 F6                  inc         word ptr -0xa[bp] 
1C30    83 7E F4 00               cmp         word ptr -0xc[bp],0x0000 
1C34    74 1E                     je          L$292 
1C36                          L$291:
1C36    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
1C39    0F B6 05                  movzx       ax,byte ptr [di] 
1C3C    85 46 F4                  test        word ptr -0xc[bp],ax 
1C3F    74 E9                     je          L$290 
1C41    0F B6 5E 0C               movzx       bx,byte ptr 0xc[bp] 
1C45    8B 4E F8                  mov         cx,word ptr -0x8[bp] 
1C48    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
1C4B    89 F2                     mov         dx,si 
1C4D    9A 00 00 00 00            call        put_pixel_shadow_ 
1C52    EB D6                     jmp         L$290 
1C54                          L$292:
1C54    47                        inc         di 
1C55    EB C3                     jmp         L$289 
1C57                          L$293:
1C57    46                        inc         si 
1C58    EB AC                     jmp         L$288 
1C5A                          L$294:
1C5A    8B 7E F2                  mov         di,word ptr -0xe[bp] 
1C5D    6A 00                     push        0x0000 
1C5F    83 C7 46                  add         di,0x0046 
1C62    57                        push        di 
1C63    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
1C69    50                        push        ax 
1C6A    0F B6 46 F8               movzx       ax,byte ptr -0x8[bp] 
1C6E    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
1C74    50                        push        ax 
1C75    8D 44 11                  lea         ax,0x11[si] 
1C78    29 D0                     sub         ax,dx 
1C7A    8B 5E 08                  mov         bx,word ptr 0x8[bp] 
1C7D    89 C2                     mov         dx,ax 
1C7F    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
1C82    8B 4E 0A                  mov         cx,word ptr 0xa[bp] 
1C85    40                        inc         ax 
1C86    83 C6 10                  add         si,0x0010 
1C89    0E                        push        cs 
1C8A    E8 00 00                  call        gprint_text_ 
1C8D    6A 00                     push        0x0000 
1C8F    8B 5E 08                  mov         bx,word ptr 0x8[bp] 
1C92    8B 4E 0A                  mov         cx,word ptr 0xa[bp] 
1C95    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
1C9B    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
1CA1    57                        push        di 
1CA2    29 D6                     sub         si,dx 
1CA4    50                        push        ax 
1CA5    0F B6 46 0C               movzx       ax,byte ptr 0xc[bp] 
1CA9    89 F2                     mov         dx,si 
1CAB    50                        push        ax 
1CAC    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
1CAF    0E                        push        cs 
1CB0    E8 00 00                  call        gprint_text_ 
1CB3    C9                        leave       
1CB4    5F                        pop         di 
1CB5    5E                        pop         si 
1CB6    C2 06 00                  ret         0x0006 
1CB9                          save_desktop_shortcut_:
1CB9    53                        push        bx 
1CBA    51                        push        cx 
1CBB    52                        push        dx 
1CBC    56                        push        si 
1CBD    57                        push        di 
1CBE    C8 68 00 00               enter       0x0068,0x00 
1CC2    50                        push        ax 
1CC3    69 C0 D2 00               imul        ax,0x00d2 
1CC7    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
1CCC    89 46 F0                  mov         word ptr -0x10[bp],ax 
1CCF    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
1CD3    52                        push        dx 
1CD4    03 46 F0                  add         ax,word ptr -0x10[bp] 
1CD7    50                        push        ax 
1CD8    16                        push        ss 
1CD9    68 C8 00                  push        offset DGROUP:L$1746 
1CDC    8D 56 98                  lea         dx,-0x68[bp] 
1CDF    16                        push        ss 
1CE0    BB 1E 01                  mov         bx,offset DGROUP:L$1755 
1CE3    52                        push        dx 
1CE4    8C D1                     mov         cx,ss 
1CE6    9A 00 00 00 00            call        sprintf_ 
1CEB    8D 46 98                  lea         ax,-0x68[bp] 
1CEE    83 C4 0C                  add         sp,0x000c 
1CF1    8C D2                     mov         dx,ss 
1CF3    9A 00 00 00 00            call        fopen_ 
1CF8    89 D6                     mov         si,dx 
1CFA    89 C2                     mov         dx,ax 
1CFC    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
1CFF    31 FF                     xor         di,di 
1D01    89 46 F4                  mov         word ptr -0xc[bp],ax 
1D04                          L$295:
1D04    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
1D09    03 5E F4                  add         bx,word ptr -0xc[bp] 
1D0C    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1D11    01 FB                     add         bx,di 
1D13    80 7F 0D 00               cmp         byte ptr 0xd[bx],0x00 
1D17    74 10                     je          L$296 
1D19    89 F1                     mov         cx,si 
1D1B    0F B6 47 0D               movzx       ax,byte ptr 0xd[bx] 
1D1F    89 D3                     mov         bx,dx 
1D21    47                        inc         di 
1D22    9A 00 00 00 00            call        fputc_ 
1D27    EB DB                     jmp         L$295 
1D29                          L$296:
1D29    B8 3B 00                  mov         ax,0x003b 
1D2C    89 D3                     mov         bx,dx 
1D2E    89 F1                     mov         cx,si 
1D30    9A 00 00 00 00            call        fputc_ 
1D35    69 46 96 D2 00            imul        ax,word ptr -0x6a[bp],0x00d2 
1D3A    31 FF                     xor         di,di 
1D3C    89 46 F2                  mov         word ptr -0xe[bp],ax 
1D3F                          L$297:
1D3F    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
1D44    03 5E F2                  add         bx,word ptr -0xe[bp] 
1D47    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1D4C    01 FB                     add         bx,di 
1D4E    80 7F 5E 00               cmp         byte ptr 0x5e[bx],0x00 
1D52    74 10                     je          L$298 
1D54    89 F1                     mov         cx,si 
1D56    0F B6 47 5E               movzx       ax,byte ptr 0x5e[bx] 
1D5A    89 D3                     mov         bx,dx 
1D5C    47                        inc         di 
1D5D    9A 00 00 00 00            call        fputc_ 
1D62    EB DB                     jmp         L$297 
1D64                          L$298:
1D64    B8 3B 00                  mov         ax,0x003b 
1D67    89 D3                     mov         bx,dx 
1D69    89 F1                     mov         cx,si 
1D6B    9A 00 00 00 00            call        fputc_ 
1D70    69 46 96 D2 00            imul        ax,word ptr -0x6a[bp],0x00d2 
1D75    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
1D7A    89 46 FE                  mov         word ptr -0x2[bp],ax 
1D7D                          L$299:
1D7D    36 8B 3E 00 00            mov         di,word ptr ss:_desktop_shortcuts 
1D82    03 7E FE                  add         di,word ptr -0x2[bp] 
1D85    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1D8A    03 7E FA                  add         di,word ptr -0x6[bp] 
1D8D    80 BD A3 00 00            cmp         byte ptr 0xa3[di],0x00 
1D92    74 13                     je          L$300 
1D94    89 D3                     mov         bx,dx 
1D96    89 F1                     mov         cx,si 
1D98    0F B6 85 A3 00            movzx       ax,byte ptr 0xa3[di] 
1D9D    FF 46 FA                  inc         word ptr -0x6[bp] 
1DA0    9A 00 00 00 00            call        fputc_ 
1DA5    EB D6                     jmp         L$299 
1DA7                          L$300:
1DA7    B8 3B 00                  mov         ax,0x003b 
1DAA    89 D3                     mov         bx,dx 
1DAC    89 F1                     mov         cx,si 
1DAE    9A 00 00 00 00            call        fputc_ 
1DB3    36 C5 1E 00 00            lds         bx,dword ptr ss:_desktop_shortcuts 
1DB8    03 5E FE                  add         bx,word ptr -0x2[bp] 
1DBB    FF B7 C4 00               push        word ptr 0xc4[bx] 
1DBF    16                        push        ss 
1DC0    68 20 01                  push        offset DGROUP:L$1756 
1DC3    16                        push        ss 
1DC4    8D 5E EA                  lea         bx,-0x16[bp] 
1DC7    53                        push        bx 
1DC8    31 FF                     xor         di,di 
1DCA    9A 00 00 00 00            call        sprintf_ 
1DCF    83 C4 0A                  add         sp,0x000a 
1DD2                          L$301:
1DD2    80 7B EA 00               cmp         byte ptr -0x16[bp+di],0x00 
1DD6    74 10                     je          L$302 
1DD8    89 D3                     mov         bx,dx 
1DDA    89 F1                     mov         cx,si 
1DDC    0F B6 43 EA               movzx       ax,byte ptr -0x16[bp+di] 
1DE0    9A 00 00 00 00            call        fputc_ 
1DE5    47                        inc         di 
1DE6    EB EA                     jmp         L$301 
1DE8                          L$302:
1DE8    B8 3B 00                  mov         ax,0x003b 
1DEB    89 D3                     mov         bx,dx 
1DED    89 F1                     mov         cx,si 
1DEF    9A 00 00 00 00            call        fputc_ 
1DF4    69 5E 96 D2 00            imul        bx,word ptr -0x6a[bp],0x00d2 
1DF9    36 C5 3E 00 00            lds         di,dword ptr ss:_desktop_shortcuts 
1DFE    01 FB                     add         bx,di 
1E00    FF B7 C6 00               push        word ptr 0xc6[bx] 
1E04    16                        push        ss 
1E05    68 20 01                  push        offset DGROUP:L$1756 
1E08    16                        push        ss 
1E09    8D 5E EA                  lea         bx,-0x16[bp] 
1E0C    53                        push        bx 
1E0D    31 FF                     xor         di,di 
1E0F    9A 00 00 00 00            call        sprintf_ 
1E14    83 C4 0A                  add         sp,0x000a 
1E17                          L$303:
1E17    80 7B EA 00               cmp         byte ptr -0x16[bp+di],0x00 
1E1B    74 10                     je          L$304 
1E1D    89 D3                     mov         bx,dx 
1E1F    89 F1                     mov         cx,si 
1E21    0F B6 43 EA               movzx       ax,byte ptr -0x16[bp+di] 
1E25    9A 00 00 00 00            call        fputc_ 
1E2A    47                        inc         di 
1E2B    EB EA                     jmp         L$303 
1E2D                          L$304:
1E2D    B8 3B 00                  mov         ax,0x003b 
1E30    89 D3                     mov         bx,dx 
1E32    89 F1                     mov         cx,si 
1E34    9A 00 00 00 00            call        fputc_ 
1E39    69 46 96 D2 00            imul        ax,word ptr -0x6a[bp],0x00d2 
1E3E    36 C5 1E 00 00            lds         bx,dword ptr ss:_desktop_shortcuts 
1E43    01 C3                     add         bx,ax 
1E45    0F B6 87 D0 00            movzx       ax,byte ptr 0xd0[bx] 
1E4A    50                        push        ax 
1E4B    16                        push        ss 
1E4C    68 20 01                  push        offset DGROUP:L$1756 
1E4F    16                        push        ss 
1E50    8D 5E EA                  lea         bx,-0x16[bp] 
1E53    53                        push        bx 
1E54    C7 46 FC 00 00            mov         word ptr -0x4[bp],0x0000 
1E59    9A 00 00 00 00            call        sprintf_ 
1E5E    83 C4 0A                  add         sp,0x000a 
1E61                          L$305:
1E61    8B 7E FC                  mov         di,word ptr -0x4[bp] 
1E64    80 7B EA 00               cmp         byte ptr -0x16[bp+di],0x00 
1E68    74 12                     je          L$306 
1E6A    89 D3                     mov         bx,dx 
1E6C    89 F1                     mov         cx,si 
1E6E    0F B6 43 EA               movzx       ax,byte ptr -0x16[bp+di] 
1E72    FF 46 FC                  inc         word ptr -0x4[bp] 
1E75    9A 00 00 00 00            call        fputc_ 
1E7A    EB E5                     jmp         L$305 
1E7C                          L$306:
1E7C    B8 3B 00                  mov         ax,0x003b 
1E7F    89 D3                     mov         bx,dx 
1E81    89 F1                     mov         cx,si 
1E83    9A 00 00 00 00            call        fputc_ 
1E88    69 46 96 D2 00            imul        ax,word ptr -0x6a[bp],0x00d2 
1E8D    36 C5 1E 00 00            lds         bx,dword ptr ss:_desktop_shortcuts 
1E92    01 C3                     add         bx,ax 
1E94    8B BF CC 00               mov         di,word ptr 0xcc[bx] 
1E98    8B 9F CE 00               mov         bx,word ptr 0xce[bx] 
1E9C    85 DB                     test        bx,bx 
1E9E    75 04                     jne         L$307 
1EA0    85 FF                     test        di,di 
1EA2    74 31                     je          L$309 
1EA4                          L$307:
1EA4    C7 46 F8 00 00            mov         word ptr -0x8[bp],0x0000 
1EA9    89 46 F6                  mov         word ptr -0xa[bp],ax 
1EAC                          L$308:
1EAC    36 C5 3E 00 00            lds         di,dword ptr ss:_desktop_shortcuts 
1EB1    03 7E F6                  add         di,word ptr -0xa[bp] 
1EB4    8B 9D CC 00               mov         bx,word ptr 0xcc[di] 
1EB8    03 5E F8                  add         bx,word ptr -0x8[bp] 
1EBB    8E 9D CE 00               mov         ds,word ptr 0xce[di] 
1EBF    80 3F 00                  cmp         byte ptr [bx],0x00 
1EC2    74 11                     je          L$309 
1EC4    89 F1                     mov         cx,si 
1EC6    0F B6 07                  movzx       ax,byte ptr [bx] 
1EC9    89 D3                     mov         bx,dx 
1ECB    FF 46 F8                  inc         word ptr -0x8[bp] 
1ECE    9A 00 00 00 00            call        fputc_ 
1ED3    EB D7                     jmp         L$308 
1ED5                          L$309:
1ED5    89 D0                     mov         ax,dx 
1ED7    89 F2                     mov         dx,si 
1ED9    9A 00 00 00 00            call        fclose_ 
	     1EDF		; The label referred to here is an undefined location
1EDE    E9 52 B2                  jmp         0xffffd133 
1EE1                          load_desktop_shortcuts_:
1EE1    53                        push        bx 
1EE2    51                        push        cx 
1EE3    52                        push        dx 
1EE4    56                        push        si 
1EE5    57                        push        di 
1EE6    C8 88 00 00               enter       0x0088,0x00 
1EEA    81 ED 80 00               sub         bp,0x0080 
1EEE    B8 D2 00                  mov         ax,0x00d2 
1EF1    9A 00 00 00 00            call        malloc_ 
1EF6    36 A3 00 00               mov         word ptr ss:_desktop_shortcuts,ax 
1EFA    36 89 16 02 00            mov         word ptr ss:_desktop_shortcuts+0x2,dx 
1EFF    85 D2                     test        dx,dx 
1F01    75 09                     jne         L$311 
1F03    85 C0                     test        ax,ax 
1F05    75 05                     jne         L$311 
1F07                          L$310:
1F07    31 C0                     xor         ax,ax 
1F09    E9 9D E2                  jmp         L$18 
1F0C                          L$311:
1F0C    8D 56 4A                  lea         dx,0x4a[bp] 
1F0F    B8 23 01                  mov         ax,offset DGROUP:L$1757 
1F12    16                        push        ss 
1F13    31 DB                     xor         bx,bx 
1F15    52                        push        dx 
1F16    8C D2                     mov         dx,ss 
1F18    9A 00 00 00 00            call        _dos_findfirst_ 
1F1D                          L$312:
1F1D    85 C0                     test        ax,ax 
1F1F    0F 85 2F 03               jne         L$334 
1F23    36 A1 00 00               mov         ax,word ptr ss:_shortcut_count 
1F27    85 C0                     test        ax,ax 
1F29    74 26                     je          L$313 
1F2B    89 C3                     mov         bx,ax 
1F2D    43                        inc         bx 
1F2E    69 DB D2 00               imul        bx,0x00d2 
1F32    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
1F37    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
1F3B    9A 00 00 00 00            call        realloc_ 
1F40    36 A3 00 00               mov         word ptr ss:_desktop_shortcuts,ax 
1F44    36 89 16 02 00            mov         word ptr ss:_desktop_shortcuts+0x2,dx 
1F49    85 D2                     test        dx,dx 
1F4B    75 04                     jne         L$313 
1F4D    85 C0                     test        ax,ax 
1F4F    74 B6                     je          L$310 
1F51                          L$313:
1F51    16                        push        ss 
1F52    8D 56 68                  lea         dx,0x68[bp] 
1F55    52                        push        dx 
1F56    16                        push        ss 
1F57    68 C8 00                  push        offset DGROUP:L$1746 
1F5A    8D 56 F8                  lea         dx,-0x8[bp] 
1F5D    16                        push        ss 
1F5E    BB BC 00                  mov         bx,offset DGROUP:L$1744 
1F61    52                        push        dx 
1F62    8C D1                     mov         cx,ss 
1F64    9A 00 00 00 00            call        sprintf_ 
1F69    8D 46 F8                  lea         ax,-0x8[bp] 
1F6C    83 C4 0C                  add         sp,0x000c 
1F6F    8C D2                     mov         dx,ss 
1F71    9A 00 00 00 00            call        fopen_ 
1F76    36 69 3E 00 00 D2 00      imul        di,word ptr ss:_shortcut_count,0x00d2 
1F7D    8D 76 68                  lea         si,0x68[bp] 
1F80    89 C1                     mov         cx,ax 
1F82    36 C4 06 00 00            les         ax,dword ptr ss:_desktop_shortcuts 
1F87    01 C7                     add         di,ax 
1F89    16                        push        ss 
1F8A    1F                        pop         ds 
1F8B    89 D3                     mov         bx,dx 
1F8D    57                        push        di 
1F8E                          L$314:
1F8E    AC                        lodsb       
1F8F    AA                        stosb       
1F90    3C 00                     cmp         al,0x00 
1F92    75 FA                     jne         L$314 
1F94    5F                        pop         di 
1F95    31 F6                     xor         si,si 
1F97                          L$315:
1F97    89 C8                     mov         ax,cx 
1F99    89 DA                     mov         dx,bx 
1F9B    9A 00 00 00 00            call        fgetc_ 
1FA0    36 69 16 00 00 D2 00      imul        dx,word ptr ss:_shortcut_count,0x00d2 
1FA7    89 46 7E                  mov         word ptr 0x7e[bp],ax 
1FAA    3D 3B 00                  cmp         ax,0x003b 
1FAD    74 17                     je          L$316 
1FAF    36 8B 3E 00 00            mov         di,word ptr ss:_desktop_shortcuts 
1FB4    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
1FB7    01 D7                     add         di,dx 
1FB9    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1FBE    01 F7                     add         di,si 
1FC0    46                        inc         si 
1FC1    88 45 0D                  mov         byte ptr 0xd[di],al 
1FC4    EB D1                     jmp         L$315 
1FC6                          L$316:
1FC6    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
1FCA    01 D0                     add         ax,dx 
1FCC    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1FD1    01 C6                     add         si,ax 
1FD3    C6 44 0D 00               mov         byte ptr 0xd[si],0x00 
1FD7    31 F6                     xor         si,si 
1FD9                          L$317:
1FD9    89 C8                     mov         ax,cx 
1FDB    89 DA                     mov         dx,bx 
1FDD    9A 00 00 00 00            call        fgetc_ 
1FE2    36 69 16 00 00 D2 00      imul        dx,word ptr ss:_shortcut_count,0x00d2 
1FE9    89 46 7E                  mov         word ptr 0x7e[bp],ax 
1FEC    3D 3B 00                  cmp         ax,0x003b 
1FEF    74 18                     je          L$318 
1FF1    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
1FF5    89 D7                     mov         di,dx 
1FF7    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
1FFC    01 C7                     add         di,ax 
1FFE    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
2001    01 F7                     add         di,si 
2003    46                        inc         si 
2004    88 45 5E                  mov         byte ptr 0x5e[di],al 
2007    EB D0                     jmp         L$317 
2009                          L$318:
2009    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
200D    01 D0                     add         ax,dx 
200F    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
2014    01 C6                     add         si,ax 
2016    C6 44 5E 00               mov         byte ptr 0x5e[si],0x00 
201A    31 F6                     xor         si,si 
201C                          L$319:
201C    89 C8                     mov         ax,cx 
201E    89 DA                     mov         dx,bx 
2020    9A 00 00 00 00            call        fgetc_ 
2025    36 69 16 00 00 D2 00      imul        dx,word ptr ss:_shortcut_count,0x00d2 
202C    89 46 7E                  mov         word ptr 0x7e[bp],ax 
202F    3D 3B 00                  cmp         ax,0x003b 
2032    74 18                     je          L$320 
2034    36 8B 3E 00 00            mov         di,word ptr ss:_desktop_shortcuts 
2039    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
203C    01 D7                     add         di,dx 
203E    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
2043    01 F7                     add         di,si 
2045    46                        inc         si 
2046    88 85 A3 00               mov         byte ptr 0xa3[di],al 
204A    EB D0                     jmp         L$319 
204C                          L$320:
204C    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
2050    01 C2                     add         dx,ax 
2052    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
2057    01 D6                     add         si,dx 
2059    C6 84 A3 00 00            mov         byte ptr 0xa3[si],0x00 
205E    31 F6                     xor         si,si 
2060                          L$321:
2060    89 C8                     mov         ax,cx 
2062    89 DA                     mov         dx,bx 
2064    9A 00 00 00 00            call        fgetc_ 
2069    89 46 7E                  mov         word ptr 0x7e[bp],ax 
206C    3D 3B 00                  cmp         ax,0x003b 
206F    74 09                     je          L$322 
2071    46                        inc         si 
2072    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
2075    88 42 75                  mov         byte ptr 0x75[bp+si],al 
2078    EB E6                     jmp         L$321 
207A                          L$322:
207A    8D 46 76                  lea         ax,0x76[bp] 
207D    8C D2                     mov         dx,ss 
207F    C6 42 76 00               mov         byte ptr 0x76[bp+si],0x00 
2083    9A 00 00 00 00            call        atoi_ 
2088    36 69 36 00 00 D2 00      imul        si,word ptr ss:_shortcut_count,0x00d2 
208F    36 C5 3E 00 00            lds         di,dword ptr ss:_desktop_shortcuts 
2094    01 FE                     add         si,di 
2096    89 84 C4 00               mov         word ptr 0xc4[si],ax 
209A    31 F6                     xor         si,si 
209C                          L$323:
209C    89 C8                     mov         ax,cx 
209E    89 DA                     mov         dx,bx 
20A0    9A 00 00 00 00            call        fgetc_ 
20A5    89 46 7E                  mov         word ptr 0x7e[bp],ax 
20A8    3D 3B 00                  cmp         ax,0x003b 
20AB    74 09                     je          L$324 
20AD    46                        inc         si 
20AE    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
20B1    88 42 75                  mov         byte ptr 0x75[bp+si],al 
20B4    EB E6                     jmp         L$323 
20B6                          L$324:
20B6    8D 46 76                  lea         ax,0x76[bp] 
20B9    8C D2                     mov         dx,ss 
20BB    C6 42 76 00               mov         byte ptr 0x76[bp+si],0x00 
20BF    9A 00 00 00 00            call        atoi_ 
20C4    36 69 16 00 00 D2 00      imul        dx,word ptr ss:_shortcut_count,0x00d2 
20CB    36 C5 36 00 00            lds         si,dword ptr ss:_desktop_shortcuts 
20D0    01 D6                     add         si,dx 
20D2    89 84 C6 00               mov         word ptr 0xc6[si],ax 
20D6    31 F6                     xor         si,si 
20D8                          L$325:
20D8    89 C8                     mov         ax,cx 
20DA    89 DA                     mov         dx,bx 
20DC    9A 00 00 00 00            call        fgetc_ 
20E1    89 46 7E                  mov         word ptr 0x7e[bp],ax 
20E4    3D 3B 00                  cmp         ax,0x003b 
20E7    74 09                     je          L$326 
20E9    46                        inc         si 
20EA    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
20ED    88 42 75                  mov         byte ptr 0x75[bp+si],al 
20F0    EB E6                     jmp         L$325 
20F2                          L$326:
20F2    8D 46 76                  lea         ax,0x76[bp] 
20F5    8C D2                     mov         dx,ss 
20F7    C6 42 76 00               mov         byte ptr 0x76[bp+si],0x00 
20FB    9A 00 00 00 00            call        atoi_ 
2100    36 69 16 00 00 D2 00      imul        dx,word ptr ss:_shortcut_count,0x00d2 
2107    36 C5 36 00 00            lds         si,dword ptr ss:_desktop_shortcuts 
210C    01 D6                     add         si,dx 
210E    88 84 D0 00               mov         byte ptr 0xd0[si],al 
2112    31 F6                     xor         si,si 
2114                          L$327:
2114    89 C8                     mov         ax,cx 
2116    89 DA                     mov         dx,bx 
2118    9A 00 00 00 00            call        fgetc_ 
211D    89 46 7E                  mov         word ptr 0x7e[bp],ax 
2120    3D FF FF                  cmp         ax,0xffff 
2123    74 09                     je          L$328 
2125    46                        inc         si 
2126    8A 46 7E                  mov         al,byte ptr 0x7e[bp] 
2129    88 42 F7                  mov         byte ptr -0x9[bp+si],al 
212C    EB E6                     jmp         L$327 
212E                          L$328:
212E    89 C8                     mov         ax,cx 
2130    89 DA                     mov         dx,bx 
2132    C6 42 F8 00               mov         byte ptr -0x8[bp+si],0x00 
2136    9A 00 00 00 00            call        fclose_ 
213B    BB D3 00                  mov         bx,offset DGROUP:L$1747 
213E    8D 46 F8                  lea         ax,-0x8[bp] 
2141    8C D1                     mov         cx,ss 
2143    8C D2                     mov         dx,ss 
2145    9A 00 00 00 00            call        fopen_ 
214A    89 C6                     mov         si,ax 
214C    89 D7                     mov         di,dx 
214E    85 D2                     test        dx,dx 
2150    75 06                     jne         L$329 
2152    85 C0                     test        ax,ax 
2154    0F 84 BA 00               je          L$332 
2158                          L$329:
2158    B8 64 00                  mov         ax,0x0064 
215B    9A 00 00 00 00            call        malloc_ 
2160    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
2167    89 5E 7C                  mov         word ptr 0x7c[bp],bx 
216A    36 C5 1E 00 00            lds         bx,dword ptr ss:_desktop_shortcuts 
216F    03 5E 7C                  add         bx,word ptr 0x7c[bp] 
2172    89 87 C8 00               mov         word ptr 0xc8[bx],ax 
2176    89 97 CA 00               mov         word ptr 0xca[bx],dx 
217A    8B 87 C8 00               mov         ax,word ptr 0xc8[bx] 
217E    85 D2                     test        dx,dx 
2180    75 06                     jne         L$330 
2182    85 C0                     test        ax,ax 
2184    0F 84 7F FD               je          L$310 
2188                          L$330:
2188    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
218F    B9 64 00                  mov         cx,0x0064 
2192    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
2196    57                        push        di 
2197    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
219C    01 C3                     add         bx,ax 
219E    56                        push        si 
219F    8B 87 C8 00               mov         ax,word ptr 0xc8[bx] 
21A3    8B 97 CA 00               mov         dx,word ptr 0xca[bx] 
21A7    BB 01 00                  mov         bx,0x0001 
21AA    9A 00 00 00 00            call        fread_ 
21AF    89 F0                     mov         ax,si 
21B1    89 FA                     mov         dx,di 
21B3    9A 00 00 00 00            call        fclose_ 
21B8    B8 51 00                  mov         ax,0x0051 
21BB    9A 00 00 00 00            call        malloc_ 
21C0    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
21C7    36 C5 0E 00 00            lds         cx,dword ptr ss:_desktop_shortcuts 
21CC    01 CB                     add         bx,cx 
21CE    89 87 CC 00               mov         word ptr 0xcc[bx],ax 
21D2    89 97 CE 00               mov         word ptr 0xce[bx],dx 
21D6    8B 87 CE 00               mov         ax,word ptr 0xce[bx] 
21DA    8B 97 CC 00               mov         dx,word ptr 0xcc[bx] 
21DE    85 C0                     test        ax,ax 
21E0    75 06                     jne         L$331 
21E2    85 D2                     test        dx,dx 
21E4    0F 84 1F FD               je          L$310 
21E8                          L$331:
21E8    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
21EF    16                        push        ss 
21F0    8D 56 F8                  lea         dx,-0x8[bp] 
21F3    52                        push        dx 
21F4    16                        push        ss 
21F5    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
21F9    68 31 01                  push        offset DGROUP:L$1758 
21FC    36 8E 1E 02 00            mov         ds,word ptr ss:_desktop_shortcuts+0x2 
2201    01 C3                     add         bx,ax 
2203    66 FF B7 CC 00            push        dword ptr 0xcc[bx] 
2208    9A 00 00 00 00            call        sprintf_ 
220D    83 C4 0C                  add         sp,0x000c 
2210    EB 2E                     jmp         L$333 
2212                          L$332:
2212    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
2219    36 C5 06 00 00            lds         ax,dword ptr ss:_desktop_shortcuts 
221E    01 C3                     add         bx,ax 
2220    66 C7 87 C8 00 00 00 00 00
                                  mov         dword ptr 0xc8[bx],0x00000000 
2229    36 69 1E 00 00 D2 00      imul        bx,word ptr ss:_shortcut_count,0x00d2 
2230    36 C5 06 00 00            lds         ax,dword ptr ss:_desktop_shortcuts 
2235    01 C3                     add         bx,ax 
2237    66 C7 87 CC 00 00 00 00 00
                                  mov         dword ptr 0xcc[bx],0x00000000 
2240                          L$333:
2240    8D 46 4A                  lea         ax,0x4a[bp] 
2243    8C D2                     mov         dx,ss 
2245    36 FF 06 00 00            inc         word ptr ss:_shortcut_count 
224A    9A 00 00 00 00            call        _dos_findnext_ 
224F    E9 CB FC                  jmp         L$312 
2252                          L$334:
2252    B8 01 00                  mov         ax,0x0001 
2255    E9 51 DF                  jmp         L$18 
2258                          draw_desktop_icon_:
2258    53                        push        bx 
2259    51                        push        cx 
225A    56                        push        si 
225B    57                        push        di 
225C    C8 10 00 00               enter       0x0010,0x00 
2260    89 D1                     mov         cx,dx 
2262    36 8B 16 00 00            mov         dx,word ptr ss:_running_window 
2267    89 56 F2                  mov         word ptr -0xe[bp],dx 
226A    36 8B 16 02 00            mov         dx,word ptr ss:_running_window+0x2 
226F    89 56 F4                  mov         word ptr -0xc[bp],dx 
2272    36 3B 06 00 00            cmp         ax,word ptr ss:_desktop_icon_count 
2277    72 5F                     jb          L$338 
2279    89 C2                     mov         dx,ax 
227B    36 2B 16 00 00            sub         dx,word ptr ss:_desktop_icon_count 
2280    69 F2 D2 00               imul        si,dx,0x00d2 
2284    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
2289    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
228E    01 F3                     add         bx,si 
2290    8E DA                     mov         ds,dx 
2292    89 56 F8                  mov         word ptr -0x8[bp],dx 
2295    8D 97 A3 00               lea         dx,0xa3[bx] 
2299    89 56 F6                  mov         word ptr -0xa[bp],dx 
229C    8B 97 C8 00               mov         dx,word ptr 0xc8[bx] 
22A0    8B B7 C4 00               mov         si,word ptr 0xc4[bx] 
22A4    89 56 F0                  mov         word ptr -0x10[bp],dx 
22A7    8B 97 CA 00               mov         dx,word ptr 0xca[bx] 
22AB    8B BF C6 00               mov         di,word ptr 0xc6[bx] 
22AF    85 D2                     test        dx,dx 
22B1    75 06                     jne         L$335 
22B3    83 7E F0 00               cmp         word ptr -0x10[bp],0x0000 
22B7    74 10                     je          L$337 
22B9                          L$335:
22B9    8B 97 C8 00               mov         dx,word ptr 0xc8[bx] 
22BD    89 56 FA                  mov         word ptr -0x6[bp],dx 
22C0    8B 97 CA 00               mov         dx,word ptr 0xca[bx] 
22C4                          L$336:
22C4    89 56 FC                  mov         word ptr -0x4[bp],dx 
22C7    EB 36                     jmp         L$339 
22C9                          L$337:
22C9    36 C5 1E 00 00            lds         bx,dword ptr ss:_default_icons 
22CE    8B 17                     mov         dx,word ptr [bx] 
22D0    89 56 FA                  mov         word ptr -0x6[bp],dx 
22D3    8B 57 02                  mov         dx,word ptr 0x2[bx] 
22D6    EB EC                     jmp         L$336 
22D8                          L$338:
22D8    6B D8 0E                  imul        bx,ax,0x000e 
22DB    36 C5 16 00 00            lds         dx,dword ptr ss:_desktop_icons 
22E0    01 D3                     add         bx,dx 
22E2    8B 17                     mov         dx,word ptr [bx] 
22E4    89 56 FA                  mov         word ptr -0x6[bp],dx 
22E7    8B 57 02                  mov         dx,word ptr 0x2[bx] 
22EA    89 56 FC                  mov         word ptr -0x4[bp],dx 
22ED    8B 57 04                  mov         dx,word ptr 0x4[bx] 
22F0    8B 77 08                  mov         si,word ptr 0x8[bx] 
22F3    89 56 F6                  mov         word ptr -0xa[bp],dx 
22F6    8B 57 06                  mov         dx,word ptr 0x6[bx] 
22F9    8B 7F 0A                  mov         di,word ptr 0xa[bx] 
22FC    89 56 F8                  mov         word ptr -0x8[bp],dx 
22FF                          L$339:
22FF    66 36 C7 06 00 00 FF FF FF FF
                                  mov         dword ptr ss:_running_window,0xffffffff 
2309    85 C9                     test        cx,cx 
230B    74 0E                     je          L$340 
230D    6A 04                     push        0x0004 
230F    B9 23 00                  mov         cx,0x0023 
2312    BB 28 00                  mov         bx,0x0028 
2315    36 A0 00 00               mov         al,byte ptr ss:__DESKTOP_BGCOLOR 
2319    EB 21                     jmp         L$342 
231B                          L$340:
231B    36 3B 06 00 00            cmp         ax,word ptr ss:_icon_selected 
2320    75 0E                     jne         L$341 
2322    6A 02                     push        0x0002 
2324    B9 23 00                  mov         cx,0x0023 
2327    BB 28 00                  mov         bx,0x0028 
232A    36 A0 00 00               mov         al,byte ptr ss:__ICON_ACOLOR 
232E    EB 0C                     jmp         L$342 
2330                          L$341:
2330    6A 04                     push        0x0004 
2332    B9 23 00                  mov         cx,0x0023 
2335    BB 28 00                  mov         bx,0x0028 
2338    36 A0 00 00               mov         al,byte ptr ss:__ICON_ICOLOR 
233C                          L$342:
233C    89 FA                     mov         dx,di 
233E    88 46 FE                  mov         byte ptr -0x2[bp],al 
2341    89 F0                     mov         ax,si 
2343    9A 00 00 00 00            call        draw_borders_ 
2348    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
234C    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
234F    50                        push        ax 
2350    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
2353    FF 76 F8                  push        word ptr -0x8[bp] 
2356    89 FA                     mov         dx,di 
2358    FF 76 F6                  push        word ptr -0xa[bp] 
235B    89 F0                     mov         ax,si 
235D    E8 00 00                  call        draw_icon_ 
2360    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
2363    36 A3 00 00               mov         word ptr ss:_running_window,ax 
2367    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
236A    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
236E    E9 19 6C                  jmp         L$1094 
2371                          move_icon_:
2371    51                        push        cx 
2372    56                        push        si 
2373    57                        push        di 
2374    55                        push        bp 
2375    31 ED                     xor         bp,bp 
2377    89 C1                     mov         cx,ax 
2379    89 D7                     mov         di,dx 
237B    89 DE                     mov         si,bx 
237D    BA 01 00                  mov         dx,0x0001 
2380    E8 00 00                  call        draw_desktop_icon_ 
2383    3B 8E 00 00               cmp         cx,word ptr _desktop_icon_count[bp] 
2387    73 18                     jae         L$343 
2389    6B C1 0E                  imul        ax,cx,0x000e 
238C    C5 9E 00 00               lds         bx,dword ptr _desktop_icons[bp] 
2390    01 C3                     add         bx,ax 
2392    01 7F 08                  add         word ptr 0x8[bx],di 
2395    C5 9E 00 00               lds         bx,dword ptr _desktop_icons[bp] 
2399    01 C3                     add         bx,ax 
239B    01 77 0A                  add         word ptr 0xa[bx],si 
239E    E9 A6 00                  jmp         L$347 
23A1                          L$343:
23A1    89 C8                     mov         ax,cx 
23A3    2B 86 00 00               sub         ax,word ptr _desktop_icon_count[bp] 
23A7    69 D0 D2 00               imul        dx,ax,0x00d2 
23AB    C5 9E 00 00               lds         bx,dword ptr _desktop_shortcuts[bp] 
23AF    01 D3                     add         bx,dx 
23B1    89 C8                     mov         ax,cx 
23B3    01 BF C4 00               add         word ptr 0xc4[bx],di 
23B7    2B 86 00 00               sub         ax,word ptr _desktop_icon_count[bp] 
23BB    69 D8 D2 00               imul        bx,ax,0x00d2 
23BF    C5 96 00 00               lds         dx,dword ptr _desktop_shortcuts[bp] 
23C3    01 D3                     add         bx,dx 
23C5    89 C8                     mov         ax,cx 
23C7    01 B7 C6 00               add         word ptr 0xc6[bx],si 
23CB    2B 86 00 00               sub         ax,word ptr _desktop_icon_count[bp] 
23CF    69 C0 D2 00               imul        ax,0x00d2 
23D3    C5 9E 00 00               lds         bx,dword ptr _desktop_shortcuts[bp] 
23D7    01 C3                     add         bx,ax 
23D9    83 BF C4 00 00            cmp         word ptr 0xc4[bx],0x0000 
23DE    7C 0D                     jl          L$344 
23E0    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
23E4    2D 1E 00                  sub         ax,0x001e 
23E7    3B 87 C4 00               cmp         ax,word ptr 0xc4[bx] 
23EB    73 1B                     jae         L$345 
23ED                          L$344:
23ED    89 CA                     mov         dx,cx 
23EF    2B 96 00 00               sub         dx,word ptr _desktop_icon_count[bp] 
23F3    69 DA D2 00               imul        bx,dx,0x00d2 
23F7    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
23FB    C5 B6 00 00               lds         si,dword ptr _desktop_shortcuts[bp] 
23FF    01 F3                     add         bx,si 
2401    2D 1E 00                  sub         ax,0x001e 
2404    89 87 C4 00               mov         word ptr 0xc4[bx],ax 
2408                          L$345:
2408    89 C8                     mov         ax,cx 
240A    2B 86 00 00               sub         ax,word ptr _desktop_icon_count[bp] 
240E    69 C0 D2 00               imul        ax,0x00d2 
2412    C5 9E 00 00               lds         bx,dword ptr _desktop_shortcuts[bp] 
2416    01 C3                     add         bx,ax 
2418    83 BF C6 00 00            cmp         word ptr 0xc6[bx],0x0000 
241D    7C 0D                     jl          L$346 
241F    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
2423    2D 1E 00                  sub         ax,0x001e 
2426    3B 87 C6 00               cmp         ax,word ptr 0xc6[bx] 
242A    73 1B                     jae         L$347 
242C                          L$346:
242C    89 CB                     mov         bx,cx 
242E    2B 9E 00 00               sub         bx,word ptr _desktop_icon_count[bp] 
2432    69 DB D2 00               imul        bx,0x00d2 
2436    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
243A    C5 96 00 00               lds         dx,dword ptr _desktop_shortcuts[bp] 
243E    01 D3                     add         bx,dx 
2440    2D 1E 00                  sub         ax,0x001e 
2443    89 87 C6 00               mov         word ptr 0xc6[bx],ax 
2447                          L$347:
2447    89 C8                     mov         ax,cx 
2449    31 D2                     xor         dx,dx 
244B    E8 00 00                  call        draw_desktop_icon_ 
244E    5D                        pop         bp 
244F    E9 B8 26                  jmp         L$601 
2452                          draw_desktop_icons_:
2452    53                        push        bx 
2453    52                        push        dx 
2454    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_icon_count 
2459    36 03 1E 00 00            add         bx,word ptr ss:_shortcut_count 
245E                          L$348:
245E    4B                        dec         bx 
245F    83 FB FF                  cmp         bx,0xffff 
2462    0F 84 1A F1               je          L$235 
2466    89 D8                     mov         ax,bx 
2468    31 D2                     xor         dx,dx 
246A    E8 00 00                  call        draw_desktop_icon_ 
246D    EB EF                     jmp         L$348 
246F                          draw_window_icons_:
246F    53                        push        bx 
2470    51                        push        cx 
2471    52                        push        dx 
2472    56                        push        si 
2473    57                        push        di 
2474    C8 04 00 00               enter       0x0004,0x00 
2478    31 C0                     xor         ax,ax 
247A    BE 05 00                  mov         si,0x0005 
247D    89 46 FC                  mov         word ptr -0x4[bp],ax 
2480    89 46 FE                  mov         word ptr -0x2[bp],ax 
2483                          L$349:
2483    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
2486    36 3B 16 00 00            cmp         dx,word ptr ss:_window_count 
	     248D		; The label referred to here is an undefined location
248B    0F 83 A4 AC               jae         0xffffd133 
248F    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
2494    03 5E FE                  add         bx,word ptr -0x2[bp] 
2497    C5 3F                     lds         di,dword ptr [bx] 
2499    F6 45 16 08               test        byte ptr 0x16[di],0x08 
249D    74 60                     je          L$353 
249F    6A 00                     push        0x0000 
24A1    B9 27 00                  mov         cx,0x0027 
24A4    BB 44 00                  mov         bx,0x0044 
24A7    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
24AC    89 F0                     mov         ax,si 
24AE    83 EA 28                  sub         dx,0x0028 
24B1    9A 00 00 00 00            call        draw_borders_ 
24B6    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
24BB    03 7E FE                  add         di,word ptr -0x2[bp] 
24BE    C5 1D                     lds         bx,dword ptr [di] 
24C0    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
24C5    8B 4F 2E                  mov         cx,word ptr 0x2e[bx] 
24C8    8B 7F 30                  mov         di,word ptr 0x30[bx] 
24CB    83 EA 28                  sub         dx,0x0028 
24CE    85 FF                     test        di,di 
24D0    75 04                     jne         L$350 
24D2    85 C9                     test        cx,cx 
24D4    74 10                     je          L$351 
24D6                          L$350:
24D6    6A 00                     push        0x0000 
24D8    89 CF                     mov         di,cx 
24DA    89 F0                     mov         ax,si 
24DC    FF 77 02                  push        word ptr 0x2[bx] 
24DF    8B 4F 30                  mov         cx,word ptr 0x30[bx] 
24E2    FF 37                     push        word ptr [bx] 
24E4    EB 11                     jmp         L$352 
24E6                          L$351:
24E6    6A 00                     push        0x0000 
24E8    66 FF 37                  push        dword ptr [bx] 
24EB    36 C5 1E 00 00            lds         bx,dword ptr ss:_default_icons 
24F0    89 F0                     mov         ax,si 
24F2    8B 3F                     mov         di,word ptr [bx] 
24F4    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
24F7                          L$352:
24F7    89 FB                     mov         bx,di 
24F9    E8 00 00                  call        draw_icon_ 
24FC    83 C6 46                  add         si,0x0046 
24FF                          L$353:
24FF    83 46 FE 04               add         word ptr -0x2[bp],0x0004 
2503    FF 46 FC                  inc         word ptr -0x4[bp] 
2506    E9 7A FF                  jmp         L$349 
2509                          draw_taskbar_:
2509    53                        push        bx 
250A    51                        push        cx 
250B    52                        push        dx 
250C    56                        push        si 
250D    57                        push        di 
250E    C8 04 00 00               enter       0x0004,0x00 
2512    36 8B 36 00 00            mov         si,word ptr ss:_draw_window_box 
2517    36 8B 3E 02 00            mov         di,word ptr ss:_draw_window_box+0x2 
251C    36 8B 16 00 00            mov         dx,word ptr ss:_running_window 
2521    36 8B 1E 00 00            mov         bx,word ptr ss:__RES_X 
2526    31 C0                     xor         ax,ax 
2528    89 56 FC                  mov         word ptr -0x4[bp],dx 
252B    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
252F    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
2533    36 8B 16 02 00            mov         dx,word ptr ss:_running_window+0x2 
2538    B8 FF FF                  mov         ax,0xffff 
253B    89 56 FE                  mov         word ptr -0x2[bp],dx 
253E    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__BORDERCOLOR_LIGHT 
2544    36 A3 00 00               mov         word ptr ss:_running_window,ax 
2548    52                        push        dx 
2549    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
254E    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
2552    83 C2 D5                  add         dx,0xffd5 
2555    31 C0                     xor         ax,ax 
2557    89 D1                     mov         cx,dx 
2559    9A 00 00 00 00            call        draw_line_ 
255E    B9 2A 00                  mov         cx,0x002a 
2561    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__WINDOW_BGCOLOR 
2567    36 8B 1E 00 00            mov         bx,word ptr ss:__RES_X 
256C    52                        push        dx 
256D    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
2572    31 C0                     xor         ax,ax 
2574    83 EA 2A                  sub         dx,0x002a 
2577    9A 00 00 00 00            call        draw_rectangle_ 
257C    E8 00 00                  call        draw_window_icons_ 
257F    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
2582    36 89 36 00 00            mov         word ptr ss:_draw_window_box,si 
2587    36 89 16 00 00            mov         word ptr ss:_running_window,dx 
258C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
258F    36 89 3E 02 00            mov         word ptr ss:_draw_window_box+0x2,di 
2594    36 89 16 02 00            mov         word ptr ss:_running_window+0x2,dx 
	     259A		; The label referred to here is an undefined location
2599    E9 97 AB                  jmp         0xffffd133 
259C                          draw_desktop_:
259C    53                        push        bx 
259D    51                        push        cx 
259E    52                        push        dx 
259F    56                        push        si 
25A0    55                        push        bp 
25A1    31 ED                     xor         bp,bp 
25A3    36 A1 06 00               mov         ax,word ptr ss:_wallpaper_struct+0x6 
25A7    8B 96 04 00               mov         dx,word ptr _wallpaper_struct+0x4[bp] 
25AB    85 C0                     test        ax,ax 
25AD    75 4D                     jne         L$355 
25AF    85 D2                     test        dx,dx 
25B1    75 49                     jne         L$355 
25B3    36 A1 02 00               mov         ax,word ptr ss:_draw_window_box+0x2 
25B7    8B 9E 00 00               mov         bx,word ptr _draw_window_box[bp] 
25BB    85 C0                     test        ax,ax 
25BD    75 10                     jne         L$354 
25BF    85 DB                     test        bx,bx 
25C1    75 0C                     jne         L$354 
25C3    0F B6 86 00 00            movzx       ax,byte ptr __DESKTOP_BGCOLOR[bp] 
25C8    9A 00 00 00 00            call        fill_screen_ 
25CD    EB 4C                     jmp         L$356 
25CF                          L$354:
25CF    0F B6 96 00 00            movzx       dx,byte ptr __DESKTOP_BGCOLOR[bp] 
25D4    52                        push        dx 
25D5    8E D8                     mov         ds,ax 
25D7    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
25DC    8B 47 14                  mov         ax,word ptr 0x14[bx] 
25DF    8B 57 06                  mov         dx,word ptr 0x6[bx] 
25E2    05 04 00                  add         ax,0x0004 
25E5    8B 77 04                  mov         si,word ptr 0x4[bx] 
25E8    01 C1                     add         cx,ax 
25EA    8B 47 12                  mov         ax,word ptr 0x12[bx] 
25ED    4A                        dec         dx 
25EE    40                        inc         ax 
25EF    40                        inc         ax 
25F0    4E                        dec         si 
25F1    89 C3                     mov         bx,ax 
25F3    89 F0                     mov         ax,si 
25F5    9A 00 00 00 00            call        draw_rectangle_ 
25FA    EB 1F                     jmp         L$356 
25FC                          L$355:
25FC    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
2600    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
2605    8C D2                     mov         dx,ss 
2607    05 D5 FF                  add         ax,0xffd5 
260A    31 DB                     xor         bx,bx 
260C    50                        push        ax 
260D    41                        inc         cx 
260E    41                        inc         cx 
260F    FF B6 00 00               push        word ptr __RES_X[bp] 
2613    B8 00 00                  mov         ax,offset _wallpaper_struct 
2616    9A 00 00 00 00            call        draw_xpm_bitmap_ 
261B                          L$356:
261B    E8 00 00                  call        draw_desktop_icons_ 
261E    E8 00 00                  call        draw_menubar_ 
2621    E9 6E EA                  jmp         L$182 
2624                          draw_windows_:
2624    53                        push        bx 
2625    51                        push        cx 
2626    52                        push        dx 
2627    56                        push        si 
2628    57                        push        di 
2629    C8 04 00 00               enter       0x0004,0x00 
262D    E8 00 00                  call        draw_taskbar_ 
2630    31 C0                     xor         ax,ax 
2632    89 46 FE                  mov         word ptr -0x2[bp],ax 
2635    89 46 FC                  mov         word ptr -0x4[bp],ax 
2638                          L$357:
2638    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
263B    36 3B 06 00 00            cmp         ax,word ptr ss:_window_count 
	     2642		; The label referred to here is an undefined location
2640    0F 83 EF AA               jae         0xffffd133 
2644    36 C4 1E 00 00            les         bx,dword ptr ss:_window_visibility_order 
2649    03 5E FC                  add         bx,word ptr -0x4[bp] 
264C    26 8B 37                  mov         si,word ptr es:[bx] 
264F    36 A1 00 00               mov         ax,word ptr ss:_windows 
2653    C1 E6 02                  shl         si,0x02 
2656    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
265B    01 C6                     add         si,ax 
265D    8B 14                     mov         dx,word ptr [si] 
265F    8B 74 02                  mov         si,word ptr 0x2[si] 
2662    36 89 16 00 00            mov         word ptr ss:_running_window,dx 
2667    36 89 36 02 00            mov         word ptr ss:_running_window+0x2,si 
266C    26 8B 17                  mov         dx,word ptr es:[bx] 
266F    89 C7                     mov         di,ax 
2671    C1 E2 02                  shl         dx,0x02 
2674    01 D7                     add         di,dx 
2676    C5 35                     lds         si,dword ptr [di] 
2678    8A 44 16                  mov         al,byte ptr 0x16[si] 
267B    A8 08                     test        al,0x08 
267D    75 24                     jne         L$360 
267F    A8 20                     test        al,0x20 
2681    75 20                     jne         L$360 
2683    36 A1 00 00               mov         ax,word ptr ss:_active_window 
2687    26 3B 07                  cmp         ax,word ptr es:[bx] 
268A    75 0B                     jne         L$358 
268C    BB 01 00                  mov         bx,0x0001 
268F    89 F0                     mov         ax,si 
2691    8C DA                     mov         dx,ds 
2693    31 C9                     xor         cx,cx 
2695    EB 08                     jmp         L$359 
2697                          L$358:
2697    89 F0                     mov         ax,si 
2699    8C DA                     mov         dx,ds 
269B    31 C9                     xor         cx,cx 
269D    31 DB                     xor         bx,bx 
269F                          L$359:
269F    0E                        push        cs 
26A0    E8 00 00                  call        draw_window_ 
26A3                          L$360:
26A3    83 46 FC 02               add         word ptr -0x4[bp],0x0002 
26A7    FF 46 FE                  inc         word ptr -0x2[bp] 
26AA    EB 8C                     jmp         L$357 

Routine Size: 6286 bytes,    Routine Base: main_TEXT + 0E1E

26AC                          draw_screen_:
26AC    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
26B0    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
26B5    74 05                     je          L$361 
26B7    9A 00 00 00 00            call        restore_videomode_ 
26BC                          L$361:
26BC    E8 00 00                  call        draw_desktop_ 
26BF    E8 00 00                  call        draw_windows_ 
26C2    CB                        retf        
26C3                          update_titlebar_:
26C3    53                        push        bx 
26C4    56                        push        si 
26C5    55                        push        bp 
26C6    31 ED                     xor         bp,bp 
26C8    89 C3                     mov         bx,ax 
26CA    8E DA                     mov         ds,dx 
26CC    36 A1 02 00               mov         ax,word ptr ss:_titlebar_drag+0x2 
26D0    8B B6 00 00               mov         si,word ptr _titlebar_drag[bp] 
26D4    85 C0                     test        ax,ax 
26D6    75 04                     jne         L$362 
26D8    85 F6                     test        si,si 
26DA    74 36                     je          L$363 
26DC                          L$362:
26DC    8E C0                     mov         es,ax 
26DE    8B 47 04                  mov         ax,word ptr 0x4[bx] 
26E1    26 89 04                  mov         word ptr es:[si],ax 
26E4    C4 B6 00 00               les         si,dword ptr _titlebar_drag[bp] 
26E8    8B 47 06                  mov         ax,word ptr 0x6[bx] 
26EB    26 89 44 02               mov         word ptr es:0x2[si],ax 
26EF    8B 47 04                  mov         ax,word ptr 0x4[bx] 
26F2    8B B6 00 00               mov         si,word ptr _titlebar_drag[bp] 
26F6    03 47 12                  add         ax,word ptr 0x12[bx] 
26F9    8E 86 02 00               mov         es,word ptr _titlebar_drag+0x2[bp] 
26FD    26 89 44 04               mov         word ptr es:0x4[si],ax 
2701    0F B6 86 00 00            movzx       ax,byte ptr __FONT_HEIGHT[bp] 
2706    03 47 06                  add         ax,word ptr 0x6[bx] 
2709    C5 9E 00 00               lds         bx,dword ptr _titlebar_drag[bp] 
270D    40                        inc         ax 
270E    40                        inc         ax 
270F    89 47 06                  mov         word ptr 0x6[bx],ax 
2712                          L$363:
2712    5D                        pop         bp 
2713    5E                        pop         si 
2714                          L$364:
2714    5B                        pop         bx 
2715    C3                        ret         

Routine Size: 106 bytes,    Routine Base: main_TEXT + 26AC

2716                          set_active_window_:
2716    53                        push        bx 
2717    51                        push        cx 
2718    56                        push        si 
2719    57                        push        di 
271A    C8 04 00 00               enter       0x0004,0x00 
271E    89 C6                     mov         si,ax 
2720    89 56 FE                  mov         word ptr -0x2[bp],dx 
2723    89 C1                     mov         cx,ax 
2725    36 A1 00 00               mov         ax,word ptr ss:_active_window 
2729    89 46 FC                  mov         word ptr -0x4[bp],ax 
272C    85 F6                     test        si,si 
272E    0F 8C 11 01               jl          L$372 
2732    36 8B 16 00 00            mov         dx,word ptr ss:_window_count 
2737    4A                        dec         dx 
2738                          L$365:
2738    89 F0                     mov         ax,si 
273A    36 8B 3E 00 00            mov         di,word ptr ss:_windows 
273F    C1 E0 02                  shl         ax,0x02 
2742    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
2747    01 C7                     add         di,ax 
2749    C5 1D                     lds         bx,dword ptr [di] 
274B    8A 47 16                  mov         al,byte ptr 0x16[bx] 
274E    A8 20                     test        al,0x20 
2750    75 04                     jne         L$366 
2752    A8 08                     test        al,0x08 
2754    74 1D                     je          L$368 
2756                          L$366:
2756    B8 01 00                  mov         ax,0x0001 
2759    29 C6                     sub         si,ax 
275B    89 46 FE                  mov         word ptr -0x2[bp],ax 
275E    83 FE FF                  cmp         si,0xffff 
2761    75 02                     jne         L$367 
2763    89 D6                     mov         si,dx 
2765                          L$367:
2765    39 CE                     cmp         si,cx 
2767    75 CF                     jne         L$365 
2769    36 C7 06 00 00 FF FF      mov         word ptr ss:_active_window,0xffff 
2770    E9 D5 00                  jmp         L$373 
2773                          L$368:
2773    36 8E 1E 02 00            mov         ds,word ptr ss:_window_visibility_order+0x2 
2778    31 DB                     xor         bx,bx 
277A    31 D2                     xor         dx,dx 
277C                          L$369:
277C    36 3B 1E 00 00            cmp         bx,word ptr ss:_window_count 
2781    73 10                     jae         L$370 
2783    36 8B 3E 00 00            mov         di,word ptr ss:_window_visibility_order 
2788    01 D7                     add         di,dx 
278A    3B 35                     cmp         si,word ptr [di] 
278C    74 05                     je          L$370 
278E    42                        inc         dx 
278F    42                        inc         dx 
2790    43                        inc         bx 
2791    EB E9                     jmp         L$369 
2793                          L$370:
2793    36 A1 00 00               mov         ax,word ptr ss:_window_count 
2797    29 D8                     sub         ax,bx 
2799    01 C0                     add         ax,ax 
279B    48                        dec         ax 
279C    48                        dec         ax 
279D    50                        push        ax 
279E    89 D8                     mov         ax,bx 
27A0    01 D8                     add         ax,bx 
27A2    36 8B 16 02 00            mov         dx,word ptr ss:_window_visibility_order+0x2 
27A7    89 C7                     mov         di,ax 
27A9    36 8B 1E 00 00            mov         bx,word ptr ss:_window_visibility_order 
27AE    47                        inc         di 
27AF    47                        inc         di 
27B0    89 D1                     mov         cx,dx 
27B2    01 DF                     add         di,bx 
27B4    01 D8                     add         ax,bx 
27B6    89 FB                     mov         bx,di 
27B8    9A 00 00 00 00            call        memmove_ 
27BD    36 A1 00 00               mov         ax,word ptr ss:_window_count 
27C1    36 8B 1E 00 00            mov         bx,word ptr ss:_window_visibility_order 
27C6    36 89 36 00 00            mov         word ptr ss:_active_window,si 
27CB    01 C0                     add         ax,ax 
27CD    36 8E 1E 02 00            mov         ds,word ptr ss:_window_visibility_order+0x2 
27D2    01 C3                     add         bx,ax 
27D4    89 77 FE                  mov         word ptr -0x2[bx],si 
27D7    89 F3                     mov         bx,si 
27D9    36 A1 00 00               mov         ax,word ptr ss:_windows 
27DD    C1 E3 02                  shl         bx,0x02 
27E0    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
27E5    01 C3                     add         bx,ax 
27E7    8B 07                     mov         ax,word ptr [bx] 
27E9    8B 57 02                  mov         dx,word ptr 0x2[bx] 
27EC    E8 00 00                  call        update_titlebar_ 
27EF    83 7E FC FF               cmp         word ptr -0x4[bp],0xffff 
27F3    74 25                     je          L$371 
27F5    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
27F9    74 1F                     je          L$371 
27FB    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
27FE    36 A1 00 00               mov         ax,word ptr ss:_windows 
2802    C1 E3 02                  shl         bx,0x02 
2805    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
280A    01 C3                     add         bx,ax 
280C    B9 02 00                  mov         cx,0x0002 
280F    8B 07                     mov         ax,word ptr [bx] 
2811    8B 57 02                  mov         dx,word ptr 0x2[bx] 
2814    31 DB                     xor         bx,bx 
2816    0E                        push        cs 
2817    E8 00 00                  call        draw_window_ 
281A                          L$371:
281A    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
281E    74 28                     je          L$373 
2820    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
2825    36 A1 00 00               mov         ax,word ptr ss:_windows 
2829    C1 E3 02                  shl         bx,0x02 
282C    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
2831    01 C3                     add         bx,ax 
2833    31 C9                     xor         cx,cx 
2835    8B 07                     mov         ax,word ptr [bx] 
2837    8B 57 02                  mov         dx,word ptr 0x2[bx] 
283A    BB 01 00                  mov         bx,0x0001 
283D    0E                        push        cs 
283E    E8 00 00                  call        draw_window_ 
2841    EB 05                     jmp         L$373 
2843                          L$372:
2843    36 89 36 00 00            mov         word ptr ss:_active_window,si 
2848                          L$373:
2848    31 C0                     xor         ax,ax 
284A    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
284F    36 A3 00 00               mov         word ptr ss:_running_window,ax 
2853    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
2857    C1 E3 02                  shl         bx,0x02 
285A    36 C5 06 00 00            lds         ax,dword ptr ss:_windows 
285F    01 C3                     add         bx,ax 
2861    C5 37                     lds         si,dword ptr [bx] 
2863    F6 44 16 04               test        byte ptr 0x16[si],0x04 
2867    75 03                     jne         L$374 
2869    E8 00 00                  call        draw_menubar_ 
286C                          L$374:
286C    36 A1 00 00               mov         ax,word ptr ss:_active_window 
2870                          L$375:
2870    C9                        leave       
2871    5F                        pop         di 
2872                          L$376:
2872    5E                        pop         si 
2873    59                        pop         cx 
2874    5B                        pop         bx 
2875    CB                        retf        
2876                          load_mouse_cursor_:
2876    56                        push        si 
2877    57                        push        di 
2878    C8 06 00 00               enter       0x0006,0x00 
287C    89 C7                     mov         di,ax 
287E    89 56 FC                  mov         word ptr -0x4[bp],dx 
2881    89 DE                     mov         si,bx 
2883    89 4E FE                  mov         word ptr -0x2[bp],cx 
2886    B8 0C 00                  mov         ax,0x000c 
2889    9A 00 00 00 00            call        malloc_ 
288E    8E D9                     mov         ds,cx 
2890    BB D3 00                  mov         bx,offset DGROUP:L$1747 
2893    89 04                     mov         word ptr [si],ax 
2895    8C D1                     mov         cx,ss 
2897    89 54 02                  mov         word ptr 0x2[si],dx 
289A    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
289D    89 F8                     mov         ax,di 
289F    9A 00 00 00 00            call        fopen_ 
28A4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
28A7    B9 0C 00                  mov         cx,0x000c 
28AA    BB 01 00                  mov         bx,0x0001 
28AD    89 46 FA                  mov         word ptr -0x6[bp],ax 
28B0    52                        push        dx 
28B1    89 D7                     mov         di,dx 
28B3    50                        push        ax 
28B4    8B 54 02                  mov         dx,word ptr 0x2[si] 
28B7    8B 04                     mov         ax,word ptr [si] 
28B9    9A 00 00 00 00            call        fread_ 
28BE    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
28C1    89 FA                     mov         dx,di 
28C3    9A 00 00 00 00            call        fclose_ 
28C8    E9 D6 F1                  jmp         L$279 
28CB                          detect_mouse_:
28CB    53                        push        bx 
28CC    51                        push        cx 
28CD    52                        push        dx 
28CE    56                        push        si 
28CF    57                        push        di 
28D0    C8 04 00 00               enter       0x0004,0x00 
28D4    B8 33 00                  mov         ax,0x0033 
28D7    9A 00 00 00 00            call        _dos_getvect_ 
28DC    85 D2                     test        dx,dx 
28DE    75 06                     jne         L$377 
28E0    85 C0                     test        ax,ax 
	     28E4		; The label referred to here is an undefined location
28E2    0F 84 4B A8               je          0xffffd131 
28E6                          L$377:
28E6    B8 00 00                  mov         ax,0x0000 
28E9    CD 33                     int         0x33 
28EB    89 86 FC FF               mov         word ptr -0x4[bp],ax 
28EF    89 9E FE FF               mov         word ptr -0x2[bp],bx 
28F3    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
	     28F9		; The label referred to here is an undefined location
28F7    0F 84 36 A8               je          0xffffd131 
28FB    B8 08 00                  mov         ax,0x0008 
28FE    9A 00 00 00 00            call        malloc_ 
2903    36 A3 00 00               mov         word ptr ss:_titlebar_drag,ax 
2907    36 89 16 02 00            mov         word ptr ss:_titlebar_drag+0x2,dx 
290C    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
	     2910		; The label referred to here is an undefined location
290F    E9 21 A8                  jmp         0xffffd133 
2912                          init_mouse_:
2912    53                        push        bx 
2913    51                        push        cx 
2914    56                        push        si 
2915    57                        push        di 
2916    E8 00 00                  call        detect_mouse_ 
2919    31 F6                     xor         si,si 
291B    31 FF                     xor         di,di 
291D    85 C0                     test        ax,ax 
291F    74 4C                     je          L$378 
2921    BA 06 00                  mov         dx,0x0006 
2924    B8 01 00                  mov         ax,0x0001 
2927    9A 00 00 00 00            call        calloc_ 
292C    8C D1                     mov         cx,ss 
292E    89 C3                     mov         bx,ax 
2930    8E DA                     mov         ds,dx 
2932    89 C6                     mov         si,ax 
2934    89 D7                     mov         di,dx 
2936    C7 07 A0 00               mov         word ptr [bx],0x00a0 
293A    B8 34 01                  mov         ax,offset DGROUP:L$1759 
293D    C7 47 02 64 00            mov         word ptr 0x2[bx],0x0064 
2942    8C D2                     mov         dx,ss 
2944    80 4F 04 04               or          byte ptr 0x4[bx],0x04 
2948    BB 00 00                  mov         bx,offset _normal_cursor 
294B    E8 00 00                  call        load_mouse_cursor_ 
294E    BB 00 00                  mov         bx,offset _busy_cursor 
2951    B8 3F 01                  mov         ax,offset DGROUP:L$1760 
2954    8C D1                     mov         cx,ss 
2956    8C D2                     mov         dx,ss 
2958    E8 00 00                  call        load_mouse_cursor_ 
295B    36 A1 00 00               mov         ax,word ptr ss:_normal_cursor 
295F    36 8B 1E 02 00            mov         bx,word ptr ss:_normal_cursor+0x2 
2964    36 A3 00 00               mov         word ptr ss:_mouse_cursor,ax 
2968    36 89 1E 02 00            mov         word ptr ss:_mouse_cursor+0x2,bx 
296D                          L$378:
296D    89 F0                     mov         ax,si 
296F    89 FA                     mov         dx,di 
2971    E9 17 66                  jmp         L$1095 

Routine Size: 606 bytes,    Routine Base: main_TEXT + 2716

2974                          get_mouse_movement_:
2974    53                        push        bx 
2975    51                        push        cx 
2976    56                        push        si 
2977    57                        push        di 
2978    C8 06 00 00               enter       0x0006,0x00 
297C    B8 0B 00                  mov         ax,0x000b 
297F    CD 33                     int         0x33 
2981    89 8E FC FF               mov         word ptr -0x4[bp],cx 
2985    89 96 FA FF               mov         word ptr -0x6[bp],dx 
2989    B8 03 00                  mov         ax,0x0003 
298C    CD 33                     int         0x33 
298E    88 9E FE FF               mov         byte ptr -0x2[bp],bl 
2992    F6 46 FE 01               test        byte ptr -0x2[bp],0x01 
2996    74 0B                     je          L$379 
2998    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
299D    80 4F 04 01               or          byte ptr 0x4[bx],0x01 
29A1    EB 09                     jmp         L$380 
29A3                          L$379:
29A3    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29A8    80 67 04 FE               and         byte ptr 0x4[bx],0xfe 
29AC                          L$380:
29AC    F6 46 FE 02               test        byte ptr -0x2[bp],0x02 
29B0    74 0B                     je          L$381 
29B2    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29B7    80 4F 04 02               or          byte ptr 0x4[bx],0x02 
29BB    EB 09                     jmp         L$382 
29BD                          L$381:
29BD    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29C2    80 67 04 FD               and         byte ptr 0x4[bx],0xfd 
29C6                          L$382:
29C6    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
29CA    75 09                     jne         L$383 
29CC    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
29CF    85 C0                     test        ax,ax 
29D1    0F 84 90 00               je          L$388 
29D5                          L$383:
29D5    0E                        push        cs 
29D6    E8 00 00                  call        hide_mouse_cursor_ 
29D9    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29DE    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
29E1    01 07                     add         word ptr [bx],ax 
29E3    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29E8    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
29EB    01 47 02                  add         word ptr 0x2[bx],ax 
29EE    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
29F3    8B 07                     mov         ax,word ptr [bx] 
29F5    85 C0                     test        ax,ax 
29F7    7D 07                     jge         L$384 
29F9    29 46 FC                  sub         word ptr -0x4[bp],ax 
29FC    C7 07 00 00               mov         word ptr [bx],0x0000 
2A00                          L$384:
2A00    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2A05    8B 47 02                  mov         ax,word ptr 0x2[bx] 
2A08    85 C0                     test        ax,ax 
2A0A    7D 08                     jge         L$385 
2A0C    29 46 FA                  sub         word ptr -0x6[bp],ax 
2A0F    C7 47 02 00 00            mov         word ptr 0x2[bx],0x0000 
2A14                          L$385:
2A14    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2A19    8B 07                     mov         ax,word ptr [bx] 
2A1B    36 3B 06 00 00            cmp         ax,word ptr ss:__RES_X 
2A20    72 0F                     jb          L$386 
2A22    36 2B 06 00 00            sub         ax,word ptr ss:__RES_X 
2A27    29 46 FC                  sub         word ptr -0x4[bp],ax 
2A2A    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
2A2E    48                        dec         ax 
2A2F    89 07                     mov         word ptr [bx],ax 
2A31                          L$386:
2A31    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2A36    8B 47 02                  mov         ax,word ptr 0x2[bx] 
2A39    36 3B 06 00 00            cmp         ax,word ptr ss:__RES_Y 
2A3E    72 10                     jb          L$387 
2A40    36 2B 06 00 00            sub         ax,word ptr ss:__RES_Y 
2A45    29 46 FA                  sub         word ptr -0x6[bp],ax 
2A48    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
2A4C    48                        dec         ax 
2A4D    89 47 02                  mov         word ptr 0x2[bx],ax 
2A50                          L$387:
2A50    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
2A53    36 A3 9F 01               mov         word ptr ss:L$1926,ax 
2A57    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
2A5A    36 A3 A1 01               mov         word ptr ss:L$1927,ax 
2A5E    8C D3                     mov         bx,ss 
2A60    B8 9F 01                  mov         ax,offset DGROUP:L$1926 
2A63    EB 02                     jmp         L$389 
2A65                          L$388:
2A65    31 DB                     xor         bx,bx 
2A67                          L$389:
2A67    89 DA                     mov         dx,bx 
2A69    E9 04 FE                  jmp         L$375 
2A6C                          draw_mouse_cursor_:
2A6C    53                        push        bx 
2A6D    51                        push        cx 
2A6E    52                        push        dx 
2A6F    56                        push        si 
2A70    57                        push        di 
2A71    C8 02 00 00               enter       0x0002,0x00 
2A75    36 8B 16 02 00            mov         dx,word ptr ss:_mouse+0x2 
2A7A    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
2A7F    85 D2                     test        dx,dx 
2A81    75 06                     jne         L$390 
2A83    85 DB                     test        bx,bx 
2A85    0F 84 94 00               je          L$396 
2A89                          L$390:
2A89    8E DA                     mov         ds,dx 
2A8B    F6 47 04 04               test        byte ptr 0x4[bx],0x04 
2A8F    0F 84 8A 00               je          L$396 
2A93    C6 46 FE 0C               mov         byte ptr -0x2[bp],0x0c 
2A97                          L$391:
2A97    FE 4E FE                  dec         byte ptr -0x2[bp] 
2A9A    80 7E FE FF               cmp         byte ptr -0x2[bp],0xff 
2A9E    74 74                     je          L$395 
2AA0    B5 08                     mov         ch,0x08 
2AA2    0F B6 76 FE               movzx       si,byte ptr -0x2[bp] 
2AA6                          L$392:
2AA6    FE CD                     dec         ch 
2AA8    80 FD FF                  cmp         ch,0xff 
2AAB    74 EA                     je          L$391 
2AAD    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse_cursor 
2AB2    01 F3                     add         bx,si 
2AB4    0F B6 C5                  movzx       ax,ch 
2AB7    0F B6 17                  movzx       dx,byte ptr [bx] 
2ABA    88 C1                     mov         cl,al 
2ABC    89 D0                     mov         ax,dx 
2ABE    D3 E0                     shl         ax,cl 
2AC0    A8 80                     test        al,0x80 
2AC2    74 E2                     je          L$392 
2AC4    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2AC9    8B 57 02                  mov         dx,word ptr 0x2[bx] 
2ACC    8B 1F                     mov         bx,word ptr [bx] 
2ACE    0F B6 FD                  movzx       di,ch 
2AD1    89 D8                     mov         ax,bx 
2AD3    01 F8                     add         ax,di 
2AD5    6B DF 0C                  imul        bx,di,0x000c 
2AD8    01 F2                     add         dx,si 
2ADA    01 F3                     add         bx,si 
2ADC    9A 00 00 00 00            call        get_pixel_ 
2AE1    36 88 87 00 00            mov         byte ptr ss:_mouse_background[bx],al 
2AE6    84 C0                     test        al,al 
2AE8    75 18                     jne         L$394 
2AEA    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2AEF    8B 57 02                  mov         dx,word ptr 0x2[bx] 
2AF2    8B 07                     mov         ax,word ptr [bx] 
2AF4    BB 08 00                  mov         bx,0x0008 
2AF7    01 F2                     add         dx,si 
2AF9    01 F8                     add         ax,di 
2AFB                          L$393:
2AFB    9A 00 00 00 00            call        put_pixel_raw_ 
2B00    EB A4                     jmp         L$392 
2B02                          L$394:
2B02    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2B07    8B 57 02                  mov         dx,word ptr 0x2[bx] 
2B0A    8B 07                     mov         ax,word ptr [bx] 
2B0C    01 F2                     add         dx,si 
2B0E    01 F8                     add         ax,di 
2B10    31 DB                     xor         bx,bx 
2B12    EB E7                     jmp         L$393 
2B14                          L$395:
2B14    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2B19    80 67 04 FB               and         byte ptr 0x4[bx],0xfb 
2B1D                          L$396:
2B1D    E8 00 00                  call        call_drv_screenupdate_ 
	     2B21		; The label referred to here is an undefined location
2B20    E9 10 A6                  jmp         0xffffd133 

Routine Size: 431 bytes,    Routine Base: main_TEXT + 2974

2B23                          hide_mouse_cursor_:
2B23    53                        push        bx 
2B24    51                        push        cx 
2B25    52                        push        dx 
2B26    56                        push        si 
2B27    57                        push        di 
2B28    C8 02 00 00               enter       0x0002,0x00 
2B2C    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
2B30    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
2B35    85 C0                     test        ax,ax 
2B37    75 04                     jne         L$397 
2B39    85 DB                     test        bx,bx 
2B3B    74 63                     je          L$400 
2B3D                          L$397:
2B3D    8E D8                     mov         ds,ax 
2B3F    F6 47 04 04               test        byte ptr 0x4[bx],0x04 
2B43    75 5B                     jne         L$400 
2B45    C6 46 FE 0C               mov         byte ptr -0x2[bp],0x0c 
2B49    80 4F 04 04               or          byte ptr 0x4[bx],0x04 
2B4D                          L$398:
2B4D    FE 4E FE                  dec         byte ptr -0x2[bp] 
2B50    80 7E FE FF               cmp         byte ptr -0x2[bp],0xff 
2B54    74 4A                     je          L$400 
2B56    B5 08                     mov         ch,0x08 
2B58                          L$399:
2B58    FE CD                     dec         ch 
2B5A    80 FD FF                  cmp         ch,0xff 
2B5D    74 EE                     je          L$398 
2B5F    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
2B63    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse_cursor 
2B68    01 C3                     add         bx,ax 
2B6A    0F B6 D5                  movzx       dx,ch 
2B6D    0F B6 1F                  movzx       bx,byte ptr [bx] 
2B70    88 D1                     mov         cl,dl 
2B72    89 DA                     mov         dx,bx 
2B74    D3 E2                     shl         dx,cl 
2B76    F6 C2 80                  test        dl,0x80 
2B79    74 DD                     je          L$399 
2B7B    0F B6 F5                  movzx       si,ch 
2B7E    6B DE 0C                  imul        bx,si,0x000c 
2B81    01 C3                     add         bx,ax 
2B83    36 0F B6 BF 00 00         movzx       di,byte ptr ss:_mouse_background[bx] 
2B89    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2B8E    8B 57 02                  mov         dx,word ptr 0x2[bx] 
2B91    01 C2                     add         dx,ax 
2B93    8B 07                     mov         ax,word ptr [bx] 
2B95    89 FB                     mov         bx,di 
2B97    01 F0                     add         ax,si 
2B99    9A 00 00 00 00            call        put_pixel_raw_ 
2B9E    EB B8                     jmp         L$399 
2BA0                          L$400:
2BA0    C9                        leave       
2BA1                          L$401:
2BA1    5F                        pop         di 
2BA2                          L$402:
2BA2    5E                        pop         si 
2BA3    5A                        pop         dx 
2BA4    59                        pop         cx 
2BA5    5B                        pop         bx 
2BA6    CB                        retf        

Routine Size: 132 bytes,    Routine Base: main_TEXT + 2B23

2BA7                          redraw_mouse_cursor_:
2BA7    52                        push        dx 
2BA8    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
2BAC    36 8B 16 00 00            mov         dx,word ptr ss:_mouse 
2BB1    85 C0                     test        ax,ax 
2BB3    75 04                     jne         L$403 
2BB5    85 D2                     test        dx,dx 
2BB7    74 07                     je          L$404 
2BB9                          L$403:
2BB9    0E                        push        cs 
2BBA    E8 00 00                  call        get_mouse_movement_ 
2BBD    E8 00 00                  call        draw_mouse_cursor_ 
2BC0                          L$404:
2BC0    5A                        pop         dx 
2BC1    CB                        retf        
2BC2                          wait_leftbutton_release_:
2BC2    53                        push        bx 
2BC3                          L$405:
2BC3    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2BC8    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
2BCC    0F 84 44 FB               je          L$364 
2BD0    0E                        push        cs 
2BD1    E8 00 00                  call        redraw_mouse_cursor_ 
2BD4    F4                        hlt         
2BD5    EB EC                     jmp         L$405 
2BD7                          dwwindow_initborder_:
2BD7    53                        push        bx 
2BD8    51                        push        cx 
2BD9    56                        push        si 
2BDA    57                        push        di 
2BDB    55                        push        bp 
2BDC    31 ED                     xor         bp,bp 
2BDE    89 C3                     mov         bx,ax 
2BE0    89 D7                     mov         di,dx 
2BE2                          L$406:
2BE2    E8 00 00                  call        call_drv_screenupdate_ 
2BE5    C5 B6 00 00               lds         si,dword ptr _mouse[bp] 
2BE9    8B 44 04                  mov         ax,word ptr 0x4[si] 
2BEC    25 01 00                  and         ax,0x0001 
2BEF    85 C0                     test        ax,ax 
2BF1    0F 84 6B ED               je          L$267 
2BF5    0E                        push        cs 
2BF6    E8 00 00                  call        get_mouse_movement_ 
2BF9    85 D2                     test        dx,dx 
2BFB    75 04                     jne         L$407 
2BFD    85 C0                     test        ax,ax 
2BFF    74 E1                     je          L$406 
2C01                          L$407:
2C01    8E DF                     mov         ds,di 
2C03    80 4F 16 20               or          byte ptr 0x16[bx],0x20 
2C07    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
2C0B    89 9E 00 00               mov         word ptr _draw_window_box[bp],bx 
2C0F    89 BE 02 00               mov         word ptr _draw_window_box+0x2[bp],di 
2C13    3A 86 00 00               cmp         al,byte ptr _video[bp] 
2C17    74 05                     je          L$408 
2C19    9A 00 00 00 00            call        restore_videomode_ 
2C1E                          L$408:
2C1E    E8 00 00                  call        draw_desktop_ 
2C21    E8 00 00                  call        draw_windows_ 
2C24    31 C0                     xor         ax,ax 
2C26    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
2C2A    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
2C2E    50                        push        ax 
2C2F    8E DF                     mov         ds,di 
2C31    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
2C36    8B 47 14                  mov         ax,word ptr 0x14[bx] 
2C39    8B 77 12                  mov         si,word ptr 0x12[bx] 
2C3C    40                        inc         ax 
2C3D    40                        inc         ax 
2C3E    8B 57 06                  mov         dx,word ptr 0x6[bx] 
2C41    01 C1                     add         cx,ax 
2C43    8B 47 04                  mov         ax,word ptr 0x4[bx] 
2C46    89 F3                     mov         bx,si 
2C48    9A 00 00 00 00            call        draw_move_borders_ 
2C4D    E9 10 ED                  jmp         L$267 
2C50                          dwwindow_endborder_:
2C50    53                        push        bx 
2C51    51                        push        cx 
2C52    56                        push        si 
2C53    57                        push        di 
2C54    89 C6                     mov         si,ax 
2C56    89 D7                     mov         di,dx 
2C58    6A 02                     push        0x0002 
2C5A    8E DA                     mov         ds,dx 
2C5C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
2C62    8B 4C 14                  mov         cx,word ptr 0x14[si] 
2C65    8B 5C 12                  mov         bx,word ptr 0x12[si] 
2C68    41                        inc         cx 
2C69    41                        inc         cx 
2C6A    8B 54 06                  mov         dx,word ptr 0x6[si] 
2C6D    01 C1                     add         cx,ax 
2C6F    8B 44 04                  mov         ax,word ptr 0x4[si] 
2C72    9A 00 00 00 00            call        draw_move_borders_ 
2C77    8E DF                     mov         ds,di 
2C79    80 64 16 DF               and         byte ptr 0x16[si],0xdf 
2C7D    E9 0B 63                  jmp         L$1095 
2C80                          drag_window_:
2C80    53                        push        bx 
2C81    51                        push        cx 
2C82    56                        push        si 
2C83    57                        push        di 
2C84    C8 02 00 00               enter       0x0002,0x00 
2C88    89 C6                     mov         si,ax 
2C8A    89 56 FE                  mov         word ptr -0x2[bp],dx 
2C8D    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
2C92    89 F0                     mov         ax,si 
2C94    E8 00 00                  call        dwwindow_initborder_ 
2C97    31 FF                     xor         di,di 
2C99                          L$409:
2C99    E8 00 00                  call        call_drv_screenupdate_ 
2C9C    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2CA1    8B 47 04                  mov         ax,word ptr 0x4[bx] 
2CA4    25 01 00                  and         ax,0x0001 
2CA7    85 C0                     test        ax,ax 
2CA9    74 78                     je          L$411 
2CAB    0E                        push        cs 
2CAC    E8 00 00                  call        get_mouse_movement_ 
2CAF    89 C3                     mov         bx,ax 
2CB1    85 D2                     test        dx,dx 
2CB3    75 04                     jne         L$410 
2CB5    85 C0                     test        ax,ax 
2CB7    74 E0                     je          L$409 
2CB9                          L$410:
2CB9    8E DA                     mov         ds,dx 
2CBB    8B 07                     mov         ax,word ptr [bx] 
2CBD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2CC0    01 44 04                  add         word ptr 0x4[si],ax 
2CC3    8E DA                     mov         ds,dx 
2CC5    8B 47 02                  mov         ax,word ptr 0x2[bx] 
2CC8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2CCB    01 44 06                  add         word ptr 0x6[si],ax 
2CCE    36 C5 3E 00 00            lds         di,dword ptr ss:_titlebar_drag 
2CD3    8E C2                     mov         es,dx 
2CD5    26 8B 07                  mov         ax,word ptr es:[bx] 
2CD8    01 05                     add         word ptr [di],ax 
2CDA    36 C5 3E 00 00            lds         di,dword ptr ss:_titlebar_drag 
2CDF    26 8B 47 02               mov         ax,word ptr es:0x2[bx] 
2CE3    01 45 02                  add         word ptr 0x2[di],ax 
2CE6    36 C5 3E 00 00            lds         di,dword ptr ss:_titlebar_drag 
2CEB    26 8B 07                  mov         ax,word ptr es:[bx] 
2CEE    01 45 04                  add         word ptr 0x4[di],ax 
2CF1    36 C5 3E 00 00            lds         di,dword ptr ss:_titlebar_drag 
2CF6    26 8B 47 02               mov         ax,word ptr es:0x2[bx] 
2CFA    6A 01                     push        0x0001 
2CFC    01 45 06                  add         word ptr 0x6[di],ax 
2CFF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2D02    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
2D08    8B 44 14                  mov         ax,word ptr 0x14[si] 
2D0B    8B 5C 12                  mov         bx,word ptr 0x12[si] 
2D0E    40                        inc         ax 
2D0F    40                        inc         ax 
2D10    8B 54 06                  mov         dx,word ptr 0x6[si] 
2D13    01 C1                     add         cx,ax 
2D15    8B 44 04                  mov         ax,word ptr 0x4[si] 
2D18    BF FF FF                  mov         di,0xffff 
2D1B    9A 00 00 00 00            call        draw_move_borders_ 
2D20    E9 76 FF                  jmp         L$409 
2D23                          L$411:
2D23    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
2D26    89 F0                     mov         ax,si 
2D28    E8 00 00                  call        dwwindow_endborder_ 
2D2B    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
2D30                          L$412:
2D30    89 F8                     mov         ax,di 
2D32    E9 55 62                  jmp         L$1094 
2D35                          mouse_resize_window_:
2D35    53                        push        bx 
2D36    51                        push        cx 
2D37    56                        push        si 
2D38    57                        push        di 
2D39    C8 02 00 00               enter       0x0002,0x00 
2D3D    89 C6                     mov         si,ax 
2D3F    89 56 FE                  mov         word ptr -0x2[bp],dx 
2D42    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
2D47    89 F0                     mov         ax,si 
2D49    E8 00 00                  call        dwwindow_initborder_ 
2D4C                          L$413:
2D4C    E8 00 00                  call        call_drv_screenupdate_ 
2D4F    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2D54    8B 47 04                  mov         ax,word ptr 0x4[bx] 
2D57    25 01 00                  and         ax,0x0001 
2D5A    85 C0                     test        ax,ax 
2D5C    0F 84 7A 00               je          L$418 
2D60    0E                        push        cs 
2D61    E8 00 00                  call        get_mouse_movement_ 
2D64    89 C3                     mov         bx,ax 
2D66    89 C7                     mov         di,ax 
2D68    8E C2                     mov         es,dx 
2D6A    85 D2                     test        dx,dx 
2D6C    75 04                     jne         L$414 
2D6E    85 C0                     test        ax,ax 
2D70    74 DA                     je          L$413 
2D72                          L$414:
2D72    8E DA                     mov         ds,dx 
2D74    8B 07                     mov         ax,word ptr [bx] 
2D76    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2D79    01 44 12                  add         word ptr 0x12[si],ax 
2D7C    83 7C 12 28               cmp         word ptr 0x12[si],0x0028 
2D80    7D 05                     jge         L$415 
2D82    C7 44 12 28 00            mov         word ptr 0x12[si],0x0028 
2D87                          L$415:
2D87    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
2D8B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2D8E    01 44 14                  add         word ptr 0x14[si],ax 
2D91    83 7C 14 28               cmp         word ptr 0x14[si],0x0028 
2D95    7D 05                     jge         L$416 
2D97    C7 44 14 28 00            mov         word ptr 0x14[si],0x0028 
2D9C                          L$416:
2D9C    36 C5 1E 00 00            lds         bx,dword ptr ss:_titlebar_drag 
2DA1    26 8B 05                  mov         ax,word ptr es:[di] 
2DA4    01 47 04                  add         word ptr 0x4[bx],ax 
2DA7    83 7F 04 28               cmp         word ptr 0x4[bx],0x0028 
2DAB    7D 0A                     jge         L$417 
2DAD    36 C5 1E 00 00            lds         bx,dword ptr ss:_titlebar_drag 
2DB2    C7 47 04 28 00            mov         word ptr 0x4[bx],0x0028 
2DB7                          L$417:
2DB7    6A 03                     push        0x0003 
2DB9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
2DBC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
2DC2    8B 4C 14                  mov         cx,word ptr 0x14[si] 
2DC5    8B 5C 12                  mov         bx,word ptr 0x12[si] 
2DC8    41                        inc         cx 
2DC9    41                        inc         cx 
2DCA    8B 54 06                  mov         dx,word ptr 0x6[si] 
2DCD    01 C1                     add         cx,ax 
2DCF    8B 44 04                  mov         ax,word ptr 0x4[si] 
2DD2    9A 00 00 00 00            call        draw_move_borders_ 
2DD7    E9 72 FF                  jmp         L$413 
2DDA                          L$418:
2DDA    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
2DDD    89 F0                     mov         ax,si 
2DDF    E8 00 00                  call        dwwindow_endborder_ 
2DE2    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
2DE7    E9 A0 61                  jmp         L$1094 
2DEA                          mouse_drag_icon_:
2DEA    53                        push        bx 
2DEB    51                        push        cx 
2DEC    52                        push        dx 
2DED    89 C1                     mov         cx,ax 
2DEF    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
2DF4                          L$419:
2DF4    E8 00 00                  call        call_drv_screenupdate_ 
2DF7    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2DFC    8B 47 04                  mov         ax,word ptr 0x4[bx] 
2DFF    25 01 00                  and         ax,0x0001 
2E02    85 C0                     test        ax,ax 
2E04    74 1E                     je          L$421 
2E06    0E                        push        cs 
2E07    E8 00 00                  call        get_mouse_movement_ 
2E0A    89 C3                     mov         bx,ax 
2E0C    85 D2                     test        dx,dx 
2E0E    75 04                     jne         L$420 
2E10    85 C0                     test        ax,ax 
2E12    74 E0                     je          L$419 
2E14                          L$420:
2E14    8E DA                     mov         ds,dx 
2E16    8B 47 02                  mov         ax,word ptr 0x2[bx] 
2E19    8B 17                     mov         dx,word ptr [bx] 
2E1B    89 C3                     mov         bx,ax 
2E1D    89 C8                     mov         ax,cx 
2E1F    E8 00 00                  call        move_icon_ 
2E22    EB D0                     jmp         L$419 
2E24                          L$421:
2E24    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
2E29    E9 76 15                  jmp         L$563 
2E2C                          mleft_handler_desktop_:
2E2C    53                        push        bx 
2E2D    51                        push        cx 
2E2E    52                        push        dx 
2E2F    56                        push        si 
2E30    57                        push        di 
2E31    C8 0C 00 00               enter       0x000c,0x00 
2E35    36 8B 0E 00 00            mov         cx,word ptr ss:_desktop_icon_count 
2E3A    31 C0                     xor         ax,ax 
2E3C    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
2E41    89 46 FC                  mov         word ptr -0x4[bp],ax 
2E44    89 46 FE                  mov         word ptr -0x2[bp],ax 
2E47    36 A1 00 00               mov         ax,word ptr ss:_icon_selected 
2E4B    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
2E50    89 46 FA                  mov         word ptr -0x6[bp],ax 
2E53    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
2E59    40                        inc         ax 
2E5A    40                        inc         ax 
2E5B    31 FF                     xor         di,di 
2E5D    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
2E60    7E 10                     jle         L$422 
2E62    8B 07                     mov         ax,word ptr [bx] 
2E64    BB 32 00                  mov         bx,0x0032 
2E67    99                        cwd         
2E68    F7 FB                     idiv        bx 
2E6A    40                        inc         ax 
2E6B    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
	     2E70		; The label referred to here is an undefined location
2E6F    E9 BF A2                  jmp         0xffffd131 
2E72                          L$422:
2E72    6B C1 0E                  imul        ax,cx,0x000e 
2E75    89 46 F8                  mov         word ptr -0x8[bp],ax 
2E78                          L$423:
2E78    49                        dec         cx 
2E79    83 6E F8 0E               sub         word ptr -0x8[bp],0x000e 
2E7D    83 F9 FF                  cmp         cx,0xffff 
2E80    0F 84 7C 00               je          L$428 
2E84    36 C4 36 00 00            les         si,dword ptr ss:_desktop_icons 
2E89    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2E8E    03 76 F8                  add         si,word ptr -0x8[bp] 
2E91    8B 07                     mov         ax,word ptr [bx] 
2E93    26 3B 44 08               cmp         ax,word ptr es:0x8[si] 
2E97    7E DF                     jle         L$423 
2E99    26 8B 44 08               mov         ax,word ptr es:0x8[si] 
2E9D    05 28 00                  add         ax,0x0028 
2EA0    3B 07                     cmp         ax,word ptr [bx] 
2EA2    7E D4                     jle         L$423 
2EA4    8B 47 02                  mov         ax,word ptr 0x2[bx] 
2EA7    26 3B 44 0A               cmp         ax,word ptr es:0xa[si] 
2EAB    7E CB                     jle         L$423 
2EAD    26 8B 44 0A               mov         ax,word ptr es:0xa[si] 
2EB1    05 23 00                  add         ax,0x0023 
2EB4    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
2EB7    7E BF                     jle         L$423 
2EB9                          L$424:
2EB9    0E                        push        cs 
2EBA    E8 00 00                  call        get_mouse_movement_ 
2EBD    89 C7                     mov         di,ax 
2EBF    89 56 FE                  mov         word ptr -0x2[bp],dx 
2EC2    85 D2                     test        dx,dx 
2EC4    75 0F                     jne         L$425 
2EC6    85 C0                     test        ax,ax 
2EC8    75 0B                     jne         L$425 
2ECA    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2ECF    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
2ED3    75 E4                     jne         L$424 
2ED5                          L$425:
2ED5    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
2ED9    75 25                     jne         L$428 
2EDB    85 FF                     test        di,di 
2EDD    75 21                     jne         L$428 
2EDF    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
2EE2    39 C1                     cmp         cx,ax 
2EE4    75 06                     jne         L$427 
2EE6                          L$426:
2EE6    B8 46 00                  mov         ax,0x0046 
	     2EEA		; The label referred to here is an undefined location
2EE9    E9 47 A2                  jmp         0xffffd133 
2EEC                          L$427:
2EEC    31 D2                     xor         dx,dx 
2EEE    36 89 0E 00 00            mov         word ptr ss:_icon_selected,cx 
2EF3    E8 00 00                  call        draw_desktop_icon_ 
2EF6    89 C8                     mov         ax,cx 
2EF8    31 D2                     xor         dx,dx 
2EFA    E8 00 00                  call        draw_desktop_icon_ 
2EFD    E9 78 FF                  jmp         L$423 
2F00                          L$428:
2F00    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
2F04    0F 85 31 01               jne         L$437 
2F08    85 FF                     test        di,di 
2F0A    0F 85 2B 01               jne         L$437 
2F0E    36 8B 0E 00 00            mov         cx,word ptr ss:_shortcut_count 
2F13    36 8E 06 02 00            mov         es,word ptr ss:_desktop_shortcuts+0x2 
2F18    36 C5 36 00 00            lds         si,dword ptr ss:_mouse 
2F1D    69 C1 D2 00               imul        ax,cx,0x00d2 
2F21                          L$429:
2F21    49                        dec         cx 
2F22    2D D2 00                  sub         ax,0x00d2 
2F25    83 F9 FF                  cmp         cx,0xffff 
2F28    0F 84 80 00               je          L$432 
2F2C    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
2F31    8B 14                     mov         dx,word ptr [si] 
2F33    01 C3                     add         bx,ax 
2F35    26 3B 97 C4 00            cmp         dx,word ptr es:0xc4[bx] 
2F3A    7E E5                     jle         L$429 
2F3C    26 8B 97 C4 00            mov         dx,word ptr es:0xc4[bx] 
2F41    83 C2 28                  add         dx,0x0028 
2F44    89 56 F4                  mov         word ptr -0xc[bp],dx 
2F47    8B 14                     mov         dx,word ptr [si] 
2F49    3B 56 F4                  cmp         dx,word ptr -0xc[bp] 
2F4C    7D D3                     jge         L$429 
2F4E    8B 54 02                  mov         dx,word ptr 0x2[si] 
2F51    26 3B 97 C6 00            cmp         dx,word ptr es:0xc6[bx] 
2F56    7E C9                     jle         L$429 
2F58    26 8B 9F C6 00            mov         bx,word ptr es:0xc6[bx] 
2F5D    83 C3 23                  add         bx,0x0023 
2F60    39 D3                     cmp         bx,dx 
2F62    7E BD                     jle         L$429 
2F64                          L$430:
2F64    0E                        push        cs 
2F65    E8 00 00                  call        get_mouse_movement_ 
2F68    89 C7                     mov         di,ax 
2F6A    89 56 FE                  mov         word ptr -0x2[bp],dx 
2F6D    85 D2                     test        dx,dx 
2F6F    75 0F                     jne         L$431 
2F71    85 C0                     test        ax,ax 
2F73    75 0B                     jne         L$431 
2F75    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2F7A    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
2F7E    75 E4                     jne         L$430 
2F80                          L$431:
2F80    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
2F84    75 26                     jne         L$432 
2F86    85 FF                     test        di,di 
2F88    75 22                     jne         L$432 
2F8A    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
2F8D    36 03 0E 00 00            add         cx,word ptr ss:_desktop_icon_count 
2F92    39 C1                     cmp         cx,ax 
2F94    0F 84 4E FF               je          L$426 
2F98    31 D2                     xor         dx,dx 
2F9A    36 89 0E 00 00            mov         word ptr ss:_icon_selected,cx 
2F9F    E8 00 00                  call        draw_desktop_icon_ 
2FA2    89 C8                     mov         ax,cx 
2FA4    31 D2                     xor         dx,dx 
2FA6    E8 00 00                  call        draw_desktop_icon_ 
	     2FAA		; The label referred to here is an undefined location
2FA9    E9 85 A1                  jmp         0xffffd131 
2FAC                          L$432:
2FAC    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
2FB0    0F 85 74 00               jne         L$436 
2FB4    85 FF                     test        di,di 
2FB6    75 70                     jne         L$436 
2FB8    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
2FBB    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
2FC0    31 C9                     xor         cx,cx 
2FC2    C1 E0 02                  shl         ax,0x02 
2FC5    83 EA 28                  sub         dx,0x0028 
2FC8    89 46 F6                  mov         word ptr -0xa[bp],ax 
2FCB    B8 05 00                  mov         ax,0x0005 
2FCE                          L$433:
2FCE    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
2FD1    36 3B 1E 00 00            cmp         bx,word ptr ss:_window_count 
	     2FD8		; The label referred to here is an undefined location
2FD6    0F 83 57 A1               jae         0xffffd131 
2FDA    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
2FDF    03 5E F6                  add         bx,word ptr -0xa[bp] 
2FE2    C5 37                     lds         si,dword ptr [bx] 
2FE4    F6 44 16 08               test        byte ptr 0x16[si],0x08 
2FE8    74 35                     je          L$435 
2FEA    6B F1 46                  imul        si,cx,0x0046 
2FED    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
2FF2    3B 07                     cmp         ax,word ptr [bx] 
2FF4    77 25                     ja          L$434 
2FF6    83 C6 49                  add         si,0x0049 
2FF9    3B 37                     cmp         si,word ptr [bx] 
2FFB    76 1E                     jbe         L$434 
2FFD    3B 57 02                  cmp         dx,word ptr 0x2[bx] 
3000    73 19                     jae         L$434 
3002    6A 01                     push        0x0001 
3004    B9 27 00                  mov         cx,0x0027 
3007    BB 44 00                  mov         bx,0x0044 
300A    9A 00 00 00 00            call        draw_borders_ 
300F    E8 00 00                  call        wait_leftbutton_release_ 
3012    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
3015    E8 00 00                  call        unminimize_window_ 
	     3019		; The label referred to here is an undefined location
3018    E9 16 A1                  jmp         0xffffd131 
301B                          L$434:
301B    05 46 00                  add         ax,0x0046 
301E    41                        inc         cx 
301F                          L$435:
301F    83 46 F6 04               add         word ptr -0xa[bp],0x0004 
3023    FF 46 FC                  inc         word ptr -0x4[bp] 
3026    EB A6                     jmp         L$433 
3028                          L$436:
3028    36 A1 00 00               mov         ax,word ptr ss:_desktop_icon_count 
302C    01 C8                     add         ax,cx 
302E    E8 00 00                  call        mouse_drag_icon_ 
3031    89 C8                     mov         ax,cx 
3033    E8 00 00                  call        save_desktop_shortcut_ 
	     3037		; The label referred to here is an undefined location
3036    E9 F8 A0                  jmp         0xffffd131 
3039                          L$437:
3039    89 C8                     mov         ax,cx 
303B    E8 00 00                  call        mouse_drag_icon_ 
	     303F		; The label referred to here is an undefined location
303E    E9 F0 A0                  jmp         0xffffd131 
3041                          mouse_scrollbar_handler_:
3041    51                        push        cx 
3042    56                        push        si 
3043    57                        push        di 
3044    C8 14 00 00               enter       0x0014,0x00 
3048    89 C7                     mov         di,ax 
304A    89 56 FC                  mov         word ptr -0x4[bp],dx 
304D    89 5E F6                  mov         word ptr -0xa[bp],bx 
3050    8E DA                     mov         ds,dx 
3052    C1 E3 02                  shl         bx,0x02 
3055    C5 45 18                  lds         ax,dword ptr 0x18[di] 
3058    01 C3                     add         bx,ax 
305A    8B 47 02                  mov         ax,word ptr 0x2[bx] 
305D    89 46 FE                  mov         word ptr -0x2[bp],ax 
3060    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3066    8B 37                     mov         si,word ptr [bx] 
3068    40                        inc         ax 
3069    40                        inc         ax 
306A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
306D    89 46 FA                  mov         word ptr -0x6[bp],ax 
3070    F6 44 02 03               test        byte ptr 0x2[si],0x03 
3074    0F 85 9C 02               jne         L$458 
3078    8E DA                     mov         ds,dx 
307A    8B 55 06                  mov         dx,word ptr 0x6[di] 
307D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3080    01 C2                     add         dx,ax 
3082    03 54 06                  add         dx,word ptr 0x6[si] 
3085    89 D0                     mov         ax,dx 
3087    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
308C    05 0D 00                  add         ax,0x000d 
308F    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
3094    89 46 F4                  mov         word ptr -0xc[bp],ax 
3097    8B 47 02                  mov         ax,word ptr 0x2[bx] 
309A    89 5E F0                  mov         word ptr -0x10[bp],bx 
309D    3B 46 F4                  cmp         ax,word ptr -0xc[bp] 
30A0    73 41                     jae         L$439 
30A2    6A 01                     push        0x0001 
30A4    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
30A7    B9 0C 00                  mov         cx,0x000c 
30AA    8B 45 04                  mov         ax,word ptr 0x4[di] 
30AD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
30B0    89 CB                     mov         bx,cx 
30B2    03 44 04                  add         ax,word ptr 0x4[si] 
30B5    9A 00 00 00 00            call        draw_borders_ 
30BA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
30BD    83 7C 18 00               cmp         word ptr 0x18[si],0x0000 
30C1    74 03                     je          L$438 
30C3    FF 4C 18                  dec         word ptr 0x18[si] 
30C6                          L$438:
30C6    E8 00 00                  call        wait_leftbutton_release_ 
30C9    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
30CC    8B 55 06                  mov         dx,word ptr 0x6[di] 
30CF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
30D2    03 56 FA                  add         dx,word ptr -0x6[bp] 
30D5    6A 00                     push        0x0000 
30D7    03 54 06                  add         dx,word ptr 0x6[si] 
30DA    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
30DD    B9 0C 00                  mov         cx,0x000c 
30E0    E9 F3 01                  jmp         L$454 
30E3                          L$439:
30E3    8E 46 FE                  mov         es,word ptr -0x2[bp] 
30E6    26 83 7C 20 00            cmp         word ptr es:0x20[si],0x0000 
30EB    74 65                     je          L$442 
30ED    26 8B 5C 08               mov         bx,word ptr es:0x8[si] 
30F1    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
30F5    31 D2                     xor         dx,dx 
30F7    31 C9                     xor         cx,cx 
30F9    83 EB 0C                  sub         bx,0x000c 
30FC    9A 00 00 00 00            call        __U4M 
3101    26 8B 5C 20               mov         bx,word ptr es:0x20[si] 
3105    31 C9                     xor         cx,cx 
3107    9A 00 00 00 00            call        __U4D 
310C    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
310F    31 C9                     xor         cx,cx 
3111    01 C3                     add         bx,ax 
3113    89 5E EE                  mov         word ptr -0x12[bp],bx 
3116    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
3119    8B 47 02                  mov         ax,word ptr 0x2[bx] 
311C    11 D1                     adc         cx,dx 
311E    99                        cwd         
311F    39 CA                     cmp         dx,cx 
3121    72 07                     jb          L$440 
3123    75 2D                     jne         L$442 
3125    3B 46 EE                  cmp         ax,word ptr -0x12[bp] 
3128    73 28                     jae         L$442 
312A                          L$440:
312A    E8 00 00                  call        wait_leftbutton_release_ 
312D    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
3133    31 D2                     xor         dx,dx 
3135    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3138    43                        inc         bx 
3139    43                        inc         bx 
313A    8B 44 08                  mov         ax,word ptr 0x8[si] 
313D    F7 F3                     div         bx 
313F    3B 44 18                  cmp         ax,word ptr 0x18[si] 
3142    77 06                     ja          L$441 
3144    29 44 18                  sub         word ptr 0x18[si],ax 
3147    E9 9C 01                  jmp         L$455 
314A                          L$441:
314A    C7 44 18 00 00            mov         word ptr 0x18[si],0x0000 
314F    E9 94 01                  jmp         L$455 
3152                          L$442:
3152    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3155    83 7C 20 00               cmp         word ptr 0x20[si],0x0000 
3159    0F 84 D3 00               je          L$449 
315D    8B 5C 08                  mov         bx,word ptr 0x8[si] 
3160    8B 44 18                  mov         ax,word ptr 0x18[si] 
3163    31 D2                     xor         dx,dx 
3165    31 C9                     xor         cx,cx 
3167    83 EB 0C                  sub         bx,0x000c 
316A    9A 00 00 00 00            call        __U4M 
316F    8B 5C 20                  mov         bx,word ptr 0x20[si] 
3172    31 C9                     xor         cx,cx 
3174    9A 00 00 00 00            call        __U4D 
3179    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
317C    8B 5D 06                  mov         bx,word ptr 0x6[di] 
317F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3182    03 5E FA                  add         bx,word ptr -0x6[bp] 
3185    03 5C 06                  add         bx,word ptr 0x6[si] 
3188    83 C3 19                  add         bx,0x0019 
318B    01 C3                     add         bx,ax 
318D    89 5E EC                  mov         word ptr -0x14[bp],bx 
3190    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3195    C7 46 EE 00 00            mov         word ptr -0x12[bp],0x0000 
319A    8B 47 02                  mov         ax,word ptr 0x2[bx] 
319D    8B 4E EE                  mov         cx,word ptr -0x12[bp] 
31A0    11 D1                     adc         cx,dx 
31A2    99                        cwd         
31A3    39 CA                     cmp         dx,cx 
31A5    72 0B                     jb          L$443 
31A7    0F 85 85 00               jne         L$449 
31AB    3B 46 EC                  cmp         ax,word ptr -0x14[bp] 
31AE    0F 83 7E 00               jae         L$449 
31B2                          L$443:
31B2    E8 00 00                  call        call_drv_screenupdate_ 
31B5    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
31BA    8B 47 04                  mov         ax,word ptr 0x4[bx] 
31BD    25 01 00                  and         ax,0x0001 
31C0    85 C0                     test        ax,ax 
31C2    0F 84 20 01               je          L$455 
31C6    0E                        push        cs 
31C7    E8 00 00                  call        get_mouse_movement_ 
31CA    89 C3                     mov         bx,ax 
31CC    85 D2                     test        dx,dx 
31CE    75 04                     jne         L$444 
31D0    85 C0                     test        ax,ax 
31D2    74 DE                     je          L$443 
31D4                          L$444:
31D4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
31D7    8B 44 18                  mov         ax,word ptr 0x18[si] 
31DA    8E DA                     mov         ds,dx 
31DC    03 47 02                  add         ax,word ptr 0x2[bx] 
31DF    85 C0                     test        ax,ax 
31E1    7C 0B                     jl          L$445 
31E3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
31E6    3B 44 20                  cmp         ax,word ptr 0x20[si] 
31E9    77 03                     ja          L$445 
31EB    89 44 18                  mov         word ptr 0x18[si],ax 
31EE                          L$445:
31EE    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
31F1    8B 44 28                  mov         ax,word ptr 0x28[si] 
31F4    8B 54 26                  mov         dx,word ptr 0x26[si] 
31F7    85 C0                     test        ax,ax 
31F9    75 04                     jne         L$446 
31FB    85 D2                     test        dx,dx 
31FD    74 0D                     je          L$447 
31FF                          L$446:
31FF    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3202    89 D3                     mov         bx,dx 
3204    8E D8                     mov         ds,ax 
3206    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
320A    89 07                     mov         word ptr [bx],ax 
320C                          L$447:
320C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
320F    8B 44 24                  mov         ax,word ptr 0x24[si] 
3212    3D FF FF                  cmp         ax,0xffff 
3215    74 0B                     je          L$448 
3217    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
321A    89 C3                     mov         bx,ax 
321C    89 F8                     mov         ax,di 
321E    0E                        push        cs 
321F    E8 00 00                  call        window_drawelement_ 
3222                          L$448:
3222    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
3225    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
3228    89 F8                     mov         ax,di 
322A    0E                        push        cs 
322B    E8 00 00                  call        window_drawelement_ 
322E    EB 82                     jmp         L$443 
3230                          L$449:
3230    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
3233    8B 45 06                  mov         ax,word ptr 0x6[di] 
3236    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3239    03 46 FA                  add         ax,word ptr -0x6[bp] 
323C    03 44 06                  add         ax,word ptr 0x6[si] 
323F    89 C2                     mov         dx,ax 
3241    83 C2 0D                  add         dx,0x000d 
3244    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
3249    03 54 08                  add         dx,word ptr 0x8[si] 
324C    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
3251    3B 57 02                  cmp         dx,word ptr 0x2[bx] 
3254    76 27                     jbe         L$452 
3256    E8 00 00                  call        wait_leftbutton_release_ 
3259    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
325F    31 D2                     xor         dx,dx 
3261    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3264    43                        inc         bx 
3265    43                        inc         bx 
3266    8B 44 08                  mov         ax,word ptr 0x8[si] 
3269    F7 F3                     div         bx 
326B    03 44 18                  add         ax,word ptr 0x18[si] 
326E    3B 44 20                  cmp         ax,word ptr 0x20[si] 
3271    73 05                     jae         L$451 
3273                          L$450:
3273    89 44 18                  mov         word ptr 0x18[si],ax 
3276    EB 6E                     jmp         L$455 
3278                          L$451:
3278    8B 44 20                  mov         ax,word ptr 0x20[si] 
327B    EB F6                     jmp         L$450 
327D                          L$452:
327D    6A 01                     push        0x0001 
327F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3282    B9 0C 00                  mov         cx,0x000c 
3285    05 0E 00                  add         ax,0x000e 
3288    8B 54 08                  mov         dx,word ptr 0x8[si] 
328B    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
328E    01 C2                     add         dx,ax 
3290    8B 45 04                  mov         ax,word ptr 0x4[di] 
3293    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3296    89 CB                     mov         bx,cx 
3298    03 44 04                  add         ax,word ptr 0x4[si] 
329B    9A 00 00 00 00            call        draw_borders_ 
32A0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
32A3    83 7C 20 00               cmp         word ptr 0x20[si],0x0000 
32A7    74 0B                     je          L$453 
32A9    8B 44 18                  mov         ax,word ptr 0x18[si] 
32AC    3B 44 20                  cmp         ax,word ptr 0x20[si] 
32AF    73 03                     jae         L$453 
32B1    FF 44 18                  inc         word ptr 0x18[si] 
32B4                          L$453:
32B4    E8 00 00                  call        wait_leftbutton_release_ 
32B7    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
32BA    6A 00                     push        0x0000 
32BC    8B 45 06                  mov         ax,word ptr 0x6[di] 
32BF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
32C2    03 46 FA                  add         ax,word ptr -0x6[bp] 
32C5    B9 0C 00                  mov         cx,0x000c 
32C8    03 44 06                  add         ax,word ptr 0x6[si] 
32CB    8B 54 08                  mov         dx,word ptr 0x8[si] 
32CE    05 0E 00                  add         ax,0x000e 
32D1    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
32D4    01 C2                     add         dx,ax 
32D6                          L$454:
32D6    8B 45 04                  mov         ax,word ptr 0x4[di] 
32D9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
32DC    89 CB                     mov         bx,cx 
32DE    03 44 04                  add         ax,word ptr 0x4[si] 
32E1    9A 00 00 00 00            call        draw_borders_ 
32E6                          L$455:
32E6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
32E9    8B 44 28                  mov         ax,word ptr 0x28[si] 
32EC    8B 54 26                  mov         dx,word ptr 0x26[si] 
32EF    85 C0                     test        ax,ax 
32F1    75 04                     jne         L$456 
32F3    85 D2                     test        dx,dx 
32F5    74 0D                     je          L$457 
32F7                          L$456:
32F7    8E 46 FE                  mov         es,word ptr -0x2[bp] 
32FA    89 D3                     mov         bx,dx 
32FC    8E D8                     mov         ds,ax 
32FE    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
3302    89 07                     mov         word ptr [bx],ax 
3304                          L$457:
3304    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3307    8B 44 24                  mov         ax,word ptr 0x24[si] 
330A    3D FF FF                  cmp         ax,0xffff 
330D    0F 84 B7 02               je          L$480 
3311    E9 A9 02                  jmp         L$479 
3314                          L$458:
3314    8E DA                     mov         ds,dx 
3316    8B 45 04                  mov         ax,word ptr 0x4[di] 
3319    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
331C    89 46 F8                  mov         word ptr -0x8[bp],ax 
331F    8B 44 04                  mov         ax,word ptr 0x4[si] 
3322    01 46 F8                  add         word ptr -0x8[bp],ax 
3325    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
332A    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
332D    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
3332    05 0C 00                  add         ax,0x000c 
3335    89 5E F2                  mov         word ptr -0xe[bp],bx 
3338    3B 07                     cmp         ax,word ptr [bx] 
333A    76 52                     jbe         L$460 
333C    6A 01                     push        0x0001 
333E    8E DA                     mov         ds,dx 
3340    B9 0C 00                  mov         cx,0x000c 
3343    8B 45 06                  mov         ax,word ptr 0x6[di] 
3346    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3349    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
334C    03 44 06                  add         ax,word ptr 0x6[si] 
334F    89 CB                     mov         bx,cx 
3351    01 C2                     add         dx,ax 
3353    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
3356    9A 00 00 00 00            call        draw_borders_ 
335B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
335E    83 7C 18 00               cmp         word ptr 0x18[si],0x0000 
3362    74 03                     je          L$459 
3364    FF 4C 18                  dec         word ptr 0x18[si] 
3367                          L$459:
3367    E8 00 00                  call        wait_leftbutton_release_ 
336A    6A 00                     push        0x0000 
336C    C5 56 FA                  lds         dx,dword ptr -0x6[bp] 
336F    8B 45 06                  mov         ax,word ptr 0x6[di] 
3372    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3375    B9 0C 00                  mov         cx,0x000c 
3378    03 44 06                  add         ax,word ptr 0x6[si] 
337B    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
337E    01 C2                     add         dx,ax 
3380    8B 45 04                  mov         ax,word ptr 0x4[di] 
3383    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3386    89 CB                     mov         bx,cx 
3388    03 44 04                  add         ax,word ptr 0x4[si] 
338B    E9 01 02                  jmp         L$475 
338E                          L$460:
338E    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3391    26 83 7C 20 00            cmp         word ptr es:0x20[si],0x0000 
3396    74 6D                     je          L$463 
3398    26 8B 5C 08               mov         bx,word ptr es:0x8[si] 
339C    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
33A0    31 D2                     xor         dx,dx 
33A2    31 C9                     xor         cx,cx 
33A4    83 EB 0C                  sub         bx,0x000c 
33A7    9A 00 00 00 00            call        __U4M 
33AC    26 8B 5C 20               mov         bx,word ptr es:0x20[si] 
33B0    31 C9                     xor         cx,cx 
33B2    9A 00 00 00 00            call        __U4D 
33B7    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
33BA    83 C3 0D                  add         bx,0x000d 
33BD    01 C3                     add         bx,ax 
33BF    89 5E EC                  mov         word ptr -0x14[bp],bx 
33C2    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
33C5    C7 46 EE 00 00            mov         word ptr -0x12[bp],0x0000 
33CA    8B 07                     mov         ax,word ptr [bx] 
33CC    8B 4E EE                  mov         cx,word ptr -0x12[bp] 
33CF    11 D1                     adc         cx,dx 
33D1    99                        cwd         
33D2    39 CA                     cmp         dx,cx 
33D4    72 07                     jb          L$461 
33D6    75 2D                     jne         L$463 
33D8    3B 46 EC                  cmp         ax,word ptr -0x14[bp] 
33DB    73 28                     jae         L$463 
33DD                          L$461:
33DD    E8 00 00                  call        wait_leftbutton_release_ 
33E0    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
33E6    31 D2                     xor         dx,dx 
33E8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
33EB    43                        inc         bx 
33EC    43                        inc         bx 
33ED    8B 44 08                  mov         ax,word ptr 0x8[si] 
33F0    F7 F3                     div         bx 
33F2    3B 44 18                  cmp         ax,word ptr 0x18[si] 
33F5    77 06                     ja          L$462 
33F7    29 44 18                  sub         word ptr 0x18[si],ax 
33FA    E9 97 01                  jmp         L$476 
33FD                          L$462:
33FD    C7 44 18 00 00            mov         word ptr 0x18[si],0x0000 
3402    E9 8F 01                  jmp         L$476 
3405                          L$463:
3405    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3408    83 7C 20 00               cmp         word ptr 0x20[si],0x0000 
340C    0F 84 D1 00               je          L$470 
3410    8B 5C 08                  mov         bx,word ptr 0x8[si] 
3413    8B 44 18                  mov         ax,word ptr 0x18[si] 
3416    31 D2                     xor         dx,dx 
3418    31 C9                     xor         cx,cx 
341A    83 EB 0C                  sub         bx,0x000c 
341D    9A 00 00 00 00            call        __U4M 
3422    8B 5C 20                  mov         bx,word ptr 0x20[si] 
3425    31 C9                     xor         cx,cx 
3427    9A 00 00 00 00            call        __U4D 
342C    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
342F    89 C3                     mov         bx,ax 
3431    8B 45 04                  mov         ax,word ptr 0x4[di] 
3434    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3437    03 44 04                  add         ax,word ptr 0x4[si] 
343A    05 19 00                  add         ax,0x0019 
343D    C7 46 EC 00 00            mov         word ptr -0x14[bp],0x0000 
3442    01 D8                     add         ax,bx 
3444    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3449    89 46 EE                  mov         word ptr -0x12[bp],ax 
344C    8B 07                     mov         ax,word ptr [bx] 
344E    8B 4E EC                  mov         cx,word ptr -0x14[bp] 
3451    11 D1                     adc         cx,dx 
3453    99                        cwd         
3454    39 CA                     cmp         dx,cx 
3456    72 0B                     jb          L$464 
3458    0F 85 85 00               jne         L$470 
345C    3B 46 EE                  cmp         ax,word ptr -0x12[bp] 
345F    0F 83 7E 00               jae         L$470 
3463                          L$464:
3463    E8 00 00                  call        call_drv_screenupdate_ 
3466    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
346B    8B 47 04                  mov         ax,word ptr 0x4[bx] 
346E    30 E4                     xor         ah,ah 
3470    24 01                     and         al,0x01 
3472    85 C0                     test        ax,ax 
3474    0F 84 1C 01               je          L$476 
3478    0E                        push        cs 
3479    E8 00 00                  call        get_mouse_movement_ 
347C    89 C3                     mov         bx,ax 
347E    85 D2                     test        dx,dx 
3480    75 04                     jne         L$465 
3482    85 C0                     test        ax,ax 
3484    74 DD                     je          L$464 
3486                          L$465:
3486    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3489    8B 44 18                  mov         ax,word ptr 0x18[si] 
348C    8E DA                     mov         ds,dx 
348E    03 07                     add         ax,word ptr [bx] 
3490    85 C0                     test        ax,ax 
3492    7C 0B                     jl          L$466 
3494    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3497    3B 44 20                  cmp         ax,word ptr 0x20[si] 
349A    77 03                     ja          L$466 
349C    89 44 18                  mov         word ptr 0x18[si],ax 
349F                          L$466:
349F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
34A2    8B 44 28                  mov         ax,word ptr 0x28[si] 
34A5    8B 54 26                  mov         dx,word ptr 0x26[si] 
34A8    85 C0                     test        ax,ax 
34AA    75 04                     jne         L$467 
34AC    85 D2                     test        dx,dx 
34AE    74 0D                     je          L$468 
34B0                          L$467:
34B0    8E 46 FE                  mov         es,word ptr -0x2[bp] 
34B3    89 D3                     mov         bx,dx 
34B5    8E D8                     mov         ds,ax 
34B7    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
34BB    89 07                     mov         word ptr [bx],ax 
34BD                          L$468:
34BD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
34C0    8B 44 24                  mov         ax,word ptr 0x24[si] 
34C3    3D FF FF                  cmp         ax,0xffff 
34C6    74 0B                     je          L$469 
34C8    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
34CB    89 C3                     mov         bx,ax 
34CD    89 F8                     mov         ax,di 
34CF    0E                        push        cs 
34D0    E8 00 00                  call        window_drawelement_ 
34D3                          L$469:
34D3    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
34D6    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
34D9    89 F8                     mov         ax,di 
34DB    0E                        push        cs 
34DC    E8 00 00                  call        window_drawelement_ 
34DF    EB 82                     jmp         L$464 
34E1                          L$470:
34E1    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
34E4    8B 45 04                  mov         ax,word ptr 0x4[di] 
34E7    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
34EA    8B 4C 08                  mov         cx,word ptr 0x8[si] 
34ED    03 44 04                  add         ax,word ptr 0x4[si] 
34F0    01 C1                     add         cx,ax 
34F2    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
34F7    89 C8                     mov         ax,cx 
34F9    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
34FE    05 0D 00                  add         ax,0x000d 
3501    3B 07                     cmp         ax,word ptr [bx] 
3503    76 27                     jbe         L$473 
3505    E8 00 00                  call        wait_leftbutton_release_ 
3508    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
350E    31 D2                     xor         dx,dx 
3510    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3513    43                        inc         bx 
3514    43                        inc         bx 
3515    8B 44 08                  mov         ax,word ptr 0x8[si] 
3518    F7 F3                     div         bx 
351A    03 44 18                  add         ax,word ptr 0x18[si] 
351D    3B 44 20                  cmp         ax,word ptr 0x20[si] 
3520    73 05                     jae         L$472 
3522                          L$471:
3522    89 44 18                  mov         word ptr 0x18[si],ax 
3525    EB 6D                     jmp         L$476 
3527                          L$472:
3527    8B 44 20                  mov         ax,word ptr 0x20[si] 
352A    EB F6                     jmp         L$471 
352C                          L$473:
352C    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
352F    8B 45 06                  mov         ax,word ptr 0x6[di] 
3532    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3535    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
3538    03 44 06                  add         ax,word ptr 0x6[si] 
353B    6A 01                     push        0x0001 
353D    01 C2                     add         dx,ax 
353F    89 C8                     mov         ax,cx 
3541    B9 0C 00                  mov         cx,0x000c 
3544    05 0E 00                  add         ax,0x000e 
3547    89 CB                     mov         bx,cx 
3549    9A 00 00 00 00            call        draw_borders_ 
354E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3551    83 7C 20 00               cmp         word ptr 0x20[si],0x0000 
3555    74 0B                     je          L$474 
3557    8B 44 18                  mov         ax,word ptr 0x18[si] 
355A    3B 44 20                  cmp         ax,word ptr 0x20[si] 
355D    73 03                     jae         L$474 
355F    FF 44 18                  inc         word ptr 0x18[si] 
3562                          L$474:
3562    E8 00 00                  call        wait_leftbutton_release_ 
3565    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
3568    8B 45 06                  mov         ax,word ptr 0x6[di] 
356B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
356E    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
3571    03 44 06                  add         ax,word ptr 0x6[si] 
3574    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
3577    01 C2                     add         dx,ax 
3579    8B 45 04                  mov         ax,word ptr 0x4[di] 
357C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
357F    6A 00                     push        0x0000 
3581    03 44 04                  add         ax,word ptr 0x4[si] 
3584    B9 0C 00                  mov         cx,0x000c 
3587    03 44 08                  add         ax,word ptr 0x8[si] 
358A    89 CB                     mov         bx,cx 
358C    05 0E 00                  add         ax,0x000e 
358F                          L$475:
358F    9A 00 00 00 00            call        draw_borders_ 
3594                          L$476:
3594    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3597    8B 44 28                  mov         ax,word ptr 0x28[si] 
359A    8B 54 26                  mov         dx,word ptr 0x26[si] 
359D    85 C0                     test        ax,ax 
359F    75 04                     jne         L$477 
35A1    85 D2                     test        dx,dx 
35A3    74 0D                     je          L$478 
35A5                          L$477:
35A5    8E 46 FE                  mov         es,word ptr -0x2[bp] 
35A8    89 D3                     mov         bx,dx 
35AA    8E D8                     mov         ds,ax 
35AC    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
35B0    89 07                     mov         word ptr [bx],ax 
35B2                          L$478:
35B2    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
35B5    8B 44 24                  mov         ax,word ptr 0x24[si] 
35B8    3D FF FF                  cmp         ax,0xffff 
35BB    74 0B                     je          L$480 
35BD                          L$479:
35BD    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
35C0    89 C3                     mov         bx,ax 
35C2    89 F8                     mov         ax,di 
35C4    0E                        push        cs 
35C5    E8 00 00                  call        window_drawelement_ 
35C8                          L$480:
35C8    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
35CB    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
35CE    89 F8                     mov         ax,di 
35D0    0E                        push        cs 
35D1    E8 00 00                  call        window_drawelement_ 
35D4    E9 32 15                  jmp         L$600 
35D7                          mouse_list_handler_:
35D7    51                        push        cx 
35D8    56                        push        si 
35D9    57                        push        di 
35DA    C8 04 00 00               enter       0x0004,0x00 
35DE    89 C6                     mov         si,ax 
35E0    8E DA                     mov         ds,dx 
35E2    89 5E FC                  mov         word ptr -0x4[bp],bx 
35E5    89 D8                     mov         ax,bx 
35E7    8B 7C 18                  mov         di,word ptr 0x18[si] 
35EA    C1 E0 02                  shl         ax,0x02 
35ED    8E 44 1A                  mov         es,word ptr 0x1a[si] 
35F0    01 C7                     add         di,ax 
35F2    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
35F6    26 8B 1D                  mov         bx,word ptr es:[di] 
35F9    8E C0                     mov         es,ax 
35FB    89 46 FE                  mov         word ptr -0x2[bp],ax 
35FE    26 F6 47 02 04            test        byte ptr es:0x2[bx],0x04 
3603    0F 84 02 15               je          L$600 
3607    8B 44 06                  mov         ax,word ptr 0x6[si] 
360A    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
3610    40                        inc         ax 
3611    40                        inc         ax 
3612    01 C8                     add         ax,cx 
3614    36 8B 3E 00 00            mov         di,word ptr ss:_mouse 
3619    26 03 47 06               add         ax,word ptr es:0x6[bx] 
361D    36 8E 06 02 00            mov         es,word ptr ss:_mouse+0x2 
3622    26 8B 7D 02               mov         di,word ptr es:0x2[di] 
3626    31 D2                     xor         dx,dx 
3628    29 C7                     sub         di,ax 
362A    41                        inc         cx 
362B    41                        inc         cx 
362C    89 F8                     mov         ax,di 
362E    F7 F1                     div         cx 
3630    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3633    26 8B 4F 1A               mov         cx,word ptr es:0x1a[bx] 
3637    01 C1                     add         cx,ax 
3639    26 8B 47 2A               mov         ax,word ptr es:0x2a[bx] 
363D    39 C1                     cmp         cx,ax 
363F    74 25                     je          L$482 
3641    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
3644    89 F0                     mov         ax,si 
3646    8C DA                     mov         dx,ds 
3648    0E                        push        cs 
3649    E8 00 00                  call        window_list_selectrow_ 
364C                          L$481:
364C    E8 00 00                  call        call_drv_screenupdate_ 
364F    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3654    8B 47 04                  mov         ax,word ptr 0x4[bx] 
3657    25 01 00                  and         ax,0x0001 
365A    85 C0                     test        ax,ax 
365C    0F 84 A9 14               je          L$600 
3660    0E                        push        cs 
3661    E8 00 00                  call        get_mouse_movement_ 
3664    EB E6                     jmp         L$481 
3666                          L$482:
3666    06                        push        es 
3667    1F                        pop         ds 
3668    89 47 24                  mov         word ptr 0x24[bx],ax 
366B                          L$483:
366B    E8 00 00                  call        call_drv_screenupdate_ 
366E    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3673    8B 47 04                  mov         ax,word ptr 0x4[bx] 
3676    30 E4                     xor         ah,ah 
3678    24 01                     and         al,0x01 
367A    85 C0                     test        ax,ax 
367C    0F 84 89 14               je          L$600 
3680    0E                        push        cs 
3681    E8 00 00                  call        get_mouse_movement_ 
3684    EB E5                     jmp         L$483 
3686                          mouse_checkbox_handler_:
3686    56                        push        si 
3687    89 C6                     mov         si,ax 
3689    8E DA                     mov         ds,dx 
368B    C1 E3 02                  shl         bx,0x02 
368E    C5 44 18                  lds         ax,dword ptr 0x18[si] 
3691    89 C6                     mov         si,ax 
3693    01 DE                     add         si,bx 
3695    C5 1C                     lds         bx,dword ptr [si] 
3697    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
369A    F7 D0                     not         ax 
369C    89 47 2A                  mov         word ptr 0x2a[bx],ax 
369F    E8 00 00                  call        wait_leftbutton_release_ 
36A2    5E                        pop         si 
36A3    C3                        ret         
36A4                          L$484:
36A4    5A 39                                           DW	offset L$499
36A6    DB 38                                           DW	offset L$493
36A8    FA 38                                           DW	offset L$494
36AA    08 39                                           DW	offset L$495
36AC    5A 39                                           DW	offset L$499
36AE    2E 39                                           DW	offset L$497
36B0    3B 39                                           DW	offset L$498
36B2    D0 38                                           DW	offset L$492
36B4                          mleft_handler_:
36B4    53                        push        bx 
36B5    51                        push        cx 
36B6    56                        push        si 
36B7    57                        push        di 
36B8    C8 0A 00 00               enter       0x000a,0x00 
36BC    89 C6                     mov         si,ax 
36BE    89 56 FE                  mov         word ptr -0x2[bp],dx 
36C1    85 D2                     test        dx,dx 
36C3    75 06                     jne         L$485 
36C5    85 C0                     test        ax,ax 
36C7    0F 84 48 04               je          L$505 
36CB                          L$485:
36CB    8E DA                     mov         ds,dx 
36CD    F6 44 16 01               test        byte ptr 0x16[si],0x01 
36D1    0F 84 88 00               je          L$487 
36D5    8B 44 04                  mov         ax,word ptr 0x4[si] 
36D8    03 44 12                  add         ax,word ptr 0x12[si] 
36DB    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
36E0    89 C2                     mov         dx,ax 
36E2    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
36E7    4A                        dec         dx 
36E8    3B 17                     cmp         dx,word ptr [bx] 
36EA    7F 2E                     jg          L$486 
36EC    40                        inc         ax 
36ED    3B 07                     cmp         ax,word ptr [bx] 
36EF    7C 29                     jl          L$486 
36F1    8E 46 FE                  mov         es,word ptr -0x2[bp] 
36F4    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
36F8    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
36FE    26 03 44 14               add         ax,word ptr es:0x14[si] 
3702    01 D0                     add         ax,dx 
3704    89 C2                     mov         dx,ax 
3706    42                        inc         dx 
3707    3B 57 02                  cmp         dx,word ptr 0x2[bx] 
370A    7F 0E                     jg          L$486 
370C    05 03 00                  add         ax,0x0003 
370F    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
3712    7C 06                     jl          L$486 
3714    B8 F8 FF                  mov         ax,0xfff8 
3717    E9 70 58                  jmp         L$1094 
371A                          L$486:
371A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
371D    8B 44 04                  mov         ax,word ptr 0x4[si] 
3720    03 44 12                  add         ax,word ptr 0x12[si] 
3723    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3729    89 C1                     mov         cx,ax 
372B    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
3730    29 D1                     sub         cx,dx 
3732    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
3737    49                        dec         cx 
3738    49                        dec         cx 
3739    3B 0F                     cmp         cx,word ptr [bx] 
373B    7D 20                     jge         L$487 
373D    48                        dec         ax 
373E    3B 07                     cmp         ax,word ptr [bx] 
3740    7E 1B                     jle         L$487 
3742    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3745    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3748    26 3B 44 06               cmp         ax,word ptr es:0x6[si] 
374C    7E 0F                     jle         L$487 
374E    26 03 54 06               add         dx,word ptr es:0x6[si] 
3752    42                        inc         dx 
3753    39 C2                     cmp         dx,ax 
3755    7E 06                     jle         L$487 
3757    B8 03 00                  mov         ax,0x0003 
375A    E9 2D 58                  jmp         L$1094 
375D                          L$487:
375D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3760    F6 44 16 02               test        byte ptr 0x16[si],0x02 
3764    74 42                     je          L$488 
3766    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
376C    8B 44 04                  mov         ax,word ptr 0x4[si] 
376F    89 D3                     mov         bx,dx 
3771    03 44 12                  add         ax,word ptr 0x12[si] 
3774    01 D3                     add         bx,dx 
3776    89 C1                     mov         cx,ax 
3778    43                        inc         bx 
3779    43                        inc         bx 
377A    29 D9                     sub         cx,bx 
377C    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3781    3B 0F                     cmp         cx,word ptr [bx] 
3783    7F 23                     jg          L$488 
3785    29 D0                     sub         ax,dx 
3787    48                        dec         ax 
3788    48                        dec         ax 
3789    3B 07                     cmp         ax,word ptr [bx] 
378B    7E 1B                     jle         L$488 
378D    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3790    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3793    26 3B 44 06               cmp         ax,word ptr es:0x6[si] 
3797    7E 0F                     jle         L$488 
3799    26 03 54 06               add         dx,word ptr es:0x6[si] 
379D    42                        inc         dx 
379E    39 C2                     cmp         dx,ax 
37A0    7E 06                     jle         L$488 
37A2    B8 05 00                  mov         ax,0x0005 
37A5    E9 E2 57                  jmp         L$1094 
37A8                          L$488:
37A8    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
37AD    8B 07                     mov         ax,word ptr [bx] 
37AF    8E 46 FE                  mov         es,word ptr -0x2[bp] 
37B2    26 3B 44 04               cmp         ax,word ptr es:0x4[si] 
37B6    7E 29                     jle         L$489 
37B8    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
37BE    26 8B 54 04               mov         dx,word ptr es:0x4[si] 
37C2    01 C2                     add         dx,ax 
37C4    42                        inc         dx 
37C5    3B 17                     cmp         dx,word ptr [bx] 
37C7    7E 18                     jle         L$489 
37C9    8B 57 02                  mov         dx,word ptr 0x2[bx] 
37CC    26 3B 54 06               cmp         dx,word ptr es:0x6[si] 
37D0    7E 0F                     jle         L$489 
37D2    26 03 44 06               add         ax,word ptr es:0x6[si] 
37D6    40                        inc         ax 
37D7    39 D0                     cmp         ax,dx 
37D9    7E 06                     jle         L$489 
37DB    B8 FE FF                  mov         ax,0xfffe 
37DE    E9 A9 57                  jmp         L$1094 
37E1                          L$489:
37E1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
37E4    F6 44 16 04               test        byte ptr 0x16[si],0x04 
37E8    75 31                     jne         L$490 
37EA    36 C5 3E 00 00            lds         di,dword ptr ss:_mouse 
37EF    36 C4 1E 00 00            les         bx,dword ptr ss:_titlebar_drag 
37F4    8B 05                     mov         ax,word ptr [di] 
37F6    26 3B 07                  cmp         ax,word ptr es:[bx] 
37F9    7C 20                     jl          L$490 
37FB    8B 45 02                  mov         ax,word ptr 0x2[di] 
37FE    26 3B 47 02               cmp         ax,word ptr es:0x2[bx] 
3802    7C 17                     jl          L$490 
3804    8B 05                     mov         ax,word ptr [di] 
3806    26 3B 47 04               cmp         ax,word ptr es:0x4[bx] 
380A    7D 0F                     jge         L$490 
380C    8B 45 02                  mov         ax,word ptr 0x2[di] 
380F    26 3B 47 06               cmp         ax,word ptr es:0x6[bx] 
3813    7D 06                     jge         L$490 
3815    B8 FF FF                  mov         ax,0xffff 
3818    E9 6F 57                  jmp         L$1094 
381B                          L$490:
381B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
381E    8B 44 28                  mov         ax,word ptr 0x28[si] 
3821    89 46 FA                  mov         word ptr -0x6[bp],ax 
3824    6B C0 0A                  imul        ax,0x000a 
3827    89 46 FC                  mov         word ptr -0x4[bp],ax 
382A                          L$491:
382A    FF 4E FA                  dec         word ptr -0x6[bp] 
382D    83 6E FC 0A               sub         word ptr -0x4[bp],0x000a 
3831    83 7E FA FF               cmp         word ptr -0x6[bp],0xffff 
3835    0F 84 F4 01               je          L$501 
3839    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
383C    8B 5C 2A                  mov         bx,word ptr 0x2a[si] 
383F    03 5E FC                  add         bx,word ptr -0x4[bp] 
3842    8E 5C 2C                  mov         ds,word ptr 0x2c[si] 
3845    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3848    36 8B 3E 00 00            mov         di,word ptr ss:_mouse 
384D    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3851    36 8B 16 02 00            mov         dx,word ptr ss:_mouse+0x2 
3856    03 07                     add         ax,word ptr [bx] 
3858    8E C2                     mov         es,dx 
385A    26 3B 05                  cmp         ax,word ptr es:[di] 
385D    7F CB                     jg          L$491 
385F    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3862    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3866    03 47 04                  add         ax,word ptr 0x4[bx] 
3869    8E C2                     mov         es,dx 
386B    26 3B 05                  cmp         ax,word ptr es:[di] 
386E    7E BA                     jle         L$491 
3870    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3873    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
3877    03 47 02                  add         ax,word ptr 0x2[bx] 
387A    8E C2                     mov         es,dx 
387C    26 3B 45 02               cmp         ax,word ptr es:0x2[di] 
3880    7F A8                     jg          L$491 
3882    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3885    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
3889    03 47 06                  add         ax,word ptr 0x6[bx] 
388C    8E C2                     mov         es,dx 
388E    26 3B 45 02               cmp         ax,word ptr es:0x2[di] 
3892    7E 96                     jle         L$491 
3894    8B 7F 08                  mov         di,word ptr 0x8[bx] 
3897    8E 46 FE                  mov         es,word ptr -0x2[bp] 
389A    C1 E7 02                  shl         di,0x02 
389D    26 8B 54 1A               mov         dx,word ptr es:0x1a[si] 
38A1    26 8B 4C 18               mov         cx,word ptr es:0x18[si] 
38A5    8E C2                     mov         es,dx 
38A7    01 CF                     add         di,cx 
38A9    26 8B 05                  mov         ax,word ptr es:[di] 
38AC    89 46 F8                  mov         word ptr -0x8[bp],ax 
38AF    26 8B 45 02               mov         ax,word ptr es:0x2[di] 
38B3    8B 7E F8                  mov         di,word ptr -0x8[bp] 
38B6    8E C0                     mov         es,ax 
38B8    26 8A 05                  mov         al,byte ptr es:[di] 
38BB    24 1F                     and         al,0x1f 
38BD    FE C8                     dec         al 
38BF    3C 07                     cmp         al,0x07 
38C1    0F 87 01 01               ja          L$500 
38C5    30 E4                     xor         ah,ah 
38C7    89 C7                     mov         di,ax 
38C9    01 C7                     add         di,ax 
38CB    2E FF A5 A4 36            jmp         word ptr cs:L$484[di] 
38D0                          L$492:
38D0    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
38D3    06                        push        es 
38D4    1F                        pop         ds 
38D5    8B 47 1A                  mov         ax,word ptr 0x1a[bx] 
38D8    89 47 2A                  mov         word ptr 0x2a[bx],ax 
38DB                          L$493:
38DB    6B 5E FA 0A               imul        bx,word ptr -0x6[bp],0x000a 
38DF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
38E2    89 F0                     mov         ax,si 
38E4    C5 54 2A                  lds         dx,dword ptr 0x2a[si] 
38E7    01 D3                     add         bx,dx 
38E9    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
38EC    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
38EF    E8 00 00                  call        element_active_ 
38F2    E8 00 00                  call        wait_leftbutton_release_ 
38F5    31 C0                     xor         ax,ax 
38F7    E9 90 56                  jmp         L$1094 
38FA                          L$494:
38FA    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
38FD    89 F0                     mov         ax,si 
38FF    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
3902    E8 00 00                  call        mouse_list_handler_ 
3905    E9 BE 00                  jmp         L$500 
3908                          L$495:
3908    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
390B    89 F0                     mov         ax,si 
390D    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
3910    E8 00 00                  call        mouse_scrollbar_handler_ 
3913                          L$496:
3913    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3916    8B 5C 2A                  mov         bx,word ptr 0x2a[si] 
3919    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
391C    03 5E FC                  add         bx,word ptr -0x4[bp] 
391F    8E 5C 2C                  mov         ds,word ptr 0x2c[si] 
3922    89 F0                     mov         ax,si 
3924    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
3927    0E                        push        cs 
3928    E8 00 00                  call        window_drawelement_ 
392B    E9 98 00                  jmp         L$500 
392E                          L$497:
392E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3931    89 F0                     mov         ax,si 
3933    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
3936    E8 00 00                  call        mouse_checkbox_handler_ 
3939    EB D8                     jmp         L$496 
393B                          L$498:
393B    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
393E    C1 E3 02                  shl         bx,0x02 
3941    8E DA                     mov         ds,dx 
3943    01 CB                     add         bx,cx 
3945    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3948    8B 07                     mov         ax,word ptr [bx] 
394A    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
394D    89 C3                     mov         bx,ax 
394F    89 F0                     mov         ax,si 
3951    0E                        push        cs 
3952    E8 00 00                  call        window_radiobutton_select_ 
3955    E8 00 00                  call        wait_leftbutton_release_ 
3958    EB B9                     jmp         L$496 
395A                          L$499:
395A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
395D    8B 5C 2A                  mov         bx,word ptr 0x2a[si] 
3960    03 5E FC                  add         bx,word ptr -0x4[bp] 
3963    8E 5C 2C                  mov         ds,word ptr 0x2c[si] 
3966    8B 4F 06                  mov         cx,word ptr 0x6[bx] 
3969    8B 47 04                  mov         ax,word ptr 0x4[bx] 
396C    2B 4F 02                  sub         cx,word ptr 0x2[bx] 
396F    2B 07                     sub         ax,word ptr [bx] 
3971    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3974    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
3978    26 8B 54 06               mov         dx,word ptr es:0x6[si] 
397C    89 7E F6                  mov         word ptr -0xa[bp],di 
397F    03 57 02                  add         dx,word ptr 0x2[bx] 
3982    8B 1F                     mov         bx,word ptr [bx] 
3984    6A 01                     push        0x0001 
3986    01 5E F6                  add         word ptr -0xa[bp],bx 
3989    89 C3                     mov         bx,ax 
398B    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
398E    9A 00 00 00 00            call        draw_borders_ 
3993    E8 00 00                  call        wait_leftbutton_release_ 
3996    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3999    8B 5C 2A                  mov         bx,word ptr 0x2a[si] 
399C    03 5E FC                  add         bx,word ptr -0x4[bp] 
399F    8E 5C 2C                  mov         ds,word ptr 0x2c[si] 
39A2    8B 4F 06                  mov         cx,word ptr 0x6[bx] 
39A5    8B 7F 04                  mov         di,word ptr 0x4[bx] 
39A8    2B 4F 02                  sub         cx,word ptr 0x2[bx] 
39AB    2B 3F                     sub         di,word ptr [bx] 
39AD    8E 46 FE                  mov         es,word ptr -0x2[bp] 
39B0    6A 00                     push        0x0000 
39B2    26 8B 54 06               mov         dx,word ptr es:0x6[si] 
39B6    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
39BA    03 57 02                  add         dx,word ptr 0x2[bx] 
39BD    03 07                     add         ax,word ptr [bx] 
39BF    89 FB                     mov         bx,di 
39C1    9A 00 00 00 00            call        draw_borders_ 
39C6                          L$500:
39C6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
39C9    8B 7C 2A                  mov         di,word ptr 0x2a[si] 
39CC    8B 54 2C                  mov         dx,word ptr 0x2c[si] 
39CF    8B 44 04                  mov         ax,word ptr 0x4[si] 
39D2    03 7E FC                  add         di,word ptr -0x4[bp] 
39D5    8E DA                     mov         ds,dx 
39D7    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
39DC    03 05                     add         ax,word ptr [di] 
39DE    36 8E 1E 02 00            mov         ds,word ptr ss:_mouse+0x2 
39E3    3B 07                     cmp         ax,word ptr [bx] 
39E5    0F 8F 41 FE               jg          L$491 
39E9    8E 46 FE                  mov         es,word ptr -0x2[bp] 
39EC    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
39F0    8E C2                     mov         es,dx 
39F2    26 03 45 04               add         ax,word ptr es:0x4[di] 
39F6    3B 07                     cmp         ax,word ptr [bx] 
39F8    0F 8E 2E FE               jle         L$491 
39FC    8E 46 FE                  mov         es,word ptr -0x2[bp] 
39FF    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
3A03    8E C2                     mov         es,dx 
3A05    26 03 45 02               add         ax,word ptr es:0x2[di] 
3A09    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
3A0C    0F 8F 1A FE               jg          L$491 
3A10    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3A13    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
3A17    8E C2                     mov         es,dx 
3A19    26 03 45 06               add         ax,word ptr es:0x6[di] 
3A1D    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
3A20    0F 8E 06 FE               jle         L$491 
3A24    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
3A27    80 CC 80                  or          ah,0x80 
3A2A    E9 5D 55                  jmp         L$1094 
3A2D                          L$501:
3A2D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3A30    80 7C 32 00               cmp         byte ptr 0x32[si],0x00 
3A34    0F 84 E1 00               je          L$506 
3A38    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3A3D    8B 07                     mov         ax,word ptr [bx] 
3A3F    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3A42    26 3B 44 04               cmp         ax,word ptr es:0x4[si] 
3A46    7E 2E                     jle         L$502 
3A48    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3A4C    26 03 44 12               add         ax,word ptr es:0x12[si] 
3A50    3B 07                     cmp         ax,word ptr [bx] 
3A52    7E 22                     jle         L$502 
3A54    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3A57    26 3B 44 06               cmp         ax,word ptr es:0x6[si] 
3A5B    7E 19                     jle         L$502 
3A5D    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
3A61    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3A67    26 03 44 14               add         ax,word ptr es:0x14[si] 
3A6B    01 D0                     add         ax,dx 
3A6D    40                        inc         ax 
3A6E    40                        inc         ax 
3A6F    3B 47 02                  cmp         ax,word ptr 0x2[bx] 
3A72    0F 8F A3 00               jg          L$506 
3A76                          L$502:
3A76    36 A1 00 00               mov         ax,word ptr ss:_window_count 
3A7A    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
3A80    89 C2                     mov         dx,ax 
3A82    36 8E 06 02 00            mov         es,word ptr ss:_mouse+0x2 
3A87    01 C2                     add         dx,ax 
3A89                          L$503:
3A89    48                        dec         ax 
3A8A    4A                        dec         dx 
3A8B    4A                        dec         dx 
3A8C    3D FF FF                  cmp         ax,0xffff 
3A8F    0F 84 80 00               je          L$505 
3A93    36 C5 1E 00 00            lds         bx,dword ptr ss:_window_visibility_order 
3A98    01 D3                     add         bx,dx 
3A9A    8B 1F                     mov         bx,word ptr [bx] 
3A9C    36 8B 36 00 00            mov         si,word ptr ss:_windows 
3AA1    C1 E3 02                  shl         bx,0x02 
3AA4    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
3AA9    01 DE                     add         si,bx 
3AAB    C5 1C                     lds         bx,dword ptr [si] 
3AAD    36 8B 36 00 00            mov         si,word ptr ss:_mouse 
3AB2    26 8B 0C                  mov         cx,word ptr es:[si] 
3AB5    3B 4F 04                  cmp         cx,word ptr 0x4[bx] 
3AB8    7E CF                     jle         L$503 
3ABA    8B 4F 04                  mov         cx,word ptr 0x4[bx] 
3ABD    03 4F 12                  add         cx,word ptr 0x12[bx] 
3AC0    26 3B 0C                  cmp         cx,word ptr es:[si] 
3AC3    7E C4                     jle         L$503 
3AC5    26 8B 4C 02               mov         cx,word ptr es:0x2[si] 
3AC9    3B 4F 06                  cmp         cx,word ptr 0x6[bx] 
3ACC    7E BB                     jle         L$503 
3ACE    8B 4F 06                  mov         cx,word ptr 0x6[bx] 
3AD1    03 4F 14                  add         cx,word ptr 0x14[bx] 
3AD4    01 F9                     add         cx,di 
3AD6    41                        inc         cx 
3AD7    41                        inc         cx 
3AD8    26 3B 4C 02               cmp         cx,word ptr es:0x2[si] 
3ADC    7E AB                     jle         L$503 
3ADE    F6 47 16 08               test        byte ptr 0x16[bx],0x08 
3AE2    75 A5                     jne         L$503 
3AE4    F6 47 16 20               test        byte ptr 0x16[bx],0x20 
3AE8    75 9F                     jne         L$503 
3AEA    F6 47 16 04               test        byte ptr 0x16[bx],0x04 
3AEE    74 09                     je          L$504 
3AF0    8D 5D 03                  lea         bx,0x3[di] 
3AF3    26 3B 5C 02               cmp         bx,word ptr es:0x2[si] 
3AF7    7F 90                     jg          L$503 
3AF9                          L$504:
3AF9    36 8B 1E 00 00            mov         bx,word ptr ss:_window_visibility_order 
3AFE    01 C0                     add         ax,ax 
3B00    36 8E 1E 02 00            mov         ds,word ptr ss:_window_visibility_order+0x2 
3B05    01 C3                     add         bx,ax 
3B07    BA 01 00                  mov         dx,0x0001 
3B0A    8B 07                     mov         ax,word ptr [bx] 
3B0C    0E                        push        cs 
3B0D    E8 00 00                  call        set_active_window_ 
3B10    E9 A8 00                  jmp         L$507 
3B13                          L$505:
3B13    E8 00 00                  call        mleft_handler_desktop_ 
3B16    E9 71 54                  jmp         L$1094 
3B19                          L$506:
3B19    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3B1C    8B 44 38                  mov         ax,word ptr 0x38[si] 
3B1F    8B 54 36                  mov         dx,word ptr 0x36[si] 
3B22    3D 00 00                  cmp         ax,seg vpuwindow_program_ 
3B25    0F 85 92 00               jne         L$507 
3B29    81 FA 00 00               cmp         dx,offset vpuwindow_program_ 
3B2D    0F 85 8A 00               jne         L$507 
3B31    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
3B34    8B 47 08                  mov         ax,word ptr 0x8[bx] 
3B37    85 C0                     test        ax,ax 
3B39    0F 84 7E 00               je          L$507 
3B3D    8B 4F 04                  mov         cx,word ptr 0x4[bx] 
3B40    8B 57 06                  mov         dx,word ptr 0x6[bx] 
3B43    89 C3                     mov         bx,ax 
3B45    89 C8                     mov         ax,cx 
3B47    9A 00 00 00 00            call        send_vpu_signal_ 
3B4C    85 C0                     test        ax,ax 
3B4E    75 6B                     jne         L$507 
3B50    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3B55    8B 07                     mov         ax,word ptr [bx] 
3B57    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3B5A    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
3B5D    2B 44 04                  sub         ax,word ptr 0x4[si] 
3B60    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
3B63    C4 7F 04                  les         di,dword ptr 0x4[bx] 
3B66    8B 5F 0A                  mov         bx,word ptr 0xa[bx] 
3B69    26 8B 4D 58               mov         cx,word ptr es:0x58[di] 
3B6D    01 DB                     add         bx,bx 
3B6F    26 8E 5D 5A               mov         ds,word ptr es:0x5a[di] 
3B73    01 CB                     add         bx,cx 
3B75    89 07                     mov         word ptr [bx],ax 
3B77    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3B7C    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3B7F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3B82    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3B88    2B 44 06                  sub         ax,word ptr 0x6[si] 
3B8B    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
3B8E    29 D0                     sub         ax,dx 
3B90    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
3B93    89 C2                     mov         dx,ax 
3B95    8B 7F 04                  mov         di,word ptr 0x4[bx] 
3B98    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
3B9B    8E 5F 06                  mov         ds,word ptr 0x6[bx] 
3B9E    01 C0                     add         ax,ax 
3BA0    C5 5D 58                  lds         bx,dword ptr 0x58[di] 
3BA3    01 C3                     add         bx,ax 
3BA5    4A                        dec         dx 
3BA6    4A                        dec         dx 
3BA7    89 57 02                  mov         word ptr 0x2[bx],dx 
3BAA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3BAD    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
3BB0    8B 47 04                  mov         ax,word ptr 0x4[bx] 
3BB3    8B 57 06                  mov         dx,word ptr 0x6[bx] 
3BB6    9A 00 00 00 00            call        set_vpu_turn_ 
3BBB                          L$507:
3BBB    B8 FF 7F                  mov         ax,0x7fff 
3BBE    E9 C9 53                  jmp         L$1094 
3BC1                          mouse_handler_:
3BC1    53                        push        bx 
3BC2    51                        push        cx 
3BC3    56                        push        si 
3BC4    57                        push        di 
3BC5    C8 04 00 00               enter       0x0004,0x00 
3BC9    89 C6                     mov         si,ax 
3BCB    89 56 FE                  mov         word ptr -0x2[bp],dx 
3BCE    0E                        push        cs 
3BCF    E8 00 00                  call        get_mouse_movement_ 
3BD2    85 D2                     test        dx,dx 
3BD4    75 04                     jne         L$508 
3BD6    85 C0                     test        ax,ax 
3BD8    74 06                     je          L$509 
3BDA                          L$508:
3BDA    31 C0                     xor         ax,ax 
3BDC    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
3BE0                          L$509:
3BE0    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
3BE6    7D D3                     jge         L$507 
3BE8    36 C5 1E 00 00            lds         bx,dword ptr ss:_mouse 
3BED    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
3BF1    74 C8                     je          L$507 
3BF3    31 C0                     xor         ax,ax 
3BF5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3BF8    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
3BFC    89 F0                     mov         ax,si 
3BFE    E8 00 00                  call        mleft_handler_ 
3C01    89 C7                     mov         di,ax 
3C03    85 C0                     test        ax,ax 
3C05    74 B4                     je          L$507 
3C07    3D FF FF                  cmp         ax,0xffff 
3C0A    75 1C                     jne         L$510 
3C0C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3C0F    89 F0                     mov         ax,si 
3C11    E8 00 00                  call        drag_window_ 
3C14    85 C0                     test        ax,ax 
3C16    74 A3                     je          L$507 
3C18    BB 01 00                  mov         bx,0x0001 
3C1B    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3C1E    89 F0                     mov         ax,si 
3C20    31 C9                     xor         cx,cx 
3C22    0E                        push        cs 
3C23    E8 00 00                  call        draw_window_ 
3C26    EB 93                     jmp         L$507 
3C28                          L$510:
3C28    3D FE FF                  cmp         ax,0xfffe 
3C2B    75 08                     jne         L$511 
3C2D    31 C0                     xor         ax,ax 
3C2F    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
3C33    EB 86                     jmp         L$507 
3C35                          L$511:
3C35    3D F8 FF                  cmp         ax,0xfff8 
3C38    75 1B                     jne         L$512 
3C3A    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
3C3D    89 F0                     mov         ax,si 
3C3F    E8 00 00                  call        mouse_resize_window_ 
3C42    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3C45    81 64 16 EF E3            and         word ptr 0x16[si],0xe3ef 
3C4A    B8 FF 7F                  mov         ax,0x7fff 
3C4D    81 4C 16 10 10            or          word ptr 0x16[si],0x1010 
3C52    E9 35 53                  jmp         L$1094 
3C55                          L$512:
3C55    3D 03 00                  cmp         ax,0x0003 
3C58    74 07                     je          L$513 
3C5A    3D 05 00                  cmp         ax,0x0005 
3C5D    0F 85 CF F0               jne         L$412 
3C61                          L$513:
3C61    83 FF 03                  cmp         di,0x0003 
3C64    75 26                     jne         L$514 
3C66    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3C6C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3C6F    8B 44 06                  mov         ax,word ptr 0x6[si] 
3C72    6A 01                     push        0x0001 
3C74    40                        inc         ax 
3C75    40                        inc         ax 
3C76    89 D3                     mov         bx,dx 
3C78    89 46 FC                  mov         word ptr -0x4[bp],ax 
3C7B    8B 44 04                  mov         ax,word ptr 0x4[si] 
3C7E    4B                        dec         bx 
3C7F    4B                        dec         bx 
3C80    03 44 12                  add         ax,word ptr 0x12[si] 
3C83    89 D9                     mov         cx,bx 
3C85    29 D0                     sub         ax,dx 
3C87    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
3C8A    EB 29                     jmp         L$515 
3C8C                          L$514:
3C8C    6A 01                     push        0x0001 
3C8E    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3C94    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3C97    89 D3                     mov         bx,dx 
3C99    8B 44 06                  mov         ax,word ptr 0x6[si] 
3C9C    4B                        dec         bx 
3C9D    4B                        dec         bx 
3C9E    40                        inc         ax 
3C9F    40                        inc         ax 
3CA0    01 D2                     add         dx,dx 
3CA2    89 46 FC                  mov         word ptr -0x4[bp],ax 
3CA5    8B 44 04                  mov         ax,word ptr 0x4[si] 
3CA8    42                        inc         dx 
3CA9    42                        inc         dx 
3CAA    03 44 12                  add         ax,word ptr 0x12[si] 
3CAD    89 D9                     mov         cx,bx 
3CAF    29 D0                     sub         ax,dx 
3CB1    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
3CB4    40                        inc         ax 
3CB5                          L$515:
3CB5    9A 00 00 00 00            call        draw_borders_ 
3CBA    E8 00 00                  call        wait_leftbutton_release_ 
3CBD    E9 70 F0                  jmp         L$412 
3CC0                          set_timer_rtn_:
3CC0    53                        push        bx 
3CC1    51                        push        cx 
3CC2    52                        push        dx 
3CC3    B8 1C 00                  mov         ax,0x001c 
3CC6    BB 00 00                  mov         bx,seg _old_timer_rtn 
3CC9    B9 00 00                  mov         cx,seg timer_rtn_ 
3CCC    9A 00 00 00 00            call        _dos_getvect_ 
3CD1    8E DB                     mov         ds,bx 
3CD3    BB 00 00                  mov         bx,offset timer_rtn_ 
3CD6    A3 00 00                  mov         word ptr _old_timer_rtn,ax 
3CD9    B8 1C 00                  mov         ax,0x001c 
3CDC    89 16 02 00               mov         word ptr _old_timer_rtn+0x2,dx 
3CE0    9A 00 00 00 00            call        _dos_setvect_ 
3CE5    E9 BA 06                  jmp         L$563 
3CE8                          element_active_:
3CE8    51                        push        cx 
3CE9    56                        push        si 
3CEA    57                        push        di 
3CEB    89 C6                     mov         si,ax 
3CED    89 D7                     mov         di,dx 
3CEF    89 D9                     mov         cx,bx 
3CF1    8E DA                     mov         ds,dx 
3CF3    8B 44 34                  mov         ax,word ptr 0x34[si] 
3CF6    39 C3                     cmp         bx,ax 
3CF8    74 16                     je          L$517 
3CFA    89 C3                     mov         bx,ax 
3CFC    C7 44 34 FF FF            mov         word ptr 0x34[si],0xffff 
3D01    85 C0                     test        ax,ax 
3D03    7C 06                     jl          L$516 
3D05    89 F0                     mov         ax,si 
3D07    0E                        push        cs 
3D08    E8 00 00                  call        window_drawelement_ 
3D0B                          L$516:
3D0B    8E DF                     mov         ds,di 
3D0D    89 4C 34                  mov         word ptr 0x34[si],cx 
3D10                          L$517:
3D10    85 C9                     test        cx,cx 
3D12    0F 8C F4 0D               jl          L$601 
3D16    89 CB                     mov         bx,cx 
3D18    89 F0                     mov         ax,si 
3D1A    89 FA                     mov         dx,di 
3D1C    0E                        push        cs 
3D1D    E8 00 00                  call        window_drawelement_ 
3D20    E9 E7 0D                  jmp         L$601 
3D23                          window_drawelement_text_:
3D23    51                        push        cx 
3D24    56                        push        si 
3D25    57                        push        di 
3D26    C8 0E 00 00               enter       0x000e,0x00 
3D2A    89 C6                     mov         si,ax 
3D2C    89 56 FE                  mov         word ptr -0x2[bp],dx 
3D2F    89 5E FA                  mov         word ptr -0x6[bp],bx 
3D32    89 D8                     mov         ax,bx 
3D34    8E DA                     mov         ds,dx 
3D36    C1 E0 02                  shl         ax,0x02 
3D39    C5 7C 18                  lds         di,dword ptr 0x18[si] 
3D3C    01 C7                     add         di,ax 
3D3E    C5 1D                     lds         bx,dword ptr [di] 
3D40    89 46 FC                  mov         word ptr -0x4[bp],ax 
3D43    F6 47 02 03               test        byte ptr 0x2[bx],0x03 
3D47    75 44                     jne         L$519 
3D49    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3D4C    C1 E8 03                  shr         ax,0x03 
3D4F    25 01 00                  and         ax,0x0001 
3D52    8E C2                     mov         es,dx 
3D54    50                        push        ax 
3D55    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3D59    26 03 44 12               add         ax,word ptr es:0x12[si] 
3D5D    0F B6 57 1E               movzx       dx,byte ptr 0x1e[bx] 
3D61    50                        push        ax 
3D62    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3D68    8B 4F 0E                  mov         cx,word ptr 0xe[bx] 
3D6B    50                        push        ax 
3D6C    89 C7                     mov         di,ax 
3D6E    52                        push        dx 
3D6F    26 03 7C 06               add         di,word ptr es:0x6[si] 
3D73    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3D77    47                        inc         di 
3D78    47                        inc         di 
3D79    8B 57 0C                  mov         dx,word ptr 0xc[bx] 
3D7C    03 47 04                  add         ax,word ptr 0x4[bx] 
3D7F    03 7F 06                  add         di,word ptr 0x6[bx] 
3D82    89 D3                     mov         bx,dx 
3D84    89 FA                     mov         dx,di 
3D86                          L$518:
3D86    0E                        push        cs 
3D87    E8 00 00                  call        gprint_text_ 
3D8A    E9 7C 0D                  jmp         L$600 
3D8D                          L$519:
3D8D    8C D1                     mov         cx,ss 
3D8F    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
3D92    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
3D95    8D 5E F2                  lea         bx,-0xe[bp] 
3D98    9A 00 00 00 00            call        load_xpm_bitmap_ 
3D9D    85 C0                     test        ax,ax 
3D9F    74 3F                     je          L$520 
3DA1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3DA4    6A 00                     push        0x0000 
3DA6    8B 44 04                  mov         ax,word ptr 0x4[si] 
3DA9    8B 7C 18                  mov         di,word ptr 0x18[si] 
3DAC    03 44 12                  add         ax,word ptr 0x12[si] 
3DAF    03 7E FC                  add         di,word ptr -0x4[bp] 
3DB2    50                        push        ax 
3DB3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3DB9    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
3DBC    C5 1D                     lds         bx,dword ptr [di] 
3DBE    50                        push        ax 
3DBF    0F B6 57 1E               movzx       dx,byte ptr 0x1e[bx] 
3DC3    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3DC6    52                        push        dx 
3DC7    26 03 44 06               add         ax,word ptr es:0x6[si] 
3DCB    8B 57 06                  mov         dx,word ptr 0x6[bx] 
3DCE    40                        inc         ax 
3DCF    40                        inc         ax 
3DD0    01 C2                     add         dx,ax 
3DD2    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3DD6    8C D1                     mov         cx,ss 
3DD8    03 47 04                  add         ax,word ptr 0x4[bx] 
3DDB    BB 4C 01                  mov         bx,offset DGROUP:L$1761 
3DDE    EB A6                     jmp         L$518 
3DE0                          L$520:
3DE0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3DE3    8B 7C 18                  mov         di,word ptr 0x18[si] 
3DE6    03 7E FC                  add         di,word ptr -0x4[bp] 
3DE9    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
3DEC    C5 1D                     lds         bx,dword ptr [di] 
3DEE    83 7F 08 00               cmp         word ptr 0x8[bx],0x0000 
3DF2    74 32                     je          L$521 
3DF4    83 7F 0A 00               cmp         word ptr 0xa[bx],0x0000 
3DF8    74 2C                     je          L$521 
3DFA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3E00    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3E03    26 03 44 06               add         ax,word ptr es:0x6[si] 
3E07    8B 4F 06                  mov         cx,word ptr 0x6[bx] 
3E0A    40                        inc         ax 
3E0B    40                        inc         ax 
3E0C    01 C1                     add         cx,ax 
3E0E    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
3E11    26 8B 74 04               mov         si,word ptr es:0x4[si] 
3E15    01 C8                     add         ax,cx 
3E17    03 77 04                  add         si,word ptr 0x4[bx] 
3E1A    50                        push        ax 
3E1B    8B 47 08                  mov         ax,word ptr 0x8[bx] 
3E1E    8C D2                     mov         dx,ss 
3E20    01 F0                     add         ax,si 
3E22    89 F3                     mov         bx,si 
3E24    EB 38                     jmp         L$522 
3E26                          L$521:
3E26    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
3E29    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3E2C    C1 E0 02                  shl         ax,0x02 
3E2F    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
3E32    01 C3                     add         bx,ax 
3E34    C5 3F                     lds         di,dword ptr [bx] 
3E36    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3E3C    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3E3F    26 03 44 06               add         ax,word ptr es:0x6[si] 
3E43    8B 4D 06                  mov         cx,word ptr 0x6[di] 
3E46    40                        inc         ax 
3E47    40                        inc         ax 
3E48    01 C1                     add         cx,ax 
3E4A    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
3E4D    26 8B 5C 04               mov         bx,word ptr es:0x4[si] 
3E51    01 C8                     add         ax,cx 
3E53    03 5D 04                  add         bx,word ptr 0x4[di] 
3E56    50                        push        ax 
3E57    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
3E5A    01 D8                     add         ax,bx 
3E5C    8C D2                     mov         dx,ss 
3E5E                          L$522:
3E5E    50                        push        ax 
3E5F    8D 46 F2                  lea         ax,-0xe[bp] 
3E62    9A 00 00 00 00            call        draw_xpm_bitmap_ 
3E67    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
3E6A    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
3E6D    9A 00 00 00 00            call        free_ 
3E72    E9 94 0C                  jmp         L$600 
3E75                          window_drawelement_button_:
3E75    51                        push        cx 
3E76    56                        push        si 
3E77    57                        push        di 
3E78    C8 04 00 00               enter       0x0004,0x00 
3E7C    89 C6                     mov         si,ax 
3E7E    89 56 FE                  mov         word ptr -0x2[bp],dx 
3E81    8E DA                     mov         ds,dx 
3E83    C1 E3 02                  shl         bx,0x02 
3E86    C5 7C 18                  lds         di,dword ptr 0x18[si] 
3E89    01 DF                     add         di,bx 
3E8B    89 5E FC                  mov         word ptr -0x4[bp],bx 
3E8E    C5 1D                     lds         bx,dword ptr [di] 
3E90    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3E96    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
3E99    8B 7F 08                  mov         di,word ptr 0x8[bx] 
3E9C    8E C2                     mov         es,dx 
3E9E    26 03 44 06               add         ax,word ptr es:0x6[si] 
3EA2    8B 57 06                  mov         dx,word ptr 0x6[bx] 
3EA5    40                        inc         ax 
3EA6    40                        inc         ax 
3EA7    01 C2                     add         dx,ax 
3EA9    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3EAD    6A 00                     push        0x0000 
3EAF    03 47 04                  add         ax,word ptr 0x4[bx] 
3EB2    89 FB                     mov         bx,di 
3EB4    9A 00 00 00 00            call        draw_borders_ 
3EB9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3EBC    8B 7C 18                  mov         di,word ptr 0x18[si] 
3EBF    03 7E FC                  add         di,word ptr -0x4[bp] 
3EC2    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
3EC5    C5 1D                     lds         bx,dword ptr [di] 
3EC7    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3ECA    C1 E8 03                  shr         ax,0x03 
3ECD    25 01 00                  and         ax,0x0001 
3ED0    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3ED3    50                        push        ax 
3ED4    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3ED8    05 0A 00                  add         ax,0x000a 
3EDB    8B 57 08                  mov         dx,word ptr 0x8[bx] 
3EDE    03 47 04                  add         ax,word ptr 0x4[bx] 
3EE1    01 C2                     add         dx,ax 
3EE3    0F B6 4F 1E               movzx       cx,byte ptr 0x1e[bx] 
3EE7    52                        push        dx 
3EE8    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3EEE    26 8B 74 06               mov         si,word ptr es:0x6[si] 
3EF2    52                        push        dx 
3EF3    46                        inc         si 
3EF4    51                        push        cx 
3EF5    01 F2                     add         dx,si 
3EF7    8B 4F 0C                  mov         cx,word ptr 0xc[bx] 
3EFA    42                        inc         dx 
3EFB    42                        inc         dx 
3EFC    89 4E FC                  mov         word ptr -0x4[bp],cx 
3EFF    03 57 06                  add         dx,word ptr 0x6[bx] 
3F02    8B 4F 0E                  mov         cx,word ptr 0xe[bx] 
3F05    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
3F08    E9 7B FE                  jmp         L$518 
3F0B                          window_drawelement_textbox_:
3F0B    51                        push        cx 
3F0C    56                        push        si 
3F0D    57                        push        di 
3F0E    C8 08 00 00               enter       0x0008,0x00 
3F12    89 C6                     mov         si,ax 
3F14    89 56 FE                  mov         word ptr -0x2[bp],dx 
3F17    89 5E FA                  mov         word ptr -0x6[bp],bx 
3F1A    89 D8                     mov         ax,bx 
3F1C    8E DA                     mov         ds,dx 
3F1E    C1 E0 02                  shl         ax,0x02 
3F21    C5 7C 18                  lds         di,dword ptr 0x18[si] 
3F24    01 C7                     add         di,ax 
3F26    6A 01                     push        0x0001 
3F28    C5 1D                     lds         bx,dword ptr [di] 
3F2A    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
3F30    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
3F33    8B 7F 08                  mov         di,word ptr 0x8[bx] 
3F36    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3F39    89 46 FC                  mov         word ptr -0x4[bp],ax 
3F3C    26 03 54 06               add         dx,word ptr es:0x6[si] 
3F40    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3F44    42                        inc         dx 
3F45    42                        inc         dx 
3F46    03 47 04                  add         ax,word ptr 0x4[bx] 
3F49    03 57 06                  add         dx,word ptr 0x6[bx] 
3F4C    89 FB                     mov         bx,di 
3F4E    9A 00 00 00 00            call        draw_borders_ 
3F53    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3F56    8B 44 34                  mov         ax,word ptr 0x34[si] 
3F59    3B 46 FA                  cmp         ax,word ptr -0x6[bp] 
3F5C    74 35                     je          L$523 
3F5E    8B 7C 18                  mov         di,word ptr 0x18[si] 
3F61    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
3F67    03 7E FC                  add         di,word ptr -0x4[bp] 
3F6A    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
3F6D    50                        push        ax 
3F6E    C5 1D                     lds         bx,dword ptr [di] 
3F70    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
3F76    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
3F79    8B 57 08                  mov         dx,word ptr 0x8[bx] 
3F7C    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3F7F    26 03 44 06               add         ax,word ptr es:0x6[si] 
3F83    8B 7F 06                  mov         di,word ptr 0x6[bx] 
3F86    40                        inc         ax 
3F87    40                        inc         ax 
3F88    01 C7                     add         di,ax 
3F8A    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3F8E    03 47 04                  add         ax,word ptr 0x4[bx] 
3F91    EB 31                     jmp         L$524 
3F93                          L$523:
3F93    8B 7C 18                  mov         di,word ptr 0x18[si] 
3F96    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
3F9C    03 7E FC                  add         di,word ptr -0x4[bp] 
3F9F    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
3FA2    C5 1D                     lds         bx,dword ptr [di] 
3FA4    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
3FAA    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
3FAD    8B 57 08                  mov         dx,word ptr 0x8[bx] 
3FB0    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3FB3    50                        push        ax 
3FB4    26 03 7C 06               add         di,word ptr es:0x6[si] 
3FB8    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3FBC    47                        inc         di 
3FBD    47                        inc         di 
3FBE    03 47 04                  add         ax,word ptr 0x4[bx] 
3FC1    03 7F 06                  add         di,word ptr 0x6[bx] 
3FC4                          L$524:
3FC4    89 D3                     mov         bx,dx 
3FC6    89 FA                     mov         dx,di 
3FC8    9A 00 00 00 00            call        draw_rectangle_ 
3FCD    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
3FD0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
3FD3    C1 E0 02                  shl         ax,0x02 
3FD6    C5 7C 18                  lds         di,dword ptr 0x18[si] 
3FD9    01 C7                     add         di,ax 
3FDB    C5 1D                     lds         bx,dword ptr [di] 
3FDD    8B 47 0E                  mov         ax,word ptr 0xe[bx] 
3FE0    8B 57 0C                  mov         dx,word ptr 0xc[bx] 
3FE3    85 C0                     test        ax,ax 
3FE5    75 06                     jne         L$525 
3FE7    85 D2                     test        dx,dx 
3FE9    0F 84 1C 0B               je          L$600 
3FED                          L$525:
3FED    8B 47 02                  mov         ax,word ptr 0x2[bx] 
3FF0    C1 E8 03                  shr         ax,0x03 
3FF3    25 01 00                  and         ax,0x0001 
3FF6    8E 46 FE                  mov         es,word ptr -0x2[bp] 
3FF9    50                        push        ax 
3FFA    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
3FFE    8B 57 08                  mov         dx,word ptr 0x8[bx] 
4001    03 47 04                  add         ax,word ptr 0x4[bx] 
4004    01 C2                     add         dx,ax 
4006    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
400C    52                        push        dx 
400D    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
4013    40                        inc         ax 
4014    40                        inc         ax 
4015    52                        push        dx 
4016    26 03 54 06               add         dx,word ptr es:0x6[si] 
401A    51                        push        cx 
401B    42                        inc         dx 
401C    42                        inc         dx 
401D    8B 4F 0C                  mov         cx,word ptr 0xc[bx] 
4020    03 57 06                  add         dx,word ptr 0x6[bx] 
4023    89 4E F8                  mov         word ptr -0x8[bp],cx 
4026    42                        inc         dx 
4027    42                        inc         dx 
4028    8B 4F 0E                  mov         cx,word ptr 0xe[bx] 
402B    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
402E    E9 55 FD                  jmp         L$518 
4031                          draw_label_:
4031    56                        push        si 
4032    57                        push        di 
4033    C8 02 00 00               enter       0x0002,0x00 
4037    89 C6                     mov         si,ax 
4039    89 D7                     mov         di,dx 
403B    89 5E FE                  mov         word ptr -0x2[bp],bx 
403E    51                        push        cx 
403F    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
4045    41                        inc         cx 
4046    41                        inc         cx 
4047    9A 00 00 00 00            call        draw_rectangle_ 
404C    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
404F    FF 76 0E                  push        word ptr 0xe[bp] 
4052    01 F0                     add         ax,si 
4054    8B 5E 0A                  mov         bx,word ptr 0xa[bp] 
4057    50                        push        ax 
4058    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
405E    8B 4E 0C                  mov         cx,word ptr 0xc[bp] 
4061    50                        push        ax 
4062    0F B6 46 08               movzx       ax,byte ptr 0x8[bp] 
4066    8D 55 02                  lea         dx,0x2[di] 
4069    50                        push        ax 
406A    8D 44 02                  lea         ax,0x2[si] 
406D    0E                        push        cs 
406E    E8 00 00                  call        gprint_text_ 
4071    C9                        leave       
4072                          L$526:
4072    5F                        pop         di 
4073    5E                        pop         si 
4074    C2 08 00                  ret         0x0008 
4077                          window_drawelement_list_:
4077    51                        push        cx 
4078    56                        push        si 
4079    57                        push        di 
407A    C8 1C 00 00               enter       0x001c,0x00 
407E    50                        push        ax 
407F    52                        push        dx 
4080    C1 E3 02                  shl         bx,0x02 
4083    8E DA                     mov         ds,dx 
4085    89 5E F4                  mov         word ptr -0xc[bp],bx 
4088    89 C3                     mov         bx,ax 
408A    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
408D    89 C6                     mov         si,ax 
408F    03 5E F4                  add         bx,word ptr -0xc[bp] 
4092    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4095    31 D2                     xor         dx,dx 
4097    8B 37                     mov         si,word ptr [bx] 
4099    8B 47 02                  mov         ax,word ptr 0x2[bx] 
409C    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
40A2    89 46 FE                  mov         word ptr -0x2[bp],ax 
40A5    8E D8                     mov         ds,ax 
40A7    43                        inc         bx 
40A8    43                        inc         bx 
40A9    8B 44 0A                  mov         ax,word ptr 0xa[si] 
40AC    F7 F3                     div         bx 
40AE    8E 5E E0                  mov         ds,word ptr -0x20[bp] 
40B1    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
40B4    89 46 F8                  mov         word ptr -0x8[bp],ax 
40B7    8B 47 04                  mov         ax,word ptr 0x4[bx] 
40BA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
40BD    03 44 04                  add         ax,word ptr 0x4[si] 
40C0    8E 5E E0                  mov         ds,word ptr -0x20[bp] 
40C3    8B 5F 06                  mov         bx,word ptr 0x6[bx] 
40C6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
40C9    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
40CF    03 5C 06                  add         bx,word ptr 0x6[si] 
40D2    01 DA                     add         dx,bx 
40D4    42                        inc         dx 
40D5    42                        inc         dx 
40D6    89 56 F0                  mov         word ptr -0x10[bp],dx 
40D9    8B 54 02                  mov         dx,word ptr 0x2[si] 
40DC    C1 EA 03                  shr         dx,0x03 
40DF    83 E2 01                  and         dx,0x0001 
40E2    6A 01                     push        0x0001 
40E4    89 56 E4                  mov         word ptr -0x1c[bp],dx 
40E7    8B 54 08                  mov         dx,word ptr 0x8[si] 
40EA    8B 7E E2                  mov         di,word ptr -0x1e[bp] 
40ED    89 56 F2                  mov         word ptr -0xe[bp],dx 
40F0    8B 54 18                  mov         dx,word ptr 0x18[si] 
40F3    8B 4C 0A                  mov         cx,word ptr 0xa[si] 
40F6    89 56 E8                  mov         word ptr -0x18[bp],dx 
40F9    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
40FC    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
40FF    89 56 EC                  mov         word ptr -0x14[bp],dx 
4102    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
4105    89 46 EA                  mov         word ptr -0x16[bp],ax 
4108    9A 00 00 00 00            call        draw_borders_ 
410D    8E 5E E0                  mov         ds,word ptr -0x20[bp] 
4110    8B 7D 18                  mov         di,word ptr 0x18[di] 
4113    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
4116    03 7E F4                  add         di,word ptr -0xc[bp] 
4119    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
411C    C5 1D                     lds         bx,dword ptr [di] 
411E    8B 47 16                  mov         ax,word ptr 0x16[bx] 
4121    8B 57 14                  mov         dx,word ptr 0x14[bx] 
4124    85 C0                     test        ax,ax 
4126    75 06                     jne         L$527 
4128    85 D2                     test        dx,dx 
412A    0F 84 DB 09               je          L$600 
412E                          L$527:
412E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4131    8B 44 1A                  mov         ax,word ptr 0x1a[si] 
4134    89 46 FC                  mov         word ptr -0x4[bp],ax 
4137    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
413A    89 46 E6                  mov         word ptr -0x1a[bp],ax 
413D    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
4140    C1 E0 02                  shl         ax,0x02 
4143    89 46 FA                  mov         word ptr -0x6[bp],ax 
4146    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
4149    F7 D8                     neg         ax 
414B    03 46 FC                  add         ax,word ptr -0x4[bp] 
414E    89 46 F6                  mov         word ptr -0xa[bp],ax 
4151                          L$528:
4151    C5 46 FC                  lds         ax,dword ptr -0x4[bp] 
4154    3B 44 20                  cmp         ax,word ptr 0x20[si] 
4157    0F 83 AE 09               jae         L$600 
415B    FF 4E F8                  dec         word ptr -0x8[bp] 
415E    83 7E F8 FF               cmp         word ptr -0x8[bp],0xffff 
4162    0F 84 A3 09               je          L$600 
4166    8B 44 2A                  mov         ax,word ptr 0x2a[si] 
4169    3B 46 FC                  cmp         ax,word ptr -0x4[bp] 
416C    75 0E                     jne         L$529 
416E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ATEXTCOLOR 
4174    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__ATEXT_BGCOLOR 
417A    EB 0C                     jmp         L$530 
417C                          L$529:
417C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
4182    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__TEXTBOX_BGCOLOR 
4188                          L$530:
4188    89 46 EE                  mov         word ptr -0x12[bp],ax 
418B    8E 5E E0                  mov         ds,word ptr -0x20[bp] 
418E    8B 7E E2                  mov         di,word ptr -0x1e[bp] 
4191    8B 7D 18                  mov         di,word ptr 0x18[di] 
4194    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
4197    03 7E E6                  add         di,word ptr -0x1a[bp] 
419A    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
419D    C5 1D                     lds         bx,dword ptr [di] 
419F    C5 47 14                  lds         ax,dword ptr 0x14[bx] 
41A2    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
41A5    01 C3                     add         bx,ax 
41A7    8B 47 02                  mov         ax,word ptr 0x2[bx] 
41AA    8B 0F                     mov         cx,word ptr [bx] 
41AC    85 C0                     test        ax,ax 
41AE    75 04                     jne         L$531 
41B0    85 C9                     test        cx,cx 
41B2    74 33                     je          L$532 
41B4                          L$531:
41B4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
41B7    8B 5C 14                  mov         bx,word ptr 0x14[si] 
41BA    03 5E FA                  add         bx,word ptr -0x6[bp] 
41BD    8E 5C 16                  mov         ds,word ptr 0x16[si] 
41C0    C4 3F                     les         di,dword ptr [bx] 
41C2    B9 FF FF                  mov         cx,0xffff 
41C5    33 C0                     xor         ax,ax 
41C7    F2 AE                     repne scasb 
41C9    F7 D1                     not         cx 
41CB    49                        dec         cx 
41CC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
41CF    3B 4C 18                  cmp         cx,word ptr 0x18[si] 
41D2    72 13                     jb          L$532 
41D4    8B 5C 14                  mov         bx,word ptr 0x14[si] 
41D7    03 5E FA                  add         bx,word ptr -0x6[bp] 
41DA    8E 5C 16                  mov         ds,word ptr 0x16[si] 
41DD    8B 0F                     mov         cx,word ptr [bx] 
41DF    8B 7F 02                  mov         di,word ptr 0x2[bx] 
41E2    03 4E E8                  add         cx,word ptr -0x18[bp] 
41E5    EB 05                     jmp         L$533 
41E7                          L$532:
41E7    B9 00 00                  mov         cx,offset _null_byte 
41EA    8C D7                     mov         di,ss 
41EC                          L$533:
41EC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
41F2    40                        inc         ax 
41F3    40                        inc         ax 
41F4    0F AF 46 F6               imul        ax,word ptr -0xa[bp] 
41F8    FF 76 E4                  push        word ptr -0x1c[bp] 
41FB    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
41FE    57                        push        di 
41FF    83 46 FA 04               add         word ptr -0x6[bp],0x0004 
4203    51                        push        cx 
4204    FF 46 FC                  inc         word ptr -0x4[bp] 
4207    FF 76 EE                  push        word ptr -0x12[bp] 
420A    03 46 F0                  add         ax,word ptr -0x10[bp] 
420D    89 D1                     mov         cx,dx 
420F    89 C2                     mov         dx,ax 
4211    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
4214    FF 46 F6                  inc         word ptr -0xa[bp] 
4217    E8 00 00                  call        draw_label_ 
421A    E9 34 FF                  jmp         L$528 
421D                          get_str_pos_:
421D    56                        push        si 
421E    57                        push        di 
421F    55                        push        bp 
4220    89 E5                     mov         bp,sp 
4222    50                        push        ax 
4223    52                        push        dx 
4224    89 DF                     mov         di,bx 
4226    89 CB                     mov         bx,cx 
4228    B1 0A                     mov         cl,0x0a 
422A                          L$534:
422A    4F                        dec         di 
422B    83 FF FF                  cmp         di,0xffff 
422E    74 28                     je          L$538 
4230    8B 76 FE                  mov         si,word ptr -0x2[bp] 
4233    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
4236    8C DA                     mov         dx,ds 
4238                          L$535:
4238    8A 04                     mov         al,byte ptr [si] 
423A    3A C1                     cmp         al,cl 
423C    74 09                     je          L$536 
423E    46                        inc         si 
423F    3C 00                     cmp         al,0x00 
4241    75 F5                     jne         L$535 
4243    2B F6                     sub         si,si 
4245    2B D2                     sub         dx,dx 
4247                          L$536:
4247    85 D2                     test        dx,dx 
4249    75 04                     jne         L$537 
424B    85 F6                     test        si,si 
424D    74 31                     je          L$543 
424F                          L$537:
424F    46                        inc         si 
4250    89 56 FC                  mov         word ptr -0x4[bp],dx 
4253    89 76 FE                  mov         word ptr -0x2[bp],si 
4256    EB D2                     jmp         L$534 
4258                          L$538:
4258    B1 0A                     mov         cl,0x0a 
425A    8B 76 FE                  mov         si,word ptr -0x2[bp] 
425D    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
4260    8C DA                     mov         dx,ds 
4262                          L$539:
4262    8A 04                     mov         al,byte ptr [si] 
4264    3A C1                     cmp         al,cl 
4266    74 09                     je          L$540 
4268    46                        inc         si 
4269    3C 00                     cmp         al,0x00 
426B    75 F5                     jne         L$539 
426D    2B F6                     sub         si,si 
426F    2B D2                     sub         dx,dx 
4271                          L$540:
4271    85 D2                     test        dx,dx 
4273    75 04                     jne         L$541 
4275    85 F6                     test        si,si 
4277    74 0E                     je          L$544 
4279                          L$541:
4279    2B 76 FE                  sub         si,word ptr -0x2[bp] 
427C    39 F3                     cmp         bx,si 
427E                          L$542:
427E    76 1A                     jbe         L$545 
4280                          L$543:
4280    31 C0                     xor         ax,ax 
4282    31 D2                     xor         dx,dx 
4284    E9 1A D8                  jmp         L$279 
4287                          L$544:
4287    8B 7E FE                  mov         di,word ptr -0x2[bp] 
428A    1E                        push        ds 
428B    07                        pop         es 
428C    B9 FF FF                  mov         cx,0xffff 
428F    33 C0                     xor         ax,ax 
4291    F2 AE                     repne scasb 
4293    F7 D1                     not         cx 
4295    49                        dec         cx 
4296    39 CB                     cmp         bx,cx 
4298    EB E4                     jmp         L$542 
429A                          L$545:
429A    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
429D    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
42A0    01 D8                     add         ax,bx 
42A2    E9 FC D7                  jmp         L$279 
42A5                          row_count_:
42A5    53                        push        bx 
42A6    51                        push        cx 
42A7    56                        push        si 
42A8    BB 01 00                  mov         bx,0x0001 
42AB    B1 0A                     mov         cl,0x0a 
42AD                          L$546:
42AD    89 C6                     mov         si,ax 
42AF    8E DA                     mov         ds,dx 
42B1    8C DA                     mov         dx,ds 
42B3                          L$547:
42B3    8A 04                     mov         al,byte ptr [si] 
42B5    3A C1                     cmp         al,cl 
42B7    74 09                     je          L$548 
42B9    46                        inc         si 
42BA    3C 00                     cmp         al,0x00 
42BC    75 F5                     jne         L$547 
42BE    2B F6                     sub         si,si 
42C0    2B D2                     sub         dx,dx 
42C2                          L$548:
42C2    85 D2                     test        dx,dx 
42C4    75 04                     jne         L$549 
42C6    85 F6                     test        si,si 
42C8    74 06                     je          L$550 
42CA                          L$549:
42CA    43                        inc         bx 
42CB    8D 44 01                  lea         ax,0x1[si] 
42CE    EB DD                     jmp         L$546 
42D0                          L$550:
42D0    89 D8                     mov         ax,bx 
42D2    E9 B7 4C                  jmp         L$1096 
42D5                          draw_textbox_caret_:
42D5    53                        push        bx 
42D6    51                        push        cx 
42D7    52                        push        dx 
42D8    55                        push        bp 
42D9    31 ED                     xor         bp,bp 
42DB    3D 02 00                  cmp         ax,0x0002 
42DE    75 08                     jne         L$551 
42E0    C6 86 2D 02 00            mov         byte ptr DGROUP:L$1915[bp],0x00 
42E5    E9 B4 00                  jmp         L$562 
42E8                          L$551:
42E8    85 C0                     test        ax,ax 
42EA    75 67                     jne         L$558 
42EC    80 BE 00 00 00            cmp         byte ptr _caret_visible[bp],0x00 
42F1    74 07                     je          L$552 
42F3    80 BE 2D 02 00            cmp         byte ptr DGROUP:L$1915[bp],0x00 
42F8    74 15                     je          L$553 
42FA                          L$552:
42FA    B8 00 00                  mov         ax,seg _clock_ticks 
42FD    8E D8                     mov         ds,ax 
42FF    A1 00 00                  mov         ax,word ptr _clock_ticks 
4302    A8 10                     test        al,0x10 
4304    74 4D                     je          L$558 
4306    80 BE 2D 02 00            cmp         byte ptr DGROUP:L$1915[bp],0x00 
430B    0F 85 8D 00               jne         L$562 
430F                          L$553:
430F    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
4314                          L$554:
4314    49                        dec         cx 
4315    83 F9 FF                  cmp         cx,0xffff 
4318    74 32                     je          L$557 
431A    8B 96 00 00               mov         dx,word ptr _caret_screeny[bp] 
431E    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
4322    01 CA                     add         dx,cx 
4324    9A 00 00 00 00            call        get_pixel_ 
4329    8B 96 00 00               mov         dx,word ptr _caret_screeny[bp] 
432D    01 CA                     add         dx,cx 
432F    3A 86 00 00               cmp         al,byte ptr __TEXTBOX_ABGCOLOR[bp] 
4333    74 10                     je          L$556 
4335    0F B6 9E 00 00            movzx       bx,byte ptr __TEXTBOX_ABGCOLOR[bp] 
433A                          L$555:
433A    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
433E    9A 00 00 00 00            call        put_pixel_ 
4343    EB CF                     jmp         L$554 
4345                          L$556:
4345    0F B6 9E 00 00            movzx       bx,byte ptr __TEXTBOX_TEXTCOLOR[bp] 
434A    EB EE                     jmp         L$555 
434C                          L$557:
434C    C6 86 2D 02 01            mov         byte ptr DGROUP:L$1915[bp],0x01 
4351    EB 49                     jmp         L$562 
4353                          L$558:
4353    80 BE 2D 02 00            cmp         byte ptr DGROUP:L$1915[bp],0x00 
4358    74 42                     je          L$562 
435A    C6 86 2D 02 00            mov         byte ptr DGROUP:L$1915[bp],0x00 
435F    0F B6 8E 00 00            movzx       cx,byte ptr __FONT_HEIGHT[bp] 
4364                          L$559:
4364    49                        dec         cx 
4365    83 F9 FF                  cmp         cx,0xffff 
4368    74 32                     je          L$562 
436A    8B 96 00 00               mov         dx,word ptr _caret_screeny[bp] 
436E    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
4372    01 CA                     add         dx,cx 
4374    9A 00 00 00 00            call        get_pixel_ 
4379    8B 96 00 00               mov         dx,word ptr _caret_screeny[bp] 
437D    01 CA                     add         dx,cx 
437F    3A 86 00 00               cmp         al,byte ptr __TEXTBOX_TEXTCOLOR[bp] 
4383    74 10                     je          L$561 
4385    0F B6 9E 00 00            movzx       bx,byte ptr __TEXTBOX_TEXTCOLOR[bp] 
438A                          L$560:
438A    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
438E    9A 00 00 00 00            call        put_pixel_ 
4393    EB CF                     jmp         L$559 
4395                          L$561:
4395    0F B6 9E 00 00            movzx       bx,byte ptr __TEXTBOX_ABGCOLOR[bp] 
439A    EB EE                     jmp         L$560 
439C                          L$562:
439C    C6 86 00 00 00            mov         byte ptr _caret_visible[bp],0x00 
43A1    5D                        pop         bp 
43A2                          L$563:
43A2    5A                        pop         dx 
43A3    59                        pop         cx 
43A4    5B                        pop         bx 
43A5    C3                        ret         
43A6                          window_drawelement_mltext_:
43A6    51                        push        cx 
43A7    56                        push        si 
43A8    57                        push        di 
43A9    C8 3A 00 00               enter       0x003a,0x00 
43AD    89 C7                     mov         di,ax 
43AF    89 56 F2                  mov         word ptr -0xe[bp],dx 
43B2    89 5E E8                  mov         word ptr -0x18[bp],bx 
43B5    8E DA                     mov         ds,dx 
43B7    C1 E3 02                  shl         bx,0x02 
43BA    C5 45 18                  lds         ax,dword ptr 0x18[di] 
43BD    01 C3                     add         bx,ax 
43BF    8B 47 02                  mov         ax,word ptr 0x2[bx] 
43C2    8B 37                     mov         si,word ptr [bx] 
43C4    8E D8                     mov         ds,ax 
43C6    89 46 FC                  mov         word ptr -0x4[bp],ax 
43C9    8B 44 0C                  mov         ax,word ptr 0xc[si] 
43CC    89 46 F8                  mov         word ptr -0x8[bp],ax 
43CF    8B 44 0E                  mov         ax,word ptr 0xe[si] 
43D2    31 D2                     xor         dx,dx 
43D4    89 46 FA                  mov         word ptr -0x6[bp],ax 
43D7    8B 44 2A                  mov         ax,word ptr 0x2a[si] 
43DA    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
43E0    89 46 CE                  mov         word ptr -0x32[bp],ax 
43E3    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
43E6    8D 4F 02                  lea         cx,0x2[bx] 
43E9    89 46 CC                  mov         word ptr -0x34[bp],ax 
43EC    8B 44 0A                  mov         ax,word ptr 0xa[si] 
43EF    F7 F1                     div         cx 
43F1    8E 5E F2                  mov         ds,word ptr -0xe[bp] 
43F4    89 46 EA                  mov         word ptr -0x16[bp],ax 
43F7    8B 45 04                  mov         ax,word ptr 0x4[di] 
43FA    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
43FD    03 44 04                  add         ax,word ptr 0x4[si] 
4400    8E 5E F2                  mov         ds,word ptr -0xe[bp] 
4403    8B 55 06                  mov         dx,word ptr 0x6[di] 
4406    42                        inc         dx 
4407    42                        inc         dx 
4408    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
440B    01 DA                     add         dx,bx 
440D    8B 5C 06                  mov         bx,word ptr 0x6[si] 
4410    01 D3                     add         bx,dx 
4412    8B 54 18                  mov         dx,word ptr 0x18[si] 
4415    89 56 F0                  mov         word ptr -0x10[bp],dx 
4418    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
441B    89 56 D4                  mov         word ptr -0x2c[bp],dx 
441E    8B 54 08                  mov         dx,word ptr 0x8[si] 
4421    89 56 F4                  mov         word ptr -0xc[bp],dx 
4424    8B 54 02                  mov         dx,word ptr 0x2[si] 
4427    C1 EA 03                  shr         dx,0x03 
442A    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
442F    30 F6                     xor         dh,dh 
4431    89 46 F6                  mov         word ptr -0xa[bp],ax 
4434    80 E2 01                  and         dl,0x01 
4437    89 5E EC                  mov         word ptr -0x14[bp],bx 
443A    89 56 E4                  mov         word ptr -0x1c[bp],dx 
443D    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
4440    8E 5E F2                  mov         ds,word ptr -0xe[bp] 
4443    01 C2                     add         dx,ax 
4445    8B 45 34                  mov         ax,word ptr 0x34[di] 
4448    89 56 D6                  mov         word ptr -0x2a[bp],dx 
444B    3B 46 E8                  cmp         ax,word ptr -0x18[bp] 
444E    75 11                     jne         L$564 
4450    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
4456    89 46 EE                  mov         word ptr -0x12[bp],ax 
4459    B8 02 00                  mov         ax,0x0002 
445C    E8 00 00                  call        draw_textbox_caret_ 
445F    EB 09                     jmp         L$565 
4461                          L$564:
4461    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
4467    89 46 EE                  mov         word ptr -0x12[bp],ax 
446A                          L$565:
446A    8B 5E D4                  mov         bx,word ptr -0x2c[bp] 
446D    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
4470    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4473    31 C9                     xor         cx,cx 
4475    E8 00 00                  call        get_str_pos_ 
4478    6A 01                     push        0x0001 
447A    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
447D    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
4480    89 46 DE                  mov         word ptr -0x22[bp],ax 
4483    89 56 E2                  mov         word ptr -0x1e[bp],dx 
4486    89 46 F8                  mov         word ptr -0x8[bp],ax 
4489    89 56 FA                  mov         word ptr -0x6[bp],dx 
448C    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
448F    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
4492    8B 4C 0A                  mov         cx,word ptr 0xa[si] 
4495    9A 00 00 00 00            call        draw_borders_ 
449A    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
449D    8B 56 E2                  mov         dx,word ptr -0x1e[bp] 
44A0    E8 00 00                  call        row_len_ 
44A3    3B 46 F0                  cmp         ax,word ptr -0x10[bp] 
44A6    73 1C                     jae         L$566 
44A8    FF 76 EE                  push        word ptr -0x12[bp] 
44AB    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
44AE    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
44B1    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
44B7    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
44BA    41                        inc         cx 
44BB    41                        inc         cx 
44BC    9A 00 00 00 00            call        draw_rectangle_ 
44C1    E9 2B 01                  jmp         L$578 
44C4                          L$566:
44C4    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
44C7    89 46 FA                  mov         word ptr -0x6[bp],ax 
44CA    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
44CD    03 46 F0                  add         ax,word ptr -0x10[bp] 
44D0    89 46 F8                  mov         word ptr -0x8[bp],ax 
44D3                          L$567:
44D3    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
44D6    3B 46 EA                  cmp         ax,word ptr -0x16[bp] 
44D9    0F 83 2C 06               jae         L$600 
44DD    B1 0A                     mov         cl,0x0a 
44DF    C5 76 F8                  lds         si,dword ptr -0x8[bp] 
44E2    8C DA                     mov         dx,ds 
44E4                          L$568:
44E4    8A 04                     mov         al,byte ptr [si] 
44E6    3A C1                     cmp         al,cl 
44E8    74 09                     je          L$569 
44EA    46                        inc         si 
44EB    3C 00                     cmp         al,0x00 
44ED    75 F5                     jne         L$568 
44EF    2B F6                     sub         si,si 
44F1    2B D2                     sub         dx,dx 
44F3                          L$569:
44F3    89 76 DC                  mov         word ptr -0x24[bp],si 
44F6    89 56 DA                  mov         word ptr -0x26[bp],dx 
44F9    85 D2                     test        dx,dx 
44FB    75 04                     jne         L$570 
44FD    85 F6                     test        si,si 
44FF    74 05                     je          L$571 
4501                          L$570:
4501    8E DA                     mov         ds,dx 
4503    C6 04 00                  mov         byte ptr [si],0x00 
4506                          L$571:
4506    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
450C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
450F    41                        inc         cx 
4510    41                        inc         cx 
4511    0F AF D1                  imul        dx,cx 
4514    03 56 EC                  add         dx,word ptr -0x14[bp] 
4517    89 D0                     mov         ax,dx 
4519    40                        inc         ax 
451A    40                        inc         ax 
451B    89 46 E0                  mov         word ptr -0x20[bp],ax 
451E    8B 46 D4                  mov         ax,word ptr -0x2c[bp] 
4521    8B 76 F6                  mov         si,word ptr -0xa[bp] 
4524    03 46 FE                  add         ax,word ptr -0x2[bp] 
4527    46                        inc         si 
4528    46                        inc         si 
4529    3B 46 CE                  cmp         ax,word ptr -0x32[bp] 
452C    0F 85 8E 00               jne         L$575 
4530    FF 76 EE                  push        word ptr -0x12[bp] 
4533    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
4536    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
4539    9A 00 00 00 00            call        draw_rectangle_ 
453E    8B 46 CC                  mov         ax,word ptr -0x34[bp] 
4541    2B 46 F0                  sub         ax,word ptr -0x10[bp] 
4544    74 29                     je          L$572 
4546    FF 76 E4                  push        word ptr -0x1c[bp] 
4549    50                        push        ax 
454A    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
454D    FF 76 D6                  push        word ptr -0x2a[bp] 
4550    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4556    8B 4E FA                  mov         cx,word ptr -0x6[bp] 
4559    50                        push        ax 
455A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
4560    8B 56 E0                  mov         dx,word ptr -0x20[bp] 
4563    50                        push        ax 
4564    89 F0                     mov         ax,si 
4566    8D 76 C6                  lea         si,-0x3a[bp] 
4569    0E                        push        cs 
456A    E8 00 00                  call        cprint_text_ 
456D    EB 0F                     jmp         L$573 
456F                          L$572:
456F    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
4572    89 46 C8                  mov         word ptr -0x38[bp],ax 
4575    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
4578    89 76 C6                  mov         word ptr -0x3a[bp],si 
457B    89 46 CA                  mov         word ptr -0x36[bp],ax 
457E                          L$573:
457E    8E 5E F2                  mov         ds,word ptr -0xe[bp] 
4581    8B 45 34                  mov         ax,word ptr 0x34[di] 
4584    3B 46 E8                  cmp         ax,word ptr -0x18[bp] 
4587    75 0F                     jne         L$574 
4589    8B 46 C6                  mov         ax,word ptr -0x3a[bp] 
458C    48                        dec         ax 
458D    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
4591    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
4594    36 A3 00 00               mov         word ptr ss:_caret_screeny,ax 
4598                          L$574:
4598    FF 76 E4                  push        word ptr -0x1c[bp] 
459B    8B 5E C8                  mov         bx,word ptr -0x38[bp] 
459E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
45A4    FF 76 D6                  push        word ptr -0x2a[bp] 
45A7    8B 4E CA                  mov         cx,word ptr -0x36[bp] 
45AA    50                        push        ax 
45AB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
45B1    8B 56 E0                  mov         dx,word ptr -0x20[bp] 
45B4    50                        push        ax 
45B5    8B 46 C6                  mov         ax,word ptr -0x3a[bp] 
45B8    0E                        push        cs 
45B9    E8 00 00                  call        gprint_text_ 
45BC    EB 1C                     jmp         L$576 
45BE                          L$575:
45BE    FF 76 E4                  push        word ptr -0x1c[bp] 
45C1    8B 4E EE                  mov         cx,word ptr -0x12[bp] 
45C4    FF 76 FA                  push        word ptr -0x6[bp] 
45C7    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
45CD    FF 76 F8                  push        word ptr -0x8[bp] 
45D0    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
45D3    50                        push        ax 
45D4    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
45D7    E8 00 00                  call        draw_label_ 
45DA                          L$576:
45DA    83 7E DA 00               cmp         word ptr -0x26[bp],0x0000 
45DE    75 06                     jne         L$577 
45E0    83 7E DC 00               cmp         word ptr -0x24[bp],0x0000 
45E4    74 09                     je          L$578 
45E6                          L$577:
45E6    8E 5E DA                  mov         ds,word ptr -0x26[bp] 
45E9    8B 5E DC                  mov         bx,word ptr -0x24[bp] 
45EC    C6 07 0A                  mov         byte ptr [bx],0x0a 
45EF                          L$578:
45EF    8B 4E F0                  mov         cx,word ptr -0x10[bp] 
45F2    BB 01 00                  mov         bx,0x0001 
45F5    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
45F8    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
45FB    E8 00 00                  call        get_str_pos_ 
45FE    85 D2                     test        dx,dx 
4600    0F 85 98 00               jne         L$583 
4604    85 C0                     test        ax,ax 
4606    0F 85 92 00               jne         L$583 
460A    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
460D    40                        inc         ax 
460E    89 46 D8                  mov         word ptr -0x28[bp],ax 
4611    3B 46 EA                  cmp         ax,word ptr -0x16[bp] 
4614    0F 83 F1 04               jae         L$600 
4618    C7 46 E6 01 00            mov         word ptr -0x1a[bp],0x0001 
461D                          L$579:
461D    BB 01 00                  mov         bx,0x0001 
4620    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
4623    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4626    31 C9                     xor         cx,cx 
4628    E8 00 00                  call        get_str_pos_ 
462B    89 C6                     mov         si,ax 
462D    89 D3                     mov         bx,dx 
462F    89 46 D0                  mov         word ptr -0x30[bp],ax 
4632    89 56 D2                  mov         word ptr -0x2e[bp],dx 
4635    85 D2                     test        dx,dx 
4637    75 04                     jne         L$580 
4639    85 C0                     test        ax,ax 
463B    74 2C                     je          L$582 
463D                          L$580:
463D    E8 00 00                  call        row_len_ 
4640    3B 46 F0                  cmp         ax,word ptr -0x10[bp] 
4643    76 0D                     jbe         L$581 
4645    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
4648    01 F0                     add         ax,si 
464A    89 5E FA                  mov         word ptr -0x6[bp],bx 
464D    89 46 F8                  mov         word ptr -0x8[bp],ax 
4650    EB 17                     jmp         L$582 
4652                          L$581:
4652    FF 46 FE                  inc         word ptr -0x2[bp] 
4655    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
4658    89 76 F8                  mov         word ptr -0x8[bp],si 
465B    48                        dec         ax 
465C    89 5E FA                  mov         word ptr -0x6[bp],bx 
465F    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
4662    76 05                     jbe         L$582 
4664    FF 46 E6                  inc         word ptr -0x1a[bp] 
4667    EB B4                     jmp         L$579 
4669                          L$582:
4669    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
466F    8B 4E E6                  mov         cx,word ptr -0x1a[bp] 
4672    40                        inc         ax 
4673    40                        inc         ax 
4674    0F AF C8                  imul        cx,ax 
4677    0F AF 46 D8               imul        ax,word ptr -0x28[bp] 
467B    FF 76 EE                  push        word ptr -0x12[bp] 
467E    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
4681    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
4684    01 C2                     add         dx,ax 
4686    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
4689    9A 00 00 00 00            call        draw_rectangle_ 
468E    83 7E D2 00               cmp         word ptr -0x2e[bp],0x0000 
4692    75 0E                     jne         L$584 
4694    83 7E D0 00               cmp         word ptr -0x30[bp],0x0000 
4698    74 0E                     je          L$585 
469A    EB 06                     jmp         L$584 
469C                          L$583:
469C    89 46 F8                  mov         word ptr -0x8[bp],ax 
469F    89 56 FA                  mov         word ptr -0x6[bp],dx 
46A2                          L$584:
46A2    FF 46 FE                  inc         word ptr -0x2[bp] 
46A5    E9 2B FE                  jmp         L$567 
46A8                          L$585:
46A8    8B 5E E8                  mov         bx,word ptr -0x18[bp] 
46AB    8B 56 F2                  mov         dx,word ptr -0xe[bp] 
46AE    89 F8                     mov         ax,di 
46B0    31 C9                     xor         cx,cx 
46B2    FF 46 FE                  inc         word ptr -0x2[bp] 
46B5    E8 00 00                  call        mltext_draw_selection_ 
46B8    8B 4E EA                  mov         cx,word ptr -0x16[bp] 
46BB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
46C1    2B 4E FE                  sub         cx,word ptr -0x2[bp] 
46C4    40                        inc         ax 
46C5    40                        inc         ax 
46C6    0F AF C8                  imul        cx,ax 
46C9    0F AF 46 FE               imul        ax,word ptr -0x2[bp] 
46CD    FF 76 EE                  push        word ptr -0x12[bp] 
46D0    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
46D3    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
46D6    01 C2                     add         dx,ax 
46D8    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
46DB    9A 00 00 00 00            call        draw_rectangle_ 
46E0    E9 26 04                  jmp         L$600 
46E3                          draw_selection_mark_:
46E3    51                        push        cx 
46E4    56                        push        si 
46E5    57                        push        di 
46E6    C8 02 00 00               enter       0x0002,0x00 
46EA    89 C1                     mov         cx,ax 
46EC    89 D6                     mov         si,dx 
46EE    89 5E FE                  mov         word ptr -0x2[bp],bx 
46F1    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
46F7    49                        dec         cx 
46F8    47                        inc         di 
46F9    47                        inc         di 
46FA                          L$586:
46FA    4F                        dec         di 
46FB    83 FF FF                  cmp         di,0xffff 
46FE    0F 84 07 04               je          L$600 
4702    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
4706    75 20                     jne         L$588 
4708    89 F2                     mov         dx,si 
470A    89 C8                     mov         ax,cx 
470C    9A 00 00 00 00            call        get_pixel_ 
4711    36 3A 06 00 00            cmp         al,byte ptr ss:__TEXTBOX_ABGCOLOR 
4716    74 08                     je          L$587 
4718    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__TEXTBOX_ABGCOLOR 
471E    EB 1E                     jmp         L$589 
4720                          L$587:
4720    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
4726    EB 16                     jmp         L$589 
4728                          L$588:
4728    89 F2                     mov         dx,si 
472A    89 C8                     mov         ax,cx 
472C    9A 00 00 00 00            call        get_pixel_ 
4731    36 3A 06 00 00            cmp         al,byte ptr ss:__TEXTBOX_ABGCOLOR 
4736    74 E8                     je          L$587 
4738    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__TEXTBOX_ABGCOLOR 
473E                          L$589:
473E    89 F2                     mov         dx,si 
4740    89 C8                     mov         ax,cx 
4742    9A 00 00 00 00            call        put_pixel_ 
4747    46                        inc         si 
4748    EB B0                     jmp         L$586 
474A                          text_is_selected_:
474A    53                        push        bx 
474B    89 C3                     mov         bx,ax 
474D    8E DA                     mov         ds,dx 
474F    8B 47 2C                  mov         ax,word ptr 0x2c[bx] 
4752    3B 47 30                  cmp         ax,word ptr 0x30[bx] 
4755    75 08                     jne         L$590 
4757    8B 47 2E                  mov         ax,word ptr 0x2e[bx] 
475A    3B 47 32                  cmp         ax,word ptr 0x32[bx] 
475D    74 05                     je          L$591 
475F                          L$590:
475F    B8 01 00                  mov         ax,0x0001 
4762    5B                        pop         bx 
4763    C3                        ret         
4764                          L$591:
4764    31 C0                     xor         ax,ax 
4766    5B                        pop         bx 
4767    C3                        ret         
4768                          mltext_draw_selection_:
4768    56                        push        si 
4769    57                        push        di 
476A    C8 20 00 00               enter       0x0020,0x00 
476E    89 C7                     mov         di,ax 
4770    89 56 F8                  mov         word ptr -0x8[bp],dx 
4773    89 4E EA                  mov         word ptr -0x16[bp],cx 
4776    8E DA                     mov         ds,dx 
4778    C1 E3 02                  shl         bx,0x02 
477B    C5 45 18                  lds         ax,dword ptr 0x18[di] 
477E    01 C3                     add         bx,ax 
4780    8B 47 02                  mov         ax,word ptr 0x2[bx] 
4783    8B 37                     mov         si,word ptr [bx] 
4785    8E D8                     mov         ds,ax 
4787    89 46 FE                  mov         word ptr -0x2[bp],ax 
478A    8B 44 30                  mov         ax,word ptr 0x30[si] 
478D    89 46 F6                  mov         word ptr -0xa[bp],ax 
4790    8B 44 32                  mov         ax,word ptr 0x32[si] 
4793    89 46 EE                  mov         word ptr -0x12[bp],ax 
4796    8B 44 1A                  mov         ax,word ptr 0x1a[si] 
4799    89 46 FA                  mov         word ptr -0x6[bp],ax 
479C    8B 44 18                  mov         ax,word ptr 0x18[si] 
479F    89 46 FC                  mov         word ptr -0x4[bp],ax 
47A2    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
47A8    40                        inc         ax 
47A9    40                        inc         ax 
47AA    31 D2                     xor         dx,dx 
47AC    89 46 E0                  mov         word ptr -0x20[bp],ax 
47AF    8B 44 0A                  mov         ax,word ptr 0xa[si] 
47B2    F7 76 E0                  div         word ptr -0x20[bp] 
47B5    8B 5C 2C                  mov         bx,word ptr 0x2c[si] 
47B8    8B 4C 2E                  mov         cx,word ptr 0x2e[si] 
47BB    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
47BE    89 46 F0                  mov         word ptr -0x10[bp],ax 
47C1    8B 45 04                  mov         ax,word ptr 0x4[di] 
47C4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
47C7    03 44 04                  add         ax,word ptr 0x4[si] 
47CA    40                        inc         ax 
47CB    40                        inc         ax 
47CC    89 46 F4                  mov         word ptr -0xc[bp],ax 
47CF    8B 44 06                  mov         ax,word ptr 0x6[si] 
47D2    89 46 E8                  mov         word ptr -0x18[bp],ax 
47D5    8B 44 02                  mov         ax,word ptr 0x2[si] 
47D8    C1 E8 03                  shr         ax,0x03 
47DB    25 01 00                  and         ax,0x0001 
47DE    89 46 EC                  mov         word ptr -0x14[bp],ax 
47E1    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
47E4    03 44 08                  add         ax,word ptr 0x8[si] 
47E7    8C DA                     mov         dx,ds 
47E9    89 46 F2                  mov         word ptr -0xe[bp],ax 
47EC    89 F0                     mov         ax,si 
47EE    E8 00 00                  call        text_is_selected_ 
47F1    85 C0                     test        ax,ax 
47F3    0F 84 AA D2               je          L$279 
47F7    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
47FA    39 C3                     cmp         bx,ax 
47FC    72 6F                     jb          L$592 
47FE    03 46 F0                  add         ax,word ptr -0x10[bp] 
4801    39 C3                     cmp         bx,ax 
4803    73 68                     jae         L$592 
4805    3B 4E FC                  cmp         cx,word ptr -0x4[bp] 
4808    72 63                     jb          L$592 
480A    8D 47 01                  lea         ax,0x1[bx] 
480D    2B 46 FA                  sub         ax,word ptr -0x6[bp] 
4810    89 46 E0                  mov         word ptr -0x20[bp],ax 
4813    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4819    8B 56 E0                  mov         dx,word ptr -0x20[bp] 
481C    40                        inc         ax 
481D    40                        inc         ax 
481E    0F AF D0                  imul        dx,ax 
4821    FF 76 EC                  push        word ptr -0x14[bp] 
4824    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
4827    2B 4E FC                  sub         cx,word ptr -0x4[bp] 
482A    8B 45 06                  mov         ax,word ptr 0x6[di] 
482D    89 4E E0                  mov         word ptr -0x20[bp],cx 
4830    03 46 E8                  add         ax,word ptr -0x18[bp] 
4833    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
4836    40                        inc         ax 
4837    40                        inc         ax 
4838    01 C2                     add         dx,ax 
483A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4840    89 56 E4                  mov         word ptr -0x1c[bp],dx 
4843    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4846    89 46 E2                  mov         word ptr -0x1e[bp],ax 
4849    8B 44 0C                  mov         ax,word ptr 0xc[si] 
484C    8B 54 0E                  mov         dx,word ptr 0xe[si] 
484F    E8 00 00                  call        get_str_pos_ 
4852    8B 4E E0                  mov         cx,word ptr -0x20[bp] 
4855    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
4858    0E                        push        cs 
4859    E8 00 00                  call        string_width_ 
485C    03 46 F4                  add         ax,word ptr -0xc[bp] 
485F    3B 46 F2                  cmp         ax,word ptr -0xe[bp] 
4862    73 09                     jae         L$592 
4864    8B 5E EA                  mov         bx,word ptr -0x16[bp] 
4867    8B 56 E4                  mov         dx,word ptr -0x1c[bp] 
486A    E8 00 00                  call        draw_selection_mark_ 
486D                          L$592:
486D    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
4870    3B 46 FA                  cmp         ax,word ptr -0x6[bp] 
4873    0F 82 2A D2               jb          L$279 
4877    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
487A    03 46 F0                  add         ax,word ptr -0x10[bp] 
487D    3B 46 F6                  cmp         ax,word ptr -0xa[bp] 
4880    0F 86 1D D2               jbe         L$279 
4884    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
4887    3B 46 FC                  cmp         ax,word ptr -0x4[bp] 
488A    0F 82 13 D2               jb          L$279 
488E    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
4891    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4897    42                        inc         dx 
4898    40                        inc         ax 
4899    40                        inc         ax 
489A    2B 56 FA                  sub         dx,word ptr -0x6[bp] 
489D    0F AF D0                  imul        dx,ax 
48A0    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
48A3    8B 45 06                  mov         ax,word ptr 0x6[di] 
48A6    FF 76 EC                  push        word ptr -0x14[bp] 
48A9    03 46 E8                  add         ax,word ptr -0x18[bp] 
48AC    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
48AF    40                        inc         ax 
48B0    40                        inc         ax 
48B1    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
48B4    01 D0                     add         ax,dx 
48B6    8B 7E EE                  mov         di,word ptr -0x12[bp] 
48B9    89 46 E6                  mov         word ptr -0x1a[bp],ax 
48BC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
48C2    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
48C5    89 46 E2                  mov         word ptr -0x1e[bp],ax 
48C8    8B 44 0C                  mov         ax,word ptr 0xc[si] 
48CB    8B 54 0E                  mov         dx,word ptr 0xe[si] 
48CE    2B 7E FC                  sub         di,word ptr -0x4[bp] 
48D1    E8 00 00                  call        get_str_pos_ 
48D4    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
48D7    89 F9                     mov         cx,di 
48D9    0E                        push        cs 
48DA    E8 00 00                  call        string_width_ 
48DD    03 46 F4                  add         ax,word ptr -0xc[bp] 
48E0    3B 46 F2                  cmp         ax,word ptr -0xe[bp] 
48E3    0F 83 BA D1               jae         L$279 
48E7    8B 5E EA                  mov         bx,word ptr -0x16[bp] 
48EA    8B 56 E6                  mov         dx,word ptr -0x1a[bp] 
48ED    E8 00 00                  call        draw_selection_mark_ 
48F0    E9 AE D1                  jmp         L$279 
48F3                          window_drawelement_scrollbar_:
48F3    51                        push        cx 
48F4    56                        push        si 
48F5    57                        push        di 
48F6    C8 0A 00 00               enter       0x000a,0x00 
48FA    89 C6                     mov         si,ax 
48FC    89 56 FE                  mov         word ptr -0x2[bp],dx 
48FF    89 5E F8                  mov         word ptr -0x8[bp],bx 
4902    89 DA                     mov         dx,bx 
4904    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4907    C1 E2 02                  shl         dx,0x02 
490A    C4 44 18                  les         ax,dword ptr 0x18[si] 
490D    89 C7                     mov         di,ax 
490F    06                        push        es 
4910    1F                        pop         ds 
4911    01 D7                     add         di,dx 
4913    8B 1D                     mov         bx,word ptr [di] 
4915    8B 4D 02                  mov         cx,word ptr 0x2[di] 
4918    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
491B    89 4E FC                  mov         word ptr -0x4[bp],cx 
491E    8B 4C 38                  mov         cx,word ptr 0x38[si] 
4921    8B 7C 36                  mov         di,word ptr 0x36[si] 
4924    81 F9 00 00               cmp         cx,seg vpuwindow_program_ 
4928    0F 85 C1 00               jne         L$598 
492C    81 FF 00 00               cmp         di,offset vpuwindow_program_ 
4930    0F 85 B9 00               jne         L$598 
4934    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
4937    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
493A    83 E1 03                  and         cx,0x0003 
493D    83 F9 02                  cmp         cx,0x0002 
4940    72 22                     jb          L$593 
4942    C5 7F 26                  lds         di,dword ptr 0x26[bx] 
4945    8B 05                     mov         ax,word ptr [di] 
4947    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
494A    89 47 18                  mov         word ptr 0x18[bx],ax 
494D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4950    C5 7C 18                  lds         di,dword ptr 0x18[si] 
4953    01 D7                     add         di,dx 
4955    C5 1D                     lds         bx,dword ptr [di] 
4957    8B 47 18                  mov         ax,word ptr 0x18[bx] 
495A    3B 47 20                  cmp         ax,word ptr 0x20[bx] 
495D    0F 86 8C 00               jbe         L$598 
4961    E9 83 00                  jmp         L$597 
4964                          L$593:
4964    F6 47 02 03               test        byte ptr 0x2[bx],0x03 
4968    75 6A                     jne         L$596 
496A    8B 7F 24                  mov         di,word ptr 0x24[bx] 
496D    C1 E7 02                  shl         di,0x02 
4970    06                        push        es 
4971    1F                        pop         ds 
4972    01 C7                     add         di,ax 
4974    C5 15                     lds         dx,dword ptr [di] 
4976    89 D7                     mov         di,dx 
4978    8A 05                     mov         al,byte ptr [di] 
497A    24 1F                     and         al,0x1f 
497C    3C 08                     cmp         al,0x08 
497E    75 4B                     jne         L$595 
4980    8B 45 0C                  mov         ax,word ptr 0xc[di] 
4983    8B 55 0E                  mov         dx,word ptr 0xe[di] 
4986    E8 00 00                  call        row_count_ 
4989    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
498C    89 C1                     mov         cx,ax 
498E    8B 7F 24                  mov         di,word ptr 0x24[bx] 
4991    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4994    C1 E7 02                  shl         di,0x02 
4997    C5 44 18                  lds         ax,dword ptr 0x18[si] 
499A    01 C7                     add         di,ax 
499C    C5 15                     lds         dx,dword ptr [di] 
499E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
49A4    89 D7                     mov         di,dx 
49A6    40                        inc         ax 
49A7    40                        inc         ax 
49A8    31 D2                     xor         dx,dx 
49AA    89 46 F6                  mov         word ptr -0xa[bp],ax 
49AD    8B 45 0A                  mov         ax,word ptr 0xa[di] 
49B0    F7 76 F6                  div         word ptr -0xa[bp] 
49B3    39 C1                     cmp         cx,ax 
49B5    73 0A                     jae         L$594 
49B7    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
49BA    C7 47 20 00 00            mov         word ptr 0x20[bx],0x0000 
49BF    EB 13                     jmp         L$596 
49C1                          L$594:
49C1    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
49C4    29 C1                     sub         cx,ax 
49C6    89 4F 20                  mov         word ptr 0x20[bx],cx 
49C9    EB 09                     jmp         L$596 
49CB                          L$595:
49CB    8B 45 20                  mov         ax,word ptr 0x20[di] 
49CE    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
49D1    89 47 20                  mov         word ptr 0x20[bx],ax 
49D4                          L$596:
49D4    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
49D7    C5 7F 26                  lds         di,dword ptr 0x26[bx] 
49DA    8B 05                     mov         ax,word ptr [di] 
49DC    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
49DF    89 47 18                  mov         word ptr 0x18[bx],ax 
49E2    3B 47 20                  cmp         ax,word ptr 0x20[bx] 
49E5    76 06                     jbe         L$598 
49E7                          L$597:
49E7    8B 47 20                  mov         ax,word ptr 0x20[bx] 
49EA    89 47 18                  mov         word ptr 0x18[bx],ax 
49ED                          L$598:
49ED    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
49F0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
49F3    C1 E0 02                  shl         ax,0x02 
49F6    C5 7C 18                  lds         di,dword ptr 0x18[si] 
49F9    01 C7                     add         di,ax 
49FB    C5 1D                     lds         bx,dword ptr [di] 
49FD    89 46 FA                  mov         word ptr -0x6[bp],ax 
4A00    8B 47 02                  mov         ax,word ptr 0x2[bx] 
4A03    24 03                     and         al,0x03 
4A05    A8 01                     test        al,0x01 
4A07    0F 85 03 01               jne         L$602 
4A0B    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4A11    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4A14    26 03 44 06               add         ax,word ptr es:0x6[si] 
4A18    8B 57 06                  mov         dx,word ptr 0x6[bx] 
4A1B    40                        inc         ax 
4A1C    40                        inc         ax 
4A1D    6A 00                     push        0x0000 
4A1F    01 C2                     add         dx,ax 
4A21    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4A25    B9 0C 00                  mov         cx,0x000c 
4A28    03 47 04                  add         ax,word ptr 0x4[bx] 
4A2B    89 CB                     mov         bx,cx 
4A2D    9A 00 00 00 00            call        draw_borders_ 
4A32    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__SCROLLBAR_BGCOLOR 
4A38    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4A3B    8B 7C 18                  mov         di,word ptr 0x18[si] 
4A3E    03 7E FA                  add         di,word ptr -0x6[bp] 
4A41    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4A44    C5 1D                     lds         bx,dword ptr [di] 
4A46    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
4A4C    8B 4F 08                  mov         cx,word ptr 0x8[bx] 
4A4F    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4A52    50                        push        ax 
4A53    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4A57    26 03 54 06               add         dx,word ptr es:0x6[si] 
4A5B    03 47 04                  add         ax,word ptr 0x4[bx] 
4A5E    42                        inc         dx 
4A5F    42                        inc         dx 
4A60    48                        dec         ax 
4A61    03 57 06                  add         dx,word ptr 0x6[bx] 
4A64    BB 0E 00                  mov         bx,0x000e 
4A67    83 C2 0D                  add         dx,0x000d 
4A6A    9A 00 00 00 00            call        draw_rectangle_ 
4A6F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4A72    8B 7C 18                  mov         di,word ptr 0x18[si] 
4A75    03 7E FA                  add         di,word ptr -0x6[bp] 
4A78    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4A7B    C5 1D                     lds         bx,dword ptr [di] 
4A7D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4A83    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4A86    26 03 44 06               add         ax,word ptr es:0x6[si] 
4A8A    40                        inc         ax 
4A8B    40                        inc         ax 
4A8C    03 47 06                  add         ax,word ptr 0x6[bx] 
4A8F    8B 57 08                  mov         dx,word ptr 0x8[bx] 
4A92    05 0E 00                  add         ax,0x000e 
4A95    6A 00                     push        0x0000 
4A97    01 C2                     add         dx,ax 
4A99    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4A9D    B9 0C 00                  mov         cx,0x000c 
4AA0    03 47 04                  add         ax,word ptr 0x4[bx] 
4AA3    89 CB                     mov         bx,cx 
4AA5    9A 00 00 00 00            call        draw_borders_ 
4AAA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4AAD    8B 5C 18                  mov         bx,word ptr 0x18[si] 
4AB0    03 5E FA                  add         bx,word ptr -0x6[bp] 
4AB3    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4AB6    C5 3F                     lds         di,dword ptr [bx] 
4AB8    83 7D 20 00               cmp         word ptr 0x20[di],0x0000 
4ABC    74 4B                     je          L$600 
4ABE    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
4AC4    8B 5D 08                  mov         bx,word ptr 0x8[di] 
4AC7    31 D2                     xor         dx,dx 
4AC9    31 C9                     xor         cx,cx 
4ACB    50                        push        ax 
4ACC    83 EB 0C                  sub         bx,0x000c 
4ACF    8B 45 18                  mov         ax,word ptr 0x18[di] 
4AD2    9A 00 00 00 00            call        __U4M 
4AD7    8B 5D 20                  mov         bx,word ptr 0x20[di] 
4ADA    31 C9                     xor         cx,cx 
4ADC    9A 00 00 00 00            call        __U4D 
4AE1    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
4AE7    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4AEA    26 03 54 06               add         dx,word ptr es:0x6[si] 
4AEE    42                        inc         dx 
4AEF    42                        inc         dx 
4AF0    03 55 06                  add         dx,word ptr 0x6[di] 
4AF3    83 C2 0D                  add         dx,0x000d 
4AF6    B9 0C 00                  mov         cx,0x000c 
4AF9    01 C2                     add         dx,ax 
4AFB    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4AFF    89 CB                     mov         bx,cx 
4B01                          L$599:
4B01    03 45 04                  add         ax,word ptr 0x4[di] 
4B04    9A 00 00 00 00            call        draw_rectangle_ 
4B09                          L$600:
4B09    C9                        leave       
4B0A                          L$601:
4B0A    5F                        pop         di 
4B0B    5E                        pop         si 
4B0C    59                        pop         cx 
4B0D    C3                        ret         
4B0E                          L$602:
4B0E    B9 0E 00                  mov         cx,0x000e 
4B11    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__SCROLLBAR_BGCOLOR 
4B17    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
4B1D    8B 57 08                  mov         dx,word ptr 0x8[bx] 
4B20    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4B23    50                        push        ax 
4B24    26 03 7C 06               add         di,word ptr es:0x6[si] 
4B28    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4B2C    47                        inc         di 
4B2D    47                        inc         di 
4B2E    03 47 04                  add         ax,word ptr 0x4[bx] 
4B31    03 7F 06                  add         di,word ptr 0x6[bx] 
4B34    05 0D 00                  add         ax,0x000d 
4B37    4F                        dec         di 
4B38    89 D3                     mov         bx,dx 
4B3A    89 FA                     mov         dx,di 
4B3C    9A 00 00 00 00            call        draw_rectangle_ 
4B41    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4B44    8B 5C 18                  mov         bx,word ptr 0x18[si] 
4B47    03 5E FA                  add         bx,word ptr -0x6[bp] 
4B4A    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4B4D    C5 3F                     lds         di,dword ptr [bx] 
4B4F    83 7D 20 00               cmp         word ptr 0x20[di],0x0000 
4B53    74 55                     je          L$603 
4B55    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
4B5B    50                        push        ax 
4B5C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4B62    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4B65    31 C9                     xor         cx,cx 
4B67    26 03 44 06               add         ax,word ptr es:0x6[si] 
4B6B    8B 55 06                  mov         dx,word ptr 0x6[di] 
4B6E    40                        inc         ax 
4B6F    40                        inc         ax 
4B70    8B 5D 08                  mov         bx,word ptr 0x8[di] 
4B73    01 C2                     add         dx,ax 
4B75    83 EB 0C                  sub         bx,0x000c 
4B78    89 56 F6                  mov         word ptr -0xa[bp],dx 
4B7B    8B 45 18                  mov         ax,word ptr 0x18[di] 
4B7E    31 D2                     xor         dx,dx 
4B80    9A 00 00 00 00            call        __U4M 
4B85    8B 5D 20                  mov         bx,word ptr 0x20[di] 
4B88    31 C9                     xor         cx,cx 
4B8A    9A 00 00 00 00            call        __U4D 
4B8F    89 C2                     mov         dx,ax 
4B91    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4B95    03 45 04                  add         ax,word ptr 0x4[di] 
4B98    B9 0C 00                  mov         cx,0x000c 
4B9B    05 0D 00                  add         ax,0x000d 
4B9E    89 CB                     mov         bx,cx 
4BA0    01 D0                     add         ax,dx 
4BA2    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
4BA5    9A 00 00 00 00            call        draw_rectangle_ 
4BAA                          L$603:
4BAA    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
4BAD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4BB0    C1 E0 02                  shl         ax,0x02 
4BB3    C5 7C 18                  lds         di,dword ptr 0x18[si] 
4BB6    01 C7                     add         di,ax 
4BB8    89 46 F6                  mov         word ptr -0xa[bp],ax 
4BBB    C5 1D                     lds         bx,dword ptr [di] 
4BBD    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4BC3    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4BC6    26 03 44 06               add         ax,word ptr es:0x6[si] 
4BCA    8B 57 06                  mov         dx,word ptr 0x6[bx] 
4BCD    40                        inc         ax 
4BCE    40                        inc         ax 
4BCF    6A 00                     push        0x0000 
4BD1    01 C2                     add         dx,ax 
4BD3    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4BD7    B9 0C 00                  mov         cx,0x000c 
4BDA    03 47 04                  add         ax,word ptr 0x4[bx] 
4BDD    89 CB                     mov         bx,cx 
4BDF    9A 00 00 00 00            call        draw_borders_ 
4BE4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4BE7    8B 7C 18                  mov         di,word ptr 0x18[si] 
4BEA    03 7E F6                  add         di,word ptr -0xa[bp] 
4BED    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4BF0    C5 1D                     lds         bx,dword ptr [di] 
4BF2    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4BF8    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4BFB    26 03 44 06               add         ax,word ptr es:0x6[si] 
4BFF    8B 57 06                  mov         dx,word ptr 0x6[bx] 
4C02    40                        inc         ax 
4C03    40                        inc         ax 
4C04    01 C2                     add         dx,ax 
4C06    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4C0A    03 47 04                  add         ax,word ptr 0x4[bx] 
4C0D    6A 00                     push        0x0000 
4C0F    05 0E 00                  add         ax,0x000e 
4C12    B9 0C 00                  mov         cx,0x000c 
4C15    03 47 08                  add         ax,word ptr 0x8[bx] 
4C18    89 CB                     mov         bx,cx 
4C1A    9A 00 00 00 00            call        draw_borders_ 
4C1F    E9 E7 FE                  jmp         L$600 
4C22                          window_drawelement_checkbox_:
4C22    51                        push        cx 
4C23    56                        push        si 
4C24    57                        push        di 
4C25    C8 0A 00 00               enter       0x000a,0x00 
4C29    89 C6                     mov         si,ax 
4C2B    89 56 FE                  mov         word ptr -0x2[bp],dx 
4C2E    89 5E FA                  mov         word ptr -0x6[bp],bx 
4C31    6A 01                     push        0x0001 
4C33    89 D8                     mov         ax,bx 
4C35    8E DA                     mov         ds,dx 
4C37    C1 E0 02                  shl         ax,0x02 
4C3A    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
4C3D    01 C3                     add         bx,ax 
4C3F    89 46 F6                  mov         word ptr -0xa[bp],ax 
4C42    C5 17                     lds         dx,dword ptr [bx] 
4C44    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4C47    89 D3                     mov         bx,dx 
4C49    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
4C4F    26 8B 44 06               mov         ax,word ptr es:0x6[si] 
4C53    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
4C57    03 47 06                  add         ax,word ptr 0x6[bx] 
4C5A    03 7F 04                  add         di,word ptr 0x4[bx] 
4C5D    01 D0                     add         ax,dx 
4C5F    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4C65    40                        inc         ax 
4C66    40                        inc         ax 
4C67    4B                        dec         bx 
4C68    89 46 FC                  mov         word ptr -0x4[bp],ax 
4C6B    89 D9                     mov         cx,bx 
4C6D    89 C2                     mov         dx,ax 
4C6F    89 F8                     mov         ax,di 
4C71    9A 00 00 00 00            call        draw_borders_ 
4C76    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
4C79    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4C7F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
4C85    4B                        dec         bx 
4C86    50                        push        ax 
4C87    89 D9                     mov         cx,bx 
4C89    89 F8                     mov         ax,di 
4C8B    9A 00 00 00 00            call        draw_rectangle_ 
4C90    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4C93    8B 5C 18                  mov         bx,word ptr 0x18[si] 
4C96    03 5E F6                  add         bx,word ptr -0xa[bp] 
4C99    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4C9C    C5 07                     lds         ax,dword ptr [bx] 
4C9E    89 C3                     mov         bx,ax 
4CA0    89 7E F8                  mov         word ptr -0x8[bp],di 
4CA3    83 7F 2A 00               cmp         word ptr 0x2a[bx],0x0000 
4CA7    74 1E                     je          L$604 
4CA9    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
4CAC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
4CB2    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4CB8    50                        push        ax 
4CB9    83 EB 03                  sub         bx,0x0003 
4CBC    42                        inc         dx 
4CBD    8D 45 01                  lea         ax,0x1[di] 
4CC0    89 D9                     mov         cx,bx 
4CC2    9A 00 00 00 00            call        draw_rectangle_ 
4CC7                          L$604:
4CC7    8B 7E FA                  mov         di,word ptr -0x6[bp] 
4CCA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4CCD    C1 E7 02                  shl         di,0x02 
4CD0    C5 44 18                  lds         ax,dword ptr 0x18[si] 
4CD3    01 C7                     add         di,ax 
4CD5    C5 1D                     lds         bx,dword ptr [di] 
4CD7    8B 47 02                  mov         ax,word ptr 0x2[bx] 
4CDA    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
4CDD    C1 E8 03                  shr         ax,0x03 
4CE0    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4CE3    30 E4                     xor         ah,ah 
4CE5    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
4CE9    24 01                     and         al,0x01 
4CEB    26 03 7C 12               add         di,word ptr es:0x12[si] 
4CEF    50                        push        ax 
4CF0    36 0F B6 36 00 00         movzx       si,byte ptr ss:__FONT_HEIGHT 
4CF6    57                        push        di 
4CF7    0F B6 47 1E               movzx       ax,byte ptr 0x1e[bx] 
4CFB    56                        push        si 
4CFC    8B 4F 0E                  mov         cx,word ptr 0xe[bx] 
4CFF    50                        push        ax 
4D00    03 76 F8                  add         si,word ptr -0x8[bp] 
4D03    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
4D06    46                        inc         si 
4D07    46                        inc         si 
4D08    89 C3                     mov         bx,ax 
4D0A    89 F0                     mov         ax,si 
4D0C    E9 77 F0                  jmp         L$518 
4D0F                          window_drawelement_radiobutton_:
4D0F    51                        push        cx 
4D10    56                        push        si 
4D11    57                        push        di 
4D12    C8 0A 00 00               enter       0x000a,0x00 
4D16    89 C6                     mov         si,ax 
4D18    89 56 FE                  mov         word ptr -0x2[bp],dx 
4D1B    89 5E F8                  mov         word ptr -0x8[bp],bx 
4D1E    89 D8                     mov         ax,bx 
4D20    8E DA                     mov         ds,dx 
4D22    C1 E0 02                  shl         ax,0x02 
4D25    C5 7C 18                  lds         di,dword ptr 0x18[si] 
4D28    01 C7                     add         di,ax 
4D2A    C5 1D                     lds         bx,dword ptr [di] 
4D2C    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
4D32    89 46 F6                  mov         word ptr -0xa[bp],ax 
4D35    4F                        dec         di 
4D36    8E C2                     mov         es,dx 
4D38    D1 FF                     sar         di,0x01 
4D3A    26 8B 4C 04               mov         cx,word ptr es:0x4[si] 
4D3E    8B 47 04                  mov         ax,word ptr 0x4[bx] 
4D41    01 F9                     add         cx,di 
4D43    01 C8                     add         ax,cx 
4D45    26 8B 4C 06               mov         cx,word ptr es:0x6[si] 
4D49    01 F9                     add         cx,di 
4D4B    03 4F 06                  add         cx,word ptr 0x6[bx] 
4D4E    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4D54    01 CB                     add         bx,cx 
4D56    43                        inc         bx 
4D57    43                        inc         bx 
4D58    89 5E FA                  mov         word ptr -0x6[bp],bx 
4D5B    B9 01 00                  mov         cx,0x0001 
4D5E    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4D61    89 FB                     mov         bx,di 
4D63    89 46 FC                  mov         word ptr -0x4[bp],ax 
4D66    9A 00 00 00 00            call        draw_circle_border_ 
4D6B    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4D6E    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4D74    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
4D77    4B                        dec         bx 
4D78    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__TEXTBOX_BGCOLOR 
4D7E    D1 FB                     sar         bx,0x01 
4D80    9A 00 00 00 00            call        draw_filled_circle_ 
4D85    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4D88    8B 5C 18                  mov         bx,word ptr 0x18[si] 
4D8B    03 5E F6                  add         bx,word ptr -0xa[bp] 
4D8E    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4D91    C5 3F                     lds         di,dword ptr [bx] 
4D93    83 7D 2A 00               cmp         word ptr 0x2a[di],0x0000 
4D97    74 1C                     je          L$605 
4D99    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4D9C    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
4DA2    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
4DA5    83 EB 03                  sub         bx,0x0003 
4DA8    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
4DAE    D1 FB                     sar         bx,0x01 
4DB0    9A 00 00 00 00            call        draw_filled_circle_ 
4DB5                          L$605:
4DB5    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
4DBB    89 CB                     mov         bx,cx 
4DBD    4B                        dec         bx 
4DBE    01 5E FC                  add         word ptr -0x4[bp],bx 
4DC1    D1 FB                     sar         bx,0x01 
4DC3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4DC6    29 5E FA                  sub         word ptr -0x6[bp],bx 
4DC9    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
4DCC    8B 7C 18                  mov         di,word ptr 0x18[si] 
4DCF    C1 E3 02                  shl         bx,0x02 
4DD2    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4DD5    01 DF                     add         di,bx 
4DD7    C5 1D                     lds         bx,dword ptr [di] 
4DD9    8B 7F 02                  mov         di,word ptr 0x2[bx] 
4DDC    C1 EF 03                  shr         di,0x03 
4DDF    83 E7 01                  and         di,0x0001 
4DE2    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4DE5    57                        push        di 
4DE6    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
4DEA    26 03 7C 12               add         di,word ptr es:0x12[si] 
4DEE    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
4DF1    57                        push        di 
4DF2    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
4DF5    51                        push        cx 
4DF6    0F B6 4F 1E               movzx       cx,byte ptr 0x1e[bx] 
4DFA    8B 77 0C                  mov         si,word ptr 0xc[bx] 
4DFD    51                        push        cx 
4DFE    8B 4F 0E                  mov         cx,word ptr 0xe[bx] 
4E01    89 F3                     mov         bx,si 
4E03    E9 80 EF                  jmp         L$518 
4E06                          L$606:
4E06    4B 4E                                           DW	offset L$607
4E08    53 4E                                           DW	offset L$608
4E0A    C6 4E                                           DW	offset L$610
4E0C    CD 4E                                           DW	offset L$611
4E0E    D4 4E                                           DW	offset L$612
4E10    5B 4E                                           DW	offset L$609
4E12    DB 4E                                           DW	offset L$613
4E14    E2 4E                                           DW	offset L$614
4E16    E9 4E                                           DW	offset L$615

Routine Size: 8817 bytes,    Routine Base: main_TEXT + 2BA7

4E18                          window_drawelement_:
4E18    51                        push        cx 
4E19    56                        push        si 
4E1A    57                        push        di 
4E1B    C8 04 00 00               enter       0x0004,0x00 
4E1F    89 C6                     mov         si,ax 
4E21    89 56 FE                  mov         word ptr -0x2[bp],dx 
4E24    89 D8                     mov         ax,bx 
4E26    8E DA                     mov         ds,dx 
4E28    C1 E0 02                  shl         ax,0x02 
4E2B    C5 7C 18                  lds         di,dword ptr 0x18[si] 
4E2E    01 C7                     add         di,ax 
4E30    C5 0D                     lds         cx,dword ptr [di] 
4E32    89 CF                     mov         di,cx 
4E34    89 46 FC                  mov         word ptr -0x4[bp],ax 
4E37    8A 05                     mov         al,byte ptr [di] 
4E39    24 1F                     and         al,0x1f 
4E3B    3C 08                     cmp         al,0x08 
4E3D    0F 87 AD 00               ja          L$616 
4E41    0F B6 F8                  movzx       di,al 
4E44    01 FF                     add         di,di 
4E46    2E FF A5 06 4E            jmp         word ptr cs:L$606[di] 
4E4B                          L$607:
4E4B    89 F0                     mov         ax,si 
4E4D    E8 00 00                  call        window_drawelement_text_ 
4E50    E9 9B 00                  jmp         L$616 
4E53                          L$608:
4E53    89 F0                     mov         ax,si 
4E55    E8 00 00                  call        window_drawelement_button_ 
4E58    E9 93 00                  jmp         L$616 
4E5B                          L$609:
4E5B    6A 00                     push        0x0000 
4E5D    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
4E63    89 CB                     mov         bx,cx 
4E65    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4E68    B9 27 00                  mov         cx,0x0027 
4E6B    26 03 54 06               add         dx,word ptr es:0x6[si] 
4E6F    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4E73    42                        inc         dx 
4E74    42                        inc         dx 
4E75    03 47 04                  add         ax,word ptr 0x4[bx] 
4E78    03 57 06                  add         dx,word ptr 0x6[bx] 
4E7B    BB 44 00                  mov         bx,0x0044 
4E7E    9A 00 00 00 00            call        draw_borders_ 
4E83    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
4E89    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4E8C    8B 7C 18                  mov         di,word ptr 0x18[si] 
4E8F    03 7E FC                  add         di,word ptr -0x4[bp] 
4E92    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
4E95    50                        push        ax 
4E96    C5 1D                     lds         bx,dword ptr [di] 
4E98    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4E9E    FF 77 0E                  push        word ptr 0xe[bx] 
4EA1    8B 7F 10                  mov         di,word ptr 0x10[bx] 
4EA4    8B 4F 12                  mov         cx,word ptr 0x12[bx] 
4EA7    FF 77 0C                  push        word ptr 0xc[bx] 
4EAA    8E 46 FE                  mov         es,word ptr -0x2[bp] 
4EAD    26 03 44 06               add         ax,word ptr es:0x6[si] 
4EB1    8B 57 06                  mov         dx,word ptr 0x6[bx] 
4EB4    40                        inc         ax 
4EB5    40                        inc         ax 
4EB6    01 C2                     add         dx,ax 
4EB8    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
4EBC    03 47 04                  add         ax,word ptr 0x4[bx] 
4EBF    89 FB                     mov         bx,di 
4EC1    E8 00 00                  call        draw_icon_ 
4EC4    EB 28                     jmp         L$616 
4EC6                          L$610:
4EC6    89 F0                     mov         ax,si 
4EC8    E8 00 00                  call        window_drawelement_textbox_ 
4ECB    EB 21                     jmp         L$616 
4ECD                          L$611:
4ECD    89 F0                     mov         ax,si 
4ECF    E8 00 00                  call        window_drawelement_list_ 
4ED2    EB 1A                     jmp         L$616 
4ED4                          L$612:
4ED4    89 F0                     mov         ax,si 
4ED6    E8 00 00                  call        window_drawelement_scrollbar_ 
4ED9    EB 13                     jmp         L$616 
4EDB                          L$613:
4EDB    89 F0                     mov         ax,si 
4EDD    E8 00 00                  call        window_drawelement_checkbox_ 
4EE0    EB 0C                     jmp         L$616 
4EE2                          L$614:
4EE2    89 F0                     mov         ax,si 
4EE4    E8 00 00                  call        window_drawelement_radiobutton_ 
4EE7    EB 05                     jmp         L$616 
4EE9                          L$615:
4EE9    89 F0                     mov         ax,si 
4EEB    E8 00 00                  call        window_drawelement_mltext_ 
4EEE                          L$616:
4EEE    C9                        leave       
4EEF    5F                        pop         di 
4EF0    5E                        pop         si 
4EF1    59                        pop         cx 
4EF2    CB                        retf        

Routine Size: 219 bytes,    Routine Base: main_TEXT + 4E18

4EF3                          draw_window_:
4EF3    56                        push        si 
4EF4    57                        push        di 
4EF5    C8 0A 00 00               enter       0x000a,0x00 
4EF9    89 C7                     mov         di,ax 
4EFB    89 56 FE                  mov         word ptr -0x2[bp],dx 
4EFE    89 4E FA                  mov         word ptr -0x6[bp],cx 
4F01    89 DA                     mov         dx,bx 
4F03    36 A1 00 00               mov         ax,word ptr ss:_draw_window_box 
4F07    89 46 F6                  mov         word ptr -0xa[bp],ax 
4F0A    36 A1 02 00               mov         ax,word ptr ss:_draw_window_box+0x2 
4F0E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4F11    C7 46 FC 00 00            mov         word ptr -0x4[bp],0x0000 
4F16    80 65 17 E3               and         byte ptr 0x17[di],0xe3 
4F1A    89 46 F8                  mov         word ptr -0x8[bp],ax 
4F1D    F6 45 17 01               test        byte ptr 0x17[di],0x01 
4F21    0F 85 B1 B5               jne         L$52 
4F25    F6 45 16 40               test        byte ptr 0x16[di],0x40 
4F29    75 20                     jne         L$617 
4F2B    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4F31    03 45 06                  add         ax,word ptr 0x6[di] 
4F34    40                        inc         ax 
4F35    40                        inc         ax 
4F36    89 46 FC                  mov         word ptr -0x4[bp],ax 
4F39    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
4F3D    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
4F42    74 24                     je          L$619 
4F44    9A 00 00 00 00            call        restore_videomode_ 
4F49    EB 1D                     jmp         L$619 
4F4B                          L$617:
4F4B    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
4F4F    3A 45 10                  cmp         al,byte ptr 0x10[di] 
4F52    74 09                     je          L$618 
4F54    0F B6 45 10               movzx       ax,byte ptr 0x10[di] 
4F58    9A 00 00 00 00            call        video_mode_ 
4F5D                          L$618:
4F5D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4F60    66 C7 45 04 00 00 00 00
                                  mov         dword ptr 0x4[di],0x00000000 
4F68                          L$619:
4F68    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
4F6B    85 C0                     test        ax,ax 
4F6D    74 07                     je          L$620 
4F6F    3D 02 00                  cmp         ax,0x0002 
4F72    0F 85 5E 02               jne         L$628 
4F76                          L$620:
4F76    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4F79    F6 45 16 04               test        byte ptr 0x16[di],0x04 
4F7D    74 27                     je          L$622 
4F7F    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
4F84    36 A1 00 00               mov         ax,word ptr ss:_windows 
4F88    C1 E3 02                  shl         bx,0x02 
4F8B    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
4F90    01 C3                     add         bx,ax 
4F92    8B 47 02                  mov         ax,word ptr 0x2[bx] 
4F95    8B 0F                     mov         cx,word ptr [bx] 
4F97    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
4F9A    75 04                     jne         L$621 
4F9C    39 F9                     cmp         cx,di 
4F9E    74 06                     je          L$622 
4FA0                          L$621:
4FA0    FF 46 FC                  inc         word ptr -0x4[bp] 
4FA3    E9 26 02                  jmp         L$627 
4FA6                          L$622:
4FA6    85 D2                     test        dx,dx 
4FA8    74 20                     je          L$623 
4FAA    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
4FAD    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
4FB3    36 89 3E 00 00            mov         word ptr ss:_draw_window_box,di 
4FB8    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
4FBC    41                        inc         cx 
4FBD    41                        inc         cx 
4FBE    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TITLE_COLOR 
4FC4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4FC7    50                        push        ax 
4FC8    EB 12                     jmp         L$624 
4FCA                          L$623:
4FCA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TITLE_COLOR_IA 
4FD0    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
4FD6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4FD9    50                        push        ax 
4FDA    41                        inc         cx 
4FDB    41                        inc         cx 
4FDC                          L$624:
4FDC    8B 5D 12                  mov         bx,word ptr 0x12[di] 
4FDF    8B 55 06                  mov         dx,word ptr 0x6[di] 
4FE2    8B 45 04                  mov         ax,word ptr 0x4[di] 
4FE5    9A 00 00 00 00            call        draw_rectangle_ 
4FEA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
4FED    8B 55 04                  mov         dx,word ptr 0x4[di] 
4FF0    6A 00                     push        0x0000 
4FF2    03 55 12                  add         dx,word ptr 0x12[di] 
4FF5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
4FFB    83 EA 18                  sub         dx,0x0018 
4FFE    8B 1D                     mov         bx,word ptr [di] 
5000    52                        push        dx 
5001    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__TITLE_TEXTCOLOR 
5007    50                        push        ax 
5008    8B 4D 02                  mov         cx,word ptr 0x2[di] 
500B    52                        push        dx 
500C    03 45 04                  add         ax,word ptr 0x4[di] 
500F    8B 55 06                  mov         dx,word ptr 0x6[di] 
5012    05 04 00                  add         ax,0x0004 
5015    42                        inc         dx 
5016    0E                        push        cs 
5017    E8 00 00                  call        gprint_text_ 
501A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
501D    F6 45 16 01               test        byte ptr 0x16[di],0x01 
5021    74 7B                     je          L$625 
5023    6A 00                     push        0x0000 
5025    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
502B    8B 75 06                  mov         si,word ptr 0x6[di] 
502E    8B 55 04                  mov         dx,word ptr 0x4[di] 
5031    89 C3                     mov         bx,ax 
5033    03 55 12                  add         dx,word ptr 0x12[di] 
5036    46                        inc         si 
5037    46                        inc         si 
5038    29 C2                     sub         dx,ax 
503A    4B                        dec         bx 
503B    4B                        dec         bx 
503C    89 D0                     mov         ax,dx 
503E    89 D9                     mov         cx,bx 
5040    89 F2                     mov         dx,si 
5042    9A 00 00 00 00            call        draw_borders_ 
5047    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
504D    36 0F B6 36 00 00         movzx       si,byte ptr ss:__FONT_HEIGHT 
5053    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5056    50                        push        ax 
5057    8D 5C FE                  lea         bx,-0x2[si] 
505A    8B 55 04                  mov         dx,word ptr 0x4[di] 
505D    89 D9                     mov         cx,bx 
505F    03 55 12                  add         dx,word ptr 0x12[di] 
5062    8B 45 06                  mov         ax,word ptr 0x6[di] 
5065    29 F2                     sub         dx,si 
5067    40                        inc         ax 
5068    40                        inc         ax 
5069    89 D6                     mov         si,dx 
506B    89 C2                     mov         dx,ax 
506D    89 F0                     mov         ax,si 
506F    9A 00 00 00 00            call        draw_rectangle_ 
5074    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5077    8B 5D 04                  mov         bx,word ptr 0x4[di] 
507A    6A 00                     push        0x0000 
507C    03 5D 12                  add         bx,word ptr 0x12[di] 
507F    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
5085    8D 47 FC                  lea         ax,-0x4[bx] 
5088    8B 55 06                  mov         dx,word ptr 0x6[di] 
508B    29 CB                     sub         bx,cx 
508D    83 C2 03                  add         dx,0x0003 
5090    8D 77 01                  lea         si,0x1[bx] 
5093    89 D1                     mov         cx,dx 
5095    89 C3                     mov         bx,ax 
5097    89 F0                     mov         ax,si 
5099    9A 00 00 00 00            call        draw_line_ 
509E                          L$625:
509E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
50A1    F6 45 16 02               test        byte ptr 0x16[di],0x02 
50A5    0F 84 88 00               je          L$626 
50A9    6A 00                     push        0x0000 
50AB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
50B1    8B 75 06                  mov         si,word ptr 0x6[di] 
50B4    8B 55 04                  mov         dx,word ptr 0x4[di] 
50B7    89 C3                     mov         bx,ax 
50B9    01 C0                     add         ax,ax 
50BB    03 55 12                  add         dx,word ptr 0x12[di] 
50BE    40                        inc         ax 
50BF    40                        inc         ax 
50C0    46                        inc         si 
50C1    46                        inc         si 
50C2    29 C2                     sub         dx,ax 
50C4    4B                        dec         bx 
50C5    4B                        dec         bx 
50C6    89 D0                     mov         ax,dx 
50C8    89 D9                     mov         cx,bx 
50CA    40                        inc         ax 
50CB    89 F2                     mov         dx,si 
50CD    9A 00 00 00 00            call        draw_borders_ 
50D2    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
50D8    50                        push        ax 
50D9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
50DF    89 C3                     mov         bx,ax 
50E1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
50E4    4B                        dec         bx 
50E5    4B                        dec         bx 
50E6    01 C0                     add         ax,ax 
50E8    8B 55 04                  mov         dx,word ptr 0x4[di] 
50EB    40                        inc         ax 
50EC    40                        inc         ax 
50ED    03 55 12                  add         dx,word ptr 0x12[di] 
50F0    8B 75 06                  mov         si,word ptr 0x6[di] 
50F3    29 C2                     sub         dx,ax 
50F5    46                        inc         si 
50F6    46                        inc         si 
50F7    89 D0                     mov         ax,dx 
50F9    89 D9                     mov         cx,bx 
50FB    40                        inc         ax 
50FC    89 F2                     mov         dx,si 
50FE    9A 00 00 00 00            call        draw_rectangle_ 
5103    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
5109    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
510C    6A 00                     push        0x0000 
510E    8B 5D 04                  mov         bx,word ptr 0x4[di] 
5111    8B 55 06                  mov         dx,word ptr 0x6[di] 
5114    03 5D 12                  add         bx,word ptr 0x12[di] 
5117    01 CA                     add         dx,cx 
5119    89 DE                     mov         si,bx 
511B    4A                        dec         dx 
511C    4A                        dec         dx 
511D    29 CE                     sub         si,cx 
511F    89 D8                     mov         ax,bx 
5121    83 EE 05                  sub         si,0x0005 
5124    01 C9                     add         cx,cx 
5126    89 F3                     mov         bx,si 
5128    29 C8                     sub         ax,cx 
512A    89 D1                     mov         cx,dx 
512C    9A 00 00 00 00            call        draw_line_ 
5131                          L$626:
5131    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
5137    6A 00                     push        0x0000 
5139    4B                        dec         bx 
513A    4B                        dec         bx 
513B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
513E    89 D9                     mov         cx,bx 
5140    8B 55 06                  mov         dx,word ptr 0x6[di] 
5143    8B 45 04                  mov         ax,word ptr 0x4[di] 
5146    42                        inc         dx 
5147    42                        inc         dx 
5148    40                        inc         ax 
5149    40                        inc         ax 
514A    9A 00 00 00 00            call        draw_borders_ 
514F    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
5155    36 0F B6 36 00 00         movzx       si,byte ptr ss:__WINDOW_BGCOLOR 
515B    49                        dec         cx 
515C    49                        dec         cx 
515D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5160    89 CA                     mov         dx,cx 
5162    8B 5D 06                  mov         bx,word ptr 0x6[di] 
5165    8B 45 04                  mov         ax,word ptr 0x4[di] 
5168    43                        inc         bx 
5169    43                        inc         bx 
516A    40                        inc         ax 
516B    40                        inc         ax 
516C    9A 00 00 00 00            call        draw_rectangle_px_ 
5171    6A 00                     push        0x0000 
5173    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
5179    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
517C    89 C2                     mov         dx,ax 
517E    89 C3                     mov         bx,ax 
5180    D1 FA                     sar         dx,0x01 
5182    03 5D 04                  add         bx,word ptr 0x4[di] 
5185    8B 45 04                  mov         ax,word ptr 0x4[di] 
5188    4B                        dec         bx 
5189    4B                        dec         bx 
518A    03 55 06                  add         dx,word ptr 0x6[di] 
518D    05 03 00                  add         ax,0x0003 
5190    89 D1                     mov         cx,dx 
5192    9A 00 00 00 00            call        draw_line_ 
5197    6A 00                     push        0x0000 
5199    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
519F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
51A2    89 C2                     mov         dx,ax 
51A4    89 C3                     mov         bx,ax 
51A6    D1 FA                     sar         dx,0x01 
51A8    8B 45 04                  mov         ax,word ptr 0x4[di] 
51AB    03 5D 04                  add         bx,word ptr 0x4[di] 
51AE    03 55 06                  add         dx,word ptr 0x6[di] 
51B1    4B                        dec         bx 
51B2    4B                        dec         bx 
51B3    42                        inc         dx 
51B4    05 03 00                  add         ax,0x0003 
51B7    89 D1                     mov         cx,dx 
51B9    9A 00 00 00 00            call        draw_line_ 
51BE    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
51C1    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
51C5    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
51C8    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
51CC                          L$627:
51CC    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
51D0    0F 85 02 B3               jne         L$52 
51D4                          L$628:
51D4    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
51D9    36 A1 00 00               mov         ax,word ptr ss:_windows 
51DD    C1 E3 02                  shl         bx,0x02 
51E0    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
51E5    01 C3                     add         bx,ax 
51E7    8B 47 02                  mov         ax,word ptr 0x2[bx] 
51EA    8B 17                     mov         dx,word ptr [bx] 
51EC    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
51EF    75 10                     jne         L$629 
51F1    39 D7                     cmp         di,dx 
51F3    75 0C                     jne         L$629 
51F5    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
51F8    36 89 3E 00 00            mov         word ptr ss:_draw_window_box,di 
51FD    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
5201                          L$629:
5201    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
5204    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BGCOLOR 
520A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
520D    50                        push        ax 
520E    8B 4D 14                  mov         cx,word ptr 0x14[di] 
5211    8B 5D 12                  mov         bx,word ptr 0x12[di] 
5214    8B 45 04                  mov         ax,word ptr 0x4[di] 
5217    9A 00 00 00 00            call        draw_rectangle_ 
521C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
521F    8B 4D 26                  mov         cx,word ptr 0x26[di] 
5222                          L$630:
5222    49                        dec         cx 
5223    83 F9 FF                  cmp         cx,0xffff 
5226    74 0D                     je          L$631 
5228    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
522B    89 CB                     mov         bx,cx 
522D    89 F8                     mov         ax,di 
522F    0E                        push        cs 
5230    E8 00 00                  call        window_drawelement_ 
5233    EB ED                     jmp         L$630 
5235                          L$631:
5235    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
5239    75 24                     jne         L$632 
523B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
523E    F6 45 16 04               test        byte ptr 0x16[di],0x04 
5242    75 1B                     jne         L$632 
5244    6A 00                     push        0x0000 
5246    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
524C    8B 5D 12                  mov         bx,word ptr 0x12[di] 
524F    8B 55 06                  mov         dx,word ptr 0x6[di] 
5252    03 4D 14                  add         cx,word ptr 0x14[di] 
5255    8B 45 04                  mov         ax,word ptr 0x4[di] 
5258    41                        inc         cx 
5259    41                        inc         cx 
525A    9A 00 00 00 00            call        draw_borders_ 
525F                          L$632:
525F    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
5262    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
5266    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
5269    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
526D    E9 66 B2                  jmp         L$52 
5270                          minimize_window_:
5270    53                        push        bx 
5271    51                        push        cx 
5272    56                        push        si 
5273    55                        push        bp 
5274    31 ED                     xor         bp,bp 
5276    89 C3                     mov         bx,ax 
5278    89 D1                     mov         cx,dx 
527A    8E DA                     mov         ds,dx 
527C    80 4F 16 08               or          byte ptr 0x16[bx],0x08 
5280    36 A1 00 00               mov         ax,word ptr ss:_window_count 
5284    3D 02 00                  cmp         ax,0x0002 
5287    72 13                     jb          L$633 
5289    8B B6 00 00               mov         si,word ptr _window_visibility_order[bp] 
528D    01 C0                     add         ax,ax 
528F    8E 9E 02 00               mov         ds,word ptr _window_visibility_order+0x2[bp] 
5293    01 C6                     add         si,ax 
5295    31 D2                     xor         dx,dx 
5297    8B 44 FC                  mov         ax,word ptr -0x4[si] 
529A    EB 05                     jmp         L$634 
529C                          L$633:
529C    B8 FF FF                  mov         ax,0xffff 
529F    31 D2                     xor         dx,dx 
52A1                          L$634:
52A1    0E                        push        cs 
52A2    E8 00 00                  call        set_active_window_ 
52A5    8E D9                     mov         ds,cx 
52A7    8A 47 16                  mov         al,byte ptr 0x16[bx] 
52AA    A8 04                     test        al,0x04 
52AC    75 04                     jne         L$635 
52AE    A8 40                     test        al,0x40 
52B0    74 07                     je          L$636 
52B2                          L$635:
52B2    C6 86 00 00 01            mov         byte ptr _screen_redraw[bp],0x01 
52B7    EB 27                     jmp         L$638 
52B9                          L$636:
52B9    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
52BD    89 9E 00 00               mov         word ptr _draw_window_box[bp],bx 
52C1    89 8E 02 00               mov         word ptr _draw_window_box+0x2[bp],cx 
52C5    3A 86 00 00               cmp         al,byte ptr _video[bp] 
52C9    74 05                     je          L$637 
52CB    9A 00 00 00 00            call        restore_videomode_ 
52D0                          L$637:
52D0    E8 00 00                  call        draw_desktop_ 
52D3    E8 00 00                  call        draw_windows_ 
52D6    31 C0                     xor         ax,ax 
52D8    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
52DC    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
52E0                          L$638:
52E0    5D                        pop         bp 
52E1    E9 A8 3C                  jmp         L$1096 
52E4                          unminimize_window_:
52E4    53                        push        bx 
52E5    51                        push        cx 
52E6    52                        push        dx 
52E7    56                        push        si 
52E8    89 C1                     mov         cx,ax 
52EA    89 C3                     mov         bx,ax 
52EC    36 8B 36 00 00            mov         si,word ptr ss:_windows 
52F1    C1 E3 02                  shl         bx,0x02 
52F4    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
52F9    01 F3                     add         bx,si 
52FB    C5 37                     lds         si,dword ptr [bx] 
52FD    BA 01 00                  mov         dx,0x0001 
5300    80 64 16 F7               and         byte ptr 0x16[si],0xf7 
5304    E8 00 00                  call        draw_taskbar_ 
5307    89 C8                     mov         ax,cx 
5309    0E                        push        cs 
530A    E8 00 00                  call        set_active_window_ 
530D    E9 25 7E                  jmp         L$1510 
5310                          maximize_window_:
5310    53                        push        bx 
5311    89 C3                     mov         bx,ax 
5313    8E DA                     mov         ds,dx 
5315    80 4F 16 04               or          byte ptr 0x16[bx],0x04 
5319    8B 47 04                  mov         ax,word ptr 0x4[bx] 
531C    C7 47 04 00 00            mov         word ptr 0x4[bx],0x0000 
5321    89 47 08                  mov         word ptr 0x8[bx],ax 
5324    8B 47 06                  mov         ax,word ptr 0x6[bx] 
5327    C7 47 06 00 00            mov         word ptr 0x6[bx],0x0000 
532C    89 47 0A                  mov         word ptr 0xa[bx],ax 
532F    8B 47 12                  mov         ax,word ptr 0x12[bx] 
5332    89 47 0C                  mov         word ptr 0xc[bx],ax 
5335    8B 47 14                  mov         ax,word ptr 0x14[bx] 
5338    89 47 0E                  mov         word ptr 0xe[bx],ax 
533B    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
533F    89 47 12                  mov         word ptr 0x12[bx],ax 
5342    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
5347    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
534D    4A                        dec         dx 
534E    4A                        dec         dx 
534F    29 C2                     sub         dx,ax 
5351    89 57 14                  mov         word ptr 0x14[bx],dx 
5354    5B                        pop         bx 
5355    C3                        ret         
5356                          unmaximize_window_:
5356    53                        push        bx 
5357    89 C3                     mov         bx,ax 
5359    8E DA                     mov         ds,dx 
535B    8B 47 08                  mov         ax,word ptr 0x8[bx] 
535E    89 47 04                  mov         word ptr 0x4[bx],ax 
5361    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
5364    89 47 06                  mov         word ptr 0x6[bx],ax 
5367    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
536A    89 47 12                  mov         word ptr 0x12[bx],ax 
536D    8B 47 0E                  mov         ax,word ptr 0xe[bx] 
5370    89 47 14                  mov         word ptr 0x14[bx],ax 
5373    89 D8                     mov         ax,bx 
5375    80 67 16 FB               and         byte ptr 0x16[bx],0xfb 
5379    E8 00 00                  call        update_titlebar_ 
537C    5B                        pop         bx 
537D    C3                        ret         

Routine Size: 1163 bytes,    Routine Base: main_TEXT + 4EF3

537E                          window_grid_delelement_:
537E    51                        push        cx 
537F    56                        push        si 
5380    57                        push        di 
5381    C8 06 00 00               enter       0x0006,0x00 
5385    89 C6                     mov         si,ax 
5387    89 56 FE                  mov         word ptr -0x2[bp],dx 
538A    89 D9                     mov         cx,bx 
538C    89 D8                     mov         ax,bx 
538E    8E DA                     mov         ds,dx 
5390    C1 E0 02                  shl         ax,0x02 
5393    C5 7C 18                  lds         di,dword ptr 0x18[si] 
5396    01 C7                     add         di,ax 
5398    C5 1D                     lds         bx,dword ptr [di] 
539A    8B 57 14                  mov         dx,word ptr 0x14[bx] 
539D    8B 5F 16                  mov         bx,word ptr 0x16[bx] 
53A0    85 DB                     test        bx,bx 
53A2    75 04                     jne         L$639 
53A4    85 D2                     test        dx,dx 
53A6    74 61                     je          L$642 
53A8                          L$639:
53A8    89 46 FA                  mov         word ptr -0x6[bp],ax 
53AB                          L$640:
53AB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
53AE    8B 7C 18                  mov         di,word ptr 0x18[si] 
53B1    03 7E FA                  add         di,word ptr -0x6[bp] 
53B4    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
53B7    C5 1D                     lds         bx,dword ptr [di] 
53B9    8B 47 20                  mov         ax,word ptr 0x20[bx] 
53BC    89 C2                     mov         dx,ax 
53BE    4A                        dec         dx 
53BF    89 57 20                  mov         word ptr 0x20[bx],dx 
53C2    85 C0                     test        ax,ax 
53C4    74 2A                     je          L$641 
53C6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
53C9    8B 7C 18                  mov         di,word ptr 0x18[si] 
53CC    03 7E FA                  add         di,word ptr -0x6[bp] 
53CF    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
53D2    C5 1D                     lds         bx,dword ptr [di] 
53D4    8B 57 20                  mov         dx,word ptr 0x20[bx] 
53D7    8B 47 14                  mov         ax,word ptr 0x14[bx] 
53DA    C1 E2 02                  shl         dx,0x02 
53DD    8E 5F 16                  mov         ds,word ptr 0x16[bx] 
53E0    89 C3                     mov         bx,ax 
53E2    01 D3                     add         bx,dx 
53E4    8B 07                     mov         ax,word ptr [bx] 
53E6    8B 57 02                  mov         dx,word ptr 0x2[bx] 
53E9    9A 00 00 00 00            call        free_ 
53EE    EB BB                     jmp         L$640 
53F0                          L$641:
53F0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
53F3    8B 5C 18                  mov         bx,word ptr 0x18[si] 
53F6    03 5E FA                  add         bx,word ptr -0x6[bp] 
53F9    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
53FC    C5 3F                     lds         di,dword ptr [bx] 
53FE    8B 45 14                  mov         ax,word ptr 0x14[di] 
5401    8B 55 16                  mov         dx,word ptr 0x16[di] 
5404    9A 00 00 00 00            call        free_ 
5409                          L$642:
5409    89 CF                     mov         di,cx 
540B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
540E    C1 E7 02                  shl         di,0x02 
5411    C5 44 18                  lds         ax,dword ptr 0x18[si] 
5414    01 C7                     add         di,ax 
5416    C5 1D                     lds         bx,dword ptr [di] 
5418    8A 07                     mov         al,byte ptr [bx] 
541A    24 1F                     and         al,0x1f 
541C    3C 08                     cmp         al,0x08 
541E    74 0B                     je          L$643 
5420    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
5423    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
5426    9A 00 00 00 00            call        free_ 
542B                          L$643:
542B    89 C8                     mov         ax,cx 
542D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5430    C1 E0 02                  shl         ax,0x02 
5433    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
5436    01 C3                     add         bx,ax 
5438    C5 3F                     lds         di,dword ptr [bx] 
543A    89 46 FC                  mov         word ptr -0x4[bp],ax 
543D    8B 45 10                  mov         ax,word ptr 0x10[di] 
5440    8B 55 12                  mov         dx,word ptr 0x12[di] 
5443    9A 00 00 00 00            call        free_ 
5448    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
544B    8B 5C 18                  mov         bx,word ptr 0x18[si] 
544E    03 5E FC                  add         bx,word ptr -0x4[bp] 
5451    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
5454    8B 07                     mov         ax,word ptr [bx] 
5456    8B 57 02                  mov         dx,word ptr 0x2[bx] 
5459    9A 00 00 00 00            call        free_ 
545E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5461    FF 4C 26                  dec         word ptr 0x26[si] 
5464    8B 44 26                  mov         ax,word ptr 0x26[si] 
5467    85 C0                     test        ax,ax 
5469    74 44                     je          L$644 
546B    29 C8                     sub         ax,cx 
546D    8B 7E FC                  mov         di,word ptr -0x4[bp] 
5470    C1 E0 02                  shl         ax,0x02 
5473    8B 5C 18                  mov         bx,word ptr 0x18[si] 
5476    50                        push        ax 
5477    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
547A    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
547D    05 04 00                  add         ax,0x0004 
5480    89 D1                     mov         cx,dx 
5482    01 D8                     add         ax,bx 
5484    01 DF                     add         di,bx 
5486    89 C3                     mov         bx,ax 
5488    89 F8                     mov         ax,di 
548A    9A 00 00 00 00            call        memmove_ 
548F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5492    8B 5C 26                  mov         bx,word ptr 0x26[si] 
5495    8B 44 18                  mov         ax,word ptr 0x18[si] 
5498    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
549B    C1 E3 02                  shl         bx,0x02 
549E    9A 00 00 00 00            call        realloc_ 
54A3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
54A6    89 44 18                  mov         word ptr 0x18[si],ax 
54A9    89 54 1A                  mov         word ptr 0x1a[si],dx 
54AC    E9 3F FA                  jmp         L$616 
54AF                          L$644:
54AF    8B 44 18                  mov         ax,word ptr 0x18[si] 
54B2    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
54B5    9A 00 00 00 00            call        free_ 
54BA    E9 31 FA                  jmp         L$616 
54BD                          free_window_dropmenu_:
54BD    53                        push        bx 
54BE    51                        push        cx 
54BF    56                        push        si 
54C0    57                        push        di 
54C1    C8 04 00 00               enter       0x0004,0x00 
54C5    89 C3                     mov         bx,ax 
54C7    89 56 FE                  mov         word ptr -0x2[bp],dx 
54CA    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_menu+0x2 
54CF    36 A1 00 00               mov         ax,word ptr ss:_desktop_menu 
54D3    3B 56 FE                  cmp         dx,word ptr -0x2[bp] 
54D6    75 06                     jne         L$645 
54D8    39 C3                     cmp         bx,ax 
54DA    0F 84 AC 3A               je          L$1094 
54DE                          L$645:
54DE    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
54E1    85 C0                     test        ax,ax 
54E3    75 06                     jne         L$646 
54E5    85 DB                     test        bx,bx 
54E7    0F 84 9F 3A               je          L$1094 
54EB                          L$646:
54EB    8E D8                     mov         ds,ax 
54ED    8B 47 06                  mov         ax,word ptr 0x6[bx] 
54F0    8B 77 04                  mov         si,word ptr 0x4[bx] 
54F3    89 46 FC                  mov         word ptr -0x4[bp],ax 
54F6    85 C0                     test        ax,ax 
54F8    75 04                     jne         L$647 
54FA    85 F6                     test        si,si 
54FC    74 2E                     je          L$649 
54FE                          L$647:
54FE    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
5501    85 C0                     test        ax,ax 
5503    75 04                     jne         L$648 
5505    85 F6                     test        si,si 
5507    74 23                     je          L$649 
5509                          L$648:
5509    8E D8                     mov         ds,ax 
550B    8B 4C 08                  mov         cx,word ptr 0x8[si] 
550E    8B 04                     mov         ax,word ptr [si] 
5510    8B 54 02                  mov         dx,word ptr 0x2[si] 
5513    8B 7C 0A                  mov         di,word ptr 0xa[si] 
5516    9A 00 00 00 00            call        free_ 
551B    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
551E    89 F0                     mov         ax,si 
5520    9A 00 00 00 00            call        free_ 
5525    89 CE                     mov         si,cx 
5527    89 7E FC                  mov         word ptr -0x4[bp],di 
552A    EB D2                     jmp         L$647 
552C                          L$649:
552C    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
552F    8E D9                     mov         ds,cx 
5531    8B 07                     mov         ax,word ptr [bx] 
5533    8B 57 02                  mov         dx,word ptr 0x2[bx] 
5536    9A 00 00 00 00            call        free_ 
553B    8E D9                     mov         ds,cx 
553D    89 DE                     mov         si,bx 
553F    8B 57 08                  mov         dx,word ptr 0x8[bx] 
5542    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
5545    89 D3                     mov         bx,dx 
5547    89 46 FE                  mov         word ptr -0x2[bp],ax 
554A    89 F0                     mov         ax,si 
554C    89 CA                     mov         dx,cx 
554E    9A 00 00 00 00            call        free_ 
5553    EB 89                     jmp         L$645 

Routine Size: 471 bytes,    Routine Base: main_TEXT + 537E

5555                          del_window_:
5555    53                        push        bx 
5556    51                        push        cx 
5557    56                        push        si 
5558    57                        push        di 
5559    C8 02 00 00               enter       0x0002,0x00 
555D    89 C6                     mov         si,ax 
555F    89 56 FE                  mov         word ptr -0x2[bp],dx 
5562    8E DA                     mov         ds,dx 
5564    8B 7C 16                  mov         di,word ptr 0x16[si] 
5567    C1 EF 03                  shr         di,0x03 
556A    83 E7 01                  and         di,0x0001 
556D    F6 44 17 01               test        byte ptr 0x17[si],0x01 
5571    0F 85 FB D2               jne         L$375 
5575    8B 54 40                  mov         dx,word ptr 0x40[si] 
5578    8B 44 3E                  mov         ax,word ptr 0x3e[si] 
557B    85 D2                     test        dx,dx 
557D    75 04                     jne         L$650 
557F    85 C0                     test        ax,ax 
5581    74 07                     je          L$651 
5583                          L$650:
5583    89 F0                     mov         ax,si 
5585    8C DA                     mov         dx,ds 
5587    FF 5C 3E                  call        dword ptr 0x3e[si] 
558A                          L$651:
558A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
558D    F6 44 16 40               test        byte ptr 0x16[si],0x40 
5591    74 18                     je          L$653 
5593    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
5597    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
559C    74 05                     je          L$652 
559E    9A 00 00 00 00            call        restore_videomode_ 
55A3                          L$652:
55A3    36 C6 06 00 00 01         mov         byte ptr ss:_screen_redraw,0x01 
55A9    EB 2E                     jmp         L$655 
55AB                          L$653:
55AB    80 4C 16 20               or          byte ptr 0x16[si],0x20 
55AF    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
55B3    36 89 36 00 00            mov         word ptr ss:_draw_window_box,si 
55B8    36 8C 1E 02 00            mov         word ptr ss:_draw_window_box+0x2,ds 
55BD    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
55C2    74 05                     je          L$654 
55C4    9A 00 00 00 00            call        restore_videomode_ 
55C9                          L$654:
55C9    E8 00 00                  call        draw_desktop_ 
55CC    E8 00 00                  call        draw_windows_ 
55CF    31 C0                     xor         ax,ax 
55D1    36 A3 00 00               mov         word ptr ss:_draw_window_box,ax 
55D5    36 A3 02 00               mov         word ptr ss:_draw_window_box+0x2,ax 
55D9                          L$655:
55D9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
55DC    8B 44 2A                  mov         ax,word ptr 0x2a[si] 
55DF    8B 54 2C                  mov         dx,word ptr 0x2c[si] 
55E2    9A 00 00 00 00            call        free_ 
55E7    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
55EA    8B 44 20                  mov         ax,word ptr 0x20[si] 
55ED    8B 54 22                  mov         dx,word ptr 0x22[si] 
55F0    9A 00 00 00 00            call        free_ 
55F5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
55F8    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
55FB    8B 54 1E                  mov         dx,word ptr 0x1e[si] 
55FE    E8 00 00                  call        free_window_dropmenu_ 
5601                          L$656:
5601    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5604    83 7C 26 00               cmp         word ptr 0x26[si],0x0000 
5608    74 0C                     je          L$657 
560A    89 F0                     mov         ax,si 
560C    8C DA                     mov         dx,ds 
560E    31 DB                     xor         bx,bx 
5610    0E                        push        cs 
5611    E8 00 00                  call        window_grid_delelement_ 
5614    EB EB                     jmp         L$656 
5616                          L$657:
5616    8B 44 2E                  mov         ax,word ptr 0x2e[si] 
5619    8B 54 30                  mov         dx,word ptr 0x30[si] 
561C    9A 00 00 00 00            call        free_ 
5621    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5624    8B 44 3A                  mov         ax,word ptr 0x3a[si] 
5627    8B 54 3C                  mov         dx,word ptr 0x3c[si] 
562A    9A 00 00 00 00            call        free_ 
562F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5632    8B 04                     mov         ax,word ptr [si] 
5634    8B 54 02                  mov         dx,word ptr 0x2[si] 
5637    9A 00 00 00 00            call        free_ 
563C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
563F    89 F0                     mov         ax,si 
5641    9A 00 00 00 00            call        free_ 
5646    36 FF 0E 00 00            dec         word ptr ss:_window_count 
564B    0F 84 20 01               je          L$667 
564F    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
5654    31 C0                     xor         ax,ax 
5656    31 D2                     xor         dx,dx 
5658                          L$658:
5658    36 3B 06 00 00            cmp         ax,word ptr ss:_window_count 
565D    77 1B                     ja          L$660 
565F    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
5664    01 D3                     add         bx,dx 
5666    8B 0F                     mov         cx,word ptr [bx] 
5668    8B 5F 02                  mov         bx,word ptr 0x2[bx] 
566B    3B 5E FE                  cmp         bx,word ptr -0x2[bp] 
566E    75 04                     jne         L$659 
5670    39 F1                     cmp         cx,si 
5672    74 06                     je          L$660 
5674                          L$659:
5674    83 C2 04                  add         dx,0x0004 
5677    40                        inc         ax 
5678    EB DE                     jmp         L$658 
567A                          L$660:
567A    31 D2                     xor         dx,dx 
567C    31 DB                     xor         bx,bx 
567E                          L$661:
567E    36 3B 16 00 00            cmp         dx,word ptr ss:_window_count 
5683    77 14                     ja          L$663 
5685    36 C5 36 00 00            lds         si,dword ptr ss:_window_visibility_order 
568A    01 DE                     add         si,bx 
568C    3B 04                     cmp         ax,word ptr [si] 
568E    74 09                     je          L$663 
5690    7D 02                     jge         L$662 
5692    FF 0C                     dec         word ptr [si] 
5694                          L$662:
5694    43                        inc         bx 
5695    43                        inc         bx 
5696    42                        inc         dx 
5697    EB E5                     jmp         L$661 
5699                          L$663:
5699    89 D3                     mov         bx,dx 
569B    01 D3                     add         bx,dx 
569D                          L$664:
569D    36 3B 16 00 00            cmp         dx,word ptr ss:_window_count 
56A2    73 1E                     jae         L$666 
56A4    36 C5 36 00 00            lds         si,dword ptr ss:_window_visibility_order 
56A9    01 DE                     add         si,bx 
56AB    8B 4C 02                  mov         cx,word ptr 0x2[si] 
56AE    89 0C                     mov         word ptr [si],cx 
56B0    36 C5 36 00 00            lds         si,dword ptr ss:_window_visibility_order 
56B5    01 DE                     add         si,bx 
56B7    3B 04                     cmp         ax,word ptr [si] 
56B9    7D 02                     jge         L$665 
56BB    FF 0C                     dec         word ptr [si] 
56BD                          L$665:
56BD    43                        inc         bx 
56BE    43                        inc         bx 
56BF    42                        inc         dx 
56C0    EB DB                     jmp         L$664 
56C2                          L$666:
56C2    36 8B 16 00 00            mov         dx,word ptr ss:_window_count 
56C7    29 C2                     sub         dx,ax 
56C9    36 8B 36 00 00            mov         si,word ptr ss:_windows 
56CE    C1 E2 02                  shl         dx,0x02 
56D1    C1 E0 02                  shl         ax,0x02 
56D4    52                        push        dx 
56D5    89 C3                     mov         bx,ax 
56D7    36 8B 16 02 00            mov         dx,word ptr ss:_windows+0x2 
56DC    83 C3 04                  add         bx,0x0004 
56DF    01 F0                     add         ax,si 
56E1    89 D1                     mov         cx,dx 
56E3    01 F3                     add         bx,si 
56E5    9A 00 00 00 00            call        memmove_ 
56EA    36 8B 1E 00 00            mov         bx,word ptr ss:_window_count 
56EF    36 A1 00 00               mov         ax,word ptr ss:_windows 
56F3    36 8B 16 02 00            mov         dx,word ptr ss:_windows+0x2 
56F8    C1 E3 02                  shl         bx,0x02 
56FB    9A 00 00 00 00            call        realloc_ 
5700    36 8B 1E 00 00            mov         bx,word ptr ss:_window_count 
5705    36 A3 00 00               mov         word ptr ss:_windows,ax 
5709    36 89 16 02 00            mov         word ptr ss:_windows+0x2,dx 
570E    36 A1 00 00               mov         ax,word ptr ss:_window_visibility_order 
5712    36 8B 16 02 00            mov         dx,word ptr ss:_window_visibility_order+0x2 
5717    01 DB                     add         bx,bx 
5719    9A 00 00 00 00            call        realloc_ 
571E    36 C7 06 00 00 FF FF      mov         word ptr ss:_active_window,0xffff 
5725    36 8B 1E 00 00            mov         bx,word ptr ss:_window_count 
572A    36 A3 00 00               mov         word ptr ss:_window_visibility_order,ax 
572E    36 89 16 02 00            mov         word ptr ss:_window_visibility_order+0x2,dx 
5733    01 DB                     add         bx,bx 
5735    8E DA                     mov         ds,dx 
5737    01 C3                     add         bx,ax 
5739    31 D2                     xor         dx,dx 
573B    8B 47 FE                  mov         ax,word ptr -0x2[bx] 
573E    0E                        push        cs 
573F    E8 00 00                  call        set_active_window_ 
5742    85 C0                     test        ax,ax 
5744    7C 4E                     jl          L$668 
5746    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
574B    C1 E0 02                  shl         ax,0x02 
574E    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
5753    01 C3                     add         bx,ax 
5755    B9 02 00                  mov         cx,0x0002 
5758    8B 07                     mov         ax,word ptr [bx] 
575A    8B 57 02                  mov         dx,word ptr 0x2[bx] 
575D    BB 01 00                  mov         bx,0x0001 
5760    36 A3 00 00               mov         word ptr ss:_running_window,ax 
5764    36 89 16 02 00            mov         word ptr ss:_running_window+0x2,dx 
5769    0E                        push        cs 
576A    E8 00 00                  call        draw_window_ 
576D    EB 25                     jmp         L$668 
576F                          L$667:
576F    36 A1 00 00               mov         ax,word ptr ss:_windows 
5773    36 8B 16 02 00            mov         dx,word ptr ss:_windows+0x2 
5778    9A 00 00 00 00            call        free_ 
577D    36 A1 00 00               mov         ax,word ptr ss:_window_visibility_order 
5781    36 8B 16 02 00            mov         dx,word ptr ss:_window_visibility_order+0x2 
5786    9A 00 00 00 00            call        free_ 
578B    B8 FF FF                  mov         ax,0xffff 
578E    31 D2                     xor         dx,dx 
5790    0E                        push        cs 
5791    E8 00 00                  call        set_active_window_ 
5794                          L$668:
5794    85 FF                     test        di,di 
5796    0F 84 D6 D0               je          L$375 
579A    E8 00 00                  call        draw_taskbar_ 
579D    E9 D0 D0                  jmp         L$375 

Routine Size: 587 bytes,    Routine Base: main_TEXT + 5555

57A0                          new_window_:
57A0    56                        push        si 
57A1    57                        push        di 
57A2    C8 06 00 00               enter       0x0006,0x00 
57A6    89 C7                     mov         di,ax 
57A8    89 56 FA                  mov         word ptr -0x6[bp],dx 
57AB    89 DE                     mov         si,bx 
57AD    BA 46 00                  mov         dx,0x0046 
57B0    B8 01 00                  mov         ax,0x0001 
57B3    9A 00 00 00 00            call        calloc_ 
57B8    89 C3                     mov         bx,ax 
57BA    89 46 FC                  mov         word ptr -0x4[bp],ax 
57BD    89 56 FE                  mov         word ptr -0x2[bp],dx 
57C0    85 D2                     test        dx,dx 
57C2    75 06                     jne         L$669 
57C4    85 C0                     test        ax,ax 
57C6    0F 84 81 01               je          L$682 
57CA                          L$669:
57CA    83 FF FF                  cmp         di,0xffff 
57CD    75 2C                     jne         L$670 
57CF    36 A1 00 00               mov         ax,word ptr ss:_window_x 
57D3    8E DA                     mov         ds,dx 
57D5    89 47 04                  mov         word ptr 0x4[bx],ax 
57D8    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
57DE    40                        inc         ax 
57DF    40                        inc         ax 
57E0    36 01 06 00 00            add         word ptr ss:_window_x,ax 
57E5    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
57E9    29 F0                     sub         ax,si 
57EB    36 3B 06 00 00            cmp         ax,word ptr ss:_window_x 
57F0    73 0E                     jae         L$671 
57F2    36 C7 06 00 00 28 00      mov         word ptr ss:_window_x,0x0028 
57F9    EB 05                     jmp         L$671 
57FB                          L$670:
57FB    8E DA                     mov         ds,dx 
57FD    89 7F 04                  mov         word ptr 0x4[bx],di 
5800                          L$671:
5800    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
5803    3D FF FF                  cmp         ax,0xffff 
5806    75 3A                     jne         L$673 
5808    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
580B    36 A1 00 00               mov         ax,word ptr ss:_window_y 
580F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5812    89 47 06                  mov         word ptr 0x6[bx],ax 
5815    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
581B    01 C8                     add         ax,cx 
581D    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
5822    40                        inc         ax 
5823    40                        inc         ax 
5824    29 C2                     sub         dx,ax 
5826    36 3B 16 00 00            cmp         dx,word ptr ss:_window_y 
582B    73 06                     jae         L$672 
582D    31 C0                     xor         ax,ax 
582F    36 A3 00 00               mov         word ptr ss:_window_y,ax 
5833                          L$672:
5833    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
5839    40                        inc         ax 
583A    40                        inc         ax 
583B    36 01 06 00 00            add         word ptr ss:_window_y,ax 
5840    EB 06                     jmp         L$674 
5842                          L$673:
5842    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
5845    89 47 06                  mov         word ptr 0x6[bx],ax 
5848                          L$674:
5848    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
584B    66 C7 47 18 00 00 00 00
                                  mov         dword ptr 0x18[bx],0x00000000 
5853    66 C7 47 26 00 00 00 00
                                  mov         dword ptr 0x26[bx],0x00000000 
585B    66 C7 47 2A 00 00 00 00
                                  mov         dword ptr 0x2a[bx],0x00000000 
5863    C6 47 32 01               mov         byte ptr 0x32[bx],0x01 
5867    C7 47 34 FF FF            mov         word ptr 0x34[bx],0xffff 
586C    89 77 12                  mov         word ptr 0x12[bx],si 
586F    8B 46 16                  mov         ax,word ptr 0x16[bp] 
5872    89 4F 14                  mov         word ptr 0x14[bx],cx 
5875    89 47 36                  mov         word ptr 0x36[bx],ax 
5878    8B 46 18                  mov         ax,word ptr 0x18[bp] 
587B    89 47 38                  mov         word ptr 0x38[bx],ax 
587E    83 7E 14 00               cmp         word ptr 0x14[bp],0x0000 
5882    75 10                     jne         L$676 
5884    83 7E 12 00               cmp         word ptr 0x12[bp],0x0000 
5888    75 0A                     jne         L$676 
588A                          L$675:
588A    66 C7 47 2E 00 00 00 00
                                  mov         dword ptr 0x2e[bx],0x00000000 
5892    EB 74                     jmp         L$679 
5894                          L$676:
5894    B8 64 00                  mov         ax,0x0064 
5897    9A 00 00 00 00            call        malloc_ 
589C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
589F    89 47 2E                  mov         word ptr 0x2e[bx],ax 
58A2    89 57 30                  mov         word ptr 0x30[bx],dx 
58A5    8B 47 30                  mov         ax,word ptr 0x30[bx] 
58A8    8B 57 2E                  mov         dx,word ptr 0x2e[bx] 
58AB    85 C0                     test        ax,ax 
58AD    75 0B                     jne         L$677 
58AF    85 D2                     test        dx,dx 
58B1    75 07                     jne         L$677 
58B3    89 D8                     mov         ax,bx 
58B5    8C DA                     mov         dx,ds 
58B7    E9 8C 00                  jmp         L$681 
58BA                          L$677:
58BA    BB D3 00                  mov         bx,offset DGROUP:L$1747 
58BD    8B 46 12                  mov         ax,word ptr 0x12[bp] 
58C0    8B 56 14                  mov         dx,word ptr 0x14[bp] 
58C3    8C D1                     mov         cx,ss 
58C5    9A 00 00 00 00            call        fopen_ 
58CA    89 C6                     mov         si,ax 
58CC    89 D7                     mov         di,dx 
58CE    85 D2                     test        dx,dx 
58D0    75 17                     jne         L$678 
58D2    85 C0                     test        ax,ax 
58D4    75 13                     jne         L$678 
58D6    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
58D9    8B 47 2E                  mov         ax,word ptr 0x2e[bx] 
58DC    8B 57 30                  mov         dx,word ptr 0x30[bx] 
58DF    9A 00 00 00 00            call        free_ 
58E4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
58E7    EB A1                     jmp         L$675 
58E9                          L$678:
58E9    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
58EC    52                        push        dx 
58ED    B9 64 00                  mov         cx,0x0064 
58F0    50                        push        ax 
58F1    8B 57 30                  mov         dx,word ptr 0x30[bx] 
58F4    8B 47 2E                  mov         ax,word ptr 0x2e[bx] 
58F7    BB 01 00                  mov         bx,0x0001 
58FA    9A 00 00 00 00            call        fread_ 
58FF    89 F0                     mov         ax,si 
5901    89 FA                     mov         dx,di 
5903    9A 00 00 00 00            call        fclose_ 
5908                          L$679:
5908    C4 7E 0A                  les         di,dword ptr 0xa[bp] 
590B    B9 FF FF                  mov         cx,0xffff 
590E    33 C0                     xor         ax,ax 
5910    F2 AE                     repne scasb 
5912    F7 D1                     not         cx 
5914    49                        dec         cx 
5915    89 C8                     mov         ax,cx 
5917    40                        inc         ax 
5918    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
591B    9A 00 00 00 00            call        malloc_ 
5920    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5923    89 07                     mov         word ptr [bx],ax 
5925    89 DF                     mov         di,bx 
5927    89 57 02                  mov         word ptr 0x2[bx],dx 
592A    89 D0                     mov         ax,dx 
592C    8B 3D                     mov         di,word ptr [di] 
592E    85 D2                     test        dx,dx 
5930    75 24                     jne         L$683 
5932    85 FF                     test        di,di 
5934    75 20                     jne         L$683 
5936                          L$680:
5936    8B 47 2E                  mov         ax,word ptr 0x2e[bx] 
5939    8B 57 30                  mov         dx,word ptr 0x30[bx] 
593C    9A 00 00 00 00            call        free_ 
5941    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5944    89 D8                     mov         ax,bx 
5946                          L$681:
5946    9A 00 00 00 00            call        free_ 
594B                          L$682:
594B    0E                        push        cs 
594C    E8 00 00                  call        nomemory_ 
594F    31 C0                     xor         ax,ax 
5951    31 D2                     xor         dx,dx 
5953    E9 04 02                  jmp         L$693 
5956                          L$683:
5956    C5 76 0A                  lds         si,dword ptr 0xa[bp] 
5959    8E C2                     mov         es,dx 
595B    57                        push        di 
595C                          L$684:
595C    AC                        lodsb       
595D    AA                        stosb       
595E    3C 00                     cmp         al,0x00 
5960    75 FA                     jne         L$684 
5962    5F                        pop         di 
5963    8B 46 10                  mov         ax,word ptr 0x10[bp] 
5966    30 E4                     xor         ah,ah 
5968    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
596B    24 01                     and         al,0x01 
596D    80 67 16 FD               and         byte ptr 0x16[bx],0xfd 
5971    01 C0                     add         ax,ax 
5973    09 47 16                  or          word ptr 0x16[bx],ax 
5976    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
5979    30 E4                     xor         ah,ah 
597B    80 67 16 FE               and         byte ptr 0x16[bx],0xfe 
597F    24 01                     and         al,0x01 
5981    09 47 16                  or          word ptr 0x16[bx],ax 
5984    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
5987    01 C0                     add         ax,ax 
5989    40                        inc         ax 
598A    40                        inc         ax 
598B    03 46 10                  add         ax,word ptr 0x10[bp] 
598E    C1 E0 02                  shl         ax,0x02 
5991    80 67 16 F3               and         byte ptr 0x16[bx],0xf3 
5995    9A 00 00 00 00            call        malloc_ 
599A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
599D    89 47 20                  mov         word ptr 0x20[bx],ax 
59A0    89 57 22                  mov         word ptr 0x22[bx],dx 
59A3    8B 47 22                  mov         ax,word ptr 0x22[bx] 
59A6    8B 57 20                  mov         dx,word ptr 0x20[bx] 
59A9    85 C0                     test        ax,ax 
59AB    75 14                     jne         L$685 
59AD    85 D2                     test        dx,dx 
59AF    75 10                     jne         L$685 
59B1    8B 07                     mov         ax,word ptr [bx] 
59B3    8B 57 02                  mov         dx,word ptr 0x2[bx] 
59B6    9A 00 00 00 00            call        free_ 
59BB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
59BE    E9 75 FF                  jmp         L$680 
59C1                          L$685:
59C1    8A 47 24                  mov         al,byte ptr 0x24[bx] 
59C4    0F B6 D0                  movzx       dx,al 
59C7    FE C0                     inc         al 
59C9    8B 76 FC                  mov         si,word ptr -0x4[bp] 
59CC    88 47 24                  mov         byte ptr 0x24[bx],al 
59CF    C1 E2 02                  shl         dx,0x02 
59D2    8B 5F 20                  mov         bx,word ptr 0x20[bx] 
59D5    8E 5C 22                  mov         ds,word ptr 0x22[si] 
59D8    01 D3                     add         bx,dx 
59DA    C7 07 00 00               mov         word ptr [bx],offset _upleft_move 
59DE    8C 57 02                  mov         word ptr 0x2[bx],ss 
59E1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
59E4    89 F3                     mov         bx,si 
59E6    8A 47 24                  mov         al,byte ptr 0x24[bx] 
59E9    0F B6 D8                  movzx       bx,al 
59EC    FE C0                     inc         al 
59EE    88 44 24                  mov         byte ptr 0x24[si],al 
59F1    C1 E3 02                  shl         bx,0x02 
59F4    C5 44 20                  lds         ax,dword ptr 0x20[si] 
59F7    01 C3                     add         bx,ax 
59F9    C7 07 00 00               mov         word ptr [bx],offset _upleft_close 
59FD    8C 57 02                  mov         word ptr 0x2[bx],ss 
5A00    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
5A04    74 44                     je          L$686 
5A06    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5A09    89 F3                     mov         bx,si 
5A0B    8A 47 24                  mov         al,byte ptr 0x24[bx] 
5A0E    0F B6 D0                  movzx       dx,al 
5A11    FE C0                     inc         al 
5A13    88 47 24                  mov         byte ptr 0x24[bx],al 
5A16    C1 E2 02                  shl         dx,0x02 
5A19    8B 5F 20                  mov         bx,word ptr 0x20[bx] 
5A1C    8E 5C 22                  mov         ds,word ptr 0x22[si] 
5A1F    01 D3                     add         bx,dx 
5A21    C7 07 00 00               mov         word ptr [bx],offset _upleft_maximize 
5A25    8C 57 02                  mov         word ptr 0x2[bx],ss 
5A28    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5A2B    89 F3                     mov         bx,si 
5A2D    8A 47 24                  mov         al,byte ptr 0x24[bx] 
5A30    0F B6 D0                  movzx       dx,al 
5A33    FE C0                     inc         al 
5A35    88 47 24                  mov         byte ptr 0x24[bx],al 
5A38    C1 E2 02                  shl         dx,0x02 
5A3B    8B 5F 20                  mov         bx,word ptr 0x20[bx] 
5A3E    8E 5C 22                  mov         ds,word ptr 0x22[si] 
5A41    01 D3                     add         bx,dx 
5A43    C7 07 00 00               mov         word ptr [bx],offset _upleft_resize 
5A47    8C 57 02                  mov         word ptr 0x2[bx],ss 
5A4A                          L$686:
5A4A    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
5A4E    74 23                     je          L$687 
5A50    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
5A53    8A 47 24                  mov         al,byte ptr 0x24[bx] 
5A56    0F B6 D0                  movzx       dx,al 
5A59    FE C0                     inc         al 
5A5B    8B 76 FC                  mov         si,word ptr -0x4[bp] 
5A5E    88 47 24                  mov         byte ptr 0x24[bx],al 
5A61    C1 E2 02                  shl         dx,0x02 
5A64    8B 5F 20                  mov         bx,word ptr 0x20[bx] 
5A67    8E 5C 22                  mov         ds,word ptr 0x22[si] 
5A6A    01 D3                     add         bx,dx 
5A6C    C7 07 00 00               mov         word ptr [bx],offset _upleft_minimize 
5A70    8C 57 02                  mov         word ptr 0x2[bx],ss 
5A73                          L$687:
5A73    36 A1 00 00               mov         ax,word ptr ss:_window_count 
5A77    89 C6                     mov         si,ax 
5A79    8D 54 01                  lea         dx,0x1[si] 
5A7C    36 89 16 00 00            mov         word ptr ss:_window_count,dx 
5A81    85 C0                     test        ax,ax 
5A83    75 1C                     jne         L$688 
5A85    89 D0                     mov         ax,dx 
5A87    BA 04 00                  mov         dx,0x0004 
5A8A    9A 00 00 00 00            call        calloc_ 
5A8F    89 C7                     mov         di,ax 
5A91    89 D1                     mov         cx,dx 
5A93    BA 02 00                  mov         dx,0x0002 
5A96    36 A1 00 00               mov         ax,word ptr ss:_window_count 
5A9A    9A 00 00 00 00            call        calloc_ 
5A9F    EB 2C                     jmp         L$689 
5AA1                          L$688:
5AA1    36 A1 00 00               mov         ax,word ptr ss:_windows 
5AA5    89 D3                     mov         bx,dx 
5AA7    36 8B 16 02 00            mov         dx,word ptr ss:_windows+0x2 
5AAC    C1 E3 02                  shl         bx,0x02 
5AAF    9A 00 00 00 00            call        realloc_ 
5AB4    36 8B 1E 00 00            mov         bx,word ptr ss:_window_count 
5AB9    89 C7                     mov         di,ax 
5ABB    89 D1                     mov         cx,dx 
5ABD    36 A1 00 00               mov         ax,word ptr ss:_window_visibility_order 
5AC1    36 8B 16 02 00            mov         dx,word ptr ss:_window_visibility_order+0x2 
5AC6    01 DB                     add         bx,bx 
5AC8    9A 00 00 00 00            call        realloc_ 
5ACD                          L$689:
5ACD    85 C9                     test        cx,cx 
5ACF    75 04                     jne         L$690 
5AD1    85 FF                     test        di,di 
5AD3    74 08                     je          L$691 
5AD5                          L$690:
5AD5    85 D2                     test        dx,dx 
5AD7    75 31                     jne         L$692 
5AD9    85 C0                     test        ax,ax 
5ADB    75 2D                     jne         L$692 
5ADD                          L$691:
5ADD    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
5AE0    8B 07                     mov         ax,word ptr [bx] 
5AE2    8B 57 02                  mov         dx,word ptr 0x2[bx] 
5AE5    9A 00 00 00 00            call        free_ 
5AEA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5AED    8B 47 2E                  mov         ax,word ptr 0x2e[bx] 
5AF0    8B 57 30                  mov         dx,word ptr 0x30[bx] 
5AF3    9A 00 00 00 00            call        free_ 
5AF8    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5AFB    89 D8                     mov         ax,bx 
5AFD    9A 00 00 00 00            call        free_ 
5B02    36 FF 0E 00 00            dec         word ptr ss:_window_count 
5B07    E9 41 FE                  jmp         L$682 
5B0A                          L$692:
5B0A    36 89 3E 00 00            mov         word ptr ss:_windows,di 
5B0F    36 89 0E 02 00            mov         word ptr ss:_windows+0x2,cx 
5B14    36 A3 00 00               mov         word ptr ss:_window_visibility_order,ax 
5B18    36 89 16 02 00            mov         word ptr ss:_window_visibility_order+0x2,dx 
5B1D    89 F3                     mov         bx,si 
5B1F    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
5B22    C1 E3 02                  shl         bx,0x02 
5B25    8E D9                     mov         ds,cx 
5B27    01 FB                     add         bx,di 
5B29    8B 7E FC                  mov         di,word ptr -0x4[bp] 
5B2C    89 47 02                  mov         word ptr 0x2[bx],ax 
5B2F    89 3F                     mov         word ptr [bx],di 
5B31    89 F3                     mov         bx,si 
5B33    36 8B 16 00 00            mov         dx,word ptr ss:_window_visibility_order 
5B38    01 F3                     add         bx,si 
5B3A    36 8E 1E 02 00            mov         ds,word ptr ss:_window_visibility_order+0x2 
5B3F    01 D3                     add         bx,dx 
5B41    89 37                     mov         word ptr [bx],si 
5B43    BA 01 00                  mov         dx,0x0001 
5B46    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
5B4A    89 F0                     mov         ax,si 
5B4C    36 89 3E 00 00            mov         word ptr ss:_running_window,di 
5B51    0E                        push        cs 
5B52    E8 00 00                  call        set_active_window_ 
5B55    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5B58    89 F8                     mov         ax,di 
5B5A                          L$693:
5B5A    C9                        leave       
5B5B    5F                        pop         di 
5B5C    5E                        pop         si 
5B5D    CA 10 00                  retf        0x0010 

Routine Size: 960 bytes,    Routine Base: main_TEXT + 57A0

5B60                          window_recalc_hitboxes_:
5B60    53                        push        bx 
5B61    51                        push        cx 
5B62    56                        push        si 
5B63    57                        push        di 
5B64    C8 04 00 00               enter       0x0004,0x00 
5B68    89 C3                     mov         bx,ax 
5B6A    8E DA                     mov         ds,dx 
5B6C    31 C0                     xor         ax,ax 
5B6E    31 D2                     xor         dx,dx 
5B70    89 46 FE                  mov         word ptr -0x2[bp],ax 
5B73                          L$694:
5B73    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
5B76    3B 4F 26                  cmp         cx,word ptr 0x26[bx] 
5B79    0F 83 F3 CC               jae         L$375 
5B7D    C4 77 18                  les         si,dword ptr 0x18[bx] 
5B80    01 D6                     add         si,dx 
5B82    26 8B 4C 02               mov         cx,word ptr es:0x2[si] 
5B86    26 8B 3C                  mov         di,word ptr es:[si] 
5B89    8E C1                     mov         es,cx 
5B8B    26 F6 05 1F               test        byte ptr es:[di],0x1f 
5B8F    0F 84 F4 00               je          L$699 
5B93    8B 4F 2C                  mov         cx,word ptr 0x2c[bx] 
5B96    8B 77 2A                  mov         si,word ptr 0x2a[bx] 
5B99    89 4E FC                  mov         word ptr -0x4[bp],cx 
5B9C    01 C6                     add         si,ax 
5B9E    26 8B 4D 04               mov         cx,word ptr es:0x4[di] 
5BA2    8E 46 FC                  mov         es,word ptr -0x4[bp] 
5BA5    26 89 0C                  mov         word ptr es:[si],cx 
5BA8    C4 77 18                  les         si,dword ptr 0x18[bx] 
5BAB    01 D6                     add         si,dx 
5BAD    26 C4 3C                  les         di,dword ptr es:[si] 
5BB0    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
5BB6    26 8B 7D 06               mov         di,word ptr es:0x6[di] 
5BBA    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5BBD    01 CF                     add         di,cx 
5BBF    01 C6                     add         si,ax 
5BC1    47                        inc         di 
5BC2    47                        inc         di 
5BC3    26 89 7C 02               mov         word ptr es:0x2[si],di 
5BC7    C4 7F 18                  les         di,dword ptr 0x18[bx] 
5BCA    01 D7                     add         di,dx 
5BCC    26 8B 4D 02               mov         cx,word ptr es:0x2[di] 
5BD0    26 8B 35                  mov         si,word ptr es:[di] 
5BD3    8E C1                     mov         es,cx 
5BD5    26 8A 0C                  mov         cl,byte ptr es:[si] 
5BD8    80 E1 1F                  and         cl,0x1f 
5BDB    80 F9 04                  cmp         cl,0x04 
5BDE    74 36                     je          L$695 
5BE0    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
5BE4    26 03 7C 08               add         di,word ptr es:0x8[si] 
5BE8    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5BEB    01 C6                     add         si,ax 
5BED    26 89 7C 04               mov         word ptr es:0x4[si],di 
5BF1    C4 77 18                  les         si,dword ptr 0x18[bx] 
5BF4    01 D6                     add         si,dx 
5BF6    26 C4 3C                  les         di,dword ptr es:[si] 
5BF9    26 8B 75 06               mov         si,word ptr es:0x6[di] 
5BFD    26 03 75 0A               add         si,word ptr es:0xa[di] 
5C01    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
5C07    01 F7                     add         di,si 
5C09    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5C0C    01 C6                     add         si,ax 
5C0E    47                        inc         di 
5C0F    47                        inc         di 
5C10    26 89 7C 06               mov         word ptr es:0x6[si],di 
5C14    EB 6E                     jmp         L$698 
5C16                          L$695:
5C16    26 F6 44 02 03            test        byte ptr es:0x2[si],0x03 
5C1B    75 32                     jne         L$696 
5C1D    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
5C21    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5C24    01 C6                     add         si,ax 
5C26    83 C7 0C                  add         di,0x000c 
5C29    26 89 7C 04               mov         word ptr es:0x4[si],di 
5C2D    C4 7F 18                  les         di,dword ptr 0x18[bx] 
5C30    01 D7                     add         di,dx 
5C32    26 C4 35                  les         si,dword ptr es:[di] 
5C35    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
5C3B    26 03 7C 06               add         di,word ptr es:0x6[si] 
5C3F    26 8B 4C 08               mov         cx,word ptr es:0x8[si] 
5C43    83 C7 1C                  add         di,0x001c 
5C46    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5C49    01 F9                     add         cx,di 
5C4B    01 C6                     add         si,ax 
5C4D    EB 31                     jmp         L$697 
5C4F                          L$696:
5C4F    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
5C53    83 C7 1A                  add         di,0x001a 
5C56    26 03 7C 08               add         di,word ptr es:0x8[si] 
5C5A    C4 77 2A                  les         si,dword ptr 0x2a[bx] 
5C5D    01 C6                     add         si,ax 
5C5F    26 89 7C 04               mov         word ptr es:0x4[si],di 
5C63    C4 77 18                  les         si,dword ptr 0x18[bx] 
5C66    01 D6                     add         si,dx 
5C68    26 C4 3C                  les         di,dword ptr es:[si] 
5C6B    8B 77 2A                  mov         si,word ptr 0x2a[bx] 
5C6E    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
5C74    01 C6                     add         si,ax 
5C76    26 03 4D 06               add         cx,word ptr es:0x6[di] 
5C7A    8E 47 2C                  mov         es,word ptr 0x2c[bx] 
5C7D    83 C1 0E                  add         cx,0x000e 
5C80                          L$697:
5C80    26 89 4C 06               mov         word ptr es:0x6[si],cx 
5C84                          L$698:
5C84    05 0A 00                  add         ax,0x000a 
5C87                          L$699:
5C87    FF 46 FE                  inc         word ptr -0x2[bp] 
5C8A    83 C2 04                  add         dx,0x0004 
5C8D    E9 E3 FE                  jmp         L$694 
5C90                          window_add_hitbox_:
5C90    56                        push        si 
5C91    57                        push        di 
5C92    C8 02 00 00               enter       0x0002,0x00 
5C96    89 C6                     mov         si,ax 
5C98    89 56 FE                  mov         word ptr -0x2[bp],dx 
5C9B    89 DF                     mov         di,bx 
5C9D    8E DA                     mov         ds,dx 
5C9F    8B 54 2A                  mov         dx,word ptr 0x2a[si] 
5CA2    8B 44 2C                  mov         ax,word ptr 0x2c[si] 
5CA5    FF 44 28                  inc         word ptr 0x28[si] 
5CA8    85 C0                     test        ax,ax 
5CAA    75 2B                     jne         L$701 
5CAC    85 D2                     test        dx,dx 
5CAE    75 27                     jne         L$701 
5CB0    B8 0A 00                  mov         ax,0x000a 
5CB3    9A 00 00 00 00            call        malloc_ 
5CB8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5CBB    89 44 2A                  mov         word ptr 0x2a[si],ax 
5CBE    89 54 2C                  mov         word ptr 0x2c[si],dx 
5CC1    8B 44 2C                  mov         ax,word ptr 0x2c[si] 
5CC4    8B 54 2A                  mov         dx,word ptr 0x2a[si] 
5CC7    85 C0                     test        ax,ax 
5CC9    75 30                     jne         L$703 
5CCB    85 D2                     test        dx,dx 
5CCD    75 2C                     jne         L$703 
5CCF                          L$700:
5CCF    31 C0                     xor         ax,ax 
5CD1    FF 4C 28                  dec         word ptr 0x28[si] 
5CD4    E9 3A BE                  jmp         L$283 
5CD7                          L$701:
5CD7    6B 5C 28 0A               imul        bx,word ptr 0x28[si],0x000a 
5CDB    89 D0                     mov         ax,dx 
5CDD    8B 54 2C                  mov         dx,word ptr 0x2c[si] 
5CE0    9A 00 00 00 00            call        realloc_ 
5CE5    85 D2                     test        dx,dx 
5CE7    75 09                     jne         L$702 
5CE9    85 C0                     test        ax,ax 
5CEB    75 05                     jne         L$702 
5CED    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5CF0    EB DD                     jmp         L$700 
5CF2                          L$702:
5CF2    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5CF5    89 44 2A                  mov         word ptr 0x2a[si],ax 
5CF8    89 54 2C                  mov         word ptr 0x2c[si],dx 
5CFB                          L$703:
5CFB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5CFE    8B 44 28                  mov         ax,word ptr 0x28[si] 
5D01    48                        dec         ax 
5D02    6B D8 0A                  imul        bx,ax,0x000a 
5D05    C5 54 2A                  lds         dx,dword ptr 0x2a[si] 
5D08    01 D3                     add         bx,dx 
5D0A    89 3F                     mov         word ptr [bx],di 
5D0C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
5D12    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5D15    8B 5C 28                  mov         bx,word ptr 0x28[si] 
5D18    4B                        dec         bx 
5D19    6B DB 0A                  imul        bx,0x000a 
5D1C    01 C8                     add         ax,cx 
5D1E    C5 54 2A                  lds         dx,dword ptr 0x2a[si] 
5D21    01 D3                     add         bx,dx 
5D23    40                        inc         ax 
5D24    40                        inc         ax 
5D25    89 47 02                  mov         word ptr 0x2[bx],ax 
5D28    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5D2B    8B 44 28                  mov         ax,word ptr 0x28[si] 
5D2E    48                        dec         ax 
5D2F    6B C0 0A                  imul        ax,0x000a 
5D32    8B 56 08                  mov         dx,word ptr 0x8[bp] 
5D35    01 FA                     add         dx,di 
5D37    C5 7C 2A                  lds         di,dword ptr 0x2a[si] 
5D3A    01 C7                     add         di,ax 
5D3C    89 55 04                  mov         word ptr 0x4[di],dx 
5D3F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
5D45    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5D48    8B 54 28                  mov         dx,word ptr 0x28[si] 
5D4B    4A                        dec         dx 
5D4C    6B D2 0A                  imul        dx,0x000a 
5D4F    01 C8                     add         ax,cx 
5D51    40                        inc         ax 
5D52    40                        inc         ax 
5D53    C5 5C 2A                  lds         bx,dword ptr 0x2a[si] 
5D56    01 D3                     add         bx,dx 
5D58    03 46 0A                  add         ax,word ptr 0xa[bp] 
5D5B    89 47 06                  mov         word ptr 0x6[bx],ax 
5D5E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5D61    8B 44 28                  mov         ax,word ptr 0x28[si] 
5D64    48                        dec         ax 
5D65    6B D8 0A                  imul        bx,ax,0x000a 
5D68    8B 4C 26                  mov         cx,word ptr 0x26[si] 
5D6B    8B 54 2A                  mov         dx,word ptr 0x2a[si] 
5D6E    49                        dec         cx 
5D6F    8E 5C 2C                  mov         ds,word ptr 0x2c[si] 
5D72    01 D3                     add         bx,dx 
5D74    B8 01 00                  mov         ax,0x0001 
5D77    89 4F 08                  mov         word ptr 0x8[bx],cx 
5D7A    E9 94 BD                  jmp         L$283 
5D7D                          window_grid_addelement_:
5D7D    56                        push        si 
5D7E    57                        push        di 
5D7F    C8 02 00 00               enter       0x0002,0x00 
5D83    89 C6                     mov         si,ax 
5D85    89 56 FE                  mov         word ptr -0x2[bp],dx 
5D88    89 DF                     mov         di,bx 
5D8A    8E DA                     mov         ds,dx 
5D8C    8B 44 18                  mov         ax,word ptr 0x18[si] 
5D8F    8B 54 1A                  mov         dx,word ptr 0x1a[si] 
5D92    FF 44 26                  inc         word ptr 0x26[si] 
5D95    85 D2                     test        dx,dx 
5D97    75 2B                     jne         L$705 
5D99    85 C0                     test        ax,ax 
5D9B    75 27                     jne         L$705 
5D9D    B8 04 00                  mov         ax,0x0004 
5DA0    9A 00 00 00 00            call        malloc_ 
5DA5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5DA8    89 44 18                  mov         word ptr 0x18[si],ax 
5DAB    89 54 1A                  mov         word ptr 0x1a[si],dx 
5DAE    8B 44 1A                  mov         ax,word ptr 0x1a[si] 
5DB1    8B 54 18                  mov         dx,word ptr 0x18[si] 
5DB4    85 C0                     test        ax,ax 
5DB6    75 2D                     jne         L$707 
5DB8    85 D2                     test        dx,dx 
5DBA    75 29                     jne         L$707 
5DBC                          L$704:
5DBC    31 C0                     xor         ax,ax 
5DBE    FF 4C 26                  dec         word ptr 0x26[si] 
5DC1    E9 DD BC                  jmp         L$279 
5DC4                          L$705:
5DC4    8B 5C 26                  mov         bx,word ptr 0x26[si] 
5DC7    C1 E3 02                  shl         bx,0x02 
5DCA    9A 00 00 00 00            call        realloc_ 
5DCF    85 D2                     test        dx,dx 
5DD1    75 09                     jne         L$706 
5DD3    85 C0                     test        ax,ax 
5DD5    75 05                     jne         L$706 
5DD7    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5DDA    EB E0                     jmp         L$704 
5DDC                          L$706:
5DDC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5DDF    89 44 18                  mov         word ptr 0x18[si],ax 
5DE2    89 54 1A                  mov         word ptr 0x1a[si],dx 
5DE5                          L$707:
5DE5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5DE8    8B 44 26                  mov         ax,word ptr 0x26[si] 
5DEB    8B 54 18                  mov         dx,word ptr 0x18[si] 
5DEE    C1 E0 02                  shl         ax,0x02 
5DF1    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
5DF4    89 D6                     mov         si,dx 
5DF6    01 C6                     add         si,ax 
5DF8    89 7C FC                  mov         word ptr -0x4[si],di 
5DFB    B8 01 00                  mov         ax,0x0001 
5DFE    89 4C FE                  mov         word ptr -0x2[si],cx 
5E01    E9 9D BC                  jmp         L$279 

Routine Size: 676 bytes,    Routine Base: main_TEXT + 5B60

5E04                          window_scrollbar_:
5E04    56                        push        si 
5E05    57                        push        di 
5E06    C8 08 00 00               enter       0x0008,0x00 
5E0A    89 C7                     mov         di,ax 
5E0C    89 D6                     mov         si,dx 
5E0E    89 5E FC                  mov         word ptr -0x4[bp],bx 
5E11    89 4E FE                  mov         word ptr -0x2[bp],cx 
5E14    BA 34 00                  mov         dx,0x0034 
5E17    B8 01 00                  mov         ax,0x0001 
5E1A    9A 00 00 00 00            call        calloc_ 
5E1F    89 C3                     mov         bx,ax 
5E21    89 46 F8                  mov         word ptr -0x8[bp],ax 
5E24    89 56 FA                  mov         word ptr -0x6[bp],dx 
5E27    85 D2                     test        dx,dx 
5E29    75 0B                     jne         L$709 
5E2B    85 C0                     test        ax,ax 
5E2D    75 07                     jne         L$709 
5E2F                          L$708:
5E2F    31 C0                     xor         ax,ax 
5E31    31 D2                     xor         dx,dx 
5E33    E9 9E 00                  jmp         L$713 
5E36                          L$709:
5E36    8E DA                     mov         ds,dx 
5E38    89 4F 06                  mov         word ptr 0x6[bx],cx 
5E3B    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
5E3E    80 27 E0                  and         byte ptr [bx],0xe0 
5E41    30 E4                     xor         ah,ah 
5E43    80 67 02 FC               and         byte ptr 0x2[bx],0xfc 
5E47    24 03                     and         al,0x03 
5E49    09 47 02                  or          word ptr 0x2[bx],ax 
5E4C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
5E4F    89 47 04                  mov         word ptr 0x4[bx],ax 
5E52    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
5E55    89 47 08                  mov         word ptr 0x8[bx],ax 
5E58    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
5E5B    89 47 20                  mov         word ptr 0x20[bx],ax 
5E5E    8B 46 10                  mov         ax,word ptr 0x10[bp] 
5E61    89 47 24                  mov         word ptr 0x24[bx],ax 
5E64    8B 46 12                  mov         ax,word ptr 0x12[bp] 
5E67    89 D1                     mov         cx,dx 
5E69    89 47 26                  mov         word ptr 0x26[bx],ax 
5E6C    8B 46 14                  mov         ax,word ptr 0x14[bp] 
5E6F    89 F2                     mov         dx,si 
5E71    89 47 28                  mov         word ptr 0x28[bx],ax 
5E74    89 F8                     mov         ax,di 
5E76    80 0F 04                  or          byte ptr [bx],0x04 
5E79    E8 00 00                  call        window_grid_addelement_ 
5E7C    85 C0                     test        ax,ax 
5E7E    74 40                     je          L$711 
5E80    83 7E 0A 00               cmp         word ptr 0xa[bp],0x0000 
5E84    75 1A                     jne         L$710 
5E86    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
5E89    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
5E8C    05 1A 00                  add         ax,0x001a 
5E8F    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
5E92    50                        push        ax 
5E93    89 F2                     mov         dx,si 
5E95    6A 0C                     push        0x000c 
5E97    89 F8                     mov         ax,di 
5E99    E8 00 00                  call        window_add_hitbox_ 
5E9C    85 C0                     test        ax,ax 
5E9E    74 20                     je          L$711 
5EA0                          L$710:
5EA0    83 7E 0A 00               cmp         word ptr 0xa[bp],0x0000 
5EA4    74 28                     je          L$712 
5EA6    6A 0E                     push        0x000e 
5EA8    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
5EAB    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
5EAE    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
5EB1    05 1A 00                  add         ax,0x001a 
5EB4    89 F2                     mov         dx,si 
5EB6    50                        push        ax 
5EB7    89 F8                     mov         ax,di 
5EB9    E8 00 00                  call        window_add_hitbox_ 
5EBC    85 C0                     test        ax,ax 
5EBE    75 0E                     jne         L$712 
5EC0                          L$711:
5EC0    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
5EC3    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
5EC6    9A 00 00 00 00            call        free_ 
5ECB    E9 61 FF                  jmp         L$708 
5ECE                          L$712:
5ECE    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
5ED1    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
5ED4                          L$713:
5ED4    C9                        leave       
5ED5    5F                        pop         di 
5ED6    5E                        pop         si 
5ED7    CA 0C 00                  retf        0x000c 

Routine Size: 214 bytes,    Routine Base: main_TEXT + 5E04

5EDA                          window_icon_:
5EDA    56                        push        si 
5EDB    57                        push        di 
5EDC    C8 08 00 00               enter       0x0008,0x00 
5EE0    50                        push        ax 
5EE1    52                        push        dx 
5EE2    53                        push        bx 
5EE3    51                        push        cx 
5EE4    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
5EE7    BA 34 00                  mov         dx,0x0034 
5EEA    B8 01 00                  mov         ax,0x0001 
5EED    9A 00 00 00 00            call        calloc_ 
5EF2    89 46 FC                  mov         word ptr -0x4[bp],ax 
5EF5    89 56 FE                  mov         word ptr -0x2[bp],dx 
5EF8    89 46 F8                  mov         word ptr -0x8[bp],ax 
5EFB    89 56 FA                  mov         word ptr -0x6[bp],dx 
5EFE    85 D2                     test        dx,dx 
5F00    75 06                     jne         L$714 
5F02    85 C0                     test        ax,ax 
5F04    0F 84 92 00               je          L$719 
5F08                          L$714:
5F08    8E DA                     mov         ds,dx 
5F0A    89 C7                     mov         di,ax 
5F0C    66 C7 45 08 44 00 27 00
                                  mov         dword ptr 0x8[di],0x00270044 
5F14    89 4D 06                  mov         word ptr 0x6[di],cx 
5F17    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
5F1A    80 25 E0                  and         byte ptr [di],0xe0 
5F1D    89 45 04                  mov         word ptr 0x4[di],ax 
5F20    80 0D 05                  or          byte ptr [di],0x05 
5F23    8B 7E 0A                  mov         di,word ptr 0xa[bp] 
5F26    8E C3                     mov         es,bx 
5F28    B9 FF FF                  mov         cx,0xffff 
5F2B    33 C0                     xor         ax,ax 
5F2D    F2 AE                     repne scasb 
5F2F    F7 D1                     not         cx 
5F31    49                        dec         cx 
5F32    89 C8                     mov         ax,cx 
5F34    40                        inc         ax 
5F35    8B 7E FC                  mov         di,word ptr -0x4[bp] 
5F38    9A 00 00 00 00            call        malloc_ 
5F3D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
5F40    89 45 0C                  mov         word ptr 0xc[di],ax 
5F43    8B 76 FC                  mov         si,word ptr -0x4[bp] 
5F46    89 55 0E                  mov         word ptr 0xe[di],dx 
5F49    8B 44 0E                  mov         ax,word ptr 0xe[si] 
5F4C    8B 7D 0C                  mov         di,word ptr 0xc[di] 
5F4F    85 C0                     test        ax,ax 
5F51    75 0A                     jne         L$715 
5F53    85 FF                     test        di,di 
5F55    75 06                     jne         L$715 
5F57    89 F0                     mov         ax,si 
5F59    8C DA                     mov         dx,ds 
5F5B    EB 38                     jmp         L$718 
5F5D                          L$715:
5F5D    8B 76 0A                  mov         si,word ptr 0xa[bp] 
5F60    8B 4E 10                  mov         cx,word ptr 0x10[bp] 
5F63    8E DB                     mov         ds,bx 
5F65    8E C0                     mov         es,ax 
5F67    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5F6A    57                        push        di 
5F6B                          L$716:
5F6B    AC                        lodsb       
5F6C    AA                        stosb       
5F6D    3C 00                     cmp         al,0x00 
5F6F    75 FA                     jne         L$716 
5F71    5F                        pop         di 
5F72    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
5F75    8B 5E 0E                  mov         bx,word ptr 0xe[bp] 
5F78    05 10 00                  add         ax,0x0010 
5F7B    E8 00 00                  call        load_icon_bitmap_ 
5F7E    85 C0                     test        ax,ax 
5F80    75 1F                     jne         L$720 
5F82    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
5F85    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
5F88    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
5F8B    9A 00 00 00 00            call        free_ 
5F90    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5F93                          L$717:
5F93    89 D8                     mov         ax,bx 
5F95                          L$718:
5F95    9A 00 00 00 00            call        free_ 
5F9A                          L$719:
5F9A    31 C0                     xor         ax,ax 
5F9C    31 D2                     xor         dx,dx 
5F9E    E9 08 AD                  jmp         L$153 
5FA1                          L$720:
5FA1    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
5FA4    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
5FA7    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
5FAA    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
5FAD    E8 00 00                  call        window_grid_addelement_ 
5FB0    85 C0                     test        ax,ax 
5FB2    74 17                     je          L$721 
5FB4    6A 27                     push        0x0027 
5FB6    8B 4E F0                  mov         cx,word ptr -0x10[bp] 
5FB9    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
5FBC    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
5FBF    6A 44                     push        0x0044 
5FC1    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
5FC4    E8 00 00                  call        window_add_hitbox_ 
5FC7    85 C0                     test        ax,ax 
5FC9    75 21                     jne         L$722 
5FCB                          L$721:
5FCB    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
5FCE    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
5FD1    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
5FD4    9A 00 00 00 00            call        free_ 
5FD9    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
5FDC    8B 47 10                  mov         ax,word ptr 0x10[bx] 
5FDF    8B 57 12                  mov         dx,word ptr 0x12[bx] 
5FE2    9A 00 00 00 00            call        free_ 
5FE7    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
5FEA    EB A7                     jmp         L$717 
5FEC                          L$722:
5FEC    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
5FEF    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
5FF2    E9 B4 AC                  jmp         L$153 

Routine Size: 283 bytes,    Routine Base: main_TEXT + 5EDA

5FF5                          window_list_:
5FF5    56                        push        si 
5FF6    57                        push        di 
5FF7    C8 04 00 00               enter       0x0004,0x00 
5FFB    50                        push        ax 
5FFC    52                        push        dx 
5FFD    53                        push        bx 
5FFE    51                        push        cx 
5FFF    8B 4E 12                  mov         cx,word ptr 0x12[bp] 
6002    BA 34 00                  mov         dx,0x0034 
6005    B8 01 00                  mov         ax,0x0001 
6008    9A 00 00 00 00            call        calloc_ 
600D    89 C3                     mov         bx,ax 
600F    89 56 FE                  mov         word ptr -0x2[bp],dx 
6012    89 C6                     mov         si,ax 
6014    89 56 FC                  mov         word ptr -0x4[bp],dx 
6017    85 D2                     test        dx,dx 
6019    75 04                     jne         L$723 
601B    85 C0                     test        ax,ax 
601D    74 6C                     je          L$726 
601F                          L$723:
601F    8E DA                     mov         ds,dx 
6021    C7 47 24 FF FF            mov         word ptr 0x24[bx],0xffff 
6026    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6029    C7 47 2A FF FF            mov         word ptr 0x2a[bx],0xffff 
602E    89 47 04                  mov         word ptr 0x4[bx],ax 
6031    89 4F 20                  mov         word ptr 0x20[bx],cx 
6034    80 27 E0                  and         byte ptr [bx],0xe0 
6037    80 4F 02 04               or          byte ptr 0x2[bx],0x04 
603B    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
603E    80 0F 03                  or          byte ptr [bx],0x03 
6041    89 47 06                  mov         word ptr 0x6[bx],ax 
6044    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
6047    89 47 08                  mov         word ptr 0x8[bx],ax 
604A    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
604D    89 47 0A                  mov         word ptr 0xa[bx],ax 
6050    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
6054    75 06                     jne         L$724 
6056    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
605A    74 56                     je          L$729 
605C                          L$724:
605C    BA 04 00                  mov         dx,0x0004 
605F    89 C8                     mov         ax,cx 
6061    9A 00 00 00 00            call        calloc_ 
6066    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6069    89 47 14                  mov         word ptr 0x14[bx],ax 
606C    89 57 16                  mov         word ptr 0x16[bx],dx 
606F    8B 57 14                  mov         dx,word ptr 0x14[bx] 
6072    8B 47 16                  mov         ax,word ptr 0x16[bx] 
6075    89 D7                     mov         di,dx 
6077    8E D8                     mov         ds,ax 
6079    85 C0                     test        ax,ax 
607B    75 14                     jne         L$727 
607D    85 D2                     test        dx,dx 
607F    75 10                     jne         L$727 
6081    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6084    89 D8                     mov         ax,bx 
6086                          L$725:
6086    9A 00 00 00 00            call        free_ 
608B                          L$726:
608B    31 C0                     xor         ax,ax 
608D    31 D2                     xor         dx,dx 
608F    EB 6E                     jmp         L$734 
6091                          L$727:
6091    8E 46 10                  mov         es,word ptr 0x10[bp] 
6094                          L$728:
6094    49                        dec         cx 
6095    83 F9 FF                  cmp         cx,0xffff 
6098    74 20                     je          L$730 
609A    8B 5E 0E                  mov         bx,word ptr 0xe[bp] 
609D    26 8B 07                  mov         ax,word ptr es:[bx] 
60A0    26 8B 57 02               mov         dx,word ptr es:0x2[bx] 
60A4    89 05                     mov         word ptr [di],ax 
60A6    83 46 0E 04               add         word ptr 0xe[bp],0x0004 
60AA    89 55 02                  mov         word ptr 0x2[di],dx 
60AD    83 C7 04                  add         di,0x0004 
60B0    EB E2                     jmp         L$728 
60B2                          L$729:
60B2    66 C7 47 14 00 00 00 00
                                  mov         dword ptr 0x14[bx],0x00000000 
60BA                          L$730:
60BA    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
60BD    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
60C0    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
60C3    89 F3                     mov         bx,si 
60C5    E8 00 00                  call        window_grid_addelement_ 
60C8    85 C0                     test        ax,ax 
60CA    74 19                     je          L$731 
60CC    FF 76 0C                  push        word ptr 0xc[bp] 
60CF    8B 4E F4                  mov         cx,word ptr -0xc[bp] 
60D2    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
60D5    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
60D8    FF 76 0A                  push        word ptr 0xa[bp] 
60DB    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
60DE    E8 00 00                  call        window_add_hitbox_ 
60E1    85 C0                     test        ax,ax 
60E3    75 15                     jne         L$732 
60E5                          L$731:
60E5    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
60E8    8B 44 14                  mov         ax,word ptr 0x14[si] 
60EB    8B 54 16                  mov         dx,word ptr 0x16[si] 
60EE    9A 00 00 00 00            call        free_ 
60F3    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
60F6    89 F0                     mov         ax,si 
60F8    EB 8C                     jmp         L$725 
60FA                          L$732:
60FA    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
60FD                          L$733:
60FD    89 F0                     mov         ax,si 
60FF                          L$734:
60FF    C9                        leave       
6100    5F                        pop         di 
6101    5E                        pop         si 
6102    CA 0A 00                  retf        0x000a 

Routine Size: 272 bytes,    Routine Base: main_TEXT + 5FF5

6105                          window_list_selectrow_:
6105    56                        push        si 
6106    57                        push        di 
6107    C8 10 00 00               enter       0x0010,0x00 
610B    89 C7                     mov         di,ax 
610D    8E DA                     mov         ds,dx 
610F    89 4E FA                  mov         word ptr -0x6[bp],cx 
6112    89 D8                     mov         ax,bx 
6114    C1 E0 02                  shl         ax,0x02 
6117    C4 5D 18                  les         bx,dword ptr 0x18[di] 
611A    01 C3                     add         bx,ax 
611C    26 8B 47 02               mov         ax,word ptr es:0x2[bx] 
6120    26 8B 37                  mov         si,word ptr es:[bx] 
6123    8E C0                     mov         es,ax 
6125    89 46 FE                  mov         word ptr -0x2[bp],ax 
6128    26 8B 44 1A               mov         ax,word ptr es:0x1a[si] 
612C    89 46 FC                  mov         word ptr -0x4[bp],ax 
612F    26 8B 44 18               mov         ax,word ptr es:0x18[si] 
6133    89 46 F8                  mov         word ptr -0x8[bp],ax 
6136    26 8B 44 0A               mov         ax,word ptr es:0xa[si] 
613A    89 46 F6                  mov         word ptr -0xa[bp],ax 
613D    8B 45 04                  mov         ax,word ptr 0x4[di] 
6140    26 03 44 04               add         ax,word ptr es:0x4[si] 
6144    89 46 F0                  mov         word ptr -0x10[bp],ax 
6147    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
614D    26 8B 5C 2A               mov         bx,word ptr es:0x2a[si] 
6151    03 45 06                  add         ax,word ptr 0x6[di] 
6154    06                        push        es 
6155    1F                        pop         ds 
6156    40                        inc         ax 
6157    40                        inc         ax 
6158    8B 54 06                  mov         dx,word ptr 0x6[si] 
615B    01 C2                     add         dx,ax 
615D    89 4C 2A                  mov         word ptr 0x2a[si],cx 
6160    89 56 F4                  mov         word ptr -0xc[bp],dx 
6163    3B 5E FC                  cmp         bx,word ptr -0x4[bp] 
6166    0F 82 8C 00               jb          L$737 
616A    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
616D    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
6173    31 D2                     xor         dx,dx 
6175    41                        inc         cx 
6176    41                        inc         cx 
6177    F7 F1                     div         cx 
6179    03 46 FC                  add         ax,word ptr -0x4[bp] 
617C    39 C3                     cmp         bx,ax 
617E    73 76                     jae         L$737 
6180    89 D8                     mov         ax,bx 
6182    8B 7C 14                  mov         di,word ptr 0x14[si] 
6185    C1 E0 02                  shl         ax,0x02 
6188    8E 5C 16                  mov         ds,word ptr 0x16[si] 
618B    01 C7                     add         di,ax 
618D    89 46 F2                  mov         word ptr -0xe[bp],ax 
6190    C4 05                     les         ax,dword ptr [di] 
6192    89 C7                     mov         di,ax 
6194    B9 FF FF                  mov         cx,0xffff 
6197    33 C0                     xor         ax,ax 
6199    F2 AE                     repne scasb 
619B    F7 D1                     not         cx 
619D    49                        dec         cx 
619E    3B 4E F8                  cmp         cx,word ptr -0x8[bp] 
61A1    76 16                     jbe         L$735 
61A3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
61A6    8B 7C 14                  mov         di,word ptr 0x14[si] 
61A9    03 7E F2                  add         di,word ptr -0xe[bp] 
61AC    8E 5C 16                  mov         ds,word ptr 0x16[si] 
61AF    8B 15                     mov         dx,word ptr [di] 
61B1    8B 45 02                  mov         ax,word ptr 0x2[di] 
61B4    03 56 F8                  add         dx,word ptr -0x8[bp] 
61B7    EB 05                     jmp         L$736 
61B9                          L$735:
61B9    BA 00 00                  mov         dx,offset _null_byte 
61BC    8C D0                     mov         ax,ss 
61BE                          L$736:
61BE    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
61C1    8B 4C 02                  mov         cx,word ptr 0x2[si] 
61C4    C1 E9 03                  shr         cx,0x03 
61C7    83 E1 01                  and         cx,0x0001 
61CA    51                        push        cx 
61CB    50                        push        ax 
61CC    52                        push        dx 
61CD    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
61D3    2B 5E FC                  sub         bx,word ptr -0x4[bp] 
61D6    42                        inc         dx 
61D7    42                        inc         dx 
61D8    0F AF D3                  imul        dx,bx 
61DB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
61E1    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__TEXTBOX_BGCOLOR 
61E7    50                        push        ax 
61E8    8B 44 08                  mov         ax,word ptr 0x8[si] 
61EB    03 56 F4                  add         dx,word ptr -0xc[bp] 
61EE    89 C3                     mov         bx,ax 
61F0    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
61F3    E8 00 00                  call        draw_label_ 
61F6                          L$737:
61F6    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
61F9    3B 46 FC                  cmp         ax,word ptr -0x4[bp] 
61FC    0F 82 D6 A2               jb          L$52 
6200    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6203    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
6209    31 D2                     xor         dx,dx 
620B    43                        inc         bx 
620C    43                        inc         bx 
620D    F7 F3                     div         bx 
620F    03 46 FC                  add         ax,word ptr -0x4[bp] 
6212    3B 46 FA                  cmp         ax,word ptr -0x6[bp] 
6215    0F 86 BD A2               jbe         L$52 
6219    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
621C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
621F    C1 E2 02                  shl         dx,0x02 
6222    C5 5C 14                  lds         bx,dword ptr 0x14[si] 
6225    01 D3                     add         bx,dx 
6227    C4 3F                     les         di,dword ptr [bx] 
6229    B9 FF FF                  mov         cx,0xffff 
622C    33 C0                     xor         ax,ax 
622E    F2 AE                     repne scasb 
6230    F7 D1                     not         cx 
6232    49                        dec         cx 
6233    3B 4E F8                  cmp         cx,word ptr -0x8[bp] 
6236    76 12                     jbe         L$738 
6238    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
623B    C5 7C 14                  lds         di,dword ptr 0x14[si] 
623E    01 D7                     add         di,dx 
6240    8B 05                     mov         ax,word ptr [di] 
6242    8B 5D 02                  mov         bx,word ptr 0x2[di] 
6245    03 46 F8                  add         ax,word ptr -0x8[bp] 
6248    EB 05                     jmp         L$739 
624A                          L$738:
624A    B8 00 00                  mov         ax,offset _null_byte 
624D    8C D3                     mov         bx,ss 
624F                          L$739:
624F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6252    8B 54 02                  mov         dx,word ptr 0x2[si] 
6255    C1 EA 03                  shr         dx,0x03 
6258    83 E2 01                  and         dx,0x0001 
625B    52                        push        dx 
625C    53                        push        bx 
625D    50                        push        ax 
625E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ATEXTCOLOR 
6264    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
6267    50                        push        ax 
6268    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
626E    2B 56 FC                  sub         dx,word ptr -0x4[bp] 
6271    40                        inc         ax 
6272    40                        inc         ax 
6273    0F AF C2                  imul        ax,dx 
6276    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__ATEXT_BGCOLOR 
627C    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
627F    8B 5C 08                  mov         bx,word ptr 0x8[si] 
6282    01 C2                     add         dx,ax 
6284    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
6287    E8 00 00                  call        draw_label_ 
628A    E9 49 A2                  jmp         L$52 

Routine Size: 392 bytes,    Routine Base: main_TEXT + 6105

628D                          window_ml_textbox_:
628D    56                        push        si 
628E    57                        push        di 
628F    C8 0A 00 00               enter       0x000a,0x00 
6293    50                        push        ax 
6294    89 D7                     mov         di,dx 
6296    89 5E FA                  mov         word ptr -0x6[bp],bx 
6299    89 4E FC                  mov         word ptr -0x4[bp],cx 
629C    BA 34 00                  mov         dx,0x0034 
629F    B8 01 00                  mov         ax,0x0001 
62A2    9A 00 00 00 00            call        calloc_ 
62A7    89 C6                     mov         si,ax 
62A9    89 56 FE                  mov         word ptr -0x2[bp],dx 
62AC    89 46 F6                  mov         word ptr -0xa[bp],ax 
62AF    89 56 F8                  mov         word ptr -0x8[bp],dx 
62B2    85 D2                     test        dx,dx 
62B4    75 0B                     jne         L$741 
62B6    85 C0                     test        ax,ax 
62B8    75 07                     jne         L$741 
62BA                          L$740:
62BA    31 C0                     xor         ax,ax 
62BC    31 D2                     xor         dx,dx 
62BE    E9 3E FE                  jmp         L$734 
62C1                          L$741:
62C1    8E DA                     mov         ds,dx 
62C3    C7 44 24 FF FF            mov         word ptr 0x24[si],0xffff 
62C8    89 5C 04                  mov         word ptr 0x4[si],bx 
62CB    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
62CE    89 4C 06                  mov         word ptr 0x6[si],cx 
62D1    89 44 08                  mov         word ptr 0x8[si],ax 
62D4    80 24 E0                  and         byte ptr [si],0xe0 
62D7    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
62DA    89 44 0A                  mov         word ptr 0xa[si],ax 
62DD    8B 46 12                  mov         ax,word ptr 0x12[bp] 
62E0    89 F3                     mov         bx,si 
62E2    89 44 20                  mov         word ptr 0x20[si],ax 
62E5    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
62E8    89 D1                     mov         cx,dx 
62EA    89 44 0C                  mov         word ptr 0xc[si],ax 
62ED    8B 46 10                  mov         ax,word ptr 0x10[bp] 
62F0    89 FA                     mov         dx,di 
62F2    89 44 0E                  mov         word ptr 0xe[si],ax 
62F5    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
62F8    80 0C 08                  or          byte ptr [si],0x08 
62FB    E8 00 00                  call        window_grid_addelement_ 
62FE    85 C0                     test        ax,ax 
6300    74 18                     je          L$742 
6302    FF 76 0C                  push        word ptr 0xc[bp] 
6305    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
6308    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
630B    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
630E    FF 76 0A                  push        word ptr 0xa[bp] 
6311    89 FA                     mov         dx,di 
6313    E8 00 00                  call        window_add_hitbox_ 
6316    85 C0                     test        ax,ax 
6318    75 0D                     jne         L$743 
631A                          L$742:
631A    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
631D    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
6320    9A 00 00 00 00            call        free_ 
6325    EB 93                     jmp         L$740 
6327                          L$743:
6327    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
632A    E9 D0 FD                  jmp         L$733 

Routine Size: 160 bytes,    Routine Base: main_TEXT + 628D

632D                          window_textbox_:
632D    56                        push        si 
632E    57                        push        di 
632F    C8 06 00 00               enter       0x0006,0x00 
6333    50                        push        ax 
6334    52                        push        dx 
6335    53                        push        bx 
6336    51                        push        cx 
6337    8B 4E 10                  mov         cx,word ptr 0x10[bp] 
633A    BA 34 00                  mov         dx,0x0034 
633D    B8 01 00                  mov         ax,0x0001 
6340    9A 00 00 00 00            call        calloc_ 
6345    89 C3                     mov         bx,ax 
6347    89 56 FE                  mov         word ptr -0x2[bp],dx 
634A    89 C6                     mov         si,ax 
634C    89 56 FC                  mov         word ptr -0x4[bp],dx 
634F    85 D2                     test        dx,dx 
6351    75 04                     jne         L$744 
6353    85 C0                     test        ax,ax 
6355    74 65                     je          L$747 
6357                          L$744:
6357    8E DA                     mov         ds,dx 
6359    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
635C    89 47 04                  mov         word ptr 0x4[bx],ax 
635F    80 27 E0                  and         byte ptr [bx],0xe0 
6362    80 67 02 FC               and         byte ptr 0x2[bx],0xfc 
6366    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
6369    80 0F 02                  or          byte ptr [bx],0x02 
636C    89 47 06                  mov         word ptr 0x6[bx],ax 
636F    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
6372    89 47 08                  mov         word ptr 0x8[bx],ax 
6375    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
637B    C7 47 2A FF FF            mov         word ptr 0x2a[bx],0xffff 
6380    40                        inc         ax 
6381    40                        inc         ax 
6382    89 4F 20                  mov         word ptr 0x20[bx],cx 
6385    89 47 0A                  mov         word ptr 0xa[bx],ax 
6388    85 C9                     test        cx,cx 
638A    74 37                     je          L$748 
638C    89 C8                     mov         ax,cx 
638E    BA 01 00                  mov         dx,0x0001 
6391    40                        inc         ax 
6392    9A 00 00 00 00            call        calloc_ 
6397    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
639A    89 47 0C                  mov         word ptr 0xc[bx],ax 
639D    89 57 0E                  mov         word ptr 0xe[bx],dx 
63A0    8B 57 0C                  mov         dx,word ptr 0xc[bx] 
63A3    8B 47 0E                  mov         ax,word ptr 0xe[bx] 
63A6    89 D7                     mov         di,dx 
63A8    89 46 FA                  mov         word ptr -0x6[bp],ax 
63AB    85 C0                     test        ax,ax 
63AD    75 14                     jne         L$748 
63AF    85 D2                     test        dx,dx 
63B1    75 10                     jne         L$748 
63B3    89 D8                     mov         ax,bx 
63B5                          L$745:
63B5    8C DA                     mov         dx,ds 
63B7                          L$746:
63B7    9A 00 00 00 00            call        free_ 
63BC                          L$747:
63BC    31 C0                     xor         ax,ax 
63BE    31 D2                     xor         dx,dx 
63C0    E9 E6 A8                  jmp         L$153 
63C3                          L$748:
63C3    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
63C7    75 06                     jne         L$749 
63C9    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
63CD    74 56                     je          L$751 
63CF                          L$749:
63CF    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
63D2    8B 44 0E                  mov         ax,word ptr 0xe[si] 
63D5    8B 54 0C                  mov         dx,word ptr 0xc[si] 
63D8    85 C0                     test        ax,ax 
63DA    75 2F                     jne         L$750 
63DC    85 D2                     test        dx,dx 
63DE    75 2B                     jne         L$750 
63E0    89 C8                     mov         ax,cx 
63E2    BA 01 00                  mov         dx,0x0001 
63E5    40                        inc         ax 
63E6    9A 00 00 00 00            call        calloc_ 
63EB    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
63EE    89 44 0C                  mov         word ptr 0xc[si],ax 
63F1    89 54 0E                  mov         word ptr 0xe[si],dx 
63F4    8B 54 0C                  mov         dx,word ptr 0xc[si] 
63F7    8B 44 0E                  mov         ax,word ptr 0xe[si] 
63FA    89 D7                     mov         di,dx 
63FC    89 46 FA                  mov         word ptr -0x6[bp],ax 
63FF    85 C0                     test        ax,ax 
6401    75 08                     jne         L$750 
6403    85 D2                     test        dx,dx 
6405    75 04                     jne         L$750 
6407    89 F0                     mov         ax,si 
6409    EB AA                     jmp         L$745 
640B                          L$750:
640B    49                        dec         cx 
640C    83 F9 FF                  cmp         cx,0xffff 
640F    74 14                     je          L$751 
6411    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
6414    8A 07                     mov         al,byte ptr [bx] 
6416    84 C0                     test        al,al 
6418    74 0B                     je          L$751 
641A    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
641D    FF 46 0C                  inc         word ptr 0xc[bp] 
6420    88 05                     mov         byte ptr [di],al 
6422    47                        inc         di 
6423    EB E6                     jmp         L$750 
6425                          L$751:
6425    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
6428    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
642B    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
642E    89 F3                     mov         bx,si 
6430    E8 00 00                  call        window_grid_addelement_ 
6433    85 C0                     test        ax,ax 
6435    74 1F                     je          L$752 
6437    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
643D    8B 4E F2                  mov         cx,word ptr -0xe[bp] 
6440    40                        inc         ax 
6441    40                        inc         ax 
6442    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
6445    50                        push        ax 
6446    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
6449    FF 76 0A                  push        word ptr 0xa[bp] 
644C    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
644F    E8 00 00                  call        window_add_hitbox_ 
6452    85 C0                     test        ax,ax 
6454    75 16                     jne         L$753 
6456                          L$752:
6456    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
6459    8B 44 0C                  mov         ax,word ptr 0xc[si] 
645C    8B 54 0E                  mov         dx,word ptr 0xe[si] 
645F    9A 00 00 00 00            call        free_ 
6464    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6467    89 F0                     mov         ax,si 
6469    E9 4B FF                  jmp         L$746 
646C                          L$753:
646C    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
646F    89 F0                     mov         ax,si 
6471    E9 35 A8                  jmp         L$153 

Routine Size: 327 bytes,    Routine Base: main_TEXT + 632D

6474                          window_button_:
6474    56                        push        si 
6475    57                        push        di 
6476    C8 08 00 00               enter       0x0008,0x00 
647A    50                        push        ax 
647B    52                        push        dx 
647C    53                        push        bx 
647D    51                        push        cx 
647E    8B 5E 10                  mov         bx,word ptr 0x10[bp] 
6481    BA 34 00                  mov         dx,0x0034 
6484    B8 01 00                  mov         ax,0x0001 
6487    9A 00 00 00 00            call        calloc_ 
648C    89 46 FC                  mov         word ptr -0x4[bp],ax 
648F    89 56 FE                  mov         word ptr -0x2[bp],dx 
6492    89 46 F8                  mov         word ptr -0x8[bp],ax 
6495    89 56 FA                  mov         word ptr -0x6[bp],dx 
6498    85 D2                     test        dx,dx 
649A    75 04                     jne         L$754 
649C    85 C0                     test        ax,ax 
649E    74 60                     je          L$756 
64A0                          L$754:
64A0    8E DA                     mov         ds,dx 
64A2    89 C7                     mov         di,ax 
64A4    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
64A7    80 25 E0                  and         byte ptr [di],0xe0 
64AA    89 FE                     mov         si,di 
64AC    80 0D 01                  or          byte ptr [di],0x01 
64AF    89 44 04                  mov         word ptr 0x4[si],ax 
64B2    8A 46 12                  mov         al,byte ptr 0x12[bp] 
64B5    89 4D 06                  mov         word ptr 0x6[di],cx 
64B8    88 45 1E                  mov         byte ptr 0x1e[di],al 
64BB    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
64BE    89 44 08                  mov         word ptr 0x8[si],ax 
64C1    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
64C4    8B 7E 0E                  mov         di,word ptr 0xe[bp] 
64C7    89 44 0A                  mov         word ptr 0xa[si],ax 
64CA    8E C3                     mov         es,bx 
64CC    B9 FF FF                  mov         cx,0xffff 
64CF    33 C0                     xor         ax,ax 
64D1    F2 AE                     repne scasb 
64D3    F7 D1                     not         cx 
64D5    49                        dec         cx 
64D6    89 C8                     mov         ax,cx 
64D8    40                        inc         ax 
64D9    89 F7                     mov         di,si 
64DB    9A 00 00 00 00            call        malloc_ 
64E0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
64E3    89 45 0C                  mov         word ptr 0xc[di],ax 
64E6    89 55 0E                  mov         word ptr 0xe[di],dx 
64E9    8B 44 0E                  mov         ax,word ptr 0xe[si] 
64EC    8B 7D 0C                  mov         di,word ptr 0xc[di] 
64EF    85 C0                     test        ax,ax 
64F1    75 14                     jne         L$757 
64F3    85 FF                     test        di,di 
64F5    75 10                     jne         L$757 
64F7    89 F0                     mov         ax,si 
64F9    8C DA                     mov         dx,ds 
64FB                          L$755:
64FB    9A 00 00 00 00            call        free_ 
6500                          L$756:
6500    31 C0                     xor         ax,ax 
6502    31 D2                     xor         dx,dx 
6504    E9 F8 FB                  jmp         L$734 
6507                          L$757:
6507    8B 76 0E                  mov         si,word ptr 0xe[bp] 
650A    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
650D    8E DB                     mov         ds,bx 
650F    8E C0                     mov         es,ax 
6511    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
6514    57                        push        di 
6515                          L$758:
6515    AC                        lodsb       
6516    AA                        stosb       
6517    3C 00                     cmp         al,0x00 
6519    75 FA                     jne         L$758 
651B    5F                        pop         di 
651C    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
651F    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6522    E8 00 00                  call        window_grid_addelement_ 
6525    85 C0                     test        ax,ax 
6527    74 19                     je          L$759 
6529    FF 76 0C                  push        word ptr 0xc[bp] 
652C    8B 4E F0                  mov         cx,word ptr -0x10[bp] 
652F    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
6532    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6535    FF 76 0A                  push        word ptr 0xa[bp] 
6538    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
653B    E8 00 00                  call        window_add_hitbox_ 
653E    85 C0                     test        ax,ax 
6540    75 15                     jne         L$760 
6542                          L$759:
6542    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
6545    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
6548    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
654B    9A 00 00 00 00            call        free_ 
6550    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
6553    89 D8                     mov         ax,bx 
6555    EB A4                     jmp         L$755 
6557                          L$760:
6557    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
655A    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
655D    E9 9F FB                  jmp         L$734 

Routine Size: 236 bytes,    Routine Base: main_TEXT + 6474

6560                          window_checkbox_:
6560    56                        push        si 
6561    57                        push        di 
6562    C8 08 00 00               enter       0x0008,0x00 
6566    50                        push        ax 
6567    52                        push        dx 
6568    53                        push        bx 
6569    51                        push        cx 
656A    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
656D    BA 34 00                  mov         dx,0x0034 
6570    B8 01 00                  mov         ax,0x0001 
6573    9A 00 00 00 00            call        calloc_ 
6578    89 46 FC                  mov         word ptr -0x4[bp],ax 
657B    89 56 FE                  mov         word ptr -0x2[bp],dx 
657E    89 46 F8                  mov         word ptr -0x8[bp],ax 
6581    89 56 FA                  mov         word ptr -0x6[bp],dx 
6584    85 D2                     test        dx,dx 
6586    75 04                     jne         L$761 
6588    85 C0                     test        ax,ax 
658A    74 54                     je          L$763 
658C                          L$761:
658C    8E DA                     mov         ds,dx 
658E    89 C7                     mov         di,ax 
6590    89 4D 06                  mov         word ptr 0x6[di],cx 
6593    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
6596    80 25 E0                  and         byte ptr [di],0xe0 
6599    89 45 04                  mov         word ptr 0x4[di],ax 
659C    89 FE                     mov         si,di 
659E    80 0D 06                  or          byte ptr [di],0x06 
65A1    8A 46 0E                  mov         al,byte ptr 0xe[bp] 
65A4    8B 7E 0A                  mov         di,word ptr 0xa[bp] 
65A7    88 44 1E                  mov         byte ptr 0x1e[si],al 
65AA    8E C3                     mov         es,bx 
65AC    B9 FF FF                  mov         cx,0xffff 
65AF    33 C0                     xor         ax,ax 
65B1    F2 AE                     repne scasb 
65B3    F7 D1                     not         cx 
65B5    49                        dec         cx 
65B6    89 C8                     mov         ax,cx 
65B8    40                        inc         ax 
65B9    9A 00 00 00 00            call        malloc_ 
65BE    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
65C1    89 F7                     mov         di,si 
65C3    89 44 0C                  mov         word ptr 0xc[si],ax 
65C6    89 55 0E                  mov         word ptr 0xe[di],dx 
65C9    8B 44 0E                  mov         ax,word ptr 0xe[si] 
65CC    8B 7D 0C                  mov         di,word ptr 0xc[di] 
65CF    85 C0                     test        ax,ax 
65D1    75 14                     jne         L$764 
65D3    85 FF                     test        di,di 
65D5    75 10                     jne         L$764 
65D7    89 F0                     mov         ax,si 
65D9    8C DA                     mov         dx,ds 
65DB                          L$762:
65DB    9A 00 00 00 00            call        free_ 
65E0                          L$763:
65E0    31 C0                     xor         ax,ax 
65E2    31 D2                     xor         dx,dx 
65E4    E9 D4 A5                  jmp         L$145 
65E7                          L$764:
65E7    8B 76 0A                  mov         si,word ptr 0xa[bp] 
65EA    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
65ED    8E DB                     mov         ds,bx 
65EF    8E C0                     mov         es,ax 
65F1    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
65F4    57                        push        di 
65F5                          L$765:
65F5    AC                        lodsb       
65F6    AA                        stosb       
65F7    3C 00                     cmp         al,0x00 
65F9    75 FA                     jne         L$765 
65FB    5F                        pop         di 
65FC    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
65FF    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6602    E8 00 00                  call        window_grid_addelement_ 
6605    85 C0                     test        ax,ax 
6607    74 1C                     je          L$766 
6609    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
660F    8B 4E F0                  mov         cx,word ptr -0x10[bp] 
6612    48                        dec         ax 
6613    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
6616    50                        push        ax 
6617    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
661A    50                        push        ax 
661B    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
661E    E8 00 00                  call        window_add_hitbox_ 
6621    85 C0                     test        ax,ax 
6623    75 15                     jne         L$767 
6625                          L$766:
6625    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
6628    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
662B    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
662E    9A 00 00 00 00            call        free_ 
6633    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
6636    89 D8                     mov         ax,bx 
6638    EB A1                     jmp         L$762 
663A                          L$767:
663A    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
663D    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6640    E9 78 A5                  jmp         L$145 

Routine Size: 227 bytes,    Routine Base: main_TEXT + 6560

6643                          window_radiobutton_select_:
6643    56                        push        si 
6644    57                        push        di 
6645    C8 0A 00 00               enter       0x000a,0x00 
6649    89 C6                     mov         si,ax 
664B    89 56 FC                  mov         word ptr -0x4[bp],dx 
664E    89 5E F6                  mov         word ptr -0xa[bp],bx 
6651    89 4E F8                  mov         word ptr -0x8[bp],cx 
6654    8E D9                     mov         ds,cx 
6656    89 DF                     mov         di,bx 
6658    8B 47 28                  mov         ax,word ptr 0x28[bx] 
665B    8B 7D 26                  mov         di,word ptr 0x26[di] 
665E    89 46 FA                  mov         word ptr -0x6[bp],ax 
6661    C7 47 2A 01 00            mov         word ptr 0x2a[bx],0x0001 
6666                          L$768:
6666    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6669    85 C0                     test        ax,ax 
666B    75 04                     jne         L$769 
666D    85 FF                     test        di,di 
666F    74 57                     je          L$772 
6671                          L$769:
6671    8E D8                     mov         ds,ax 
6673    83 7D 2A 00               cmp         word ptr 0x2a[di],0x0000 
6677    74 3F                     je          L$771 
6679    C7 45 2A 00 00            mov         word ptr 0x2a[di],0x0000 
667E    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
6681    8B 44 26                  mov         ax,word ptr 0x26[si] 
6684    89 46 FE                  mov         word ptr -0x2[bp],ax 
6687    C1 E0 02                  shl         ax,0x02 
668A                          L$770:
668A    FF 4E FE                  dec         word ptr -0x2[bp] 
668D    2D 04 00                  sub         ax,0x0004 
6690    83 7E FE FF               cmp         word ptr -0x2[bp],0xffff 
6694    74 22                     je          L$771 
6696    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
6699    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
669C    01 C3                     add         bx,ax 
669E    8B 57 02                  mov         dx,word ptr 0x2[bx] 
66A1    8B 0F                     mov         cx,word ptr [bx] 
66A3    3B 56 FA                  cmp         dx,word ptr -0x6[bp] 
66A6    75 E2                     jne         L$770 
66A8    39 F9                     cmp         cx,di 
66AA    75 DE                     jne         L$770 
66AC    8B 5E FE                  mov         bx,word ptr -0x2[bp] 
66AF    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
66B2    89 F0                     mov         ax,si 
66B4    0E                        push        cs 
66B5    E8 00 00                  call        window_drawelement_ 
66B8                          L$771:
66B8    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
66BB    8B 55 26                  mov         dx,word ptr 0x26[di] 
66BE    8B 45 28                  mov         ax,word ptr 0x28[di] 
66C1    89 D7                     mov         di,dx 
66C3    89 46 FA                  mov         word ptr -0x6[bp],ax 
66C6    EB 9E                     jmp         L$768 
66C8                          L$772:
66C8    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
66CC    0F 8C 06 9E               jl          L$52 
66D0    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
66D3    8B 44 26                  mov         ax,word ptr 0x26[si] 
66D6    89 46 FE                  mov         word ptr -0x2[bp],ax 
66D9    C1 E0 02                  shl         ax,0x02 
66DC                          L$773:
66DC    FF 4E FE                  dec         word ptr -0x2[bp] 
66DF    2D 04 00                  sub         ax,0x0004 
66E2    83 7E FE FF               cmp         word ptr -0x2[bp],0xffff 
66E6    74 E0                     je          L$772 
66E8    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
66EB    C5 7C 18                  lds         di,dword ptr 0x18[si] 
66EE    01 C7                     add         di,ax 
66F0    C5 1D                     lds         bx,dword ptr [di] 
66F2    8A 17                     mov         dl,byte ptr [bx] 
66F4    80 E2 1F                  and         dl,0x1f 
66F7    80 FA 07                  cmp         dl,0x07 
66FA    75 E0                     jne         L$773 
66FC    8B 57 28                  mov         dx,word ptr 0x28[bx] 
66FF    8B 7F 26                  mov         di,word ptr 0x26[bx] 
6702    3B 56 F8                  cmp         dx,word ptr -0x8[bp] 
6705    75 D5                     jne         L$773 
6707    3B 7E F6                  cmp         di,word ptr -0xa[bp] 
670A    75 D0                     jne         L$773 
670C    89 5E F6                  mov         word ptr -0xa[bp],bx 
670F    8C 5E F8                  mov         word ptr -0x8[bp],ds 
6712    83 7F 2A 00               cmp         word ptr 0x2a[bx],0x0000 
6716    74 B0                     je          L$772 
6718    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
671B    89 F0                     mov         ax,si 
671D    C7 47 2A 00 00            mov         word ptr 0x2a[bx],0x0000 
6722    8B 5E FE                  mov         bx,word ptr -0x2[bp] 
6725    0E                        push        cs 
6726    E8 00 00                  call        window_drawelement_ 
6729    EB 9D                     jmp         L$772 

Routine Size: 232 bytes,    Routine Base: main_TEXT + 6643

672B                          window_radiobutton_:
672B    56                        push        si 
672C    57                        push        di 
672D    C8 06 00 00               enter       0x0006,0x00 
6731    50                        push        ax 
6732    52                        push        dx 
6733    53                        push        bx 
6734    51                        push        cx 
6735    BA 34 00                  mov         dx,0x0034 
6738    B8 01 00                  mov         ax,0x0001 
673B    9A 00 00 00 00            call        calloc_ 
6740    89 C3                     mov         bx,ax 
6742    89 56 FE                  mov         word ptr -0x2[bp],dx 
6745    89 46 FA                  mov         word ptr -0x6[bp],ax 
6748    89 56 FC                  mov         word ptr -0x4[bp],dx 
674B    85 D2                     test        dx,dx 
674D    75 04                     jne         L$774 
674F    85 C0                     test        ax,ax 
6751    74 4E                     je          L$776 
6753                          L$774:
6753    8E DA                     mov         ds,dx 
6755    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
6758    89 47 04                  mov         word ptr 0x4[bx],ax 
675B    89 4F 06                  mov         word ptr 0x6[bx],cx 
675E    80 27 E0                  and         byte ptr [bx],0xe0 
6761    8A 46 0E                  mov         al,byte ptr 0xe[bp] 
6764    80 0F 07                  or          byte ptr [bx],0x07 
6767    8B 7E 0A                  mov         di,word ptr 0xa[bp] 
676A    88 47 1E                  mov         byte ptr 0x1e[bx],al 
676D    8E 46 0C                  mov         es,word ptr 0xc[bp] 
6770    B9 FF FF                  mov         cx,0xffff 
6773    33 C0                     xor         ax,ax 
6775    F2 AE                     repne scasb 
6777    F7 D1                     not         cx 
6779    49                        dec         cx 
677A    89 C8                     mov         ax,cx 
677C    40                        inc         ax 
677D    9A 00 00 00 00            call        malloc_ 
6782    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6785    89 47 0C                  mov         word ptr 0xc[bx],ax 
6788    89 57 0E                  mov         word ptr 0xe[bx],dx 
678B    89 D0                     mov         ax,dx 
678D    8B 7F 0C                  mov         di,word ptr 0xc[bx] 
6790    85 D2                     test        dx,dx 
6792    75 14                     jne         L$777 
6794    85 FF                     test        di,di 
6796    75 10                     jne         L$777 
6798    89 D8                     mov         ax,bx 
679A    8C DA                     mov         dx,ds 
679C                          L$775:
679C    9A 00 00 00 00            call        free_ 
67A1                          L$776:
67A1    31 C0                     xor         ax,ax 
67A3    31 D2                     xor         dx,dx 
67A5    E9 57 F9                  jmp         L$734 
67A8                          L$777:
67A8    C5 76 0A                  lds         si,dword ptr 0xa[bp] 
67AB    8E C2                     mov         es,dx 
67AD    57                        push        di 
67AE                          L$778:
67AE    AC                        lodsb       
67AF    AA                        stosb       
67B0    3C 00                     cmp         al,0x00 
67B2    75 FA                     jne         L$778 
67B4    5F                        pop         di 
67B5    83 7E 12 00               cmp         word ptr 0x12[bp],0x0000 
67B9    75 06                     jne         L$779 
67BB    83 7E 10 00               cmp         word ptr 0x10[bp],0x0000 
67BF    74 26                     je          L$780 
67C1                          L$779:
67C1    C5 7E 10                  lds         di,dword ptr 0x10[bp] 
67C4    8A 05                     mov         al,byte ptr [di] 
67C6    24 1F                     and         al,0x1f 
67C8    3C 07                     cmp         al,0x07 
67CA    75 1B                     jne         L$780 
67CC    8B 55 28                  mov         dx,word ptr 0x28[di] 
67CF    8B 45 26                  mov         ax,word ptr 0x26[di] 
67D2    85 D2                     test        dx,dx 
67D4    75 11                     jne         L$780 
67D6    85 C0                     test        ax,ax 
67D8    75 0D                     jne         L$780 
67DA    89 5D 26                  mov         word ptr 0x26[di],bx 
67DD    89 FB                     mov         bx,di 
67DF    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
67E2    89 47 28                  mov         word ptr 0x28[bx],ax 
67E5    EB 08                     jmp         L$781 
67E7                          L$780:
67E7    C5 5E FA                  lds         bx,dword ptr -0x6[bp] 
67EA    C7 47 2A 01 00            mov         word ptr 0x2a[bx],0x0001 
67EF                          L$781:
67EF    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
67F2    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
67F5    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
67F8    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
67FB    E8 00 00                  call        window_grid_addelement_ 
67FE    85 C0                     test        ax,ax 
6800    74 1C                     je          L$782 
6802    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6808    8B 4E F2                  mov         cx,word ptr -0xe[bp] 
680B    48                        dec         ax 
680C    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
680F    50                        push        ax 
6810    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
6813    50                        push        ax 
6814    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
6817    E8 00 00                  call        window_add_hitbox_ 
681A    85 C0                     test        ax,ax 
681C    75 16                     jne         L$783 
681E                          L$782:
681E    C5 5E FA                  lds         bx,dword ptr -0x6[bp] 
6821    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
6824    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
6827    9A 00 00 00 00            call        free_ 
682C    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
682F    89 D8                     mov         ax,bx 
6831    E9 68 FF                  jmp         L$775 
6834                          L$783:
6834    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6837    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
683A    E9 C2 F8                  jmp         L$734 

Routine Size: 274 bytes,    Routine Base: main_TEXT + 672B

683D                          window_text_:
683D    56                        push        si 
683E    57                        push        di 
683F    C8 0A 00 00               enter       0x000a,0x00 
6843    8B 76 0A                  mov         si,word ptr 0xa[bp] 
6846    89 46 F6                  mov         word ptr -0xa[bp],ax 
6849    89 56 F8                  mov         word ptr -0x8[bp],dx 
684C    89 DF                     mov         di,bx 
684E    BA 34 00                  mov         dx,0x0034 
6851    B8 01 00                  mov         ax,0x0001 
6854    9A 00 00 00 00            call        calloc_ 
6859    89 C3                     mov         bx,ax 
685B    89 56 FE                  mov         word ptr -0x2[bp],dx 
685E    89 46 FA                  mov         word ptr -0x6[bp],ax 
6861    89 56 FC                  mov         word ptr -0x4[bp],dx 
6864    85 D2                     test        dx,dx 
6866    75 04                     jne         L$784 
6868    85 C0                     test        ax,ax 
686A    74 4E                     je          L$787 
686C                          L$784:
686C    8E DA                     mov         ds,dx 
686E    8A 46 0E                  mov         al,byte ptr 0xe[bp] 
6871    89 7F 04                  mov         word ptr 0x4[bx],di 
6874    88 47 1E                  mov         byte ptr 0x1e[bx],al 
6877    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
687A    89 4F 06                  mov         word ptr 0x6[bx],cx 
687D    85 C0                     test        ax,ax 
687F    75 04                     jne         L$785 
6881    85 F6                     test        si,si 
6883    74 49                     je          L$790 
6885                          L$785:
6885    89 F7                     mov         di,si 
6887    8E C0                     mov         es,ax 
6889    B9 FF FF                  mov         cx,0xffff 
688C    33 C0                     xor         ax,ax 
688E    F2 AE                     repne scasb 
6890    F7 D1                     not         cx 
6892    49                        dec         cx 
6893    89 C8                     mov         ax,cx 
6895    40                        inc         ax 
6896    9A 00 00 00 00            call        malloc_ 
689B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
689E    89 47 0C                  mov         word ptr 0xc[bx],ax 
68A1    89 57 0E                  mov         word ptr 0xe[bx],dx 
68A4    89 D0                     mov         ax,dx 
68A6    8B 7F 0C                  mov         di,word ptr 0xc[bx] 
68A9    85 D2                     test        dx,dx 
68AB    75 14                     jne         L$788 
68AD    85 FF                     test        di,di 
68AF    75 10                     jne         L$788 
68B1    89 D8                     mov         ax,bx 
68B3    8C DA                     mov         dx,ds 
68B5                          L$786:
68B5    9A 00 00 00 00            call        free_ 
68BA                          L$787:
68BA    31 C0                     xor         ax,ax 
68BC    31 D2                     xor         dx,dx 
68BE    E9 FA A2                  jmp         L$145 
68C1                          L$788:
68C1    8E 5E 0C                  mov         ds,word ptr 0xc[bp] 
68C4    8E C2                     mov         es,dx 
68C6    57                        push        di 
68C7                          L$789:
68C7    AC                        lodsb       
68C8    AA                        stosb       
68C9    3C 00                     cmp         al,0x00 
68CB    75 FA                     jne         L$789 
68CD    5F                        pop         di 
68CE                          L$790:
68CE    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
68D1    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
68D4    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
68D7    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
68DA    E8 00 00                  call        window_grid_addelement_ 
68DD    85 C0                     test        ax,ax 
68DF    75 15                     jne         L$791 
68E1    C5 5E FA                  lds         bx,dword ptr -0x6[bp] 
68E4    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
68E7    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
68EA    9A 00 00 00 00            call        free_ 
68EF    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
68F2    89 D8                     mov         ax,bx 
68F4    EB BF                     jmp         L$786 
68F6                          L$791:
68F6    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
68F9    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
68FC    E9 BC A2                  jmp         L$145 

Routine Size: 194 bytes,    Routine Base: main_TEXT + 683D

68FF                          window_image_:
68FF    56                        push        si 
6900    57                        push        di 
6901    C8 04 00 00               enter       0x0004,0x00 
6905    50                        push        ax 
6906    52                        push        dx 
6907    BA 34 00                  mov         dx,0x0034 
690A    B8 01 00                  mov         ax,0x0001 
690D    9A 00 00 00 00            call        calloc_ 
6912    89 46 FC                  mov         word ptr -0x4[bp],ax 
6915    89 56 FE                  mov         word ptr -0x2[bp],dx 
6918    85 D2                     test        dx,dx 
691A    75 04                     jne         L$792 
691C    85 C0                     test        ax,ax 
691E    74 53                     je          L$794 
6920                          L$792:
6920    8E DA                     mov         ds,dx 
6922    89 C7                     mov         di,ax 
6924    89 5D 04                  mov         word ptr 0x4[di],bx 
6927    89 C3                     mov         bx,ax 
6929    89 4F 06                  mov         word ptr 0x6[bx],cx 
692C    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
692F    80 67 02 FC               and         byte ptr 0x2[bx],0xfc 
6933    89 47 08                  mov         word ptr 0x8[bx],ax 
6936    8B 7E 0E                  mov         di,word ptr 0xe[bp] 
6939    80 4F 02 01               or          byte ptr 0x2[bx],0x01 
693D    8E 46 10                  mov         es,word ptr 0x10[bp] 
6940    B9 FF FF                  mov         cx,0xffff 
6943    33 C0                     xor         ax,ax 
6945    F2 AE                     repne scasb 
6947    F7 D1                     not         cx 
6949    49                        dec         cx 
694A    89 C8                     mov         ax,cx 
694C    40                        inc         ax 
694D    9A 00 00 00 00            call        malloc_ 
6952    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6955    89 47 0C                  mov         word ptr 0xc[bx],ax 
6958    89 DF                     mov         di,bx 
695A    89 57 0E                  mov         word ptr 0xe[bx],dx 
695D    89 D0                     mov         ax,dx 
695F    8B 7D 0C                  mov         di,word ptr 0xc[di] 
6962    85 D2                     test        dx,dx 
6964    75 14                     jne         L$795 
6966    85 FF                     test        di,di 
6968    75 10                     jne         L$795 
696A    89 D8                     mov         ax,bx 
696C    8C DA                     mov         dx,ds 
696E                          L$793:
696E    9A 00 00 00 00            call        free_ 
6973                          L$794:
6973    31 C0                     xor         ax,ax 
6975    31 D2                     xor         dx,dx 
6977    E9 2F A3                  jmp         L$153 
697A                          L$795:
697A    C5 76 0E                  lds         si,dword ptr 0xe[bp] 
697D    8E C2                     mov         es,dx 
697F    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
6982    57                        push        di 
6983                          L$796:
6983    AC                        lodsb       
6984    AA                        stosb       
6985    3C 00                     cmp         al,0x00 
6987    75 FA                     jne         L$796 
6989    5F                        pop         di 
698A    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
698D    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
6990    E8 00 00                  call        window_grid_addelement_ 
6993    85 C0                     test        ax,ax 
6995    0F 85 53 F6               jne         L$722 
6999    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
699C    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
699F    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
69A2    9A 00 00 00 00            call        free_ 
69A7    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
69AA    89 D8                     mov         ax,bx 
69AC    EB C0                     jmp         L$793 

Routine Size: 175 bytes,    Routine Base: main_TEXT + 68FF

69AE                          dialog_:
69AE    56                        push        si 
69AF    57                        push        di 
69B0    C8 06 00 00               enter       0x0006,0x00 
69B4    89 C6                     mov         si,ax 
69B6    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
69BB    66 6A 00                  pushd       0x00000000 
69BE    66 6A 00                  pushd       0x00000000 
69C1    66 6A 00                  pushd       0x00000000 
69C4    66 FF 76 14               push        dword ptr 0x14[bp] 
69C8    89 F0                     mov         ax,si 
69CA    0E                        push        cs 
69CB    E8 00 00                  call        new_window_ 
69CE    89 C7                     mov         di,ax 
69D0    8E DA                     mov         ds,dx 
69D2    B9 0A 00                  mov         cx,0x000a 
69D5    C6 45 32 00               mov         byte ptr 0x32[di],0x00 
69D9    89 C6                     mov         si,ax 
69DB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
69E1    89 56 FE                  mov         word ptr -0x2[bp],dx 
69E4    50                        push        ax 
69E5    89 CB                     mov         bx,cx 
69E7    FF 76 12                  push        word ptr 0x12[bp] 
69EA    89 F8                     mov         ax,di 
69EC    FF 76 10                  push        word ptr 0x10[bp] 
69EF    89 56 FC                  mov         word ptr -0x4[bp],dx 
69F2    0E                        push        cs 
69F3    E8 00 00                  call        window_text_ 
69F6    85 D2                     test        dx,dx 
69F8    75 18                     jne         L$798 
69FA    85 C0                     test        ax,ax 
69FC    75 14                     jne         L$798 
69FE                          L$797:
69FE    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6A01    89 F0                     mov         ax,si 
6A03    0E                        push        cs 
6A04    E8 00 00                  call        del_window_ 
6A07    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
6A0C    B8 38 FF                  mov         ax,0xff38 
6A0F    E9 66 02                  jmp         L$823 
6A12                          L$798:
6A12    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
6A17    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
6A1A    3D 01 00                  cmp         ax,0x0001 
6A1D    76 08                     jbe         L$799 
6A1F    3D 03 00                  cmp         ax,0x0003 
6A22    76 61                     jbe         L$801 
6A24    E9 FB 00                  jmp         L$805 
6A27                          L$799:
6A27    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6A2D    50                        push        ax 
6A2E    B9 1E 00                  mov         cx,0x001e 
6A31    16                        push        ss 
6A32    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6A38    68 00 00                  push        offset _dialog_ok 
6A3B    40                        inc         ax 
6A3C    40                        inc         ax 
6A3D    BB 0A 00                  mov         bx,0x000a 
6A40    50                        push        ax 
6A41    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6A44    6A 32                     push        0x0032 
6A46    89 F8                     mov         ax,di 
6A48    0E                        push        cs 
6A49    E8 00 00                  call        window_button_ 
6A4C    85 D2                     test        dx,dx 
6A4E    75 04                     jne         L$800 
6A50    85 C0                     test        ax,ax 
6A52    74 AA                     je          L$797 
6A54                          L$800:
6A54    83 7E 0A 00               cmp         word ptr 0xa[bp],0x0000 
6A58    0F 84 C6 00               je          L$805 
6A5C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6A62    50                        push        ax 
6A63    B9 1E 00                  mov         cx,0x001e 
6A66    16                        push        ss 
6A67    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6A6D    68 00 00                  push        offset _dialog_cancel 
6A70    40                        inc         ax 
6A71    40                        inc         ax 
6A72    BB 46 00                  mov         bx,0x0046 
6A75    50                        push        ax 
6A76    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6A79    6A 32                     push        0x0032 
6A7B    89 F8                     mov         ax,di 
6A7D    C7 46 FA 01 00            mov         word ptr -0x6[bp],0x0001 
6A82    E9 8F 00                  jmp         L$804 
6A85                          L$801:
6A85    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6A8B    50                        push        ax 
6A8C    B9 1E 00                  mov         cx,0x001e 
6A8F    16                        push        ss 
6A90    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6A96    68 00 00                  push        offset _dialog_yes 
6A99    40                        inc         ax 
6A9A    40                        inc         ax 
6A9B    BB 0A 00                  mov         bx,0x000a 
6A9E    50                        push        ax 
6A9F    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6AA2    6A 32                     push        0x0032 
6AA4    89 F8                     mov         ax,di 
6AA6    0E                        push        cs 
6AA7    E8 00 00                  call        window_button_ 
6AAA    85 D2                     test        dx,dx 
6AAC    75 06                     jne         L$802 
6AAE    85 C0                     test        ax,ax 
6AB0    0F 84 4A FF               je          L$797 
6AB4                          L$802:
6AB4    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6ABA    50                        push        ax 
6ABB    B9 1E 00                  mov         cx,0x001e 
6ABE    16                        push        ss 
6ABF    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6AC5    68 00 00                  push        offset _dialog_no 
6AC8    40                        inc         ax 
6AC9    40                        inc         ax 
6ACA    BB 46 00                  mov         bx,0x0046 
6ACD    50                        push        ax 
6ACE    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6AD1    6A 32                     push        0x0032 
6AD3    89 F8                     mov         ax,di 
6AD5    C7 46 FA 01 00            mov         word ptr -0x6[bp],0x0001 
6ADA    0E                        push        cs 
6ADB    E8 00 00                  call        window_button_ 
6ADE    85 D2                     test        dx,dx 
6AE0    75 06                     jne         L$803 
6AE2    85 C0                     test        ax,ax 
6AE4    0F 84 16 FF               je          L$797 
6AE8                          L$803:
6AE8    83 7E 0A 02               cmp         word ptr 0xa[bp],0x0002 
6AEC    74 34                     je          L$805 
6AEE    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6AF4    50                        push        ax 
6AF5    B9 1E 00                  mov         cx,0x001e 
6AF8    16                        push        ss 
6AF9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6AFF    68 00 00                  push        offset _dialog_cancel 
6B02    40                        inc         ax 
6B03    40                        inc         ax 
6B04    BB 82 00                  mov         bx,0x0082 
6B07    50                        push        ax 
6B08    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
6B0B    6A 32                     push        0x0032 
6B0D    89 F8                     mov         ax,di 
6B0F    C7 46 FA 02 00            mov         word ptr -0x6[bp],0x0002 
6B14                          L$804:
6B14    0E                        push        cs 
6B15    E8 00 00                  call        window_button_ 
6B18    85 D2                     test        dx,dx 
6B1A    75 06                     jne         L$805 
6B1C    85 C0                     test        ax,ax 
6B1E    0F 84 DC FE               je          L$797 
6B22                          L$805:
6B22    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
6B26    74 36                     je          L$806 
6B28    FF 46 FA                  inc         word ptr -0x6[bp] 
6B2B    6B 5E FA 3C               imul        bx,word ptr -0x6[bp],0x003c 
6B2F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
6B35    50                        push        ax 
6B36    16                        push        ss 
6B37    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6B3D    68 00 00                  push        offset _dialog_help 
6B40    40                        inc         ax 
6B41    40                        inc         ax 
6B42    B9 1E 00                  mov         cx,0x001e 
6B45    50                        push        ax 
6B46    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6B49    6A 3C                     push        0x003c 
6B4B    89 F0                     mov         ax,si 
6B4D    83 C3 0A                  add         bx,0x000a 
6B50    0E                        push        cs 
6B51    E8 00 00                  call        window_button_ 
6B54    85 D2                     test        dx,dx 
6B56    75 06                     jne         L$806 
6B58    85 C0                     test        ax,ax 
6B5A    0F 84 A0 FE               je          L$797 
6B5E                          L$806:
6B5E    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
6B64    75 10                     jne         L$807 
6B66    BB 01 00                  mov         bx,0x0001 
6B69    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6B6C    89 F0                     mov         ax,si 
6B6E    31 C9                     xor         cx,cx 
6B70    0E                        push        cs 
6B71    E8 00 00                  call        draw_window_ 
6B74    EB 09                     jmp         L$808 
6B76                          L$807:
6B76    36 C6 06 00 00 00         mov         byte ptr ss:_new_tty,0x00 
6B7C    E8 00 00                  call        switch_tty_ 
6B7F                          L$808:
6B7F    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
6B82    85 C0                     test        ax,ax 
6B84    74 04                     je          L$809 
6B86    0E                        push        cs 
6B87    E8 00 00                  call        make_sound_ 
6B8A                          L$809:
6B8A    E8 00 00                  call        call_drv_screenupdate_ 
6B8D    BF FF 7F                  mov         di,0x7fff 
6B90    36 8B 16 02 00            mov         dx,word ptr ss:_mouse+0x2 
6B95    36 A1 00 00               mov         ax,word ptr ss:_mouse 
6B99    85 D2                     test        dx,dx 
6B9B    75 04                     jne         L$810 
6B9D    85 C0                     test        ax,ax 
6B9F    74 0D                     je          L$811 
6BA1                          L$810:
6BA1    E8 00 00                  call        mouse_set_normal_cursor_ 
6BA4    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6BA7    89 F0                     mov         ax,si 
6BA9    E8 00 00                  call        mouse_handler_ 
6BAC    89 C7                     mov         di,ax 
6BAE                          L$811:
6BAE    9A 00 00 00 00            call        kbhit_ 
6BB3    85 C0                     test        ax,ax 
6BB5    74 3B                     je          L$814 
6BB7    9A 00 00 00 00            call        getch_ 
6BBC    89 C7                     mov         di,ax 
6BBE    3D 0D 00                  cmp         ax,0x000d 
6BC1    75 05                     jne         L$812 
6BC3    BF 00 80                  mov         di,0x8000 
6BC6    EB 2A                     jmp         L$814 
6BC8                          L$812:
6BC8    3D 1B 00                  cmp         ax,0x001b 
6BCB    0F 84 92 00               je          L$821 
6BCF    85 C0                     test        ax,ax 
6BD1    75 1F                     jne         L$814 
6BD3    9A 00 00 00 00            call        getch_ 
6BD8    89 C7                     mov         di,ax 
6BDA    3D 3B 00                  cmp         ax,0x003b 
6BDD    75 06                     jne         L$813 
6BDF    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
6BE3    75 32                     jne         L$817 
6BE5                          L$813:
6BE5    83 FF 32                  cmp         di,0x0032 
6BE8    75 08                     jne         L$814 
6BEA    31 C0                     xor         ax,ax 
6BEC    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
6BF0    EB 08                     jmp         L$815 
6BF2                          L$814:
6BF2    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
6BF8    7C 0A                     jl          L$816 
6BFA                          L$815:
6BFA    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6BFD    89 F0                     mov         ax,si 
6BFF    E8 00 00                  call        dropmenu_handler_ 
6C02    89 C7                     mov         di,ax 
6C04                          L$816:
6C04    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
6C08    74 2E                     je          L$818 
6C0A    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
6C0D    8B 44 28                  mov         ax,word ptr 0x28[si] 
6C10    05 FF 7F                  add         ax,0x7fff 
6C13    39 C7                     cmp         di,ax 
6C15    75 21                     jne         L$818 
6C17                          L$817:
6C17    66 6A 00                  pushd       0x00000000 
6C1A    16                        push        ss 
6C1B    68 00 00                  push        offset _infotitle 
6C1E    66 FF 76 18               push        dword ptr 0x18[bp] 
6C22    B9 32 00                  mov         cx,0x0032 
6C25    6A 00                     push        0x0000 
6C27    BB FA 00                  mov         bx,0x00fa 
6C2A    6A 00                     push        0x0000 
6C2C    89 CA                     mov         dx,cx 
6C2E    6A 00                     push        0x0000 
6C30    89 C8                     mov         ax,cx 
6C32    0E                        push        cs 
6C33    E8 00 00                  call        dialog_ 
6C36    EB 22                     jmp         L$820 
6C38                          L$818:
6C38    83 FF 02                  cmp         di,0x0002 
6C3B    72 10                     jb          L$819 
6C3D    76 25                     jbe         L$822 
6C3F    81 FF 00 80               cmp         di,0x8000 
6C43    72 15                     jb          L$820 
6C45    81 FF 02 80               cmp         di,0x8002 
6C49    76 19                     jbe         L$822 
6C4B    EB 0D                     jmp         L$820 
6C4D                          L$819:
6C4D    83 FF 01                  cmp         di,0x0001 
6C50    75 08                     jne         L$820 
6C52    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6C55    89 F0                     mov         ax,si 
6C57    E8 00 00                  call        window_kbdmove_ 
6C5A                          L$820:
6C5A    E8 00 00                  call        draw_mouse_cursor_ 
6C5D    F4                        hlt         
6C5E    E9 29 FF                  jmp         L$809 
6C61                          L$821:
6C61    BF 01 80                  mov         di,0x8001 
6C64                          L$822:
6C64    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
6C67    89 F0                     mov         ax,si 
6C69    0E                        push        cs 
6C6A    E8 00 00                  call        del_window_ 
6C6D    81 E7 FF 7F               and         di,0x7fff 
6C71    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
6C76    89 F8                     mov         ax,di 
6C78                          L$823:
6C78    C9                        leave       
6C79    5F                        pop         di 
6C7A    5E                        pop         si 
6C7B    CA 12 00                  retf        0x0012 
6C7E                          add_char_to_string_:
6C7E    51                        push        cx 
6C7F    56                        push        si 
6C80    57                        push        di 
6C81    C8 04 00 00               enter       0x0004,0x00 
6C85    89 C6                     mov         si,ax 
6C87    89 56 FC                  mov         word ptr -0x4[bp],dx 
6C8A    88 5E FE                  mov         byte ptr -0x2[bp],bl 
6C8D    89 C7                     mov         di,ax 
6C8F    8E C2                     mov         es,dx 
6C91    B9 FF FF                  mov         cx,0xffff 
6C94    33 C0                     xor         ax,ax 
6C96    F2 AE                     repne scasb 
6C98    F7 D1                     not         cx 
6C9A    49                        dec         cx 
6C9B    41                        inc         cx 
6C9C    8D 44 01                  lea         ax,0x1[si] 
6C9F    51                        push        cx 
6CA0    89 F3                     mov         bx,si 
6CA2    89 D1                     mov         cx,dx 
6CA4    9A 00 00 00 00            call        memmove_ 
6CA9    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
6CAC    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
6CAF    88 04                     mov         byte ptr [si],al 
6CB1    E9 55 DE                  jmp         L$600 
6CB4                          del_char_from_string_:
6CB4    53                        push        bx 
6CB5    51                        push        cx 
6CB6    56                        push        si 
6CB7    57                        push        di 
6CB8    89 C6                     mov         si,ax 
6CBA    8D 5C 01                  lea         bx,0x1[si] 
6CBD    8E C2                     mov         es,dx 
6CBF    89 DF                     mov         di,bx 
6CC1    B9 FF FF                  mov         cx,0xffff 
6CC4    33 C0                     xor         ax,ax 
6CC6    F2 AE                     repne scasb 
6CC8    F7 D1                     not         cx 
6CCA    49                        dec         cx 
6CCB    41                        inc         cx 
6CCC    89 F0                     mov         ax,si 
6CCE    51                        push        cx 
6CCF    89 D1                     mov         cx,dx 
6CD1    9A 00 00 00 00            call        memmove_ 
6CD6    E9 B2 22                  jmp         L$1095 
6CD9                          deactivate_element_:
6CD9    53                        push        bx 
6CDA    56                        push        si 
6CDB    89 C6                     mov         si,ax 
6CDD    8E DA                     mov         ds,dx 
6CDF    8B 5C 34                  mov         bx,word ptr 0x34[si] 
6CE2    31 C0                     xor         ax,ax 
6CE4    C7 44 34 FF FF            mov         word ptr 0x34[si],0xffff 
6CE9    36 A3 00 00               mov         word ptr ss:_edit_text_ptr,ax 
6CED    36 A3 02 00               mov         word ptr ss:_edit_text_ptr+0x2,ax 
6CF1    89 F0                     mov         ax,si 
6CF3    0E                        push        cs 
6CF4    E8 00 00                  call        window_drawelement_ 
6CF7    5E                        pop         si 
6CF8    5B                        pop         bx 
6CF9    C3                        ret         
6CFA                          activate_next_element_:
6CFA    53                        push        bx 
6CFB    56                        push        si 
6CFC    57                        push        di 
6CFD    89 C6                     mov         si,ax 
6CFF    8E DA                     mov         ds,dx 
6D01    8B 5C 34                  mov         bx,word ptr 0x34[si] 
6D04    89 DA                     mov         dx,bx 
6D06                          L$824:
6D06    43                        inc         bx 
6D07    3B 5C 26                  cmp         bx,word ptr 0x26[si] 
6D0A    73 1F                     jae         L$825 
6D0C    89 DF                     mov         di,bx 
6D0E    8B 44 18                  mov         ax,word ptr 0x18[si] 
6D11    C1 E7 02                  shl         di,0x02 
6D14    8E 44 1A                  mov         es,word ptr 0x1a[si] 
6D17    01 C7                     add         di,ax 
6D19    26 C4 05                  les         ax,dword ptr es:[di] 
6D1C    89 C7                     mov         di,ax 
6D1E    26 8A 05                  mov         al,byte ptr es:[di] 
6D21    24 1F                     and         al,0x1f 
6D23    3C 02                     cmp         al,0x02 
6D25    74 04                     je          L$825 
6D27    3C 08                     cmp         al,0x08 
6D29    75 DB                     jne         L$824 
6D2B                          L$825:
6D2B    3B 5C 26                  cmp         bx,word ptr 0x26[si] 
6D2E    72 07                     jb          L$826 
6D30    BB FF FF                  mov         bx,0xffff 
6D33    39 DA                     cmp         dx,bx 
6D35    75 CF                     jne         L$824 
6D37                          L$826:
6D37    89 F0                     mov         ax,si 
6D39    8C DA                     mov         dx,ds 
6D3B    E8 00 00                  call        element_active_ 
6D3E                          L$827:
6D3E    5F                        pop         di 
6D3F    5E                        pop         si 
6D40    5B                        pop         bx 
6D41    C3                        ret         
6D42                          element_args_:
6D42    51                        push        cx 
6D43    56                        push        si 
6D44    89 C6                     mov         si,ax 
6D46    8E DA                     mov         ds,dx 
6D48    89 D9                     mov         cx,bx 
6D4A    8B 44 28                  mov         ax,word ptr 0x28[si] 
6D4D    6B D0 0A                  imul        dx,ax,0x000a 
6D50                          L$828:
6D50    48                        dec         ax 
6D51    83 EA 0A                  sub         dx,0x000a 
6D54    3D FF FF                  cmp         ax,0xffff 
6D57    74 11                     je          L$829 
6D59    C4 5C 2A                  les         bx,dword ptr 0x2a[si] 
6D5C    01 D3                     add         bx,dx 
6D5E    26 3B 4F 08               cmp         cx,word ptr es:0x8[bx] 
6D62    75 EC                     jne         L$828 
6D64    80 CC 80                  or          ah,0x80 
6D67    5E                        pop         si 
6D68    59                        pop         cx 
6D69    C3                        ret         
6D6A                          L$829:
6D6A    31 C0                     xor         ax,ax 
6D6C    5E                        pop         si 
6D6D    59                        pop         cx 
6D6E    C3                        ret         
6D6F                          sltextbox_needs_scrolling_:
6D6F    55                        push        bp 
6D70    89 E5                     mov         bp,sp 
6D72    36 8B 0E 00 00            mov         cx,word ptr ss:_edit_text_ptr 
6D77    01 C8                     add         ax,cx 
6D79    39 D8                     cmp         ax,bx 
6D7B    73 05                     jae         L$830 
6D7D    B8 FF FF                  mov         ax,0xffff 
6D80    EB 17                     jmp         L$832 
6D82                          L$830:
6D82    C5 5E 04                  lds         bx,dword ptr 0x4[bp] 
6D85    03 57 08                  add         dx,word ptr 0x8[bx] 
6D88    83 EA 08                  sub         dx,0x0008 
6D8B    36 3B 16 00 00            cmp         dx,word ptr ss:_caret_screenx 
6D90    77 05                     ja          L$831 
6D92    B8 01 00                  mov         ax,0x0001 
6D95    EB 02                     jmp         L$832 
6D97                          L$831:
6D97    31 C0                     xor         ax,ax 
6D99                          L$832:
6D99    5D                        pop         bp 
6D9A    C2 04 00                  ret         0x0004 
6D9D                          edit_textbox_:
6D9D    51                        push        cx 
6D9E    56                        push        si 
6D9F    57                        push        di 
6DA0    C8 1E 00 00               enter       0x001e,0x00 
6DA4    50                        push        ax 
6DA5    52                        push        dx 
6DA6    89 DF                     mov         di,bx 
6DA8    8E DA                     mov         ds,dx 
6DAA    89 C6                     mov         si,ax 
6DAC    C1 E3 02                  shl         bx,0x02 
6DAF    C5 44 18                  lds         ax,dword ptr 0x18[si] 
6DB2    01 C3                     add         bx,ax 
6DB4    8B 37                     mov         si,word ptr [bx] 
6DB6    8B 47 02                  mov         ax,word ptr 0x2[bx] 
6DB9    8B 5E E0                  mov         bx,word ptr -0x20[bp] 
6DBC    8E DA                     mov         ds,dx 
6DBE    89 46 FE                  mov         word ptr -0x2[bp],ax 
6DC1    8B 47 04                  mov         ax,word ptr 0x4[bx] 
6DC4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6DC7    89 F3                     mov         bx,si 
6DC9    03 47 04                  add         ax,word ptr 0x4[bx] 
6DCC    8B 5E E0                  mov         bx,word ptr -0x20[bp] 
6DCF    89 46 FA                  mov         word ptr -0x6[bp],ax 
6DD2    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6DD8    8E DA                     mov         ds,dx 
6DDA    89 76 FC                  mov         word ptr -0x4[bp],si 
6DDD    03 47 06                  add         ax,word ptr 0x6[bx] 
6DE0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6DE3    89 F3                     mov         bx,si 
6DE5    40                        inc         ax 
6DE6    40                        inc         ax 
6DE7    8B 57 06                  mov         dx,word ptr 0x6[bx] 
6DEA    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
6DEF    01 C2                     add         dx,ax 
6DF1    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
6DF5    89 56 F8                  mov         word ptr -0x8[bp],dx 
6DF8    85 C0                     test        ax,ax 
6DFA    75 04                     jne         L$833 
6DFC    85 DB                     test        bx,bx 
6DFE    74 08                     je          L$834 
6E00                          L$833:
6E00    8E D8                     mov         ds,ax 
6E02    F6 47 04 01               test        byte ptr 0x4[bx],0x01 
6E06    75 20                     jne         L$835 
6E08                          L$834:
6E08    8B 76 FC                  mov         si,word ptr -0x4[bp] 
6E0B    36 8B 1E 00 00            mov         bx,word ptr ss:_edit_text_ptr 
6E10    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
6E15    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6E18    8B 44 0E                  mov         ax,word ptr 0xe[si] 
6E1B    8B 4C 0C                  mov         cx,word ptr 0xc[si] 
6E1E    39 C2                     cmp         dx,ax 
6E20    75 06                     jne         L$835 
6E22    39 CB                     cmp         bx,cx 
6E24    0F 84 7C 01               je          L$839 
6E28                          L$835:
6E28    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
6E2B    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
6E2E    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
6E31    36 A3 00 00               mov         word ptr ss:_edit_text_ptr,ax 
6E35    36 89 16 02 00            mov         word ptr ss:_edit_text_ptr+0x2,dx 
6E3A    36 A3 A3 01               mov         word ptr ss:L$1928,ax 
6E3E    36 89 16 A5 01            mov         word ptr ss:L$1929,dx 
6E43    89 FB                     mov         bx,di 
6E45    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
6E48    8B 56 DE                  mov         dx,word ptr -0x22[bp] 
6E4B    8B 76 E0                  mov         si,word ptr -0x20[bp] 
6E4E    E8 00 00                  call        element_args_ 
6E51    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
6E54    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
6E5A    36 A3 A9 01               mov         word ptr ss:L$1931,ax 
6E5E    89 FB                     mov         bx,di 
6E60    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
6E66    C1 E3 02                  shl         bx,0x02 
6E69    8E 5E DE                  mov         ds,word ptr -0x22[bp] 
6E6C    50                        push        ax 
6E6D    C5 44 18                  lds         ax,dword ptr 0x18[si] 
6E70    01 C3                     add         bx,ax 
6E72    41                        inc         cx 
6E73    41                        inc         cx 
6E74    C5 3F                     lds         di,dword ptr [bx] 
6E76    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6E79    8B 5D 08                  mov         bx,word ptr 0x8[di] 
6E7C    9A 00 00 00 00            call        draw_rectangle_ 
6E81    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
6E84    8B 7E F8                  mov         di,word ptr -0x8[bp] 
6E87    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
6E8C    40                        inc         ax 
6E8D    36 8B 16 02 00            mov         dx,word ptr ss:_mouse+0x2 
6E92    89 46 F6                  mov         word ptr -0xa[bp],ax 
6E95    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6E98    47                        inc         di 
6E99    47                        inc         di 
6E9A    40                        inc         ax 
6E9B    40                        inc         ax 
6E9C    85 D2                     test        dx,dx 
6E9E    75 06                     jne         L$836 
6EA0    85 DB                     test        bx,bx 
6EA2    0F 84 92 00               je          L$837 
6EA6                          L$836:
6EA6    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
6EA9    8B 4C 02                  mov         cx,word ptr 0x2[si] 
6EAC    C1 E9 03                  shr         cx,0x03 
6EAF    30 ED                     xor         ch,ch 
6EB1    8E DA                     mov         ds,dx 
6EB3    80 E1 01                  and         cl,0x01 
6EB6    8B 17                     mov         dx,word ptr [bx] 
6EB8    51                        push        cx 
6EB9    83 C2 08                  add         dx,0x0008 
6EBC    6A 00                     push        0x0000 
6EBE    8D 76 E2                  lea         si,-0x1e[bp] 
6EC1    52                        push        dx 
6EC2    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
6EC8    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
6ECD    52                        push        dx 
6ECE    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
6ED4    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
6ED9    52                        push        dx 
6EDA    89 FA                     mov         dx,di 
6EDC    0E                        push        cs 
6EDD    E8 00 00                  call        cprint_text_ 
6EE0    8B 56 E4                  mov         dx,word ptr -0x1c[bp] 
6EE3    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
6EE7    29 C2                     sub         dx,ax 
6EE9    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
6EEC    48                        dec         ax 
6EED    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
6EF0    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
6EF4    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6EF7    36 89 16 A7 01            mov         word ptr ss:L$1930,dx 
6EFC    36 A3 00 00               mov         word ptr ss:_caret_screeny,ax 
6F00    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
6F03    8B 47 02                  mov         ax,word ptr 0x2[bx] 
6F06    C1 E8 03                  shr         ax,0x03 
6F09    25 01 00                  and         ax,0x0001 
6F0C    8B 4E E6                  mov         cx,word ptr -0x1a[bp] 
6F0F    50                        push        ax 
6F10    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6F13    6A 00                     push        0x0000 
6F15    03 47 08                  add         ax,word ptr 0x8[bx] 
6F18    8D 76 E2                  lea         si,-0x1e[bp] 
6F1B    50                        push        ax 
6F1C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
6F22    89 FA                     mov         dx,di 
6F24    50                        push        ax 
6F25    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
6F2B    8B 5E E4                  mov         bx,word ptr -0x1c[bp] 
6F2E    50                        push        ax 
6F2F    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
6F32    0E                        push        cs 
6F33    E8 00 00                  call        cprint_text_ 
6F36    EB 4C                     jmp         L$838 
6F38                          L$837:
6F38    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
6F3B    8B 57 02                  mov         dx,word ptr 0x2[bx] 
6F3E    C1 EA 03                  shr         dx,0x03 
6F41    83 E2 01                  and         dx,0x0001 
6F44    52                        push        dx 
6F45    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
6F48    6A 00                     push        0x0000 
6F4A    03 57 08                  add         dx,word ptr 0x8[bx] 
6F4D    8D 76 E2                  lea         si,-0x1e[bp] 
6F50    52                        push        dx 
6F51    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
6F57    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
6F5C    52                        push        dx 
6F5D    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
6F63    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
6F68    52                        push        dx 
6F69    89 FA                     mov         dx,di 
6F6B    0E                        push        cs 
6F6C    E8 00 00                  call        cprint_text_ 
6F6F    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
6F72    40                        inc         ax 
6F73    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
6F77    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
6F7A    36 A3 00 00               mov         word ptr ss:_caret_screeny,ax 
6F7E    31 C0                     xor         ax,ax 
6F80    36 A3 A7 01               mov         word ptr ss:L$1930,ax 
6F84                          L$838:
6F84    31 C0                     xor         ax,ax 
6F86    E8 00 00                  call        draw_textbox_caret_ 
6F89    C4 7E E4                  les         di,dword ptr -0x1c[bp] 
6F8C    B9 FF FF                  mov         cx,0xffff 
6F8F    33 C0                     xor         ax,ax 
6F91    F2 AE                     repne scasb 
6F93    F7 D1                     not         cx 
6F95    49                        dec         cx 
6F96    01 4E E4                  add         word ptr -0x1c[bp],cx 
6F99    8B 46 E4                  mov         ax,word ptr -0x1c[bp] 
6F9C    36 2B 06 00 00            sub         ax,word ptr ss:_edit_text_ptr 
6FA1    89 46 F4                  mov         word ptr -0xc[bp],ax 
6FA4                          L$839:
6FA4    9A 00 00 00 00            call        kbhit_ 
6FA9    85 C0                     test        ax,ax 
6FAB    0F 84 78 04               je          L$868 
6FAF    31 C0                     xor         ax,ax 
6FB1    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
6FB5    9A 00 00 00 00            call        getch_ 
6FBA    89 C2                     mov         dx,ax 
6FBC    89 C3                     mov         bx,ax 
6FBE    85 C0                     test        ax,ax 
6FC0    0F 85 60 01               jne         L$848 
6FC4    9A 00 00 00 00            call        getch_ 
6FC9    3D 4D 00                  cmp         ax,0x004d 
6FCC    72 13                     jb          L$840 
6FCE    0F 86 7A 00               jbe         L$844 
6FD2    3D 53 00                  cmp         ax,0x0053 
6FD5    74 19                     je          L$841 
6FD7    3D 4F 00                  cmp         ax,0x004f 
6FDA    0F 84 05 01               je          L$847 
6FDE    E9 D7 01                  jmp         L$856 
6FE1                          L$840:
6FE1    3D 4B 00                  cmp         ax,0x004b 
6FE4    74 1E                     je          L$843 
6FE6    3D 47 00                  cmp         ax,0x0047 
6FE9    0F 84 DC 00               je          L$846 
6FED    E9 C8 01                  jmp         L$856 
6FF0                          L$841:
6FF0    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
6FF4                          L$842:
6FF4    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
6FF9    36 03 06 A7 01            add         ax,word ptr ss:L$1930 
6FFE    E8 00 00                  call        del_char_from_string_ 
7001    E9 B4 01                  jmp         L$856 
7004                          L$843:
7004    36 83 3E A7 01 00         cmp         word ptr ss:L$1930,0x0000 
700A    0F 84 19 04               je          L$868 
700E    B8 01 00                  mov         ax,0x0001 
7011    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7014    36 FF 0E A7 01            dec         word ptr ss:L$1930 
7019    E8 00 00                  call        draw_textbox_caret_ 
701C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
701F    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7022    C1 E8 03                  shr         ax,0x03 
7025    30 E4                     xor         ah,ah 
7027    B9 01 00                  mov         cx,0x0001 
702A    24 01                     and         al,0x01 
702C    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
7031    50                        push        ax 
7032    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
7036    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
703C    36 03 06 A7 01            add         ax,word ptr ss:L$1930 
7041    0E                        push        cs 
7042    E8 00 00                  call        string_width_ 
7045    36 29 06 00 00            sub         word ptr ss:_caret_screenx,ax 
704A    EB 54                     jmp         L$845 
704C                          L$844:
704C    36 C4 3E 00 00            les         di,dword ptr ss:_edit_text_ptr 
7051    B9 FF FF                  mov         cx,0xffff 
7054    33 C0                     xor         ax,ax 
7056    F2 AE                     repne scasb 
7058    F7 D1                     not         cx 
705A    49                        dec         cx 
705B    36 3B 0E A7 01            cmp         cx,word ptr ss:L$1930 
7060    0F 86 C3 03               jbe         L$868 
7064    B8 01 00                  mov         ax,0x0001 
7067    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
706A    E8 00 00                  call        draw_textbox_caret_ 
706D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7070    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7073    C1 E8 03                  shr         ax,0x03 
7076    30 E4                     xor         ah,ah 
7078    B9 01 00                  mov         cx,0x0001 
707B    24 01                     and         al,0x01 
707D    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
7082    50                        push        ax 
7083    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
7087    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
708D    36 03 06 A7 01            add         ax,word ptr ss:L$1930 
7092    0E                        push        cs 
7093    E8 00 00                  call        string_width_ 
7096    36 FF 06 A7 01            inc         word ptr ss:L$1930 
709B    36 01 06 00 00            add         word ptr ss:_caret_screenx,ax 
70A0                          L$845:
70A0    FF 76 FE                  push        word ptr -0x2[bp] 
70A3    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
70A6    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
70AB    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
70B0    36 A1 A7 01               mov         ax,word ptr ss:L$1930 
70B4    FF 76 FC                  push        word ptr -0x4[bp] 
70B7    36 C6 06 00 00 01         mov         byte ptr ss:_caret_visible,0x01 
70BD    E8 00 00                  call        sltextbox_needs_scrolling_ 
70C0    85 C0                     test        ax,ax 
70C2    0F 84 61 03               je          L$868 
70C6    E9 03 02                  jmp         L$860 
70C9                          L$846:
70C9    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
70CD    36 89 16 A7 01            mov         word ptr ss:L$1930,dx 
70D2    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
70D7    36 A3 A3 01               mov         word ptr ss:L$1928,ax 
70DB    36 89 16 A5 01            mov         word ptr ss:L$1929,dx 
70E0    E9 2A 02                  jmp         L$863 
70E3                          L$847:
70E3    36 C4 3E 00 00            les         di,dword ptr ss:_edit_text_ptr 
70E8    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
70EB    B9 FF FF                  mov         cx,0xffff 
70EE    33 C0                     xor         ax,ax 
70F0    F2 AE                     repne scasb 
70F2    F7 D1                     not         cx 
70F4    49                        dec         cx 
70F5    36 89 0E A7 01            mov         word ptr ss:L$1930,cx 
70FA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
70FD    8B 47 08                  mov         ax,word ptr 0x8[bx] 
7100    C1 E8 03                  shr         ax,0x03 
7103    39 C1                     cmp         cx,ax 
7105    0F 86 04 02               jbe         L$863 
7109    36 8B 16 00 00            mov         dx,word ptr ss:_edit_text_ptr 
710E    01 CA                     add         dx,cx 
7110    36 8B 1E 02 00            mov         bx,word ptr ss:_edit_text_ptr+0x2 
7115    29 C2                     sub         dx,ax 
7117    36 89 1E A5 01            mov         word ptr ss:L$1929,bx 
711C    36 89 16 A3 01            mov         word ptr ss:L$1928,dx 
7121    E9 E9 01                  jmp         L$863 
7124                          L$848:
7124    B8 02 00                  mov         ax,0x0002 
7127    E8 00 00                  call        draw_textbox_caret_ 
712A    83 FA 09                  cmp         dx,0x0009 
712D    72 0E                     jb          L$849 
712F    76 31                     jbe         L$853 
7131    83 FA 1B                  cmp         dx,0x001b 
7134    74 1E                     je          L$851 
7136    83 FA 0D                  cmp         dx,0x000d 
7139    74 09                     je          L$850 
713B    EB 44                     jmp         L$855 
713D                          L$849:
713D    83 FA 08                  cmp         dx,0x0008 
7140    74 2B                     je          L$854 
7142    EB 3D                     jmp         L$855 
7144                          L$850:
7144    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
7147    8B 56 DE                  mov         dx,word ptr -0x22[bp] 
714A    E8 00 00                  call        deactivate_element_ 
714D    36 A1 A9 01               mov         ax,word ptr ss:L$1931 
7151    E9 B5 D9                  jmp         L$600 
7154                          L$851:
7154    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
7157    8B 56 DE                  mov         dx,word ptr -0x22[bp] 
715A    E8 00 00                  call        deactivate_element_ 
715D                          L$852:
715D    31 C0                     xor         ax,ax 
715F    E9 A7 D9                  jmp         L$600 
7162                          L$853:
7162    8B 46 E0                  mov         ax,word ptr -0x20[bp] 
7165    8B 56 DE                  mov         dx,word ptr -0x22[bp] 
7168    E8 00 00                  call        activate_next_element_ 
716B    EB F0                     jmp         L$852 
716D                          L$854:
716D    36 83 3E A7 01 00         cmp         word ptr ss:L$1930,0x0000 
7173    74 43                     je          L$856 
7175    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
7179    36 FF 0E A7 01            dec         word ptr ss:L$1930 
717E    E9 73 FE                  jmp         L$842 
7181                          L$855:
7181    36 C4 3E 00 00            les         di,dword ptr ss:_edit_text_ptr 
7186    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7189    B9 FF FF                  mov         cx,0xffff 
718C    33 C0                     xor         ax,ax 
718E    F2 AE                     repne scasb 
7190    F7 D1                     not         cx 
7192    49                        dec         cx 
7193    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7196    3B 4C 20                  cmp         cx,word ptr 0x20[si] 
7199    73 1D                     jae         L$856 
719B    36 A1 A7 01               mov         ax,word ptr ss:L$1930 
719F    36 8B 0E 00 00            mov         cx,word ptr ss:_edit_text_ptr 
71A4    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
71A9    89 C6                     mov         si,ax 
71AB    30 FF                     xor         bh,bh 
71AD    46                        inc         si 
71AE    01 C8                     add         ax,cx 
71B0    36 89 36 A7 01            mov         word ptr ss:L$1930,si 
71B5    E8 00 00                  call        add_char_to_string_ 
71B8                          L$856:
71B8    36 83 3E A7 01 00         cmp         word ptr ss:L$1930,0x0000 
71BE    75 07                     jne         L$857 
71C0    C7 46 E2 01 00            mov         word ptr -0x1e[bp],0x0001 
71C5    EB 35                     jmp         L$858 
71C7                          L$857:
71C7    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
71CA    8B 47 02                  mov         ax,word ptr 0x2[bx] 
71CD    C1 E8 03                  shr         ax,0x03 
71D0    30 E4                     xor         ah,ah 
71D2    24 01                     and         al,0x01 
71D4    50                        push        ax 
71D5    36 A1 A3 01               mov         ax,word ptr ss:L$1928 
71D9    8B 76 FC                  mov         si,word ptr -0x4[bp] 
71DC    89 C3                     mov         bx,ax 
71DE    36 8B 0E A7 01            mov         cx,word ptr ss:L$1930 
71E3    2B 5C 0C                  sub         bx,word ptr 0xc[si] 
71E6    36 8B 16 A5 01            mov         dx,word ptr ss:L$1929 
71EB    29 D9                     sub         cx,bx 
71ED    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
71F3    49                        dec         cx 
71F4    0E                        push        cs 
71F5    E8 00 00                  call        string_width_ 
71F8    40                        inc         ax 
71F9    89 46 E2                  mov         word ptr -0x1e[bp],ax 
71FC                          L$858:
71FC    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
71FF    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
7205    8B 57 0E                  mov         dx,word ptr 0xe[bx] 
7208    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
720B    89 56 E6                  mov         word ptr -0x1a[bp],dx 
720E    36 8B 16 A7 01            mov         dx,word ptr ss:L$1930 
7213    41                        inc         cx 
7214    41                        inc         cx 
7215    01 C2                     add         dx,ax 
7217    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
721D    89 56 E4                  mov         word ptr -0x1c[bp],dx 
7220    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7223    50                        push        ax 
7224    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
7227    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
722A    2B 5E E2                  sub         bx,word ptr -0x1e[bp] 
722D    03 46 E2                  add         ax,word ptr -0x1e[bp] 
7230    9A 00 00 00 00            call        draw_rectangle_ 
7235    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
7238    40                        inc         ax 
7239    01 46 E2                  add         word ptr -0x1e[bp],ax 
723C    36 83 3E A7 01 00         cmp         word ptr ss:L$1930,0x0000 
7242    74 43                     je          L$859 
7244    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7247    8B 47 02                  mov         ax,word ptr 0x2[bx] 
724A    C1 E8 03                  shr         ax,0x03 
724D    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7250    30 E4                     xor         ah,ah 
7252    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7255    24 01                     and         al,0x01 
7257    42                        inc         dx 
7258    42                        inc         dx 
7259    50                        push        ax 
725A    8B 4C 0E                  mov         cx,word ptr 0xe[si] 
725D    6A 01                     push        0x0001 
725F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7265    36 FF 36 00 00            push        word ptr ss:__RES_X 
726A    36 8B 1E A7 01            mov         bx,word ptr ss:L$1930 
726F    50                        push        ax 
7270    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
7276    4B                        dec         bx 
7277    50                        push        ax 
7278    8B 44 0C                  mov         ax,word ptr 0xc[si] 
727B    8D 76 E8                  lea         si,-0x18[bp] 
727E    01 C3                     add         bx,ax 
7280    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
7283    0E                        push        cs 
7284    E8 00 00                  call        cprint_text_ 
7287                          L$859:
7287    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
728A    8B 47 02                  mov         ax,word ptr 0x2[bx] 
728D    C1 E8 03                  shr         ax,0x03 
7290    30 E4                     xor         ah,ah 
7292    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7295    24 01                     and         al,0x01 
7297    B9 01 00                  mov         cx,0x0001 
729A    50                        push        ax 
729B    8B 44 0C                  mov         ax,word ptr 0xc[si] 
729E    8B 54 0E                  mov         dx,word ptr 0xe[si] 
72A1    36 03 06 A7 01            add         ax,word ptr ss:L$1930 
72A6    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
72AC    48                        dec         ax 
72AD    0E                        push        cs 
72AE    E8 00 00                  call        string_width_ 
72B1    FF 76 FE                  push        word ptr -0x2[bp] 
72B4    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
72B7    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
72BC    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
72C1    01 46 E2                  add         word ptr -0x1e[bp],ax 
72C4    56                        push        si 
72C5    36 A1 A7 01               mov         ax,word ptr ss:L$1930 
72C9    E8 00 00                  call        sltextbox_needs_scrolling_ 
72CC                          L$860:
72CC    85 C0                     test        ax,ax 
72CE    7E 24                     jle         L$861 
72D0    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
72D3    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
72D6    36 A1 00 00               mov         ax,word ptr ss:_edit_text_ptr 
72DA    C1 EB 03                  shr         bx,0x03 
72DD    36 03 06 A7 01            add         ax,word ptr ss:L$1930 
72E2    36 8B 16 02 00            mov         dx,word ptr ss:_edit_text_ptr+0x2 
72E7    29 D8                     sub         ax,bx 
72E9    36 89 16 A5 01            mov         word ptr ss:L$1929,dx 
72EE    36 A3 A3 01               mov         word ptr ss:L$1928,ax 
72F2    EB 19                     jmp         L$863 
72F4                          L$861:
72F4    0F 8D 85 00               jge         L$864 
72F8    36 83 3E A7 01 04         cmp         word ptr ss:L$1930,0x0004 
72FE    7E 08                     jle         L$862 
7300    36 83 2E A3 01 04         sub         word ptr ss:L$1928,0x0004 
7306    EB 05                     jmp         L$863 
7308                          L$862:
7308    36 FF 0E A3 01            dec         word ptr ss:L$1928 
730D                          L$863:
730D    B8 02 00                  mov         ax,0x0002 
7310    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7313    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7316    E8 00 00                  call        draw_textbox_caret_ 
7319    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
731F    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
7325    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7328    50                        push        ax 
7329    41                        inc         cx 
732A    41                        inc         cx 
732B    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
732E    8B 5F 08                  mov         bx,word ptr 0x8[bx] 
7331    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7334    9A 00 00 00 00            call        draw_rectangle_ 
7339    6A 00                     push        0x0000 
733B    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
7340    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
7345    89 D8                     mov         ax,bx 
7347    36 8B 16 A7 01            mov         dx,word ptr ss:L$1930 
734C    36 2B 06 00 00            sub         ax,word ptr ss:_edit_text_ptr 
7351    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7354    29 C2                     sub         dx,ax 
7356    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
7359    52                        push        dx 
735A    03 44 08                  add         ax,word ptr 0x8[si] 
735D    50                        push        ax 
735E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7364    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7367    50                        push        ax 
7368    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
736E    8D 76 E2                  lea         si,-0x1e[bp] 
7371    50                        push        ax 
7372    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
7375    42                        inc         dx 
7376    42                        inc         dx 
7377    40                        inc         ax 
7378    40                        inc         ax 
7379    0E                        push        cs 
737A    E8 00 00                  call        cprint_text_ 
737D                          L$864:
737D    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7380    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
7383    42                        inc         dx 
7384    42                        inc         dx 
7385    43                        inc         bx 
7386    36 83 3E A7 01 00         cmp         word ptr ss:L$1930,0x0000 
738C    74 44                     je          L$865 
738E    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
7391    36 89 1E 00 00            mov         word ptr ss:_caret_screeny,bx 
7396    48                        dec         ax 
7397    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
739A    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
739E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
73A1    8B 47 02                  mov         ax,word ptr 0x2[bx] 
73A4    C1 E8 03                  shr         ax,0x03 
73A7    30 E4                     xor         ah,ah 
73A9    24 01                     and         al,0x01 
73AB    50                        push        ax 
73AC    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
73AF    FF 76 F4                  push        word ptr -0xc[bp] 
73B2    03 47 08                  add         ax,word ptr 0x8[bx] 
73B5    8B 4E E6                  mov         cx,word ptr -0x1a[bp] 
73B8    50                        push        ax 
73B9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
73BF    8D 76 E2                  lea         si,-0x1e[bp] 
73C2    50                        push        ax 
73C3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
73C9    8B 5E E4                  mov         bx,word ptr -0x1c[bp] 
73CC    50                        push        ax 
73CD    8B 46 E2                  mov         ax,word ptr -0x1e[bp] 
73D0    EB 4B                     jmp         L$866 
73D2                          L$865:
73D2    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
73D5    6A 00                     push        0x0000 
73D7    36 89 1E 00 00            mov         word ptr ss:_caret_screeny,bx 
73DC    40                        inc         ax 
73DD    36 8B 1E A3 01            mov         bx,word ptr ss:L$1928 
73E2    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
73E6    89 D8                     mov         ax,bx 
73E8    36 8B 36 A7 01            mov         si,word ptr ss:L$1930 
73ED    36 2B 06 00 00            sub         ax,word ptr ss:_edit_text_ptr 
73F2    36 8B 0E A5 01            mov         cx,word ptr ss:L$1929 
73F7    29 C6                     sub         si,ax 
73F9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
73FC    56                        push        si 
73FD    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7400    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
7403    03 44 08                  add         ax,word ptr 0x8[si] 
7406    50                        push        ax 
7407    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
740D    50                        push        ax 
740E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
7414    50                        push        ax 
7415    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
7418    8D 76 EE                  lea         si,-0x12[bp] 
741B    40                        inc         ax 
741C    40                        inc         ax 
741D                          L$866:
741D    0E                        push        cs 
741E    E8 00 00                  call        cprint_text_ 
7421                          L$867:
7421    36 C6 06 00 00 01         mov         byte ptr ss:_caret_visible,0x01 
7427                          L$868:
7427    31 C0                     xor         ax,ax 
7429    E8 00 00                  call        draw_textbox_caret_ 
742C                          L$869:
742C    B8 FF 7F                  mov         ax,0x7fff 
742F    E9 D7 D6                  jmp         L$600 

Routine Size: 2692 bytes,    Routine Base: main_TEXT + 69AE

7432                          nomemory_:
7432    53                        push        bx 
7433    51                        push        cx 
7434    52                        push        dx 
7435    56                        push        si 
7436    57                        push        di 
7437    C8 06 00 00               enter       0x0006,0x00 
743B    C7 46 FA 0A 00            mov         word ptr -0x6[bp],0x000a 
7440    36 8B 1E 00 00            mov         bx,word ptr ss:_running_console 
7445    36 8B 36 02 00            mov         si,word ptr ss:_running_console+0x2 
744A    31 C9                     xor         cx,cx 
744C    85 F6                     test        si,si 
744E    75 04                     jne         L$870 
7450    85 DB                     test        bx,bx 
7452    74 1B                     je          L$872 
7454                          L$870:
7454    85 F6                     test        si,si 
7456    75 06                     jne         L$871 
7458    85 DB                     test        bx,bx 
745A    0F 84 42 B7               je          L$400 
745E                          L$871:
745E    8E DE                     mov         ds,si 
7460    C5 77 3A                  lds         si,dword ptr 0x3a[bx] 
7463    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
7466    F6 87 8A 01 08            test        byte ptr 0x18a[bx],0x08 
746B    0F 85 31 B7               jne         L$400 
746F                          L$872:
746F    31 C0                     xor         ax,ax 
7471    36 8B 36 00 00            mov         si,word ptr ss:_running_console 
7476    36 A3 00 00               mov         word ptr ss:_running_window,ax 
747A    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
747E    36 8E 1E 02 00            mov         ds,word ptr ss:_running_console+0x2 
7483    8B 44 3C                  mov         ax,word ptr 0x3c[si] 
7486    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
7489    8E D8                     mov         ds,ax 
748B    89 46 FC                  mov         word ptr -0x4[bp],ax 
748E    8B 47 18                  mov         ax,word ptr 0x18[bx] 
7491    8B 77 16                  mov         si,word ptr 0x16[bx] 
7494                          L$873:
7494    89 46 FE                  mov         word ptr -0x2[bp],ax 
7497    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
749A    8B 84 80 01               mov         ax,word ptr 0x180[si] 
749E    3D FF FF                  cmp         ax,0xffff 
74A1    74 12                     je          L$874 
74A3    89 C7                     mov         di,ax 
74A5    C1 E7 02                  shl         di,0x02 
74A8    C5 84 7A 01               lds         ax,dword ptr 0x17a[si] 
74AC    01 C7                     add         di,ax 
74AE    8B 45 02                  mov         ax,word ptr 0x2[di] 
74B1    8B 35                     mov         si,word ptr [di] 
74B3    EB DF                     jmp         L$873 
74B5                          L$874:
74B5    B8 03 00                  mov         ax,0x0003 
74B8    9A 00 00 00 00            call        video_mode_ 
74BD    8C D2                     mov         dx,ss 
74BF    B8 00 00                  mov         ax,offset _outofmemory 
74C2    9A 00 00 00 00            call        puts_ 
74C7    B8 00 00                  mov         ax,offset _outofmemoryprompt 
74CA    8C D2                     mov         dx,ss 
74CC    9A 00 00 00 00            call        puts_ 
74D1                          L$875:
74D1    85 C9                     test        cx,cx 
74D3    75 48                     jne         L$877 
74D5    9A 00 00 00 00            call        kbhit_ 
74DA    85 C0                     test        ax,ax 
74DC    75 36                     jne         L$876 
74DE    16                        push        ss 
74DF    68 00 00                  push        offset _outofmemoryprompt3 
74E2    FF 76 FA                  push        word ptr -0x6[bp] 
74E5    16                        push        ss 
74E6    68 00 00                  push        offset _outofmemoryprompt2 
74E9    16                        push        ss 
74EA    68 52 01                  push        offset DGROUP:L$1762 
74ED    8C D2                     mov         dx,ss 
74EF    9A 00 00 00 00            call        printf_ 
74F4    83 C4 0E                  add         sp,0x000e 
74F7    B8 12 00                  mov         ax,offset ___iob+0x12 
74FA    9A 00 00 00 00            call        fflush_ 
74FF    B8 01 00                  mov         ax,0x0001 
7502    FF 4E FA                  dec         word ptr -0x6[bp] 
7505    9A 00 00 00 00            call        sleep_ 
750A    83 7E FA FF               cmp         word ptr -0x6[bp],0xffff 
750E    0F 84 72 00               je          L$883 
7512    EB BD                     jmp         L$875 
7514                          L$876:
7514    9A 00 00 00 00            call        getch_ 
7519    89 C1                     mov         cx,ax 
751B    EB B4                     jmp         L$875 
751D                          L$877:
751D    36 A1 02 00               mov         ax,word ptr ss:_running_console+0x2 
7521    36 8B 3E 00 00            mov         di,word ptr ss:_running_console 
7526    85 C0                     test        ax,ax 
7528    75 04                     jne         L$878 
752A    85 FF                     test        di,di 
752C    74 56                     je          L$883 
752E                          L$878:
752E    8E D8                     mov         ds,ax 
7530    C5 55 3A                  lds         dx,dword ptr 0x3a[di] 
7533    89 D7                     mov         di,dx 
7535    8B 55 18                  mov         dx,word ptr 0x18[di] 
7538    8B 45 16                  mov         ax,word ptr 0x16[di] 
753B    85 D2                     test        dx,dx 
753D    75 04                     jne         L$879 
753F    85 C0                     test        ax,ax 
7541    74 41                     je          L$883 
7543                          L$879:
7543    83 F9 4B                  cmp         cx,0x004b 
7546    72 0E                     jb          L$880 
7548    76 20                     jbe         L$882 
754A    83 F9 6B                  cmp         cx,0x006b 
754D    74 1B                     je          L$882 
754F    83 F9 63                  cmp         cx,0x0063 
7552    74 07                     je          L$881 
7554    EB 2E                     jmp         L$883 
7556                          L$880:
7556    83 F9 43                  cmp         cx,0x0043 
7559    75 29                     jne         L$883 
755B                          L$881:
755B    BB 0F 00                  mov         bx,0x000f 
755E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
7561    89 F0                     mov         ax,si 
7563    9A 00 00 00 00            call        send_vpu_signal_ 
7568    EB 1A                     jmp         L$883 
756A                          L$882:
756A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
756D    80 8C 8A 01 40            or          byte ptr 0x18a[si],0x40 
7572    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
7575    C5 77 16                  lds         si,dword ptr 0x16[bx] 
7578    80 8C 8A 01 08            or          byte ptr 0x18a[si],0x08 
757D    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
7580    80 4F 0E 80               or          byte ptr 0xe[bx],0x80 
7584                          L$883:
7584    9A 00 00 00 00            call        restore_videomode_ 
7589    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
758D    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
7592    74 05                     je          L$884 
7594    9A 00 00 00 00            call        restore_videomode_ 
7599                          L$884:
7599    E8 00 00                  call        draw_desktop_ 
759C    E8 00 00                  call        draw_windows_ 
759F    36 C6 06 00 00 00         mov         byte ptr ss:_new_tty,0x00 
75A5    E9 F8 B5                  jmp         L$400 

Routine Size: 374 bytes,    Routine Base: main_TEXT + 7432

75A8                          show_error_code_:
75A8    53                        push        bx 
75A9    51                        push        cx 
75AA    52                        push        dx 
75AB    56                        push        si 
75AC    57                        push        di 
75AD    89 C3                     mov         bx,ax 
75AF    B8 64 00                  mov         ax,0x0064 
75B2    9A 00 00 00 00            call        malloc_ 
75B7    89 C6                     mov         si,ax 
75B9    89 D7                     mov         di,dx 
75BB    85 D2                     test        dx,dx 
75BD    75 0B                     jne         L$885 
75BF    85 C0                     test        ax,ax 
75C1    75 07                     jne         L$885 
75C3    0E                        push        cs 
75C4    E8 00 00                  call        nomemory_ 
75C7    E9 D7 B5                  jmp         L$401 
75CA                          L$885:
75CA    53                        push        bx 
75CB    53                        push        bx 
75CC    16                        push        ss 
75CD    68 5C 01                  push        offset DGROUP:L$1763 
75D0    52                        push        dx 
75D1    50                        push        ax 
75D2    9A 00 00 00 00            call        sprintf_ 
75D7    83 C4 0C                  add         sp,0x000c 
75DA    16                        push        ss 
75DB    68 72 01                  push        offset DGROUP:L$1764 
75DE    16                        push        ss 
75DF    68 00 00                  push        offset _errortitle 
75E2    52                        push        dx 
75E3    56                        push        si 
75E4    B9 64 00                  mov         cx,0x0064 
75E7    6A 01                     push        0x0001 
75E9    BB 96 00                  mov         bx,0x0096 
75EC    6A 01                     push        0x0001 
75EE    BA 14 00                  mov         dx,0x0014 
75F1    6A 00                     push        0x0000 
75F3    89 D0                     mov         ax,dx 
75F5    0E                        push        cs 
75F6    E8 00 00                  call        dialog_ 
75F9    89 F0                     mov         ax,si 
75FB    89 FA                     mov         dx,di 
75FD    9A 00 00 00 00            call        free_ 
7602    E9 9C B5                  jmp         L$401 

Routine Size: 93 bytes,    Routine Base: main_TEXT + 75A8

7605                          show_error_msg_:
7605    53                        push        bx 
7606    51                        push        cx 
7607    66 6A 00                  pushd       0x00000000 
760A    16                        push        ss 
760B    68 00 00                  push        offset _errortitle 
760E    52                        push        dx 
760F    50                        push        ax 
7610    B9 32 00                  mov         cx,0x0032 
7613    6A 00                     push        0x0000 
7615    BB FA 00                  mov         bx,0x00fa 
7618    6A 00                     push        0x0000 
761A    BA 14 00                  mov         dx,0x0014 
761D    6A 00                     push        0x0000 
761F    89 D0                     mov         ax,dx 
7621    0E                        push        cs 
7622    E8 00 00                  call        dialog_ 
7625    59                        pop         cx 
7626    5B                        pop         bx 
7627    CB                        retf        

Routine Size: 35 bytes,    Routine Base: main_TEXT + 7605

7628                          show_error_console_:
7628    53                        push        bx 
7629    51                        push        cx 
762A    52                        push        dx 
762B    56                        push        si 
762C    57                        push        di 
762D    C8 16 00 00               enter       0x0016,0x00 
7631    B9 07 00                  mov         cx,0x0007 
7634    8D 7E EA                  lea         di,-0x16[bp] 
7637    16                        push        ss 
7638    07                        pop         es 
7639    16                        push        ss 
763A    1F                        pop         ds 
763B    BE CA 02                  mov         si,offset DGROUP:L$1916 
763E    F3 A5                     rep movsw   
7640    36 A1 00 00               mov         ax,word ptr ss:_window_count 
7644    89 C2                     mov         dx,ax 
7646    C1 E2 02                  shl         dx,0x02 
7649                          L$886:
7649    48                        dec         ax 
764A    83 EA 04                  sub         dx,0x0004 
764D    3D FF FF                  cmp         ax,0xffff 
7650    74 0F                     je          L$887 
7652    36 C5 36 00 00            lds         si,dword ptr ss:_windows 
7657    01 D6                     add         si,dx 
7659    C5 3C                     lds         di,dword ptr [si] 
765B    F6 45 16 80               test        byte ptr 0x16[di],0x80 
765F    74 E8                     je          L$886 
7661                          L$887:
7661    3D FF FF                  cmp         ax,0xffff 
7664    0F 85 C8 00               jne         L$893 
7668    66 6A 00                  pushd       0x00000000 
766B    66 6A 00                  pushd       0x00000000 
766E    6A 01                     push        0x0001 
7670    6A 01                     push        0x0001 
7672    8D 56 EA                  lea         dx,-0x16[bp] 
7675    16                        push        ss 
7676    B9 96 00                  mov         cx,0x0096 
7679    52                        push        dx 
767A    BA FF FF                  mov         dx,0xffff 
767D    BB 2C 01                  mov         bx,0x012c 
7680    89 D0                     mov         ax,dx 
7682    0E                        push        cs 
7683    E8 00 00                  call        new_window_ 
7686    89 C6                     mov         si,ax 
7688    89 56 FE                  mov         word ptr -0x2[bp],dx 
768B    89 46 F8                  mov         word ptr -0x8[bp],ax 
768E    89 56 FA                  mov         word ptr -0x6[bp],dx 
7691    85 D2                     test        dx,dx 
7693    75 06                     jne         L$888 
7695    85 C0                     test        ax,ax 
7697    0F 84 05 B5               je          L$400 
769B                          L$888:
769B    68 00 02                  push        0x0200 
769E    66 36 FF 36 00 00         push        dword ptr ss:_errorlog 
76A4    68 82 00                  push        0x0082 
76A7    B9 01 00                  mov         cx,0x0001 
76AA    68 18 01                  push        0x0118 
76AD    89 CB                     mov         bx,cx 
76AF    0E                        push        cs 
76B0    E8 00 00                  call        window_ml_textbox_ 
76B3    89 46 FC                  mov         word ptr -0x4[bp],ax 
76B6    89 D7                     mov         di,dx 
76B8    85 D2                     test        dx,dx 
76BA    75 04                     jne         L$889 
76BC    85 C0                     test        ax,ax 
76BE    74 4C                     je          L$891 
76C0                          L$889:
76C0    52                        push        dx 
76C1    05 1A 00                  add         ax,0x001a 
76C4    50                        push        ax 
76C5    6A 00                     push        0x0000 
76C7    B9 01 00                  mov         cx,0x0001 
76CA    6A FF                     push        0xffff 
76CC    BB 19 01                  mov         bx,0x0119 
76CF    6A 68                     push        0x0068 
76D1    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
76D4    6A 00                     push        0x0000 
76D6    89 F0                     mov         ax,si 
76D8    0E                        push        cs 
76D9    E8 00 00                  call        window_scrollbar_ 
76DC    85 D2                     test        dx,dx 
76DE    75 04                     jne         L$890 
76E0    85 C0                     test        ax,ax 
76E2    74 28                     je          L$891 
76E4                          L$890:
76E4    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
76E7    57                        push        di 
76E8    05 18 00                  add         ax,0x0018 
76EB    50                        push        ax 
76EC    6A 00                     push        0x0000 
76EE    B9 83 00                  mov         cx,0x0083 
76F1    6A FF                     push        0xffff 
76F3    BB 01 00                  mov         bx,0x0001 
76F6    68 FE 00                  push        0x00fe 
76F9    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
76FC    6A 01                     push        0x0001 
76FE    89 F0                     mov         ax,si 
7700    0E                        push        cs 
7701    E8 00 00                  call        window_scrollbar_ 
7704    85 D2                     test        dx,dx 
7706    75 11                     jne         L$892 
7708    85 C0                     test        ax,ax 
770A    75 0D                     jne         L$892 
770C                          L$891:
770C    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
770F    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7712    0E                        push        cs 
7713    E8 00 00                  call        del_window_ 
7716    E9 87 B4                  jmp         L$400 
7719                          L$892:
7719    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
771C    B9 01 00                  mov         cx,0x0001 
771F    89 F0                     mov         ax,si 
7721    89 CB                     mov         bx,cx 
7723    8C DA                     mov         dx,ds 
7725    80 4C 16 80               or          byte ptr 0x16[si],0x80 
7729    0E                        push        cs 
772A    E8 00 00                  call        draw_window_ 
772D    E9 70 B4                  jmp         L$400 
7730                          L$893:
7730    89 C6                     mov         si,ax 
7732    36 8B 16 00 00            mov         dx,word ptr ss:_windows 
7737    C1 E6 02                  shl         si,0x02 
773A    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
773F    01 D6                     add         si,dx 
7741    C5 3C                     lds         di,dword ptr [si] 
7743    F6 45 16 08               test        byte ptr 0x16[di],0x08 
7747    0F 85 55 B4               jne         L$400 
774B    BA 01 00                  mov         dx,0x0001 
774E    0E                        push        cs 
774F    E8 00 00                  call        set_active_window_ 
7752    E9 4B B4                  jmp         L$400 

Routine Size: 301 bytes,    Routine Base: main_TEXT + 7628

7755                          log_error_:
7755    53                        push        bx 
7756    51                        push        cx 
7757    56                        push        si 
7758    57                        push        di 
7759    55                        push        bp 
775A    89 E5                     mov         bp,sp 
775C    50                        push        ax 
775D    52                        push        dx 
775E    36 C4 3E 00 00            les         di,dword ptr ss:_errorlog 
7763    B9 FF FF                  mov         cx,0xffff 
7766    33 C0                     xor         ax,ax 
7768    F2 AE                     repne scasb 
776A    F7 D1                     not         cx 
776C    49                        dec         cx 
776D    8B 7E FE                  mov         di,word ptr -0x2[bp] 
7770    8E 46 FC                  mov         es,word ptr -0x4[bp] 
7773    89 CA                     mov         dx,cx 
7775    89 CE                     mov         si,cx 
7777    B9 FF FF                  mov         cx,0xffff 
777A    33 C0                     xor         ax,ax 
777C    F2 AE                     repne scasb 
777E    F7 D1                     not         cx 
7780    49                        dec         cx 
7781    89 D0                     mov         ax,dx 
7783    01 C8                     add         ax,cx 
7785    40                        inc         ax 
7786    40                        inc         ax 
7787    3D 00 02                  cmp         ax,0x0200 
778A    72 1C                     jb          L$894 
778C    89 CE                     mov         si,cx 
778E    46                        inc         si 
778F    36 A1 00 00               mov         ax,word ptr ss:_errorlog 
7793    29 F2                     sub         dx,si 
7795    89 C3                     mov         bx,ax 
7797    89 D6                     mov         si,dx 
7799    52                        push        dx 
779A    36 8B 16 02 00            mov         dx,word ptr ss:_errorlog+0x2 
779F    01 CB                     add         bx,cx 
77A1    89 D1                     mov         cx,dx 
77A3    9A 00 00 00 00            call        memmove_ 
77A8                          L$894:
77A8    36 8B 1E 00 00            mov         bx,word ptr ss:_errorlog 
77AD    89 F0                     mov         ax,si 
77AF    36 8E 1E 02 00            mov         ds,word ptr ss:_errorlog+0x2 
77B4    01 C3                     add         bx,ax 
77B6    C6 07 0A                  mov         byte ptr [bx],0x0a 
77B9    46                        inc         si 
77BA    36 C4 3E 00 00            les         di,dword ptr ss:_errorlog 
77BF    01 F7                     add         di,si 
77C1    8B 76 FE                  mov         si,word ptr -0x2[bp] 
77C4    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
77C7    57                        push        di 
77C8                          L$895:
77C8    AC                        lodsb       
77C9    AA                        stosb       
77CA    3C 00                     cmp         al,0x00 
77CC    75 FA                     jne         L$895 
77CE    5F                        pop         di 
77CF    E9 9E B0                  jmp         L$375 
77D2                          copy_text_:
77D2    53                        push        bx 
77D3    51                        push        cx 
77D4    56                        push        si 
77D5    57                        push        di 
77D6    C8 04 00 00               enter       0x0004,0x00 
77DA    89 C6                     mov         si,ax 
77DC    89 56 FE                  mov         word ptr -0x2[bp],dx 
77DF    8E DA                     mov         ds,dx 
77E1    8B 4C 2E                  mov         cx,word ptr 0x2e[si] 
77E4    8B 5C 2C                  mov         bx,word ptr 0x2c[si] 
77E7    8B 44 0C                  mov         ax,word ptr 0xc[si] 
77EA    8B 54 0E                  mov         dx,word ptr 0xe[si] 
77ED    E8 00 00                  call        get_str_pos_ 
77F0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
77F3    89 C7                     mov         di,ax 
77F5    89 56 FC                  mov         word ptr -0x4[bp],dx 
77F8    8B 4C 32                  mov         cx,word ptr 0x32[si] 
77FB    8B 5C 30                  mov         bx,word ptr 0x30[si] 
77FE    8B 44 0C                  mov         ax,word ptr 0xc[si] 
7801    8B 54 0E                  mov         dx,word ptr 0xe[si] 
7804    E8 00 00                  call        get_str_pos_ 
7807    89 C3                     mov         bx,ax 
7809    89 D1                     mov         cx,dx 
780B    36 8B 16 04 00            mov         dx,word ptr ss:_clipboard+0x4 
7810    36 A1 02 00               mov         ax,word ptr ss:_clipboard+0x2 
7814    85 D2                     test        dx,dx 
7816    75 04                     jne         L$896 
7818    85 C0                     test        ax,ax 
781A    74 05                     je          L$897 
781C                          L$896:
781C    9A 00 00 00 00            call        free_ 
7821                          L$897:
7821    39 DF                     cmp         di,bx 
7823    76 09                     jbe         L$898 
7825    89 F8                     mov         ax,di 
7827    89 4E FC                  mov         word ptr -0x4[bp],cx 
782A    89 DF                     mov         di,bx 
782C    89 C3                     mov         bx,ax 
782E                          L$898:
782E    29 FB                     sub         bx,di 
7830    89 D8                     mov         ax,bx 
7832    9A 00 00 00 00            call        malloc_ 
7837    36 A3 02 00               mov         word ptr ss:_clipboard+0x2,ax 
783B    36 89 16 04 00            mov         word ptr ss:_clipboard+0x4,dx 
7840    85 D2                     test        dx,dx 
7842    75 06                     jne         L$899 
7844    85 C0                     test        ax,ax 
7846    0F 84 40 17               je          L$1094 
784A                          L$899:
784A    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
784D    89 D9                     mov         cx,bx 
784F    89 FE                     mov         si,di 
7851    8E C2                     mov         es,dx 
7853    89 C7                     mov         di,ax 
7855    57                        push        di 
7856    F3 A4                     rep movsb   
7858    5F                        pop         di 
7859    31 C0                     xor         ax,ax 
785B    36 89 1E 06 00            mov         word ptr ss:_clipboard+0x6,bx 
7860    36 A3 00 00               mov         word ptr ss:_clipboard,ax 
7864    E9 23 17                  jmp         L$1094 
7867                          paste_text_:
7867    53                        push        bx 
7868    51                        push        cx 
7869    56                        push        si 
786A    57                        push        di 
786B    C8 06 00 00               enter       0x0006,0x00 
786F    89 C6                     mov         si,ax 
7871    89 56 FE                  mov         word ptr -0x2[bp],dx 
7874    8E DA                     mov         ds,dx 
7876    8B 4C 1C                  mov         cx,word ptr 0x1c[si] 
7879    8B 5C 2A                  mov         bx,word ptr 0x2a[si] 
787C    8B 44 0C                  mov         ax,word ptr 0xc[si] 
787F    8B 54 0E                  mov         dx,word ptr 0xe[si] 
7882    E8 00 00                  call        get_str_pos_ 
7885    89 46 FA                  mov         word ptr -0x6[bp],ax 
7888    89 56 FC                  mov         word ptr -0x4[bp],dx 
788B    36 A1 04 00               mov         ax,word ptr ss:_clipboard+0x4 
788F    36 8B 16 02 00            mov         dx,word ptr ss:_clipboard+0x2 
7894    85 C0                     test        ax,ax 
7896    75 06                     jne         L$900 
7898    85 D2                     test        dx,dx 
789A    0F 84 EC 16               je          L$1094 
789E                          L$900:
789E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
78A1    C4 7C 0C                  les         di,dword ptr 0xc[si] 
78A4    B9 FF FF                  mov         cx,0xffff 
78A7    33 C0                     xor         ax,ax 
78A9    F2 AE                     repne scasb 
78AB    F7 D1                     not         cx 
78AD    49                        dec         cx 
78AE    36 03 0E 06 00            add         cx,word ptr ss:_clipboard+0x6 
78B3    3B 4C 20                  cmp         cx,word ptr 0x20[si] 
78B6    72 0C                     jb          L$901 
78B8    B8 00 00                  mov         ax,offset _outofmemory 
78BB    8C D2                     mov         dx,ss 
78BD    0E                        push        cs 
78BE    E8 00 00                  call        show_error_msg_ 
78C1    E9 C6 16                  jmp         L$1094 
78C4                          L$901:
78C4    C4 7E FA                  les         di,dword ptr -0x6[bp] 
78C7    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
78CA    B9 FF FF                  mov         cx,0xffff 
78CD    33 C0                     xor         ax,ax 
78CF    F2 AE                     repne scasb 
78D1    F7 D1                     not         cx 
78D3    49                        dec         cx 
78D4    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
78D7    41                        inc         cx 
78D8    8C C2                     mov         dx,es 
78DA    51                        push        cx 
78DB    36 03 06 06 00            add         ax,word ptr ss:_clipboard+0x6 
78E0    8C C1                     mov         cx,es 
78E2    8B 7E FA                  mov         di,word ptr -0x6[bp] 
78E5    9A 00 00 00 00            call        memmove_ 
78EA    36 8B 0E 06 00            mov         cx,word ptr ss:_clipboard+0x6 
78EF    36 C5 36 02 00            lds         si,dword ptr ss:_clipboard+0x2 
78F4    8E 46 FC                  mov         es,word ptr -0x4[bp] 
78F7    57                        push        di 
78F8    F3 A4                     rep movsb   
78FA    5F                        pop         di 
78FB    E9 8C 16                  jmp         L$1094 
78FE                          cut_text_:
78FE    53                        push        bx 
78FF    51                        push        cx 
7900    56                        push        si 
7901    57                        push        di 
7902    C8 08 00 00               enter       0x0008,0x00 
7906    89 C6                     mov         si,ax 
7908    89 56 FE                  mov         word ptr -0x2[bp],dx 
790B    8E DA                     mov         ds,dx 
790D    8B 4C 2E                  mov         cx,word ptr 0x2e[si] 
7910    8B 5C 2C                  mov         bx,word ptr 0x2c[si] 
7913    8B 44 0C                  mov         ax,word ptr 0xc[si] 
7916    8B 54 0E                  mov         dx,word ptr 0xe[si] 
7919    E8 00 00                  call        get_str_pos_ 
791C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
791F    89 C7                     mov         di,ax 
7921    89 56 FA                  mov         word ptr -0x6[bp],dx 
7924    89 46 FC                  mov         word ptr -0x4[bp],ax 
7927    89 56 F8                  mov         word ptr -0x8[bp],dx 
792A    8B 4C 32                  mov         cx,word ptr 0x32[si] 
792D    8B 5C 30                  mov         bx,word ptr 0x30[si] 
7930    8B 44 0C                  mov         ax,word ptr 0xc[si] 
7933    8B 54 0E                  mov         dx,word ptr 0xe[si] 
7936    E8 00 00                  call        get_str_pos_ 
7939    89 D1                     mov         cx,dx 
793B    89 C3                     mov         bx,ax 
793D    39 C7                     cmp         di,ax 
793F    76 1A                     jbe         L$902 
7941    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7944    89 46 FC                  mov         word ptr -0x4[bp],ax 
7947    8B 44 30                  mov         ax,word ptr 0x30[si] 
794A    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
794D    89 44 2C                  mov         word ptr 0x2c[si],ax 
7950    89 FB                     mov         bx,di 
7952    8B 44 32                  mov         ax,word ptr 0x32[si] 
7955    89 4E F8                  mov         word ptr -0x8[bp],cx 
7958    89 44 2E                  mov         word ptr 0x2e[si],ax 
795B                          L$902:
795B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
795E    8B 44 2C                  mov         ax,word ptr 0x2c[si] 
7961    89 44 30                  mov         word ptr 0x30[si],ax 
7964    89 44 2A                  mov         word ptr 0x2a[si],ax 
7967    8B 44 2E                  mov         ax,word ptr 0x2e[si] 
796A    89 44 32                  mov         word ptr 0x32[si],ax 
796D    89 DF                     mov         di,bx 
796F    89 44 1C                  mov         word ptr 0x1c[si],ax 
7972    89 DE                     mov         si,bx 
7974    8E C2                     mov         es,dx 
7976    2B 76 FC                  sub         si,word ptr -0x4[bp] 
7979    B9 FF FF                  mov         cx,0xffff 
797C    33 C0                     xor         ax,ax 
797E    F2 AE                     repne scasb 
7980    F7 D1                     not         cx 
7982    49                        dec         cx 
7983    01 F1                     add         cx,si 
7985    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
7988    51                        push        cx 
7989    89 D1                     mov         cx,dx 
798B    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
798E    9A 00 00 00 00            call        memmove_ 
7993    E9 F4 15                  jmp         L$1094 
7996                          row_len_:
7996    53                        push        bx 
7997    51                        push        cx 
7998    56                        push        si 
7999    57                        push        di 
799A    89 C7                     mov         di,ax 
799C    89 D3                     mov         bx,dx 
799E    B1 0A                     mov         cl,0x0a 
79A0    89 C6                     mov         si,ax 
79A2    8E DA                     mov         ds,dx 
79A4    8C DA                     mov         dx,ds 
79A6                          L$903:
79A6    8A 04                     mov         al,byte ptr [si] 
79A8    3A C1                     cmp         al,cl 
79AA    74 09                     je          L$904 
79AC    46                        inc         si 
79AD    3C 00                     cmp         al,0x00 
79AF    75 F5                     jne         L$903 
79B1    2B F6                     sub         si,si 
79B3    2B D2                     sub         dx,dx 
79B5                          L$904:
79B5    89 F0                     mov         ax,si 
79B7    85 D2                     test        dx,dx 
79B9    75 04                     jne         L$905 
79BB    85 F6                     test        si,si 
79BD    74 05                     je          L$906 
79BF                          L$905:
79BF    29 F8                     sub         ax,di 
79C1    E9 C7 15                  jmp         L$1095 
79C4                          L$906:
79C4    8E C3                     mov         es,bx 
79C6    B9 FF FF                  mov         cx,0xffff 
79C9    33 C0                     xor         ax,ax 
79CB    F2 AE                     repne scasb 
79CD    F7 D1                     not         cx 
79CF    49                        dec         cx 
79D0    89 C8                     mov         ax,cx 
79D2    E9 B6 15                  jmp         L$1095 
79D5                          updatescroll_:
79D5    51                        push        cx 
79D6    56                        push        si 
79D7    57                        push        di 
79D8    C8 06 00 00               enter       0x0006,0x00 
79DC    89 C6                     mov         si,ax 
79DE    89 56 FC                  mov         word ptr -0x4[bp],dx 
79E1    89 5E FA                  mov         word ptr -0x6[bp],bx 
79E4    8E DA                     mov         ds,dx 
79E6    8B 4C 26                  mov         cx,word ptr 0x26[si] 
79E9    89 CB                     mov         bx,cx 
79EB    C1 E3 02                  shl         bx,0x02 
79EE    89 5E FE                  mov         word ptr -0x2[bp],bx 
79F1                          L$907:
79F1    49                        dec         cx 
79F2    83 6E FE 04               sub         word ptr -0x2[bp],0x0004 
79F6    83 F9 FF                  cmp         cx,0xffff 
79F9    0F 84 0C D1               je          L$600 
79FD    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
7A00    8B 5C 18                  mov         bx,word ptr 0x18[si] 
7A03    03 5E FE                  add         bx,word ptr -0x2[bp] 
7A06    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
7A09    C5 3F                     lds         di,dword ptr [bx] 
7A0B    8A 1D                     mov         bl,byte ptr [di] 
7A0D    80 E3 1F                  and         bl,0x1f 
7A10    80 FB 04                  cmp         bl,0x04 
7A13    75 DC                     jne         L$907 
7A15    8B 5D 24                  mov         bx,word ptr 0x24[di] 
7A18    3B 5E FA                  cmp         bx,word ptr -0x6[bp] 
7A1B    75 D4                     jne         L$907 
7A1D    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
7A20    89 CB                     mov         bx,cx 
7A22    89 F0                     mov         ax,si 
7A24    0E                        push        cs 
7A25    E8 00 00                  call        window_drawelement_ 
7A28    EB C7                     jmp         L$907 
7A2A                          draw_end_line_:
7A2A    51                        push        cx 
7A2B    56                        push        si 
7A2C    57                        push        di 
7A2D    C8 0A 00 00               enter       0x000a,0x00 
7A31    89 C7                     mov         di,ax 
7A33    89 D6                     mov         si,dx 
7A35    89 5E FE                  mov         word ptr -0x2[bp],bx 
7A38    E8 00 00                  call        row_len_ 
7A3B    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
7A41    89 46 FC                  mov         word ptr -0x4[bp],ax 
7A44    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
7A4A    36 8B 16 00 00            mov         dx,word ptr ss:_caret_screeny 
7A4F    50                        push        ax 
7A50    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
7A54    36 2B 1E 00 00            sub         bx,word ptr ss:_caret_screenx 
7A59    40                        inc         ax 
7A5A    4B                        dec         bx 
7A5B    9A 00 00 00 00            call        draw_rectangle_ 
7A60    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
7A64    74 36                     je          L$908 
7A66    C5 5E 0A                  lds         bx,dword ptr 0xa[bp] 
7A69    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7A6C    C1 E8 03                  shr         ax,0x03 
7A6F    25 01 00                  and         ax,0x0001 
7A72    50                        push        ax 
7A73    89 F1                     mov         cx,si 
7A75    FF 76 FC                  push        word ptr -0x4[bp] 
7A78    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7A7E    FF 76 FE                  push        word ptr -0x2[bp] 
7A81    8D 76 F6                  lea         si,-0xa[bp] 
7A84    50                        push        ax 
7A85    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
7A8B    36 8B 16 00 00            mov         dx,word ptr ss:_caret_screeny 
7A90    50                        push        ax 
7A91    36 A1 00 00               mov         ax,word ptr ss:_caret_screenx 
7A95    89 FB                     mov         bx,di 
7A97    40                        inc         ax 
7A98    0E                        push        cs 
7A99    E8 00 00                  call        cprint_text_ 
7A9C                          L$908:
7A9C    C9                        leave       
7A9D    5F                        pop         di 
7A9E    5E                        pop         si 
7A9F    59                        pop         cx 
7AA0    C2 04 00                  ret         0x0004 
7AA3                          scroll_to_cursor_:
7AA3    51                        push        cx 
7AA4    56                        push        si 
7AA5    57                        push        di 
7AA6    C8 04 00 00               enter       0x0004,0x00 
7AAA    89 C6                     mov         si,ax 
7AAC    89 56 FE                  mov         word ptr -0x2[bp],dx 
7AAF    89 5E FC                  mov         word ptr -0x4[bp],bx 
7AB2    89 DF                     mov         di,bx 
7AB4    8E DA                     mov         ds,dx 
7AB6    C1 E7 02                  shl         di,0x02 
7AB9    C5 44 18                  lds         ax,dword ptr 0x18[si] 
7ABC    01 C7                     add         di,ax 
7ABE    C5 1D                     lds         bx,dword ptr [di] 
7AC0    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
7AC3    30 C9                     xor         cl,cl 
7AC5    3B 47 18                  cmp         ax,word ptr 0x18[bx] 
7AC8    72 24                     jb          L$909 
7ACA    8E C2                     mov         es,dx 
7ACC    26 8B 7C 04               mov         di,word ptr es:0x4[si] 
7AD0    03 7F 04                  add         di,word ptr 0x4[bx] 
7AD3    03 7F 08                  add         di,word ptr 0x8[bx] 
7AD6    83 EF 08                  sub         di,0x0008 
7AD9    36 3B 3E 00 00            cmp         di,word ptr ss:_caret_screenx 
7ADE    77 13                     ja          L$910 
7AE0    8B 47 08                  mov         ax,word ptr 0x8[bx] 
7AE3    8B 7F 1C                  mov         di,word ptr 0x1c[bx] 
7AE6    C1 E8 03                  shr         ax,0x03 
7AE9    29 C7                     sub         di,ax 
7AEB    8D 45 01                  lea         ax,0x1[di] 
7AEE                          L$909:
7AEE    B1 01                     mov         cl,0x01 
7AF0    89 47 18                  mov         word ptr 0x18[bx],ax 
7AF3                          L$910:
7AF3    88 CD                     mov         ch,cl 
7AF5    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
7AF8    FE C5                     inc         ch 
7AFA    3B 47 1A                  cmp         ax,word ptr 0x1a[bx] 
7AFD    72 21                     jb          L$911 
7AFF    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
7B05    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
7B08    31 D2                     xor         dx,dx 
7B0A    47                        inc         di 
7B0B    47                        inc         di 
7B0C    F7 F7                     div         di 
7B0E    8B 7F 1A                  mov         di,word ptr 0x1a[bx] 
7B11    01 C7                     add         di,ax 
7B13    3B 7F 2A                  cmp         di,word ptr 0x2a[bx] 
7B16    77 0D                     ja          L$912 
7B18    8B 7F 2A                  mov         di,word ptr 0x2a[bx] 
7B1B    29 C7                     sub         di,ax 
7B1D    8D 45 01                  lea         ax,0x1[di] 
7B20                          L$911:
7B20    88 E9                     mov         cl,ch 
7B22    89 47 1A                  mov         word ptr 0x1a[bx],ax 
7B25                          L$912:
7B25    84 C9                     test        cl,cl 
7B27    74 17                     je          L$913 
7B29    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7B2C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
7B2F    89 F0                     mov         ax,si 
7B31    E8 00 00                  call        updatescroll_ 
7B34    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7B37    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
7B3A    89 F0                     mov         ax,si 
7B3C    0E                        push        cs 
7B3D    E8 00 00                  call        window_drawelement_ 
7B40                          L$913:
7B40    88 C8                     mov         al,cl 
7B42    E9 C4 CF                  jmp         L$600 
7B45                          render_new_rows_:
7B45    51                        push        cx 
7B46    56                        push        si 
7B47    57                        push        di 
7B48    C8 1A 00 00               enter       0x001a,0x00 
7B4C    89 C6                     mov         si,ax 
7B4E    8E DA                     mov         ds,dx 
7B50    89 5E FA                  mov         word ptr -0x6[bp],bx 
7B53    C1 E3 02                  shl         bx,0x02 
7B56    C4 44 18                  les         ax,dword ptr 0x18[si] 
7B59    01 C3                     add         bx,ax 
7B5B    31 D2                     xor         dx,dx 
7B5D    26 8B 3F                  mov         di,word ptr es:[bx] 
7B60    26 8B 47 02               mov         ax,word ptr es:0x2[bx] 
7B64    8B 4C 04                  mov         cx,word ptr 0x4[si] 
7B67    8E C0                     mov         es,ax 
7B69    89 46 FE                  mov         word ptr -0x2[bp],ax 
7B6C    26 8B 45 08               mov         ax,word ptr es:0x8[di] 
7B70    26 03 4D 04               add         cx,word ptr es:0x4[di] 
7B74    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7B7A    01 C8                     add         ax,cx 
7B7C    43                        inc         bx 
7B7D    43                        inc         bx 
7B7E    89 46 F4                  mov         word ptr -0xc[bp],ax 
7B81    26 8B 45 0A               mov         ax,word ptr es:0xa[di] 
7B85    F7 F3                     div         bx 
7B87    89 46 EE                  mov         word ptr -0x12[bp],ax 
7B8A    8B 5C 06                  mov         bx,word ptr 0x6[si] 
7B8D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7B93    26 03 5D 06               add         bx,word ptr es:0x6[di] 
7B97    01 C3                     add         bx,ax 
7B99    8C DA                     mov         dx,ds 
7B9B    83 C3 04                  add         bx,0x0004 
7B9E    89 F0                     mov         ax,si 
7BA0    89 5E F6                  mov         word ptr -0xa[bp],bx 
7BA3    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
7BA6    89 4E F2                  mov         word ptr -0xe[bp],cx 
7BA9    E8 00 00                  call        scroll_to_cursor_ 
7BAC    84 C0                     test        al,al 
7BAE    74 06                     je          L$914 
7BB0    B8 01 00                  mov         ax,0x0001 
7BB3    E9 53 CF                  jmp         L$600 
7BB6                          L$914:
7BB6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7BB9    41                        inc         cx 
7BBA    41                        inc         cx 
7BBB    8B 45 2A                  mov         ax,word ptr 0x2a[di] 
7BBE    89 4E F0                  mov         word ptr -0x10[bp],cx 
7BC1    89 46 EC                  mov         word ptr -0x14[bp],ax 
7BC4                          L$915:
7BC4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7BC7    8B 45 1A                  mov         ax,word ptr 0x1a[di] 
7BCA    03 46 EE                  add         ax,word ptr -0x12[bp] 
7BCD    3B 46 EC                  cmp         ax,word ptr -0x14[bp] 
7BD0    0F 86 89 F5               jbe         L$852 
7BD4    8B 5E EC                  mov         bx,word ptr -0x14[bp] 
7BD7    8B 4D 18                  mov         cx,word ptr 0x18[di] 
7BDA    8B 45 0C                  mov         ax,word ptr 0xc[di] 
7BDD    8B 55 0E                  mov         dx,word ptr 0xe[di] 
7BE0    E8 00 00                  call        get_str_pos_ 
7BE3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7BE6    89 46 FC                  mov         word ptr -0x4[bp],ax 
7BE9    89 D6                     mov         si,dx 
7BEB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7BF1    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
7BF4    40                        inc         ax 
7BF5    40                        inc         ax 
7BF6    2B 55 1A                  sub         dx,word ptr 0x1a[di] 
7BF9    0F AF C2                  imul        ax,dx 
7BFC    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
7BFF    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
7C05    01 C2                     add         dx,ax 
7C07    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_ABGCOLOR 
7C0D    8B 5D 08                  mov         bx,word ptr 0x8[di] 
7C10    50                        push        ax 
7C11    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
7C14    89 56 F8                  mov         word ptr -0x8[bp],dx 
7C17    9A 00 00 00 00            call        draw_rectangle_ 
7C1C    85 F6                     test        si,si 
7C1E    75 06                     jne         L$916 
7C20    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
7C24    74 3D                     je          L$917 
7C26                          L$916:
7C26    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
7C29    89 F2                     mov         dx,si 
7C2B    E8 00 00                  call        row_len_ 
7C2E    85 C0                     test        ax,ax 
7C30    74 31                     je          L$917 
7C32    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7C35    8B 55 02                  mov         dx,word ptr 0x2[di] 
7C38    C1 EA 03                  shr         dx,0x03 
7C3B    83 E2 01                  and         dx,0x0001 
7C3E    52                        push        dx 
7C3F    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7C42    50                        push        ax 
7C43    89 F1                     mov         cx,si 
7C45    FF 76 F4                  push        word ptr -0xc[bp] 
7C48    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7C4E    8D 76 E6                  lea         si,-0x1a[bp] 
7C51    50                        push        ax 
7C52    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_TEXTCOLOR 
7C58    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
7C5B    50                        push        ax 
7C5C    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
7C5F    0E                        push        cs 
7C60    E8 00 00                  call        cprint_text_ 
7C63                          L$917:
7C63    FF 46 EC                  inc         word ptr -0x14[bp] 
7C66    E9 5B FF                  jmp         L$915 
7C69                          L$918:
7C69    2D 2C 0C 0A 09 08 06 04 02 01 00                -,.........
7C74                          L$919:
7C74    A2 7E                                           DW	offset L$933
7C76    76 7F                                           DW	offset L$945
7C78    5D 81                                           DW	offset L$1663
7C7A    8C 7F                                           DW	offset L$946
7C7C    D3 7D                                           DW	offset L$924
7C7E    0B 7E                                           DW	offset L$926
7C80    4C 7F                                           DW	offset L$944
7C82    33 7E                                           DW	offset L$929
7C84    CC 7F                                           DW	offset L$948
7C86    09 80                                           DW	offset L$1662
7C88    8E 7D                                           DW	offset L$920
7C8A    00 7F                                           DW	offset L$940
7C8C                          edit_ml_textbox_:
7C8C    51                        push        cx 
7C8D    56                        push        si 
7C8E    57                        push        di 
7C8F    C8 20 00 00               enter       0x0020,0x00 
7C93    50                        push        ax 
7C94    52                        push        dx 
7C95    53                        push        bx 
7C96    89 DE                     mov         si,bx 
7C98    8E DA                     mov         ds,dx 
7C9A    89 C3                     mov         bx,ax 
7C9C    C1 E6 02                  shl         si,0x02 
7C9F    C5 47 18                  lds         ax,dword ptr 0x18[bx] 
7CA2    01 C6                     add         si,ax 
7CA4    31 C9                     xor         cx,cx 
7CA6    8B 1C                     mov         bx,word ptr [si] 
7CA8    8B 44 02                  mov         ax,word ptr 0x2[si] 
7CAB    89 5E FC                  mov         word ptr -0x4[bp],bx 
7CAE    89 46 FE                  mov         word ptr -0x2[bp],ax 
7CB1    8E D8                     mov         ds,ax 
7CB3    89 DE                     mov         si,bx 
7CB5    8B 7E FC                  mov         di,word ptr -0x4[bp] 
7CB8    8B 74 0E                  mov         si,word ptr 0xe[si] 
7CBB    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
7CBE    89 F2                     mov         dx,si 
7CC0    8B 5F 2A                  mov         bx,word ptr 0x2a[bx] 
7CC3    89 46 F2                  mov         word ptr -0xe[bp],ax 
7CC6    E8 00 00                  call        get_str_pos_ 
7CC9    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7CCC    89 C1                     mov         cx,ax 
7CCE    89 56 F4                  mov         word ptr -0xc[bp],dx 
7CD1    8B 5F 1C                  mov         bx,word ptr 0x1c[bx] 
7CD4    89 56 FA                  mov         word ptr -0x6[bp],dx 
7CD7    01 C3                     add         bx,ax 
7CD9    31 D2                     xor         dx,dx 
7CDB    89 5E F8                  mov         word ptr -0x8[bp],bx 
7CDE    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7CE4    8B 45 0A                  mov         ax,word ptr 0xa[di] 
7CE7    43                        inc         bx 
7CE8    43                        inc         bx 
7CE9    F7 F3                     div         bx 
7CEB    8B 7E DE                  mov         di,word ptr -0x22[bp] 
7CEE    8E 5E DC                  mov         ds,word ptr -0x24[bp] 
7CF1    89 5E E6                  mov         word ptr -0x1a[bp],bx 
7CF4    89 46 F0                  mov         word ptr -0x10[bp],ax 
7CF7    8B 45 04                  mov         ax,word ptr 0x4[di] 
7CFA    C5 7E FC                  lds         di,dword ptr -0x4[bp] 
7CFD    89 FB                     mov         bx,di 
7CFF    03 45 04                  add         ax,word ptr 0x4[di] 
7D02    8B 57 08                  mov         dx,word ptr 0x8[bx] 
7D05    01 C2                     add         dx,ax 
7D07    89 46 EA                  mov         word ptr -0x16[bp],ax 
7D0A    89 56 E8                  mov         word ptr -0x18[bp],dx 
7D0D    89 C8                     mov         ax,cx 
7D0F    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
7D12    E8 00 00                  call        row_len_ 
7D15    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
7D18    89 46 EC                  mov         word ptr -0x14[bp],ax 
7D1B    89 46 EE                  mov         word ptr -0x12[bp],ax 
7D1E    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
7D21    E8 00 00                  call        row_len_ 
7D24    89 46 E2                  mov         word ptr -0x1e[bp],ax 
7D27    9A 00 00 00 00            call        kbhit_ 
7D2C    85 C0                     test        ax,ax 
7D2E    0F 84 F5 F6               je          L$868 
7D32    31 C0                     xor         ax,ax 
7D34    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
7D37    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
7D3B    B8 01 00                  mov         ax,0x0001 
7D3E    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
7D41    E8 00 00                  call        draw_textbox_caret_ 
7D44    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
7D47    B9 01 00                  mov         cx,0x0001 
7D4A    E8 00 00                  call        scroll_to_cursor_ 
7D4D    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
7D50    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
7D53    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
7D56    E8 00 00                  call        mltext_draw_selection_ 
7D59    9A 00 00 00 00            call        getch_ 
7D5E    89 46 F6                  mov         word ptr -0xa[bp],ax 
7D61    85 C0                     test        ax,ax 
7D63    0F 85 0C 03               jne         L$955 
7D67    9A 00 00 00 00            call        getch_ 
7D6C    89 46 F6                  mov         word ptr -0xa[bp],ax 
7D6F    2D 47 00                  sub         ax,0x0047 
7D72    3D 2D 00                  cmp         ax,0x002d 
7D75    0F 87 29 01               ja          L$933 
7D79    B9 0C 00                  mov         cx,0x000c 
7D7C    BF 69 7C                  mov         di,offset L$918 
7D7F    0E                        push        cs 
7D80    07                        pop         es 
7D81    F2 AE                     repne scasb 
7D83    D1 E1                     shl         cx,0x01 
7D85    89 CF                     mov         di,cx 
7D87    2E 8B 85 74 7C            mov         ax,word ptr cs:L$919[di] 
7D8C    FF E0                     jmp         ax 
7D8E                          L$920:
7D8E    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7D91    83 7F 1C 00               cmp         word ptr 0x1c[bx],0x0000 
7D95    74 3C                     je          L$924 
7D97    31 C9                     xor         cx,cx 
7D99                          L$921:
7D99    FF 4E F8                  dec         word ptr -0x8[bp] 
7D9C    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7D9F    41                        inc         cx 
7DA0    FF 4F 1C                  dec         word ptr 0x1c[bx] 
7DA3    74 08                     je          L$922 
7DA5    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
7DA8    80 3F 20                  cmp         byte ptr [bx],0x20 
7DAB    75 EC                     jne         L$921 
7DAD                          L$922:
7DAD    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7DB0    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7DB3    C1 E8 03                  shr         ax,0x03 
7DB6    30 E4                     xor         ah,ah 
7DB8    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7DBB    24 01                     and         al,0x01 
7DBD    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7DC3    50                        push        ax 
7DC4    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
7DC7                          L$923:
7DC7    0E                        push        cs 
7DC8    E8 00 00                  call        string_width_ 
7DCB    36 29 06 00 00            sub         word ptr ss:_caret_screenx,ax 
7DD0    E9 CF 00                  jmp         L$933 
7DD3                          L$924:
7DD3    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7DD6    FF 4F 1C                  dec         word ptr 0x1c[bx] 
7DD9    83 7F 1C FF               cmp         word ptr 0x1c[bx],0xffff 
7DDD    75 0F                     jne         L$925 
7DDF    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
7DE2    85 C0                     test        ax,ax 
7DE4    0F 85 75 03               jne         L$962 
7DE8    89 47 1C                  mov         word ptr 0x1c[bx],ax 
7DEB    E9 B4 00                  jmp         L$933 
7DEE                          L$925:
7DEE    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7DF1    C1 E8 03                  shr         ax,0x03 
7DF4    30 E4                     xor         ah,ah 
7DF6    B9 01 00                  mov         cx,0x0001 
7DF9    24 01                     and         al,0x01 
7DFB    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7DFE    50                        push        ax 
7DFF    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
7E02    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7E08    48                        dec         ax 
7E09    EB BC                     jmp         L$923 
7E0B                          L$926:
7E0B    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E0E    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
7E11    3B 46 EE                  cmp         ax,word ptr -0x12[bp] 
7E14    0F 85 C0 00               jne         L$937 
7E18                          L$927:
7E18    C4 7E F8                  les         di,dword ptr -0x8[bp] 
7E1B    B9 FF FF                  mov         cx,0xffff 
7E1E    33 C0                     xor         ax,ax 
7E20    F2 AE                     repne scasb 
7E22    F7 D1                     not         cx 
7E24    49                        dec         cx 
7E25    85 C9                     test        cx,cx 
7E27    0F 84 77 00               je          L$933 
7E2B                          L$928:
7E2B    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E2E    C7 47 1C 00 00            mov         word ptr 0x1c[bx],0x0000 
7E33                          L$929:
7E33    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E36    8B 46 E6                  mov         ax,word ptr -0x1a[bp] 
7E39    FF 47 2A                  inc         word ptr 0x2a[bx] 
7E3C    36 01 06 00 00            add         word ptr ss:_caret_screeny,ax 
7E41                          L$930:
7E41    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E44    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
7E47    89 F2                     mov         dx,si 
7E49    31 C9                     xor         cx,cx 
7E4B    8B 5F 2A                  mov         bx,word ptr 0x2a[bx] 
7E4E    E8 00 00                  call        get_str_pos_ 
7E51    89 46 E4                  mov         word ptr -0x1c[bp],ax 
7E54    89 D7                     mov         di,dx 
7E56    85 D2                     test        dx,dx 
7E58    75 06                     jne         L$931 
7E5A    85 C0                     test        ax,ax 
7E5C    0F 84 FD 02               je          L$962 
7E60                          L$931:
7E60    E8 00 00                  call        row_len_ 
7E63    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E66    3B 47 1C                  cmp         ax,word ptr 0x1c[bx] 
7E69    73 03                     jae         L$932 
7E6B    89 47 1C                  mov         word ptr 0x1c[bx],ax 
7E6E                          L$932:
7E6E    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7E71    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7E74    8B 76 FC                  mov         si,word ptr -0x4[bp] 
7E77    C1 E8 03                  shr         ax,0x03 
7E7A    89 FA                     mov         dx,di 
7E7C    30 E4                     xor         ah,ah 
7E7E    8B 4F 1C                  mov         cx,word ptr 0x1c[bx] 
7E81    24 01                     and         al,0x01 
7E83    2B 4F 18                  sub         cx,word ptr 0x18[bx] 
7E86    50                        push        ax 
7E87    8B 46 E4                  mov         ax,word ptr -0x1c[bp] 
7E8A    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7E90    03 44 18                  add         ax,word ptr 0x18[si] 
7E93    0E                        push        cs 
7E94    E8 00 00                  call        string_width_ 
7E97    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
7E9A    42                        inc         dx 
7E9B    01 C2                     add         dx,ax 
7E9D    36 89 16 00 00            mov         word ptr ss:_caret_screenx,dx 
7EA2                          L$933:
7EA2    83 7E F6 0A               cmp         word ptr -0xa[bp],0x000a 
7EA6    75 10                     jne         L$934 
7EA8    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
7EAB    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
7EAE    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
7EB1    E8 00 00                  call        render_new_rows_ 
7EB4    85 C0                     test        ax,ax 
7EB6    74 1A                     je          L$936 
7EB8                          L$934:
7EB8    83 7E F6 0A               cmp         word ptr -0xa[bp],0x000a 
7EBC    0F 84 74 03               je          L$968 
7EC0                          L$935:
7EC0    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
7EC3    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
7EC6    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
7EC9    E8 00 00                  call        scroll_to_cursor_ 
7ECC    84 C0                     test        al,al 
7ECE    0F 85 62 03               jne         L$968 
7ED2                          L$936:
7ED2    B8 01 00                  mov         ax,0x0001 
7ED5    E9 5E 03                  jmp         L$969 
7ED8                          L$937:
7ED8    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7EDB    B9 01 00                  mov         cx,0x0001 
7EDE    C1 E8 03                  shr         ax,0x03 
7EE1    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7EE4    30 E4                     xor         ah,ah 
7EE6    FF 47 1C                  inc         word ptr 0x1c[bx] 
7EE9                          L$938:
7EE9    24 01                     and         al,0x01 
7EEB    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7EF1    50                        push        ax 
7EF2                          L$939:
7EF2    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
7EF5    0E                        push        cs 
7EF6    E8 00 00                  call        string_width_ 
7EF9    36 01 06 00 00            add         word ptr ss:_caret_screenx,ax 
7EFE    EB A2                     jmp         L$933 
7F00                          L$940:
7F00    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7F03    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
7F06    3B 46 EC                  cmp         ax,word ptr -0x14[bp] 
7F09    0F 84 0B FF               je          L$927 
7F0D    B1 20                     mov         cl,0x20 
7F0F    8B 76 F8                  mov         si,word ptr -0x8[bp] 
7F12    8E 5E F4                  mov         ds,word ptr -0xc[bp] 
7F15    8C DA                     mov         dx,ds 
7F17                          L$941:
7F17    8A 04                     mov         al,byte ptr [si] 
7F19    3A C1                     cmp         al,cl 
7F1B    74 09                     je          L$942 
7F1D    46                        inc         si 
7F1E    3C 00                     cmp         al,0x00 
7F20    75 F5                     jne         L$941 
7F22    2B F6                     sub         si,si 
7F24    2B D2                     sub         dx,dx 
7F26                          L$942:
7F26    85 D2                     test        dx,dx 
7F28    75 04                     jne         L$943 
7F2A    85 F6                     test        si,si 
7F2C    74 1E                     je          L$944 
7F2E                          L$943:
7F2E    8D 4C 01                  lea         cx,0x1[si] 
7F31    2B 4E F8                  sub         cx,word ptr -0x8[bp] 
7F34    3B 4E E2                  cmp         cx,word ptr -0x1e[bp] 
7F37    77 13                     ja          L$944 
7F39    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7F3C    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7F3F    C1 E8 03                  shr         ax,0x03 
7F42    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
7F45    30 E4                     xor         ah,ah 
7F47    01 4F 1C                  add         word ptr 0x1c[bx],cx 
7F4A    EB 9D                     jmp         L$938 
7F4C                          L$944:
7F4C    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7F4F    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
7F52    89 47 1C                  mov         word ptr 0x1c[bx],ax 
7F55    8B 47 02                  mov         ax,word ptr 0x2[bx] 
7F58    C1 E8 03                  shr         ax,0x03 
7F5B    25 01 00                  and         ax,0x0001 
7F5E    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7F61    50                        push        ax 
7F62    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
7F65    E8 00 00                  call        row_len_ 
7F68    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
7F6B    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
7F71    89 C1                     mov         cx,ax 
7F73    E9 7C FF                  jmp         L$939 
7F76                          L$945:
7F76    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
7F79    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
7F7C    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
7F7F    40                        inc         ax 
7F80    C7 47 1C 00 00            mov         word ptr 0x1c[bx],0x0000 
7F85    36 A3 00 00               mov         word ptr ss:_caret_screenx,ax 
7F89    E9 16 FF                  jmp         L$933 
7F8C                          L$946:
7F8C    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7F8F    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
7F92    85 C0                     test        ax,ax 
7F94    0F 84 0A FF               je          L$933 
7F98    3B 46 F0                  cmp         ax,word ptr -0x10[bp] 
7F9B    76 09                     jbe         L$947 
7F9D    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
7FA0    29 47 2A                  sub         word ptr 0x2a[bx],ax 
7FA3    E9 B7 01                  jmp         L$962 
7FA6                          L$947:
7FA6    C7 47 2A 00 00            mov         word ptr 0x2a[bx],0x0000 
7FAB    8E 5E DC                  mov         ds,word ptr -0x24[bp] 
7FAE    8B 5E DE                  mov         bx,word ptr -0x22[bp] 
7FB1    8B 57 06                  mov         dx,word ptr 0x6[bx] 
7FB4    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7FB7    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
7FBD    03 57 06                  add         dx,word ptr 0x6[bx] 
7FC0    01 D0                     add         ax,dx 
7FC2    05 04 00                  add         ax,0x0004 
7FC5    36 A3 00 00               mov         word ptr ss:_caret_screeny,ax 
7FC9    E9 91 01                  jmp         L$962 
7FCC                          L$948:
7FCC    8B 7E F0                  mov         di,word ptr -0x10[bp] 
7FCF    4F                        dec         di 
7FD0                          L$949:
7FD0    4F                        dec         di 
7FD1    83 FF FF                  cmp         di,0xffff 
7FD4    0F 84 5B FE               je          L$929 
7FD8    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7FDB    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
7FDE    89 F2                     mov         dx,si 
7FE0    8B 5F 2A                  mov         bx,word ptr 0x2a[bx] 
7FE3    31 C9                     xor         cx,cx 
7FE5    43                        inc         bx 
7FE6    43                        inc         bx 
7FE7    E8 00 00                  call        get_str_pos_ 
7FEA    85 D2                     test        dx,dx 
7FEC    75 06                     jne         L$950 
7FEE    85 C0                     test        ax,ax 
7FF0    0F 84 3F FE               je          L$929 
7FF4                          L$950:
7FF4    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
7FF7    FF 47 2A                  inc         word ptr 0x2a[bx] 
7FFA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
8000    40                        inc         ax 
8001    40                        inc         ax 
8002    36 01 06 00 00            add         word ptr ss:_caret_screeny,ax 
8007    EB C7                     jmp         L$949 
8009    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
800C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
800F    E8 00 00                  call        text_is_selected_ 
8012    85 C0                     test        ax,ax 
8014    74 19                     je          L$953 
8016                          L$951:
8016    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
8019    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
801C    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
801F    E8 00 00                  call        cut_text_ 
8022                          L$952:
8022    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
8025    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
8028    0E                        push        cs 
8029    E8 00 00                  call        window_drawelement_ 
802C    E9 FD F3                  jmp         L$869 
802F                          L$953:
802F    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
8032    80 3F 00                  cmp         byte ptr [bx],0x00 
8035    0F 84 69 FE               je          L$933 
8039                          L$954:
8039    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
803C    89 DF                     mov         di,bx 
803E    8C DA                     mov         dx,ds 
8040    0F B6 07                  movzx       ax,byte ptr [bx] 
8043    1E                        push        ds 
8044    07                        pop         es 
8045    89 46 F6                  mov         word ptr -0xa[bp],ax 
8048    B9 FF FF                  mov         cx,0xffff 
804B    33 C0                     xor         ax,ax 
804D    F2 AE                     repne scasb 
804F    F7 D1                     not         cx 
8051    49                        dec         cx 
8052    43                        inc         bx 
8053    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
8056    51                        push        cx 
8057    8C D9                     mov         cx,ds 
8059    9A 00 00 00 00            call        memmove_ 
805E    FF 76 FE                  push        word ptr -0x2[bp] 
8061    8B 5E E8                  mov         bx,word ptr -0x18[bp] 
8064    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
8067    FF 76 FC                  push        word ptr -0x4[bp] 
806A    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
806D    E8 00 00                  call        draw_end_line_ 
8070    E9 2F FE                  jmp         L$933 
8073                          L$955:
8073    3D 0D 00                  cmp         ax,0x000d 
8076    72 1A                     jb          L$956 
8078    0F 86 26 01               jbe         L$965 
807C    3D 1B 00                  cmp         ax,0x001b 
807F    74 20                     je          L$957 
8081    3D 18 00                  cmp         ax,0x0018 
8084    0F 84 EE 00               je          L$963 
8088    3D 16 00                  cmp         ax,0x0016 
808B    0F 84 FB 00               je          L$964 
808F    E9 15 01                  jmp         L$966 
8092                          L$956:
8092    3D 08 00                  cmp         ax,0x0008 
8095    74 16                     je          L$958 
8097    3D 03 00                  cmp         ax,0x0003 
809A    0F 84 D8 00               je          L$963 
809E    E9 06 01                  jmp         L$966 
80A1                          L$957:
80A1    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
80A4    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
80A7    E8 00 00                  call        deactivate_element_ 
80AA    E9 F5 FD                  jmp         L$933 
80AD                          L$958:
80AD    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
80B0    89 F8                     mov         ax,di 
80B2    E8 00 00                  call        text_is_selected_ 
80B5    85 C0                     test        ax,ax 
80B7    0F 85 5B FF               jne         L$951 
80BB    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
80BE    3B 76 F4                  cmp         si,word ptr -0xc[bp] 
80C1    75 07                     jne         L$959 
80C3    3B 5E F2                  cmp         bx,word ptr -0xe[bp] 
80C6    0F 84 6F 01               je          L$970 
80CA                          L$959:
80CA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
80CD    89 FB                     mov         bx,di 
80CF    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
80D2    85 C0                     test        ax,ax 
80D4    74 47                     je          L$961 
80D6    89 C2                     mov         dx,ax 
80D8    4A                        dec         dx 
80D9    89 57 1C                  mov         word ptr 0x1c[bx],dx 
80DC    FF 4E F8                  dec         word ptr -0x8[bp] 
80DF    3B 47 18                  cmp         ax,word ptr 0x18[bx] 
80E2    75 13                     jne         L$960 
80E4    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
80E7    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
80EA    FF 4F 18                  dec         word ptr 0x18[bx] 
80ED    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
80F0    0E                        push        cs 
80F1    E8 00 00                  call        window_drawelement_ 
80F4    E9 42 FF                  jmp         L$954 
80F7                          L$960:
80F7    8B 47 02                  mov         ax,word ptr 0x2[bx] 
80FA    C1 E8 03                  shr         ax,0x03 
80FD    B9 01 00                  mov         cx,0x0001 
8100    30 E4                     xor         ah,ah 
8102    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
8105    24 01                     and         al,0x01 
8107    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
810D    50                        push        ax 
810E    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
8111    0E                        push        cs 
8112    E8 00 00                  call        string_width_ 
8115    36 29 06 00 00            sub         word ptr ss:_caret_screenx,ax 
811A    E9 1C FF                  jmp         L$954 
811D                          L$961:
811D    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
8120    89 F2                     mov         dx,si 
8122    8B 5F 2A                  mov         bx,word ptr 0x2a[bx] 
8125    31 C9                     xor         cx,cx 
8127    4B                        dec         bx 
8128    E8 00 00                  call        get_str_pos_ 
812B    E8 00 00                  call        row_len_ 
812E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
8131    89 FB                     mov         bx,di 
8133    8B 7E F8                  mov         di,word ptr -0x8[bp] 
8136    89 47 1C                  mov         word ptr 0x1c[bx],ax 
8139    8E 46 F4                  mov         es,word ptr -0xc[bp] 
813C    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
813F    B9 FF FF                  mov         cx,0xffff 
8142    33 C0                     xor         ax,ax 
8144    F2 AE                     repne scasb 
8146    F7 D1                     not         cx 
8148    49                        dec         cx 
8149    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
814C    41                        inc         cx 
814D    8C C2                     mov         dx,es 
814F    51                        push        cx 
8150    48                        dec         ax 
8151    8C C1                     mov         cx,es 
8153    C7 46 F6 0A 00            mov         word ptr -0xa[bp],0x000a 
8158    9A 00 00 00 00            call        memmove_ 
815D                          L$962:
815D    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
8160    83 7F 2A 00               cmp         word ptr 0x2a[bx],0x0000 
8164    0F 84 D9 FC               je          L$930 
8168    8B 46 E6                  mov         ax,word ptr -0x1a[bp] 
816B    FF 4F 2A                  dec         word ptr 0x2a[bx] 
816E    36 29 06 00 00            sub         word ptr ss:_caret_screeny,ax 
8173    E9 CB FC                  jmp         L$930 
8176                          L$963:
8176    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
8179    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
817C    E8 00 00                  call        copy_text_ 
817F    83 7E F6 03               cmp         word ptr -0xa[bp],0x0003 
8183    0F 84 1B FD               je          L$933 
8187    E9 8C FE                  jmp         L$951 
818A                          L$964:
818A    36 83 3E 00 00 00         cmp         word ptr ss:_clipboard,0x0000 
8190    0F 85 0E FD               jne         L$933 
8194    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8197    89 F8                     mov         ax,di 
8199    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
819C    E8 00 00                  call        paste_text_ 
819F    E9 80 FE                  jmp         L$952 
81A2                          L$965:
81A2    C7 46 F6 0A 00            mov         word ptr -0xa[bp],0x000a 
81A7                          L$966:
81A7    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
81AA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
81AD    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
81B0    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
81B3    42                        inc         dx 
81B4    03 47 20                  add         ax,word ptr 0x20[bx] 
81B7    3B 76 FA                  cmp         si,word ptr -0x6[bp] 
81BA    75 06                     jne         L$967 
81BC    39 C2                     cmp         dx,ax 
81BE    0F 84 E0 FC               je          L$933 
81C2                          L$967:
81C2    C4 7E F8                  les         di,dword ptr -0x8[bp] 
81C5    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
81C8    B9 FF FF                  mov         cx,0xffff 
81CB    33 C0                     xor         ax,ax 
81CD    F2 AE                     repne scasb 
81CF    F7 D1                     not         cx 
81D1    49                        dec         cx 
81D2    51                        push        cx 
81D3    89 D0                     mov         ax,dx 
81D5    8C C1                     mov         cx,es 
81D7    8C C2                     mov         dx,es 
81D9    9A 00 00 00 00            call        memmove_ 
81DE    8A 46 F6                  mov         al,byte ptr -0xa[bp] 
81E1    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
81E4    FF 76 FE                  push        word ptr -0x2[bp] 
81E7    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
81EA    FF 76 FC                  push        word ptr -0x4[bp] 
81ED    88 07                     mov         byte ptr [bx],al 
81EF    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
81F2    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
81F5    FF 47 1C                  inc         word ptr 0x1c[bx] 
81F8    8B 5E E8                  mov         bx,word ptr -0x18[bp] 
81FB    E8 00 00                  call        draw_end_line_ 
81FE    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
8201    8B 47 02                  mov         ax,word ptr 0x2[bx] 
8204    C1 E8 03                  shr         ax,0x03 
8207    B9 01 00                  mov         cx,0x0001 
820A    30 E4                     xor         ah,ah 
820C    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
820F    24 01                     and         al,0x01 
8211    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
8217    50                        push        ax 
8218    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
821B    0E                        push        cs 
821C    E8 00 00                  call        string_width_ 
821F    36 01 06 00 00            add         word ptr ss:_caret_screenx,ax 
8224    83 7E F6 0A               cmp         word ptr -0xa[bp],0x000a 
8228    0F 84 FF FB               je          L$928 
822C    C7 46 F6 00 00            mov         word ptr -0xa[bp],0x0000 
8231    E9 8C FC                  jmp         L$935 
8234                          L$968:
8234    31 C0                     xor         ax,ax 
8236                          L$969:
8236    89 46 E0                  mov         word ptr -0x20[bp],ax 
8239                          L$970:
8239    36 F6 06 00 00 02         test        byte ptr ss:_keyboard_status,0x02 
823F    75 18                     jne         L$971 
8241    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
8244    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
8247    89 47 2C                  mov         word ptr 0x2c[bx],ax 
824A    89 47 30                  mov         word ptr 0x30[bx],ax 
824D    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
8250    89 47 2E                  mov         word ptr 0x2e[bx],ax 
8253    89 47 32                  mov         word ptr 0x32[bx],ax 
8256    E9 C8 F1                  jmp         L$867 
8259                          L$971:
8259    83 7E F6 00               cmp         word ptr -0xa[bp],0x0000 
825D    0F 84 C0 F1               je          L$867 
8261    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
8264    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
8267    89 47 30                  mov         word ptr 0x30[bx],ax 
826A    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
826D    89 47 32                  mov         word ptr 0x32[bx],ax 
8270    83 7E E0 00               cmp         word ptr -0x20[bp],0x0000 
8274    0F 84 A9 F1               je          L$867 
8278    8B 5E DA                  mov         bx,word ptr -0x26[bp] 
827B    8B 46 DE                  mov         ax,word ptr -0x22[bp] 
827E    8B 56 DC                  mov         dx,word ptr -0x24[bp] 
8281    31 C9                     xor         cx,cx 
8283    E8 00 00                  call        mltext_draw_selection_ 
8286    E9 98 F1                  jmp         L$867 
8289                          find_executable_2_:
8289    53                        push        bx 
828A    51                        push        cx 
828B    56                        push        si 
828C    57                        push        di 
828D    C8 2C 00 00               enter       0x002c,0x00 
8291    89 C1                     mov         cx,ax 
8293    89 D6                     mov         si,dx 
8295    8C D0                     mov         ax,ss 
8297    85 C0                     test        ax,ax 
8299    75 0E                     jne         L$973 
829B    B8 AB 01                  mov         ax,offset DGROUP:L$1932 
829E    85 C0                     test        ax,ax 
82A0    75 07                     jne         L$973 
82A2                          L$972:
82A2    31 C0                     xor         ax,ax 
82A4    31 D2                     xor         dx,dx 
82A6    E9 E1 0C                  jmp         L$1094 
82A9                          L$973:
82A9    8D 56 D4                  lea         dx,-0x2c[bp] 
82AC    16                        push        ss 
82AD    89 C8                     mov         ax,cx 
82AF    31 DB                     xor         bx,bx 
82B1    52                        push        dx 
82B2    89 F2                     mov         dx,si 
82B4    9A 00 00 00 00            call        _dos_findfirst_ 
82B9    85 C0                     test        ax,ax 
82BB    75 1A                     jne         L$974 
82BD    56                        push        si 
82BE    51                        push        cx 
82BF    16                        push        ss 
82C0    68 31 01                  push        offset DGROUP:L$1758 
82C3    16                        push        ss 
82C4    68 AB 01                  push        offset DGROUP:L$1932 
82C7    8C D2                     mov         dx,ss 
82C9    9A 00 00 00 00            call        sprintf_ 
82CE    B8 AB 01                  mov         ax,offset DGROUP:L$1932 
82D1    83 C4 0C                  add         sp,0x000c 
82D4    E9 B3 0C                  jmp         L$1094 
82D7                          L$974:
82D7    BF 01 00                  mov         di,0x0001 
82DA                          L$975:
82DA    36 A1 00 00               mov         ax,word ptr ss:_path 
82DE    36 8B 16 02 00            mov         dx,word ptr ss:_path+0x2 
82E3    89 FB                     mov         bx,di 
82E5    E8 00 00                  call        get_paths_ 
82E8    89 C3                     mov         bx,ax 
82EA    85 D2                     test        dx,dx 
82EC    75 04                     jne         L$976 
82EE    85 C0                     test        ax,ax 
82F0    74 B0                     je          L$972 
82F2                          L$976:
82F2    56                        push        si 
82F3    51                        push        cx 
82F4    52                        push        dx 
82F5    50                        push        ax 
82F6    16                        push        ss 
82F7    68 91 01                  push        offset DGROUP:L$1765 
82FA    16                        push        ss 
82FB    68 AB 01                  push        offset DGROUP:L$1932 
82FE    9A 00 00 00 00            call        sprintf_ 
8303    83 C4 10                  add         sp,0x0010 
8306    89 D8                     mov         ax,bx 
8308    9A 00 00 00 00            call        free_ 
830D    8D 56 D4                  lea         dx,-0x2c[bp] 
8310    B8 AB 01                  mov         ax,offset DGROUP:L$1932 
8313    16                        push        ss 
8314    31 DB                     xor         bx,bx 
8316    52                        push        dx 
8317    8C D2                     mov         dx,ss 
8319    9A 00 00 00 00            call        _dos_findfirst_ 
831E    85 C0                     test        ax,ax 
8320    75 08                     jne         L$977 
8322    B8 AB 01                  mov         ax,offset DGROUP:L$1932 
8325    8C D2                     mov         dx,ss 
8327    E9 60 0C                  jmp         L$1094 
832A                          L$977:
832A    47                        inc         di 
832B    EB AD                     jmp         L$975 

Routine Size: 3032 bytes,    Routine Base: main_TEXT + 7755

832D                          find_executable_:
832D    51                        push        cx 
832E    56                        push        si 
832F    57                        push        di 
8330    C8 0E 00 00               enter       0x000e,0x00 
8334    50                        push        ax 
8335    52                        push        dx 
8336    85 DB                     test        bx,bx 
8338    74 14                     je          L$979 
833A    E8 00 00                  call        find_executable_2_ 
833D    85 D2                     test        dx,dx 
833F    75 04                     jne         L$978 
8341    85 C0                     test        ax,ax 
8343    74 09                     je          L$979 
8345                          L$978:
8345    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
8348    8B 56 EE                  mov         dx,word ptr -0x12[bp] 
834B    E9 EC 00                  jmp         L$987 
834E                          L$979:
834E    B1 2E                     mov         cl,0x2e 
8350    8B 76 F0                  mov         si,word ptr -0x10[bp] 
8353    8E 5E EE                  mov         ds,word ptr -0x12[bp] 
8356    8C DA                     mov         dx,ds 
8358                          L$980:
8358    8A 04                     mov         al,byte ptr [si] 
835A    3A C1                     cmp         al,cl 
835C    74 09                     je          L$981 
835E    46                        inc         si 
835F    3C 00                     cmp         al,0x00 
8361    75 F5                     jne         L$980 
8363    2B F6                     sub         si,si 
8365    2B D2                     sub         dx,dx 
8367                          L$981:
8367    85 D2                     test        dx,dx 
8369    0F 85 C8 00               jne         L$986 
836D    85 F6                     test        si,si 
836F    0F 85 C2 00               jne         L$986 
8373    8B 7E F0                  mov         di,word ptr -0x10[bp] 
8376    1E                        push        ds 
8377    07                        pop         es 
8378    B9 FF FF                  mov         cx,0xffff 
837B    33 C0                     xor         ax,ax 
837D    F2 AE                     repne scasb 
837F    F7 D1                     not         cx 
8381    49                        dec         cx 
8382    83 F9 08                  cmp         cx,0x0008 
8385    76 07                     jbe         L$982 
8387    31 C0                     xor         ax,ax 
8389    31 D2                     xor         dx,dx 
838B    E9 60 CB                  jmp         L$616 
838E                          L$982:
838E    16                        push        ss 
838F    68 00 00                  push        offset _comsuf 
8392    1E                        push        ds 
8393    FF 76 F0                  push        word ptr -0x10[bp] 
8396    16                        push        ss 
8397    68 97 01                  push        offset DGROUP:L$1766 
839A    16                        push        ss 
839B    8D 56 F2                  lea         dx,-0xe[bp] 
839E    52                        push        dx 
839F    9A 00 00 00 00            call        sprintf_ 
83A4    8D 46 F2                  lea         ax,-0xe[bp] 
83A7    83 C4 10                  add         sp,0x0010 
83AA    8C D2                     mov         dx,ss 
83AC    E8 00 00                  call        find_executable_2_ 
83AF    85 D2                     test        dx,dx 
83B1    75 04                     jne         L$983 
83B3    85 C0                     test        ax,ax 
83B5    74 08                     je          L$985 
83B7                          L$983:
83B7    8D 46 F2                  lea         ax,-0xe[bp] 
83BA                          L$984:
83BA    8C D2                     mov         dx,ss 
83BC    E9 7B 00                  jmp         L$987 
83BF                          L$985:
83BF    16                        push        ss 
83C0    68 00 00                  push        offset _exesuf 
83C3    FF 76 EE                  push        word ptr -0x12[bp] 
83C6    FF 76 F0                  push        word ptr -0x10[bp] 
83C9    16                        push        ss 
83CA    68 97 01                  push        offset DGROUP:L$1766 
83CD    16                        push        ss 
83CE    8D 56 F2                  lea         dx,-0xe[bp] 
83D1    52                        push        dx 
83D2    9A 00 00 00 00            call        sprintf_ 
83D7    8D 46 F2                  lea         ax,-0xe[bp] 
83DA    83 C4 10                  add         sp,0x0010 
83DD    8C D2                     mov         dx,ss 
83DF    E8 00 00                  call        find_executable_2_ 
83E2    85 D2                     test        dx,dx 
83E4    75 D1                     jne         L$983 
83E6    85 C0                     test        ax,ax 
83E8    75 CD                     jne         L$983 
83EA    16                        push        ss 
83EB    68 00 00                  push        offset _appsuf 
83EE    FF 76 EE                  push        word ptr -0x12[bp] 
83F1    FF 76 F0                  push        word ptr -0x10[bp] 
83F4    16                        push        ss 
83F5    68 97 01                  push        offset DGROUP:L$1766 
83F8    16                        push        ss 
83F9    8D 56 F2                  lea         dx,-0xe[bp] 
83FC    52                        push        dx 
83FD    9A 00 00 00 00            call        sprintf_ 
8402    8D 46 F2                  lea         ax,-0xe[bp] 
8405    83 C4 10                  add         sp,0x0010 
8408    8C D2                     mov         dx,ss 
840A    E8 00 00                  call        find_executable_2_ 
840D    85 D2                     test        dx,dx 
840F    75 A6                     jne         L$983 
8411    85 C0                     test        ax,ax 
8413    75 A2                     jne         L$983 
8415    16                        push        ss 
8416    68 00 00                  push        offset _batsuf 
8419    FF 76 EE                  push        word ptr -0x12[bp] 
841C    FF 76 F0                  push        word ptr -0x10[bp] 
841F    16                        push        ss 
8420    68 97 01                  push        offset DGROUP:L$1766 
8423    16                        push        ss 
8424    8D 56 F2                  lea         dx,-0xe[bp] 
8427    52                        push        dx 
8428    9A 00 00 00 00            call        sprintf_ 
842D    8D 46 F2                  lea         ax,-0xe[bp] 
8430    83 C4 10                  add         sp,0x0010 
8433    EB 85                     jmp         L$984 
8435                          L$986:
8435    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
8438    8C DA                     mov         dx,ds 
843A                          L$987:
843A    E8 00 00                  call        find_executable_2_ 
843D    E9 AE CA                  jmp         L$616 
8440                          run_pressakey_:
8440    16                        push        ss 
8441    68 9C 01                  push        offset DGROUP:L$1767 
8444    9A 00 00 00 00            call        printf_ 
8449    83 C4 04                  add         sp,0x0004 
844C    9A 00 00 00 00            call        getch_ 
8451    C3                        ret         

Routine Size: 293 bytes,    Routine Base: main_TEXT + 832D

8452                          chdrive_:
8452    53                        push        bx 
8453    51                        push        cx 
8454    52                        push        dx 
8455    56                        push        si 
8456    C8 02 00 00               enter       0x0002,0x00 
845A    89 C6                     mov         si,ax 
845C    85 C0                     test        ax,ax 
845E    74 2C                     je          L$988 
8460    83 E6 1F                  and         si,0x001f 
8463    36 3B 36 D8 02            cmp         si,word ptr ss:L$1917 
8468    74 43                     je          L$990 
846A    8D 5E FE                  lea         bx,-0x2[bp] 
846D    8C D1                     mov         cx,ss 
846F    89 F0                     mov         ax,si 
8471    9A 00 00 00 00            call        _dos_setdrive_ 
8476    8C D2                     mov         dx,ss 
8478    8D 46 FE                  lea         ax,-0x2[bp] 
847B    9A 00 00 00 00            call        _dos_getdrive_ 
8480    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
8483    39 C6                     cmp         si,ax 
8485    74 22                     je          L$989 
8487    B8 01 00                  mov         ax,0x0001 
848A    EB 23                     jmp         L$991 
848C                          L$988:
848C    36 A1 D8 02               mov         ax,word ptr ss:L$1917 
8490    36 3B 06 00 00            cmp         ax,word ptr ss:_cwdrive 
8495    74 16                     je          L$990 
8497    8D 5E FE                  lea         bx,-0x2[bp] 
849A    36 A1 00 00               mov         ax,word ptr ss:_cwdrive 
849E    8C D1                     mov         cx,ss 
84A0    9A 00 00 00 00            call        _dos_setdrive_ 
84A5    36 A1 00 00               mov         ax,word ptr ss:_cwdrive 
84A9                          L$989:
84A9    36 A3 D8 02               mov         word ptr ss:L$1917,ax 
84AD                          L$990:
84AD    31 C0                     xor         ax,ax 
84AF                          L$991:
84AF    C9                        leave       
84B0    E9 EF A6                  jmp         L$402 

Routine Size: 97 bytes,    Routine Base: main_TEXT + 8452

84B3                          split_args_:
84B3    56                        push        si 
84B4    57                        push        di 
84B5    C8 0E 00 00               enter       0x000e,0x00 
84B9    8B 76 0A                  mov         si,word ptr 0xa[bp] 
84BC    89 46 FC                  mov         word ptr -0x4[bp],ax 
84BF    89 56 FE                  mov         word ptr -0x2[bp],dx 
84C2    89 5E F2                  mov         word ptr -0xe[bp],bx 
84C5    89 4E FA                  mov         word ptr -0x6[bp],cx 
84C8    8E DA                     mov         ds,dx 
84CA    89 C3                     mov         bx,ax 
84CC    FF 07                     inc         word ptr [bx] 
84CE    BA 04 00                  mov         dx,0x0004 
84D1    8B 07                     mov         ax,word ptr [bx] 
84D3    9A 00 00 00 00            call        calloc_ 
84D8    89 C3                     mov         bx,ax 
84DA    89 56 F8                  mov         word ptr -0x8[bp],dx 
84DD    89 46 F4                  mov         word ptr -0xc[bp],ax 
84E0    89 56 F6                  mov         word ptr -0xa[bp],dx 
84E3    85 D2                     test        dx,dx 
84E5    75 10                     jne         L$993 
84E7    85 C0                     test        ax,ax 
84E9    75 0C                     jne         L$993 
84EB                          L$992:
84EB    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
84EE    31 C0                     xor         ax,ax 
84F0    31 D2                     xor         dx,dx 
84F2    FF 0F                     dec         word ptr [bx] 
84F4    E9 29 14                  jmp         L$1172 
84F7                          L$993:
84F7    8E 46 0C                  mov         es,word ptr 0xc[bp] 
84FA    89 F7                     mov         di,si 
84FC    B9 FF FF                  mov         cx,0xffff 
84FF    33 C0                     xor         ax,ax 
8501    F2 AE                     repne scasb 
8503    F7 D1                     not         cx 
8505    49                        dec         cx 
8506    89 C8                     mov         ax,cx 
8508    BA 01 00                  mov         dx,0x0001 
850B    40                        inc         ax 
850C    9A 00 00 00 00            call        calloc_ 
8511    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
8514    89 07                     mov         word ptr [bx],ax 
8516    89 57 02                  mov         word ptr 0x2[bx],dx 
8519    8B 47 02                  mov         ax,word ptr 0x2[bx] 
851C    8B 17                     mov         dx,word ptr [bx] 
851E    85 C0                     test        ax,ax 
8520    75 04                     jne         L$994 
8522    85 D2                     test        dx,dx 
8524    74 C5                     je          L$992 
8526                          L$994:
8526    8E 5E 0C                  mov         ds,word ptr 0xc[bp] 
8529    89 D7                     mov         di,dx 
852B    8E C0                     mov         es,ax 
852D    57                        push        di 
852E                          L$995:
852E    AC                        lodsb       
852F    AA                        stosb       
8530    3C 00                     cmp         al,0x00 
8532    75 FA                     jne         L$995 
8534    5F                        pop         di 
8535    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
8539    75 0E                     jne         L$996 
853B    83 7E F2 00               cmp         word ptr -0xe[bp],0x0000 
853F    75 08                     jne         L$996 
8541    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
8544    89 D8                     mov         ax,bx 
8546    E9 D7 13                  jmp         L$1172 
8549                          L$996:
8549    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
854C    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
854F    8A 07                     mov         al,byte ptr [bx] 
8551    84 C0                     test        al,al 
8553    74 09                     je          L$997 
8555    3C 20                     cmp         al,0x20 
8557    77 05                     ja          L$997 
8559    FF 46 F2                  inc         word ptr -0xe[bp] 
855C    EB EB                     jmp         L$996 
855E                          L$997:
855E    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
8561    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
8564    80 3F 00                  cmp         byte ptr [bx],0x00 
8567    0F 84 E4 00               je          L$1006 
856B    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
856E    8B 1F                     mov         bx,word ptr [bx] 
8570    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
8573    43                        inc         bx 
8574    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
8577    C1 E3 02                  shl         bx,0x02 
857A    9A 00 00 00 00            call        realloc_ 
857F    85 D2                     test        dx,dx 
8581    75 04                     jne         L$998 
8583    85 C0                     test        ax,ax 
8585    74 58                     je          L$1001 
8587                          L$998:
8587    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
858A    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
858D    89 46 F4                  mov         word ptr -0xc[bp],ax 
8590    89 56 F6                  mov         word ptr -0xa[bp],dx 
8593    31 C9                     xor         cx,cx 
8595                          L$999:
8595    8A 07                     mov         al,byte ptr [bx] 
8597    84 C0                     test        al,al 
8599    74 08                     je          L$1000 
859B    3C 20                     cmp         al,0x20 
859D    74 04                     je          L$1000 
859F    43                        inc         bx 
85A0    41                        inc         cx 
85A1    EB F2                     jmp         L$999 
85A3                          L$1000:
85A3    89 C8                     mov         ax,cx 
85A5    BA 01 00                  mov         dx,0x0001 
85A8    40                        inc         ax 
85A9    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
85AC    9A 00 00 00 00            call        calloc_ 
85B1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
85B4    8B 1F                     mov         bx,word ptr [bx] 
85B6    C1 E3 02                  shl         bx,0x02 
85B9    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
85BC    03 5E F4                  add         bx,word ptr -0xc[bp] 
85BF    89 07                     mov         word ptr [bx],ax 
85C1    89 57 02                  mov         word ptr 0x2[bx],dx 
85C4    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
85C7    8B 1F                     mov         bx,word ptr [bx] 
85C9    C1 E3 02                  shl         bx,0x02 
85CC    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
85CF    03 5E F4                  add         bx,word ptr -0xc[bp] 
85D2    8B 57 02                  mov         dx,word ptr 0x2[bx] 
85D5    8B 07                     mov         ax,word ptr [bx] 
85D7    85 D2                     test        dx,dx 
85D9    75 39                     jne         L$1003 
85DB    85 C0                     test        ax,ax 
85DD    75 35                     jne         L$1003 
85DF                          L$1001:
85DF    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
85E2    FF 0F                     dec         word ptr [bx] 
85E4    8B 07                     mov         ax,word ptr [bx] 
85E6    3D FF FF                  cmp         ax,0xffff 
85E9    74 17                     je          L$1002 
85EB    89 C3                     mov         bx,ax 
85ED    C1 E3 02                  shl         bx,0x02 
85F0    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
85F3    03 5E F4                  add         bx,word ptr -0xc[bp] 
85F6    8B 07                     mov         ax,word ptr [bx] 
85F8    8B 57 02                  mov         dx,word ptr 0x2[bx] 
85FB    9A 00 00 00 00            call        free_ 
8600    EB DD                     jmp         L$1001 
8602                          L$1002:
8602    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
8605    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
8608    9A 00 00 00 00            call        free_ 
860D    31 C0                     xor         ax,ax 
860F    31 D2                     xor         dx,dx 
8611    E9 0C 13                  jmp         L$1172 
8614                          L$1003:
8614    8B 76 F2                  mov         si,word ptr -0xe[bp] 
8617    8E 46 FA                  mov         es,word ptr -0x6[bp] 
861A    89 C8                     mov         ax,cx 
861C    01 CE                     add         si,cx 
861E                          L$1004:
861E    05 FF FF                  add         ax,0xffff 
8621    83 C6 FF                  add         si,0xffff 
8624    3D FF FF                  cmp         ax,0xffff 
8627    74 1B                     je          L$1005 
8629    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
862C    8B 1F                     mov         bx,word ptr [bx] 
862E    C1 E3 02                  shl         bx,0x02 
8631    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
8634    03 5E F4                  add         bx,word ptr -0xc[bp] 
8637    C5 3F                     lds         di,dword ptr [bx] 
8639    89 FB                     mov         bx,di 
863B    01 C3                     add         bx,ax 
863D    26 8A 14                  mov         dl,byte ptr es:[si] 
8640    88 17                     mov         byte ptr [bx],dl 
8642    EB DA                     jmp         L$1004 
8644                          L$1005:
8644    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
8647    01 4E F2                  add         word ptr -0xe[bp],cx 
864A    FF 07                     inc         word ptr [bx] 
864C    E9 FA FE                  jmp         L$996 
864F                          L$1006:
864F    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
8652    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
8655    E9 C8 12                  jmp         L$1172 

Routine Size: 421 bytes,    Routine Base: main_TEXT + 84B3

8658                          run_program_:
8658    56                        push        si 
8659    57                        push        di 
865A    C8 86 00 00               enter       0x0086,0x00 
865E    50                        push        ax 
865F    52                        push        dx 
8660    53                        push        bx 
8661    51                        push        cx 
8662    83 ED 78                  sub         bp,0x0078 
8665    B1 5C                     mov         cl,0x5c 
8667    8E 5E EA                  mov         ds,word ptr -0x16[bp] 
866A    89 DE                     mov         si,bx 
866C    8C DA                     mov         dx,ds 
866E                          L$1007:
866E    8A 04                     mov         al,byte ptr [si] 
8670    3A C1                     cmp         al,cl 
8672    74 09                     je          L$1008 
8674    46                        inc         si 
8675    3C 00                     cmp         al,0x00 
8677    75 F5                     jne         L$1007 
8679    2B F6                     sub         si,si 
867B    2B D2                     sub         dx,dx 
867D                          L$1008:
867D    85 D2                     test        dx,dx 
867F    75 3D                     jne         L$1010 
8681    85 F6                     test        si,si 
8683    75 39                     jne         L$1010 
8685    1E                        push        ds 
8686    53                        push        bx 
8687    16                        push        ss 
8688    68 BF 01                  push        offset DGROUP:L$1768 
868B    16                        push        ss 
868C    8D 56 F2                  lea         dx,-0xe[bp] 
868F    52                        push        dx 
8690    31 DB                     xor         bx,bx 
8692    9A 00 00 00 00            call        sprintf_ 
8697    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
869A    83 C4 0C                  add         sp,0x000c 
869D    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
86A0    0E                        push        cs 
86A1    E8 00 00                  call        find_executable_ 
86A4    85 D2                     test        dx,dx 
86A6    75 10                     jne         L$1009 
86A8    85 C0                     test        ax,ax 
86AA    75 0C                     jne         L$1009 
86AC    8D 46 F2                  lea         ax,-0xe[bp] 
86AF    8C D2                     mov         dx,ss 
86B1    0E                        push        cs 
86B2    E8 00 00                  call        show_error_msg_ 
86B5    E9 10 02                  jmp         L$1025 
86B8                          L$1009:
86B8    89 46 EC                  mov         word ptr -0x14[bp],ax 
86BB    89 56 EA                  mov         word ptr -0x16[bp],dx 
86BE                          L$1010:
86BE    BB 00 00                  mov         bx,offset _appsuf 
86C1    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
86C4    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
86C7    8C D1                     mov         cx,ss 
86C9    E8 00 00                  call        checksuff_ 
86CC    84 C0                     test        al,al 
86CE    0F 85 AE 00               jne         L$1014 
86D2    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
86D5    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
86D8    E8 00 00                  call        init_vpuconsole_window_ 
86DB    89 C6                     mov         si,ax 
86DD    89 56 76                  mov         word ptr 0x76[bp],dx 
86E0    89 C7                     mov         di,ax 
86E2    89 56 74                  mov         word ptr 0x74[bp],dx 
86E5    85 D2                     test        dx,dx 
86E7    75 06                     jne         L$1011 
86E9    85 C0                     test        ax,ax 
86EB    0F 84 E3 01               je          L$1026 
86EF                          L$1011:
86EF    FF 76 EA                  push        word ptr -0x16[bp] 
86F2    8E DA                     mov         ds,dx 
86F4    8B 8E 84 00               mov         cx,word ptr 0x84[bp] 
86F8    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
86FB    FF 76 EC                  push        word ptr -0x14[bp] 
86FE    8B 47 16                  mov         ax,word ptr 0x16[bx] 
8701    8B 57 18                  mov         dx,word ptr 0x18[bx] 
8704    8B 9E 82 00               mov         bx,word ptr 0x82[bp] 
8708    05 82 01                  add         ax,0x0182 
870B    0E                        push        cs 
870C    E8 00 00                  call        split_args_ 
870F    8E 5E 76                  mov         ds,word ptr 0x76[bp] 
8712    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
8715    C5 4F 16                  lds         cx,dword ptr 0x16[bx] 
8718    89 CB                     mov         bx,cx 
871A    89 87 84 01               mov         word ptr 0x184[bx],ax 
871E    89 97 86 01               mov         word ptr 0x186[bx],dx 
8722    8E 5E 76                  mov         ds,word ptr 0x76[bp] 
8725    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
8728    8B 47 16                  mov         ax,word ptr 0x16[bx] 
872B    8B 57 18                  mov         dx,word ptr 0x18[bx] 
872E    BB 50 00                  mov         bx,0x0050 
8731    05 CC 00                  add         ax,0x00cc 
8734    9A 00 00 00 00            call        getcwd_ 
8739    83 7E EE 00               cmp         word ptr -0x12[bp],0x0000 
873D    75 06                     jne         L$1012 
873F    83 7E F0 00               cmp         word ptr -0x10[bp],0x0000 
8743    74 1F                     je          L$1013 
8745                          L$1012:
8745    8E 5E 76                  mov         ds,word ptr 0x76[bp] 
8748    FF 76 EE                  push        word ptr -0x12[bp] 
874B    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
874E    FF 76 F0                  push        word ptr -0x10[bp] 
8751    8B 47 16                  mov         ax,word ptr 0x16[bx] 
8754    8B 57 18                  mov         dx,word ptr 0x18[bx] 
8757    89 C3                     mov         bx,ax 
8759    89 D1                     mov         cx,dx 
875B    81 C3 CC 00               add         bx,0x00cc 
875F    9A 00 00 00 00            call        append_path_ 
8764                          L$1013:
8764    8E 5E 74                  mov         ds,word ptr 0x74[bp] 
8767    C5 5D 3A                  lds         bx,dword ptr 0x3a[di] 
876A    C5 77 16                  lds         si,dword ptr 0x16[bx] 
876D    8A 86 88 00               mov         al,byte ptr 0x88[bp] 
8771    88 44 24                  mov         byte ptr 0x24[si],al 
8774    8E 5E 74                  mov         ds,word ptr 0x74[bp] 
8777    8B 45 3A                  mov         ax,word ptr 0x3a[di] 
877A    8B 55 3C                  mov         dx,word ptr 0x3c[di] 
877D    E9 56 01                  jmp         L$1027 
8780                          L$1014:
8780    F6 86 88 00 20            test        byte ptr 0x88[bp],0x20 
8785    0F 84 49 01               je          L$1026 
8789    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
878E    9A 00 00 00 00            call        reset_dosidle_handler_ 
8793    83 7E EE 00               cmp         word ptr -0x12[bp],0x0000 
8797    75 06                     jne         L$1015 
8799    83 7E F0 00               cmp         word ptr -0x10[bp],0x0000 
879D    74 71                     je          L$1018 
879F                          L$1015:
879F    8E 5E EE                  mov         ds,word ptr -0x12[bp] 
87A2    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
87A5    80 3F 00                  cmp         byte ptr [bx],0x00 
87A8    74 66                     je          L$1018 
87AA    80 7F 01 3A               cmp         byte ptr 0x1[bx],0x3a 
87AE    75 10                     jne         L$1016 
87B0    8A 07                     mov         al,byte ptr [bx] 
87B2    8C D1                     mov         cx,ss 
87B4    24 1F                     and         al,0x1f 
87B6    8D 5E 72                  lea         bx,0x72[bp] 
87B9    30 E4                     xor         ah,ah 
87BB    9A 00 00 00 00            call        _dos_setdrive_ 
87C0                          L$1016:
87C0    8B 7E F0                  mov         di,word ptr -0x10[bp] 
87C3    8E 46 EE                  mov         es,word ptr -0x12[bp] 
87C6    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
87C9    B9 FF FF                  mov         cx,0xffff 
87CC    33 C0                     xor         ax,ax 
87CE    F2 AE                     repne scasb 
87D0    F7 D1                     not         cx 
87D2    49                        dec         cx 
87D3    06                        push        es 
87D4    1F                        pop         ds 
87D5    01 CB                     add         bx,cx 
87D7    80 7F FF 5C               cmp         byte ptr -0x1[bx],0x5c 
87DB    74 0C                     je          L$1017 
87DD    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
87E0    8C C2                     mov         dx,es 
87E2    9A 00 00 00 00            call        chdir_ 
87E7    EB 27                     jmp         L$1018 
87E9                          L$1017:
87E9    8B 7E F0                  mov         di,word ptr -0x10[bp] 
87EC    B9 FF FF                  mov         cx,0xffff 
87EF    33 C0                     xor         ax,ax 
87F1    F2 AE                     repne scasb 
87F3    F7 D1                     not         cx 
87F5    49                        dec         cx 
87F6    8C C2                     mov         dx,es 
87F8    8B 46 F0                  mov         ax,word ptr -0x10[bp] 
87FB    8B 7E F0                  mov         di,word ptr -0x10[bp] 
87FE    9A 00 00 00 00            call        chdir_ 
8803    8E 46 EE                  mov         es,word ptr -0x12[bp] 
8806    B9 FF FF                  mov         cx,0xffff 
8809    33 C0                     xor         ax,ax 
880B    F2 AE                     repne scasb 
880D    F7 D1                     not         cx 
880F    49                        dec         cx 
8810                          L$1018:
8810    B8 03 00                  mov         ax,0x0003 
8813    BB 00 00                  mov         bx,offset _batsuf 
8816    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
8819    9A 00 00 00 00            call        video_mode_ 
881E    9A 00 00 00 00            call        reset_keyboard_handler_ 
8823    9A 00 00 00 00            call        reset_int24_ 
8828    8C D1                     mov         cx,ss 
882A    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
882D    E8 00 00                  call        checksuff_ 
8830    84 C0                     test        al,al 
8832    74 16                     je          L$1020 
8834    8B 9E 82 00               mov         bx,word ptr 0x82[bp] 
8838    8B 8E 84 00               mov         cx,word ptr 0x84[bp] 
883C    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
883F    8B 56 EA                  mov         dx,word ptr -0x16[bp] 
8842                          L$1019:
8842    0E                        push        cs 
8843    E8 00 00                  call        dosexec_ 
8846    89 C7                     mov         di,ax 
8848    EB 3D                     jmp         L$1023 
884A                          L$1020:
884A    66 FF B6 82 00            push        dword ptr 0x82[bp] 
884F    FF 76 EA                  push        word ptr -0x16[bp] 
8852    FF 76 EC                  push        word ptr -0x14[bp] 
8855    16                        push        ss 
8856    68 CE 01                  push        offset DGROUP:L$1769 
8859    16                        push        ss 
885A    8D 56 F2                  lea         dx,-0xe[bp] 
885D    52                        push        dx 
885E    31 DB                     xor         bx,bx 
8860    9A 00 00 00 00            call        sprintf_ 
8865    36 A1 00 00               mov         ax,word ptr ss:_comspec 
8869    83 C4 10                  add         sp,0x0010 
886C    36 8B 16 02 00            mov         dx,word ptr ss:_comspec+0x2 
8871    0E                        push        cs 
8872    E8 00 00                  call        find_executable_ 
8875    85 D2                     test        dx,dx 
8877    75 04                     jne         L$1021 
8879    85 C0                     test        ax,ax 
887B    74 07                     je          L$1022 
887D                          L$1021:
887D    8D 5E F2                  lea         bx,-0xe[bp] 
8880    8C D1                     mov         cx,ss 
8882    EB BE                     jmp         L$1019 
8884                          L$1022:
8884    BF 02 00                  mov         di,0x0002 
8887                          L$1023:
8887    8D 5E 72                  lea         bx,0x72[bp] 
888A    36 A1 00 00               mov         ax,word ptr ss:_cwdrive 
888E    8C D1                     mov         cx,ss 
8890    36 C6 06 00 00 01         mov         byte ptr ss:_screen_redraw,0x01 
8896    9A 00 00 00 00            call        _dos_setdrive_ 
889B    8C D2                     mov         dx,ss 
889D    B8 00 00                  mov         ax,offset _cwd 
88A0    9A 00 00 00 00            call        chdir_ 
88A5    83 BE 86 00 00            cmp         word ptr 0x86[bp],0x0000 
88AA    74 03                     je          L$1024 
88AC    E8 91 FB                  call        run_pressakey_ 
88AF                          L$1024:
88AF    9A 00 00 00 00            call        set_int24_ 
88B4    9A 00 00 00 00            call        set_keyboard_handler_ 
88B9    9A 00 00 00 00            call        restore_videomode_ 
88BE    9A 00 00 00 00            call        set_vpu_interrupt_handlers_ 
88C3    9A 00 00 00 00            call        set_dosidle_handler_ 
88C8                          L$1025:
88C8    85 FF                     test        di,di 
88CA    74 06                     je          L$1026 
88CC    89 F8                     mov         ax,di 
88CE    0E                        push        cs 
88CF    E8 00 00                  call        show_error_code_ 
88D2                          L$1026:
88D2    31 C0                     xor         ax,ax 
88D4    31 D2                     xor         dx,dx 
88D6                          L$1027:
88D6    8D 66 78                  lea         sp,0x78[bp] 
88D9    5D                        pop         bp 
88DA    E9 CD 83                  jmp         L$154 

Routine Size: 645 bytes,    Routine Base: main_TEXT + 8658

88DD                          set_cursor_position_:
88DD    C1 E0 08                  shl         ax,0x08 
88E0    09 C2                     or          dx,ax 
88E2    50                        push        ax 
88E3    53                        push        bx 
88E4    B4 02                     mov         ah,0x02 
88E6    33 DB                     xor         bx,bx 
88E8    CD 10                     int         0x10 
88EA    5B                        pop         bx 
88EB    58                        pop         ax 
88EC    CB                        retf        
88ED                          print_line_:
88ED    52                        push        dx 
88EE    56                        push        si 
88EF    89 DE                     mov         si,bx 
88F1    8E C1                     mov         es,cx 
88F3    69 D8 A0 00               imul        bx,ax,0x00a0 
88F7    B8 00 B8                  mov         ax,0xb800 
88FA    8E D8                     mov         ds,ax 
88FC    31 C0                     xor         ax,ax 
88FE    EB 0F                     jmp         L$1030 
8900                          L$1028:
8900    C6 07 20                  mov         byte ptr [bx],0x20 
8903                          L$1029:
8903    43                        inc         bx 
8904    46                        inc         si 
8905    40                        inc         ax 
8906    C6 07 07                  mov         byte ptr [bx],0x07 
8909    43                        inc         bx 
890A    3D 50 00                  cmp         ax,0x0050 
890D    73 13                     jae         L$1031 
890F                          L$1030:
890F    26 80 3C 00               cmp         byte ptr es:[si],0x00 
8913    74 0D                     je          L$1031 
8915    26 80 3C 20               cmp         byte ptr es:[si],0x20 
8919    72 E5                     jb          L$1028 
891B    26 8A 14                  mov         dl,byte ptr es:[si] 
891E    88 17                     mov         byte ptr [bx],dl 
8920    EB E1                     jmp         L$1029 
8922                          L$1031:
8922    3D 50 00                  cmp         ax,0x0050 
8925    73 0B                     jae         L$1032 
8927    C6 07 20                  mov         byte ptr [bx],0x20 
892A    43                        inc         bx 
892B    40                        inc         ax 
892C    C6 07 07                  mov         byte ptr [bx],0x07 
892F    43                        inc         bx 
8930    EB F0                     jmp         L$1031 
8932                          L$1032:
8932    5E                        pop         si 
8933    5A                        pop         dx 
8934    C3                        ret         
8935                          draw_tty_:
8935    53                        push        bx 
8936    51                        push        cx 
8937    52                        push        dx 
8938    56                        push        si 
8939    57                        push        di 
893A    55                        push        bp 
893B    31 ED                     xor         bp,bp 
893D    31 D2                     xor         dx,dx 
893F    31 F6                     xor         si,si 
8941                          L$1033:
8941    0F B6 9E 00 00            movzx       bx,byte ptr _tty[bp] 
8946    4B                        dec         bx 
8947    69 DB B0 00               imul        bx,0x00b0 
894B    8B 8E 00 00               mov         cx,word ptr _ttys[bp] 
894F    89 D0                     mov         ax,dx 
8951    01 CB                     add         bx,cx 
8953    8E 9E 02 00               mov         ds,word ptr _ttys+0x2[bp] 
8957    01 F3                     add         bx,si 
8959    42                        inc         dx 
895A    8B 3F                     mov         di,word ptr [bx] 
895C    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
895F    89 FB                     mov         bx,di 
8961    83 C6 04                  add         si,0x0004 
8964    E8 00 00                  call        print_line_ 
8967    83 FA 19                  cmp         dx,0x0019 
896A    72 D5                     jb          L$1033 
896C    0F B6 96 00 00            movzx       dx,byte ptr _tty[bp] 
8971    4A                        dec         dx 
8972    69 DA B0 00               imul        bx,dx,0x00b0 
8976    C5 96 00 00               lds         dx,dword ptr _ttys[bp] 
897A    01 D3                     add         bx,dx 
897C    C4 BF A4 00               les         di,dword ptr 0xa4[bx] 
8980    0F B6 9E 00 00            movzx       bx,byte ptr _tty[bp] 
8985    4B                        dec         bx 
8986    69 DB B0 00               imul        bx,0x00b0 
898A    01 D3                     add         bx,dx 
898C    C5 B7 A4 00               lds         si,dword ptr 0xa4[bx] 
8990    8B 14                     mov         dx,word ptr [si] 
8992    26 8B 5D 02               mov         bx,word ptr es:0x2[di] 
8996    C1 E2 08                  shl         dx,0x08 
8999    09 DA                     or          dx,bx 
899B    50                        push        ax 
899C    53                        push        bx 
899D    B4 02                     mov         ah,0x02 
899F    33 DB                     xor         bx,bx 
89A1    CD 10                     int         0x10 
89A3    5B                        pop         bx 
89A4    58                        pop         ax 
	     89A6		; The label referred to here is an undefined location
89A5    E9 05 78                  jmp         0x000101ad 
89A8                          switch_tty_:
89A8    53                        push        bx 
89A9    51                        push        cx 
89AA    52                        push        dx 
89AB    56                        push        si 
89AC    57                        push        di 
89AD    55                        push        bp 
89AE    31 ED                     xor         bp,bp 
89B0    36 A0 00 00               mov         al,byte ptr ss:_tty 
89B4    80 BE 00 00 04            cmp         byte ptr _new_tty[bp],0x04 
	     89BB		; The label referred to here is an undefined location
89B9    0F 87 F0 77               ja          0x000101ad 
89BD    8B 96 02 00               mov         dx,word ptr _ttys+0x2[bp] 
89C1    8B 9E 00 00               mov         bx,word ptr _ttys[bp] 
89C5    85 D2                     test        dx,dx 
89C7    75 06                     jne         L$1034 
89C9    85 DB                     test        bx,bx 
	     89CD		; The label referred to here is an undefined location
89CB    0F 84 DE 77               je          0x000101ad 
89CF                          L$1034:
89CF    8A A6 00 00               mov         ah,byte ptr _new_tty[bp] 
89D3    88 A6 00 00               mov         byte ptr _tty[bp],ah 
89D7    80 BE 00 00 00            cmp         byte ptr _tty[bp],0x00 
89DC    0F 84 DF 00               je          L$1041 
89E0    84 C0                     test        al,al 
89E2    75 08                     jne         L$1035 
89E4    B8 03 00                  mov         ax,0x0003 
89E7    9A 00 00 00 00            call        video_mode_ 
89EC                          L$1035:
89EC    0F B6 86 00 00            movzx       ax,byte ptr _tty[bp] 
89F1    48                        dec         ax 
89F2    69 D8 B0 00               imul        bx,ax,0x00b0 
89F6    C5 96 00 00               lds         dx,dword ptr _ttys[bp] 
89FA    01 D3                     add         bx,dx 
89FC    F6 47 68 01               test        byte ptr 0x68[bx],0x01 
8A00    0F 85 D9 00               jne         L$1044 
8A04    31 C9                     xor         cx,cx 
8A06    31 F6                     xor         si,si 
8A08    EB 09                     jmp         L$1037 
8A0A                          L$1036:
8A0A    41                        inc         cx 
8A0B    83 C6 04                  add         si,0x0004 
8A0E    83 F9 19                  cmp         cx,0x0019 
8A11    73 6A                     jae         L$1040 
8A13                          L$1037:
8A13    BA 01 00                  mov         dx,0x0001 
8A16    B8 51 00                  mov         ax,0x0051 
8A19    9A 00 00 00 00            call        calloc_ 
8A1E    0F B6 9E 00 00            movzx       bx,byte ptr _tty[bp] 
8A23    4B                        dec         bx 
8A24    69 DB B0 00               imul        bx,0x00b0 
8A28    8B BE 00 00               mov         di,word ptr _ttys[bp] 
8A2C    01 FB                     add         bx,di 
8A2E    8E 9E 02 00               mov         ds,word ptr _ttys+0x2[bp] 
8A32    01 F3                     add         bx,si 
8A34    89 07                     mov         word ptr [bx],ax 
8A36    89 57 02                  mov         word ptr 0x2[bx],dx 
8A39    8B 47 02                  mov         ax,word ptr 0x2[bx] 
8A3C    8B 17                     mov         dx,word ptr [bx] 
8A3E    85 C0                     test        ax,ax 
8A40    75 C8                     jne         L$1036 
8A42    85 D2                     test        dx,dx 
8A44    75 C4                     jne         L$1036 
8A46    89 CE                     mov         si,cx 
8A48    C1 E6 02                  shl         si,0x02 
8A4B                          L$1038:
8A4B    49                        dec         cx 
8A4C    83 EE 04                  sub         si,0x0004 
8A4F    83 F9 FF                  cmp         cx,0xffff 
8A52    74 22                     je          L$1039 
8A54    0F B6 86 00 00            movzx       ax,byte ptr _tty[bp] 
8A59    48                        dec         ax 
8A5A    69 C0 B0 00               imul        ax,0x00b0 
8A5E    8B 9E 00 00               mov         bx,word ptr _ttys[bp] 
8A62    01 C3                     add         bx,ax 
8A64    8E 9E 02 00               mov         ds,word ptr _ttys+0x2[bp] 
8A68    01 F3                     add         bx,si 
8A6A    8B 07                     mov         ax,word ptr [bx] 
8A6C    8B 57 02                  mov         dx,word ptr 0x2[bx] 
8A6F    9A 00 00 00 00            call        free_ 
8A74    EB D5                     jmp         L$1038 
8A76                          L$1039:
8A76    C6 86 00 00 00            mov         byte ptr _tty[bp],0x00 
8A7B    EB 46                     jmp         L$1042 
8A7D                          L$1040:
8A7D    FF B6 00 00               push        word ptr _DEFAULT_PRIVS[bp] 
8A81    BB D7 01                  mov         bx,offset DGROUP:L$1770 
8A84    6A 00                     push        0x0000 
8A86    8C D1                     mov         cx,ss 
8A88    6A 00                     push        0x0000 
8A8A    31 C0                     xor         ax,ax 
8A8C    6A 00                     push        0x0000 
8A8E    31 D2                     xor         dx,dx 
8A90    0E                        push        cs 
8A91    E8 00 00                  call        run_program_ 
8A94    0F B6 86 00 00            movzx       ax,byte ptr _tty[bp] 
8A99    48                        dec         ax 
8A9A    69 C0 B0 00               imul        ax,0x00b0 
8A9E    C5 9E 00 00               lds         bx,dword ptr _ttys[bp] 
8AA2    01 C3                     add         bx,ax 
8AA4    80 4F 68 01               or          byte ptr 0x68[bx],0x01 
8AA8    0F B6 86 00 00            movzx       ax,byte ptr _tty[bp] 
8AAD    48                        dec         ax 
8AAE    69 C0 B0 00               imul        ax,0x00b0 
8AB2    C5 9E 00 00               lds         bx,dword ptr _ttys[bp] 
8AB6    01 C3                     add         bx,ax 
8AB8    80 8F 81 00 01            or          byte ptr 0x81[bx],0x01 
8ABD    EB 1E                     jmp         L$1044 
8ABF                          L$1041:
8ABF    84 C0                     test        al,al 
8AC1    74 1A                     je          L$1044 
8AC3                          L$1042:
8AC3    9A 00 00 00 00            call        restore_videomode_ 
8AC8    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
8ACC    3A 86 00 00               cmp         al,byte ptr _video[bp] 
8AD0    74 05                     je          L$1043 
8AD2    9A 00 00 00 00            call        restore_videomode_ 
8AD7                          L$1043:
8AD7    E8 00 00                  call        draw_desktop_ 
8ADA    E8 00 00                  call        draw_windows_ 
8ADD                          L$1044:
8ADD    C6 86 00 00 FF            mov         byte ptr _new_tty[bp],0xff 
	     8AE3		; The label referred to here is an undefined location
8AE2    E9 C8 76                  jmp         0x000101ad 
8AE5                          run_startup_programs_:
8AE5    53                        push        bx 
8AE6    51                        push        cx 
8AE7    52                        push        dx 
8AE8    56                        push        si 
8AE9    57                        push        di 
8AEA    C8 88 00 00               enter       0x0088,0x00 
8AEE    81 ED 88 00               sub         bp,0x0088 
8AF2    8D 7E 7E                  lea         di,0x7e[bp] 
8AF5    8D 56 7E                  lea         dx,0x7e[bp] 
8AF8    16                        push        ss 
8AF9    8D 46 00                  lea         ax,[bp] 
8AFC    52                        push        dx 
8AFD    16                        push        ss 
8AFE    07                        pop         es 
8AFF    16                        push        ss 
8B00    16                        push        ss 
8B01    1F                        pop         ds 
8B02    68 E0 01                  push        offset DGROUP:L$1771 
8B05    31 DB                     xor         bx,bx 
8B07    16                        push        ss 
8B08    BE DA 02                  mov         si,offset DGROUP:L$1918 
8B0B    50                        push        ax 
8B0C    A5                        movsw       
8B0D    A5                        movsw       
8B0E    A5                        movsw       
8B0F    A5                        movsw       
8B10    A4                        movsb       
8B11    9A 00 00 00 00            call        sprintf_ 
8B16    83 C4 0C                  add         sp,0x000c 
8B19    8D 56 52                  lea         dx,0x52[bp] 
8B1C    16                        push        ss 
8B1D    8D 46 00                  lea         ax,[bp] 
8B20    52                        push        dx 
8B21    8C D2                     mov         dx,ss 
8B23    9A 00 00 00 00            call        _dos_findfirst_ 
8B28    85 C0                     test        ax,ax 
8B2A    75 3E                     jne         L$1046 
8B2C                          L$1045:
8B2C    16                        push        ss 
8B2D    8D 56 70                  lea         dx,0x70[bp] 
8B30    52                        push        dx 
8B31    16                        push        ss 
8B32    8D 56 7E                  lea         dx,0x7e[bp] 
8B35    52                        push        dx 
8B36    16                        push        ss 
8B37    68 97 01                  push        offset DGROUP:L$1766 
8B3A    16                        push        ss 
8B3B    8D 46 00                  lea         ax,[bp] 
8B3E    50                        push        ax 
8B3F    9A 00 00 00 00            call        sprintf_ 
8B44    83 C4 10                  add         sp,0x0010 
8B47    6A FF                     push        0xffff 
8B49    8D 5E 00                  lea         bx,[bp] 
8B4C    6A 00                     push        0x0000 
8B4E    8C D1                     mov         cx,ss 
8B50    6A 00                     push        0x0000 
8B52    31 D2                     xor         dx,dx 
8B54    6A 00                     push        0x0000 
8B56    31 C0                     xor         ax,ax 
8B58    0E                        push        cs 
8B59    E8 00 00                  call        run_program_ 
8B5C    8D 46 52                  lea         ax,0x52[bp] 
8B5F    8C D2                     mov         dx,ss 
8B61    9A 00 00 00 00            call        _dos_findnext_ 
8B66    85 C0                     test        ax,ax 
8B68    74 C2                     je          L$1045 
8B6A                          L$1046:
8B6A    8D A6 88 00               lea         sp,0x88[bp] 
	     8B6F		; The label referred to here is an undefined location
8B6E    E9 3C 76                  jmp         0x000101ad 
8B71                          update_envvars_:
8B71    52                        push        dx 
8B72    B8 E6 01                  mov         ax,offset DGROUP:L$1772 
8B75    8C D2                     mov         dx,ss 
8B77    9A 00 00 00 00            call        getenv_ 
8B7C    36 A3 00 00               mov         word ptr ss:_path,ax 
8B80    36 89 16 02 00            mov         word ptr ss:_path+0x2,dx 
8B85    B8 EB 01                  mov         ax,offset DGROUP:L$1773 
8B88    8C D2                     mov         dx,ss 
8B8A    9A 00 00 00 00            call        getenv_ 
8B8F    36 A3 00 00               mov         word ptr ss:_comspec,ax 
8B93    36 89 16 02 00            mov         word ptr ss:_comspec+0x2,dx 
8B98    85 D2                     test        dx,dx 
8B9A    75 10                     jne         L$1047 
8B9C    85 C0                     test        ax,ax 
8B9E    75 0C                     jne         L$1047 
8BA0    36 C7 06 00 00 F3 01      mov         word ptr ss:_comspec,offset DGROUP:L$1774 
8BA7    36 8C 16 02 00            mov         word ptr ss:_comspec+0x2,ss 
8BAC                          L$1047:
8BAC    5A                        pop         dx 
8BAD    C3                        ret         
8BAE                          save_privileges_:
8BAE    53                        push        bx 
8BAF    56                        push        si 
8BB0    57                        push        di 
8BB1    55                        push        bp 
8BB2    31 ED                     xor         bp,bp 
8BB4    89 C3                     mov         bx,ax 
8BB6    8E DA                     mov         ds,dx 
8BB8    31 C0                     xor         ax,ax 
8BBA    36 A3 00 00               mov         word ptr ss:_DEFAULT_PRIVS,ax 
8BBE    C4 77 18                  les         si,dword ptr 0x18[bx] 
8BC1    26 C4 7C 04               les         di,dword ptr es:0x4[si] 
8BC5    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8BCA    74 06                     je          L$1048 
8BCC    C7 86 00 00 01 00         mov         word ptr _DEFAULT_PRIVS[bp],0x0001 
8BD2                          L$1048:
8BD2    C4 77 18                  les         si,dword ptr 0x18[bx] 
8BD5    26 C4 7C 08               les         di,dword ptr es:0x8[si] 
8BD9    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8BDE    74 05                     je          L$1049 
8BE0    80 8E 00 00 02            or          byte ptr _DEFAULT_PRIVS[bp],0x02 
8BE5                          L$1049:
8BE5    C4 77 18                  les         si,dword ptr 0x18[bx] 
8BE8    26 C4 7C 0C               les         di,dword ptr es:0xc[si] 
8BEC    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8BF1    74 05                     je          L$1050 
8BF3    80 8E 00 00 04            or          byte ptr _DEFAULT_PRIVS[bp],0x04 
8BF8                          L$1050:
8BF8    C4 77 18                  les         si,dword ptr 0x18[bx] 
8BFB    26 C4 7C 10               les         di,dword ptr es:0x10[si] 
8BFF    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8C04    74 05                     je          L$1051 
8C06    80 8E 00 00 08            or          byte ptr _DEFAULT_PRIVS[bp],0x08 
8C0B                          L$1051:
8C0B    C4 77 18                  les         si,dword ptr 0x18[bx] 
8C0E    26 C4 7C 14               les         di,dword ptr es:0x14[si] 
8C12    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8C17    74 05                     je          L$1052 
8C19    80 8E 00 00 10            or          byte ptr _DEFAULT_PRIVS[bp],0x10 
8C1E                          L$1052:
8C1E    C4 77 18                  les         si,dword ptr 0x18[bx] 
8C21    26 C4 7C 18               les         di,dword ptr es:0x18[si] 
8C25    26 83 7D 2A 00            cmp         word ptr es:0x2a[di],0x0000 
8C2A    74 05                     je          L$1053 
8C2C    80 8E 00 00 20            or          byte ptr _DEFAULT_PRIVS[bp],0x20 
8C31                          L$1053:
8C31    C5 77 18                  lds         si,dword ptr 0x18[bx] 
8C34    C5 5C 1C                  lds         bx,dword ptr 0x1c[si] 
8C37    83 7F 2A 00               cmp         word ptr 0x2a[bx],0x0000 
8C3B    74 05                     je          L$1054 
8C3D    80 8E 00 00 80            or          byte ptr _DEFAULT_PRIVS[bp],0x80 
8C42                          L$1054:
8C42    5D                        pop         bp 
8C43    E9 F8 E0                  jmp         L$827 
8C46    29 28 27 26 24 23 21 20 09 08 07 06 04 03 01 00 )('&$#! ........
8C56    BE 8C                                           DW	offset L$1665
8C58    1D 8D                                           DW	offset L$1671
8C5A    09 8D                                           DW	offset L$1667
8C5C    0E 8D                                           DW	offset L$1668
8C5E    13 8D                                           DW	offset L$1669
8C60    04 8D                                           DW	offset L$1666
8C62    B9 8C                                           DW	offset L$1664
8C64    22 8D                                           DW	offset L$1672
8C66    18 8D                                           DW	offset L$1670
8C68    1D 8D                                           DW	offset L$1671
8C6A    09 8D                                           DW	offset L$1667
8C6C    0E 8D                                           DW	offset L$1668
8C6E    13 8D                                           DW	offset L$1669
8C70    04 8D                                           DW	offset L$1666
8C72    B9 8C                                           DW	offset L$1664
8C74    22 8D                                           DW	offset L$1672
8C76    18 8D                                           DW	offset L$1670
8C78                          privileges_program_:
8C78    51                        push        cx 
8C79    56                        push        si 
8C7A    57                        push        di 
8C7B    C8 04 00 00               enter       0x0004,0x00 
8C7F    89 C6                     mov         si,ax 
8C81    89 56 FE                  mov         word ptr -0x2[bp],dx 
8C84    89 5E FC                  mov         word ptr -0x4[bp],bx 
8C87    31 DB                     xor         bx,bx 
8C89    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
8C8D    75 08                     jne         L$1055 
8C8F    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
8C93    0F 84 54 00               je          L$1059 
8C97                          L$1055:
8C97    C5 7E 0C                  lds         di,dword ptr 0xc[bp] 
8C9A    8B 05                     mov         ax,word ptr [di] 
8C9C    2D 4C 00                  sub         ax,0x004c 
8C9F    3D 29 00                  cmp         ax,0x0029 
8CA2    77 1A                     ja          L$1056 
8CA4    B9 11 00                  mov         cx,0x0011 
8CA7    BF 46 8C                  mov         di,offset load_settings_-0x73ba 
8CAA    0E                        push        cs 
8CAB    07                        pop         es 
8CAC    F2 AE                     repne scasb 
8CAE    D1 E1                     shl         cx,0x01 
8CB0    89 CF                     mov         di,cx 
8CB2    2E 8B 85 56 8C            mov         ax,word ptr cs:load_settings_-0x73aa[di] 
8CB7    FF E0                     jmp         ax 
8CB9    C7 46 FC 00 00            mov         word ptr -0x4[bp],0x0000 
8CBE                          L$1056:
8CBE    85 DB                     test        bx,bx 
8CC0    74 22                     je          L$1058 
8CC2                          L$1057:
8CC2    89 DF                     mov         di,bx 
8CC4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
8CC7    C1 E7 02                  shl         di,0x02 
8CCA    C5 44 18                  lds         ax,dword ptr 0x18[si] 
8CCD    01 C7                     add         di,ax 
8CCF    C5 15                     lds         dx,dword ptr [di] 
8CD1    89 D7                     mov         di,dx 
8CD3    8B 45 2A                  mov         ax,word ptr 0x2a[di] 
8CD6    F7 D0                     not         ax 
8CD8    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8CDB    89 45 2A                  mov         word ptr 0x2a[di],ax 
8CDE    89 F0                     mov         ax,si 
8CE0    0E                        push        cs 
8CE1    E8 00 00                  call        window_drawelement_ 
8CE4                          L$1058:
8CE4    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
8CE7    C7 07 FF FF               mov         word ptr [bx],0xffff 
8CEB                          L$1059:
8CEB    81 7E FC 00 80            cmp         word ptr -0x4[bp],0x8000 
8CF0    75 08                     jne         L$1060 
8CF2    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8CF5    89 F0                     mov         ax,si 
8CF7    E8 00 00                  call        save_privileges_ 
8CFA                          L$1060:
8CFA    B8 FF 7F                  mov         ax,0x7fff 
8CFD                          L$1061:
8CFD    C9                        leave       
8CFE                          L$1062:
8CFE    5F                        pop         di 
8CFF                          L$1063:
8CFF    5E                        pop         si 
8D00    59                        pop         cx 
8D01    CA 04 00                  retf        0x0004 
8D04    BB 01 00                  mov         bx,0x0001 
8D07    EB B9                     jmp         L$1057 
8D09    BB 02 00                  mov         bx,0x0002 
8D0C    EB B4                     jmp         L$1057 
8D0E    BB 03 00                  mov         bx,0x0003 
8D11    EB AF                     jmp         L$1057 
8D13    BB 04 00                  mov         bx,0x0004 
8D16    EB AA                     jmp         L$1057 
8D18    BB 05 00                  mov         bx,0x0005 
8D1B    EB A5                     jmp         L$1057 
8D1D    BB 06 00                  mov         bx,0x0006 
8D20    EB A0                     jmp         L$1057 
8D22    BB 07 00                  mov         bx,0x0007 
8D25    EB 9B                     jmp         L$1057 
8D27                          init_run_priv_window_:
8D27    53                        push        bx 
8D28    51                        push        cx 
8D29    56                        push        si 
8D2A    57                        push        di 
8D2B    C8 02 00 00               enter       0x0002,0x00 
8D2F    68 00 00                  push        seg privileges_program_ 
8D32    68 00 00                  push        offset privileges_program_ 
8D35    16                        push        ss 
8D36    68 FF 01                  push        offset DGROUP:L$1775 
8D39    6A 01                     push        0x0001 
8D3B    B9 A0 00                  mov         cx,0x00a0 
8D3E    6A 01                     push        0x0001 
8D40    BB 2C 01                  mov         bx,0x012c 
8D43    16                        push        ss 
8D44    BA FF FF                  mov         dx,0xffff 
8D47    68 12 02                  push        offset DGROUP:L$1776 
8D4A    89 D0                     mov         ax,dx 
8D4C    0E                        push        cs 
8D4D    E8 00 00                  call        new_window_ 
8D50    89 D7                     mov         di,dx 
8D52    89 C6                     mov         si,ax 
8D54    89 56 FE                  mov         word ptr -0x2[bp],dx 
8D57    85 D2                     test        dx,dx 
8D59    75 22                     jne         L$1067 
8D5B    85 C0                     test        ax,ax 
8D5D    75 1E                     jne         L$1067 
8D5F                          L$1064:
8D5F    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
8D63    75 04                     jne         L$1065 
8D65    85 F6                     test        si,si 
8D67    74 09                     je          L$1066 
8D69                          L$1065:
8D69    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8D6C    89 F0                     mov         ax,si 
8D6E    0E                        push        cs 
8D6F    E8 00 00                  call        del_window_ 
8D72                          L$1066:
8D72    0E                        push        cs 
8D73    E8 00 00                  call        nomemory_ 
8D76    31 C0                     xor         ax,ax 
8D78    31 D2                     xor         dx,dx 
8D7A    E9 0D 02                  jmp         L$1094 
8D7D                          L$1067:
8D7D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8D83    50                        push        ax 
8D84    16                        push        ss 
8D85    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
8D8B    68 25 02                  push        offset DGROUP:L$1777 
8D8E    40                        inc         ax 
8D8F    40                        inc         ax 
8D90    B9 14 00                  mov         cx,0x0014 
8D93    50                        push        ax 
8D94    89 CB                     mov         bx,cx 
8D96    6A 32                     push        0x0032 
8D98    89 F0                     mov         ax,si 
8D9A    0E                        push        cs 
8D9B    E8 00 00                  call        window_button_ 
8D9E    85 D2                     test        dx,dx 
8DA0    75 04                     jne         L$1068 
8DA2    85 C0                     test        ax,ax 
8DA4    74 B9                     je          L$1064 
8DA6                          L$1068:
8DA6    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8DAC    B9 14 00                  mov         cx,0x0014 
8DAF    50                        push        ax 
8DB0    BB 64 00                  mov         bx,0x0064 
8DB3    16                        push        ss 
8DB4    89 FA                     mov         dx,di 
8DB6    68 2B 02                  push        offset DGROUP:L$1778 
8DB9    89 F0                     mov         ax,si 
8DBB    0E                        push        cs 
8DBC    E8 00 00                  call        window_checkbox_ 
8DBF    89 C3                     mov         bx,ax 
8DC1    8E DA                     mov         ds,dx 
8DC3    85 D2                     test        dx,dx 
8DC5    75 04                     jne         L$1069 
8DC7    85 C0                     test        ax,ax 
8DC9    74 94                     je          L$1064 
8DCB                          L$1069:
8DCB    36 F6 06 00 00 01         test        byte ptr ss:_DEFAULT_PRIVS,0x01 
8DD1    74 05                     je          L$1070 
8DD3    B8 01 00                  mov         ax,0x0001 
8DD6    EB 02                     jmp         L$1071 
8DD8                          L$1070:
8DD8    31 C0                     xor         ax,ax 
8DDA                          L$1071:
8DDA    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8DDD    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8DE0    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8DE6    B9 28 00                  mov         cx,0x0028 
8DE9    50                        push        ax 
8DEA    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8DED    16                        push        ss 
8DEE    BB 64 00                  mov         bx,0x0064 
8DF1    68 3C 02                  push        offset DGROUP:L$1779 
8DF4    89 F0                     mov         ax,si 
8DF6    0E                        push        cs 
8DF7    E8 00 00                  call        window_checkbox_ 
8DFA    89 C3                     mov         bx,ax 
8DFC    8E DA                     mov         ds,dx 
8DFE    85 D2                     test        dx,dx 
8E00    75 06                     jne         L$1072 
8E02    85 C0                     test        ax,ax 
8E04    0F 84 57 FF               je          L$1064 
8E08                          L$1072:
8E08    36 F6 06 00 00 02         test        byte ptr ss:_DEFAULT_PRIVS,0x02 
8E0E    74 05                     je          L$1073 
8E10    B8 01 00                  mov         ax,0x0001 
8E13    EB 02                     jmp         L$1074 
8E15                          L$1073:
8E15    31 C0                     xor         ax,ax 
8E17                          L$1074:
8E17    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8E1A    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8E1D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8E23    B9 3C 00                  mov         cx,0x003c 
8E26    50                        push        ax 
8E27    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8E2A    16                        push        ss 
8E2B    BB 64 00                  mov         bx,0x0064 
8E2E    68 4F 02                  push        offset DGROUP:L$1780 
8E31    89 F0                     mov         ax,si 
8E33    0E                        push        cs 
8E34    E8 00 00                  call        window_checkbox_ 
8E37    89 C3                     mov         bx,ax 
8E39    8E DA                     mov         ds,dx 
8E3B    85 D2                     test        dx,dx 
8E3D    75 06                     jne         L$1075 
8E3F    85 C0                     test        ax,ax 
8E41    0F 84 1A FF               je          L$1064 
8E45                          L$1075:
8E45    36 F6 06 00 00 04         test        byte ptr ss:_DEFAULT_PRIVS,0x04 
8E4B    74 05                     je          L$1076 
8E4D    B8 01 00                  mov         ax,0x0001 
8E50    EB 02                     jmp         L$1077 
8E52                          L$1076:
8E52    31 C0                     xor         ax,ax 
8E54                          L$1077:
8E54    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8E57    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8E5A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8E60    B9 50 00                  mov         cx,0x0050 
8E63    50                        push        ax 
8E64    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8E67    16                        push        ss 
8E68    BB 64 00                  mov         bx,0x0064 
8E6B    68 67 02                  push        offset DGROUP:L$1781 
8E6E    89 F0                     mov         ax,si 
8E70    0E                        push        cs 
8E71    E8 00 00                  call        window_checkbox_ 
8E74    89 C3                     mov         bx,ax 
8E76    8E DA                     mov         ds,dx 
8E78    85 D2                     test        dx,dx 
8E7A    75 06                     jne         L$1078 
8E7C    85 C0                     test        ax,ax 
8E7E    0F 84 DD FE               je          L$1064 
8E82                          L$1078:
8E82    36 F6 06 00 00 08         test        byte ptr ss:_DEFAULT_PRIVS,0x08 
8E88    74 05                     je          L$1079 
8E8A    B8 01 00                  mov         ax,0x0001 
8E8D    EB 02                     jmp         L$1080 
8E8F                          L$1079:
8E8F    31 C0                     xor         ax,ax 
8E91                          L$1080:
8E91    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8E94    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8E97    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8E9D    B9 64 00                  mov         cx,0x0064 
8EA0    50                        push        ax 
8EA1    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8EA4    16                        push        ss 
8EA5    89 CB                     mov         bx,cx 
8EA7    68 7A 02                  push        offset DGROUP:L$1782 
8EAA    89 F0                     mov         ax,si 
8EAC    0E                        push        cs 
8EAD    E8 00 00                  call        window_checkbox_ 
8EB0    89 C3                     mov         bx,ax 
8EB2    8E DA                     mov         ds,dx 
8EB4    85 D2                     test        dx,dx 
8EB6    75 06                     jne         L$1081 
8EB8    85 C0                     test        ax,ax 
8EBA    0F 84 A1 FE               je          L$1064 
8EBE                          L$1081:
8EBE    36 F6 06 00 00 10         test        byte ptr ss:_DEFAULT_PRIVS,0x10 
8EC4    74 05                     je          L$1082 
8EC6    B8 01 00                  mov         ax,0x0001 
8EC9    EB 02                     jmp         L$1083 
8ECB                          L$1082:
8ECB    31 C0                     xor         ax,ax 
8ECD                          L$1083:
8ECD    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8ED0    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8ED3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8ED9    B9 78 00                  mov         cx,0x0078 
8EDC    50                        push        ax 
8EDD    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8EE0    16                        push        ss 
8EE1    BB 64 00                  mov         bx,0x0064 
8EE4    68 87 02                  push        offset DGROUP:L$1783 
8EE7    89 F0                     mov         ax,si 
8EE9    0E                        push        cs 
8EEA    E8 00 00                  call        window_checkbox_ 
8EED    89 C3                     mov         bx,ax 
8EEF    8E DA                     mov         ds,dx 
8EF1    85 D2                     test        dx,dx 
8EF3    75 06                     jne         L$1084 
8EF5    85 C0                     test        ax,ax 
8EF7    0F 84 64 FE               je          L$1064 
8EFB                          L$1084:
8EFB    36 F6 06 00 00 20         test        byte ptr ss:_DEFAULT_PRIVS,0x20 
8F01    74 05                     je          L$1085 
8F03    B8 01 00                  mov         ax,0x0001 
8F06    EB 02                     jmp         L$1086 
8F08                          L$1085:
8F08    31 C0                     xor         ax,ax 
8F0A                          L$1086:
8F0A    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8F0D    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8F10    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8F16    B9 8C 00                  mov         cx,0x008c 
8F19    50                        push        ax 
8F1A    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8F1D    16                        push        ss 
8F1E    BB 64 00                  mov         bx,0x0064 
8F21    68 AA 02                  push        offset DGROUP:L$1784 
8F24    89 F0                     mov         ax,si 
8F26    0E                        push        cs 
8F27    E8 00 00                  call        window_checkbox_ 
8F2A    89 C3                     mov         bx,ax 
8F2C    8E DA                     mov         ds,dx 
8F2E    85 D2                     test        dx,dx 
8F30    75 06                     jne         L$1087 
8F32    85 C0                     test        ax,ax 
8F34    0F 84 27 FE               je          L$1064 
8F38                          L$1087:
8F38    36 F6 06 00 00 80         test        byte ptr ss:_DEFAULT_PRIVS,0x80 
8F3E    74 05                     je          L$1088 
8F40    B8 01 00                  mov         ax,0x0001 
8F43    EB 02                     jmp         L$1089 
8F45                          L$1088:
8F45    31 C0                     xor         ax,ax 
8F47                          L$1089:
8F47    89 47 2A                  mov         word ptr 0x2a[bx],ax 
8F4A    F7 5F 2A                  neg         word ptr 0x2a[bx] 
8F4D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
8F53    B9 05 00                  mov         cx,0x0005 
8F56    50                        push        ax 
8F57    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8F5A    16                        push        ss 
8F5B    BB 14 00                  mov         bx,0x0014 
8F5E    68 BB 02                  push        offset DGROUP:L$1785 
8F61    89 F0                     mov         ax,si 
8F63    0E                        push        cs 
8F64    E8 00 00                  call        window_text_ 
8F67    85 D2                     test        dx,dx 
8F69    75 06                     jne         L$1090 
8F6B    85 C0                     test        ax,ax 
8F6D    0F 84 EE FD               je          L$1064 
8F71                          L$1090:
8F71    B9 01 00                  mov         cx,0x0001 
8F74    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
8F77    89 F0                     mov         ax,si 
8F79    89 CB                     mov         bx,cx 
8F7B    0E                        push        cs 
8F7C    E8 00 00                  call        draw_window_ 
8F7F                          L$1091:
8F7F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
8F82    89 F0                     mov         ax,si 
8F84                          L$1092:
8F84    8C DA                     mov         dx,ds 
8F86                          L$1093:
8F86    80 4C 17 02               or          byte ptr 0x17[si],0x02 
8F8A                          L$1094:
8F8A    C9                        leave       
8F8B                          L$1095:
8F8B    5F                        pop         di 
8F8C                          L$1096:
8F8C    5E                        pop         si 
8F8D    59                        pop         cx 
8F8E    5B                        pop         bx 
8F8F    C3                        ret         
8F90                          rundialog_program_:
8F90    51                        push        cx 
8F91    56                        push        si 
8F92    57                        push        di 
8F93    C8 06 00 00               enter       0x0006,0x00 
8F97    8B 7E 0C                  mov         di,word ptr 0xc[bp] 
8F9A    89 C6                     mov         si,ax 
8F9C    8E DA                     mov         ds,dx 
8F9E    89 5E FE                  mov         word ptr -0x2[bp],bx 
8FA1    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
8FA4    C4 37                     les         si,dword ptr [bx] 
8FA6    26 8B 44 0C               mov         ax,word ptr es:0xc[si] 
8FAA    26 8B 4C 0E               mov         cx,word ptr es:0xe[si] 
8FAE    C4 77 04                  les         si,dword ptr 0x4[bx] 
8FB1    26 8B 54 0C               mov         dx,word ptr es:0xc[si] 
8FB5    89 56 FA                  mov         word ptr -0x6[bp],dx 
8FB8    26 8B 54 0E               mov         dx,word ptr es:0xe[si] 
8FBC    C5 77 08                  lds         si,dword ptr 0x8[bx] 
8FBF    89 56 FC                  mov         word ptr -0x4[bp],dx 
8FC2    8B 54 0C                  mov         dx,word ptr 0xc[si] 
8FC5    8B 74 0E                  mov         si,word ptr 0xe[si] 
8FC8    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
8FCC    75 04                     jne         L$1097 
8FCE    85 FF                     test        di,di 
8FD0    74 41                     je          L$1104 
8FD2                          L$1097:
8FD2    8E 5E 0E                  mov         ds,word ptr 0xe[bp] 
8FD5    8B 1D                     mov         bx,word ptr [di] 
8FD7    83 FB 56                  cmp         bx,0x0056 
8FDA    72 13                     jb          L$1099 
8FDC    76 29                     jbe         L$1102 
8FDE    83 FB 76                  cmp         bx,0x0076 
8FE1    74 24                     je          L$1102 
8FE3    83 FB 72                  cmp         bx,0x0072 
8FE6    74 11                     je          L$1100 
8FE8    83 FB 63                  cmp         bx,0x0063 
8FEB                          L$1098:
8FEB    74 13                     je          L$1101 
8FED    EB 1D                     jmp         L$1103 
8FEF                          L$1099:
8FEF    83 FB 52                  cmp         bx,0x0052 
8FF2    74 05                     je          L$1100 
8FF4    83 FB 43                  cmp         bx,0x0043 
8FF7    EB F2                     jmp         L$1098 
8FF9                          L$1100:
8FF9    C7 46 FE 03 80            mov         word ptr -0x2[bp],0x8003 
8FFE    EB 0C                     jmp         L$1103 
9000                          L$1101:
9000    C7 46 FE 04 80            mov         word ptr -0x2[bp],0x8004 
9005    EB 05                     jmp         L$1103 
9007                          L$1102:
9007    C7 46 FE 05 80            mov         word ptr -0x2[bp],0x8005 
900C                          L$1103:
900C    8E 5E 0E                  mov         ds,word ptr 0xe[bp] 
900F    C7 05 FF FF               mov         word ptr [di],0xffff 
9013                          L$1104:
9013    F6 46 FF 80               test        byte ptr -0x1[bp],0x80 
9017    0F 84 DF FC               je          L$1060 
901B    80 66 FF 7F               and         byte ptr -0x1[bp],0x7f 
901F    83 7E FE 05               cmp         word ptr -0x2[bp],0x0005 
9023    75 06                     jne         L$1105 
9025    E8 00 00                  call        init_run_priv_window_ 
9028    E9 CF FC                  jmp         L$1060 
902B                          L$1105:
902B    83 7E FE 04               cmp         word ptr -0x2[bp],0x0004 
902F    0F 87 C7 FC               ja          L$1060 
9033    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
9038    6A 01                     push        0x0001 
903A    89 C3                     mov         bx,ax 
903C    FF 76 FC                  push        word ptr -0x4[bp] 
903F    89 D0                     mov         ax,dx 
9041    FF 76 FA                  push        word ptr -0x6[bp] 
9044    89 F2                     mov         dx,si 
9046    0E                        push        cs 
9047    E8 00 00                  call        run_program_ 
904A    83 7E FE 04               cmp         word ptr -0x2[bp],0x0004 
904E    0F 85 A8 FC               jne         L$1060 
9052    B8 02 00                  mov         ax,0x0002 
9055    E9 A5 FC                  jmp         L$1061 
9058                          init_run_window_:
9058    53                        push        bx 
9059    51                        push        cx 
905A    56                        push        si 
905B    57                        push        di 
905C    C8 02 00 00               enter       0x0002,0x00 
9060    50                        push        ax 
9061    52                        push        dx 
9062    68 00 00                  push        seg rundialog_program_ 
9065    68 00 00                  push        offset rundialog_program_ 
9068    16                        push        ss 
9069    68 FF 01                  push        offset DGROUP:L$1775 
906C    6A 01                     push        0x0001 
906E    B9 64 00                  mov         cx,0x0064 
9071    6A 01                     push        0x0001 
9073    BB 2C 01                  mov         bx,0x012c 
9076    16                        push        ss 
9077    BA FF FF                  mov         dx,0xffff 
907A    68 13 00                  push        offset DGROUP:L$1725 
907D    89 D0                     mov         ax,dx 
907F    0E                        push        cs 
9080    E8 00 00                  call        new_window_ 
9083    89 C6                     mov         si,ax 
9085    89 46 FE                  mov         word ptr -0x2[bp],ax 
9088    89 D7                     mov         di,dx 
908A    85 D2                     test        dx,dx 
908C    75 22                     jne         L$1110 
908E    85 C0                     test        ax,ax 
9090    75 1E                     jne         L$1110 
9092                          L$1106:
9092    85 FF                     test        di,di 
9094    75 06                     jne         L$1107 
9096    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
909A    74 09                     je          L$1108 
909C                          L$1107:
909C    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
909F    89 FA                     mov         dx,di 
90A1    0E                        push        cs 
90A2    E8 00 00                  call        del_window_ 
90A5                          L$1108:
90A5    0E                        push        cs 
90A6    E8 00 00                  call        nomemory_ 
90A9                          L$1109:
90A9    31 C0                     xor         ax,ax 
90AB    31 D2                     xor         dx,dx 
90AD    E9 DA FE                  jmp         L$1094 
90B0                          L$1110:
90B0    6A 51                     push        0x0051 
90B2    FF 76 FA                  push        word ptr -0x6[bp] 
90B5    FF 76 FC                  push        word ptr -0x4[bp] 
90B8    B9 05 00                  mov         cx,0x0005 
90BB    68 B4 00                  push        0x00b4 
90BE    BB 6E 00                  mov         bx,0x006e 
90C1    0E                        push        cs 
90C2    E8 00 00                  call        window_textbox_ 
90C5    85 D2                     test        dx,dx 
90C7    75 04                     jne         L$1111 
90C9    85 C0                     test        ax,ax 
90CB    74 C5                     je          L$1106 
90CD                          L$1111:
90CD    68 80 00                  push        0x0080 
90D0    BB 6E 00                  mov         bx,0x006e 
90D3    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
90D9    16                        push        ss 
90DA    89 F0                     mov         ax,si 
90DC    68 DF 02                  push        offset DGROUP:L$1786 
90DF    89 FA                     mov         dx,di 
90E1    68 B4 00                  push        0x00b4 
90E4    83 C1 0D                  add         cx,0x000d 
90E7    0E                        push        cs 
90E8    E8 00 00                  call        window_textbox_ 
90EB    85 D2                     test        dx,dx 
90ED    75 04                     jne         L$1112 
90EF    85 C0                     test        ax,ax 
90F1    74 9F                     je          L$1106 
90F3                          L$1112:
90F3    6A 44                     push        0x0044 
90F5    BB 6E 00                  mov         bx,0x006e 
90F8    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
90FE    89 F0                     mov         ax,si 
9100    16                        push        ss 
9101    89 FA                     mov         dx,di 
9103    68 DF 02                  push        offset DGROUP:L$1786 
9106    01 C9                     add         cx,cx 
9108    68 B4 00                  push        0x00b4 
910B    83 C1 15                  add         cx,0x0015 
910E    0E                        push        cs 
910F    E8 00 00                  call        window_textbox_ 
9112    85 D2                     test        dx,dx 
9114    75 06                     jne         L$1113 
9116    85 C0                     test        ax,ax 
9118    0F 84 76 FF               je          L$1106 
911C                          L$1113:
911C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9122    50                        push        ax 
9123    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
9129    89 C2                     mov         dx,ax 
912B    05 08 00                  add         ax,0x0008 
912E    6B C8 03                  imul        cx,ax,0x0003 
9131    16                        push        ss 
9132    68 E0 02                  push        offset DGROUP:L$1787 
9135    42                        inc         dx 
9136    42                        inc         dx 
9137    52                        push        dx 
9138    BB 0A 00                  mov         bx,0x000a 
913B    6A 32                     push        0x0032 
913D    89 FA                     mov         dx,di 
913F    83 C1 05                  add         cx,0x0005 
9142    89 F0                     mov         ax,si 
9144    0E                        push        cs 
9145    E8 00 00                  call        window_button_ 
9148    85 D2                     test        dx,dx 
914A    75 06                     jne         L$1114 
914C    85 C0                     test        ax,ax 
914E    0F 84 40 FF               je          L$1106 
9152                          L$1114:
9152    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9158    50                        push        ax 
9159    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
915F    89 C1                     mov         cx,ax 
9161    83 C1 08                  add         cx,0x0008 
9164    6B C9 03                  imul        cx,0x0003 
9167    16                        push        ss 
9168    89 C2                     mov         dx,ax 
916A    68 E5 02                  push        offset DGROUP:L$1788 
916D    42                        inc         dx 
916E    42                        inc         dx 
916F    BB 46 00                  mov         bx,0x0046 
9172    52                        push        dx 
9173    89 F0                     mov         ax,si 
9175    6A 64                     push        0x0064 
9177    89 FA                     mov         dx,di 
9179    83 C1 05                  add         cx,0x0005 
917C    0E                        push        cs 
917D    E8 00 00                  call        window_button_ 
9180    85 D2                     test        dx,dx 
9182    75 06                     jne         L$1115 
9184    85 C0                     test        ax,ax 
9186    0F 84 08 FF               je          L$1106 
918A                          L$1115:
918A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9190    50                        push        ax 
9191    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
9197    89 C2                     mov         dx,ax 
9199    05 08 00                  add         ax,0x0008 
919C    6B C8 03                  imul        cx,ax,0x0003 
919F    16                        push        ss 
91A0    68 F2 02                  push        offset DGROUP:L$1789 
91A3    42                        inc         dx 
91A4    42                        inc         dx 
91A5    52                        push        dx 
91A6    BB B4 00                  mov         bx,0x00b4 
91A9    6A 50                     push        0x0050 
91AB    89 FA                     mov         dx,di 
91AD    83 C1 05                  add         cx,0x0005 
91B0    89 F0                     mov         ax,si 
91B2    0E                        push        cs 
91B3    E8 00 00                  call        window_button_ 
91B6    85 D2                     test        dx,dx 
91B8    75 06                     jne         L$1116 
91BA    85 C0                     test        ax,ax 
91BC    0F 84 D2 FE               je          L$1106 
91C0                          L$1116:
91C0    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
91C6    B9 05 00                  mov         cx,0x0005 
91C9    50                        push        ax 
91CA    89 FA                     mov         dx,di 
91CC    16                        push        ss 
91CD    89 CB                     mov         bx,cx 
91CF    68 FE 02                  push        offset DGROUP:L$1790 
91D2    89 F0                     mov         ax,si 
91D4    0E                        push        cs 
91D5    E8 00 00                  call        window_text_ 
91D8    85 D2                     test        dx,dx 
91DA    75 06                     jne         L$1117 
91DC    85 C0                     test        ax,ax 
91DE    0F 84 B0 FE               je          L$1106 
91E2                          L$1117:
91E2    BB 05 00                  mov         bx,0x0005 
91E5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
91EB    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
91F1    50                        push        ax 
91F2    89 FA                     mov         dx,di 
91F4    16                        push        ss 
91F5    83 C1 0D                  add         cx,0x000d 
91F8    68 0B 03                  push        offset DGROUP:L$1791 
91FB    89 F0                     mov         ax,si 
91FD    0E                        push        cs 
91FE    E8 00 00                  call        window_text_ 
9201    85 D2                     test        dx,dx 
9203    75 06                     jne         L$1118 
9205    85 C0                     test        ax,ax 
9207    0F 84 87 FE               je          L$1106 
920B                          L$1118:
920B    BB 05 00                  mov         bx,0x0005 
920E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9214    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
921A    89 FA                     mov         dx,di 
921C    50                        push        ax 
921D    01 C9                     add         cx,cx 
921F    16                        push        ss 
9220    83 C1 15                  add         cx,0x0015 
9223    68 15 03                  push        offset DGROUP:L$1792 
9226    89 F0                     mov         ax,si 
9228    0E                        push        cs 
9229    E8 00 00                  call        window_text_ 
922C    85 D2                     test        dx,dx 
922E    75 06                     jne         L$1119 
9230    85 C0                     test        ax,ax 
9232    0F 84 5C FE               je          L$1106 
9236                          L$1119:
9236    B9 01 00                  mov         cx,0x0001 
9239    89 F0                     mov         ax,si 
923B    89 FA                     mov         dx,di 
923D    89 CB                     mov         bx,cx 
923F    0E                        push        cs 
9240    E8 00 00                  call        draw_window_ 
9243    8E DF                     mov         ds,di 
9245    89 F0                     mov         ax,si 
9247    89 FA                     mov         dx,di 
9249    E9 3A FD                  jmp         L$1093 

Routine Size: 2415 bytes,    Routine Base: main_TEXT + 88DD

924C                          dostime_:
924C    53                        push        bx 
924D    51                        push        cx 
924E    C8 0E 00 00               enter       0x000e,0x00 
9252    8D 5E F2                  lea         bx,-0xe[bp] 
9255    B8 21 00                  mov         ax,0x0021 
9258    16                        push        ss 
9259    8C D1                     mov         cx,ss 
925B    53                        push        bx 
925C    C6 46 F3 2C               mov         byte ptr -0xd[bp],0x2c 
9260    9A 00 00 00 00            call        int86_ 
9265    8A 46 F7                  mov         al,byte ptr -0x9[bp] 
9268    36 A2 FB 01               mov         byte ptr ss:L$1933,al 
926C    8A 46 F6                  mov         al,byte ptr -0xa[bp] 
926F    36 A2 FC 01               mov         byte ptr ss:L$1934,al 
9273    8A 46 F9                  mov         al,byte ptr -0x7[bp] 
9276    36 A2 FD 01               mov         byte ptr ss:L$1935,al 
927A    8A 46 F8                  mov         al,byte ptr -0x8[bp] 
927D    8C D2                     mov         dx,ss 
927F    36 A2 FE 01               mov         byte ptr ss:L$1936,al 
9283    B8 FB 01                  mov         ax,offset DGROUP:L$1933 
9286                          L$1120:
9286    C9                        leave       
9287    59                        pop         cx 
9288    5B                        pop         bx 
9289    CB                        retf        

Routine Size: 62 bytes,    Routine Base: main_TEXT + 924C

928A                          dosdate_:
928A    53                        push        bx 
928B    51                        push        cx 
928C    C8 0E 00 00               enter       0x000e,0x00 
9290    8D 5E F2                  lea         bx,-0xe[bp] 
9293    B8 21 00                  mov         ax,0x0021 
9296    16                        push        ss 
9297    8C D1                     mov         cx,ss 
9299    53                        push        bx 
929A    C6 46 F3 2A               mov         byte ptr -0xd[bp],0x2a 
929E    9A 00 00 00 00            call        int86_ 
92A3    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
92A6    36 A3 FF 01               mov         word ptr ss:L$1937,ax 
92AA    8A 46 F9                  mov         al,byte ptr -0x7[bp] 
92AD    36 A2 01 02               mov         byte ptr ss:L$1938,al 
92B1    8A 46 F8                  mov         al,byte ptr -0x8[bp] 
92B4    36 A2 02 02               mov         byte ptr ss:L$1939,al 
92B8    8A 46 F2                  mov         al,byte ptr -0xe[bp] 
92BB    8C D2                     mov         dx,ss 
92BD    36 A2 03 02               mov         byte ptr ss:L$1940,al 
92C1    B8 FF 01                  mov         ax,offset DGROUP:L$1937 
92C4    EB C0                     jmp         L$1120 

Routine Size: 60 bytes,    Routine Base: main_TEXT + 928A

92C6                          human_date_:
92C6    53                        push        bx 
92C7    51                        push        cx 
92C8    56                        push        si 
92C9    0E                        push        cs 
92CA    E8 00 00                  call        dosdate_ 
92CD    89 C3                     mov         bx,ax 
92CF    89 D1                     mov         cx,dx 
92D1    0E                        push        cs 
92D2    E8 00 00                  call        dostime_ 
92D5    89 C6                     mov         si,ax 
92D7    8E DA                     mov         ds,dx 
92D9    0F B6 44 02               movzx       ax,byte ptr 0x2[si] 
92DD    50                        push        ax 
92DE    0F B6 44 01               movzx       ax,byte ptr 0x1[si] 
92E2    50                        push        ax 
92E3    0F B6 04                  movzx       ax,byte ptr [si] 
92E6    50                        push        ax 
92E7    8E D9                     mov         ds,cx 
92E9    FF 37                     push        word ptr [bx] 
92EB    0F B6 47 02               movzx       ax,byte ptr 0x2[bx] 
92EF    50                        push        ax 
92F0    0F B6 47 03               movzx       ax,byte ptr 0x3[bx] 
92F4    0F B6 5F 04               movzx       bx,byte ptr 0x4[bx] 
92F8    50                        push        ax 
92F9    C1 E3 02                  shl         bx,0x02 
92FC    66 36 FF B7 00 00         push        dword ptr ss:_weekdays[bx] 
9302    16                        push        ss 
9303    68 27 03                  push        offset DGROUP:L$1793 
9306    16                        push        ss 
9307    68 05 02                  push        offset DGROUP:L$1941 
930A    8C D2                     mov         dx,ss 
930C    9A 00 00 00 00            call        sprintf_ 
9311    B8 05 02                  mov         ax,offset DGROUP:L$1941 
9314    83 C4 18                  add         sp,0x0018 
9317    E9 58 95                  jmp         L$376 

Routine Size: 84 bytes,    Routine Base: main_TEXT + 92C6

931A                          shortdelay_:
931A    53                        push        bx 
931B    51                        push        cx 
931C    C8 14 00 00               enter       0x0014,0x00 
9320    C6 46 ED 86               mov         byte ptr -0x13[bp],0x86 
9324    8D 5E EC                  lea         bx,-0x14[bp] 
9327    89 46 F2                  mov         word ptr -0xe[bp],ax 
932A    8C D1                     mov         cx,ss 
932C    B8 15 00                  mov         ax,0x0015 
932F    89 56 F0                  mov         word ptr -0x10[bp],dx 
9332    9A 00 00 00 00            call        intr_ 
9337    E9 4C FF                  jmp         L$1120 
933A                          clock_program_:
933A    51                        push        cx 
933B    56                        push        si 
933C    57                        push        di 
933D    C8 02 00 00               enter       0x0002,0x00 
9341    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
9344    89 C6                     mov         si,ax 
9346    89 56 FE                  mov         word ptr -0x2[bp],dx 
9349    8B 56 0E                  mov         dx,word ptr 0xe[bp] 
934C    85 D2                     test        dx,dx 
934E    75 04                     jne         L$1121 
9350    85 DB                     test        bx,bx 
9352    74 2A                     je          L$1123 
9354                          L$1121:
9354    8E DA                     mov         ds,dx 
9356    8B 07                     mov         ax,word ptr [bx] 
9358    85 C0                     test        ax,ax 
935A    75 17                     jne         L$1122 
935C    9A 00 00 00 00            call        getch_ 
9361    89 C7                     mov         di,ax 
9363    E8 00 00                  call        desktop_iconmov_ 
9366    89 F8                     mov         ax,di 
9368    E8 00 00                  call        desktop_iconnav_ 
936B    8E DA                     mov         ds,dx 
936D    C7 07 FF FF               mov         word ptr [bx],0xffff 
9371    EB 0B                     jmp         L$1123 
9373                          L$1122:
9373    3D 0D 00                  cmp         ax,0x000d 
9376    75 06                     jne         L$1123 
9378    B8 46 00                  mov         ax,0x0046 
937B    E9 7F F9                  jmp         L$1061 
937E                          L$1123:
937E    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
9382    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
9387    0F 85 6F F9               jne         L$1060 
938B    0E                        push        cs 
938C    E8 00 00                  call        dostime_ 
938F    89 C3                     mov         bx,ax 
9391    8E DA                     mov         ds,dx 
9393    0F B6 47 02               movzx       ax,byte ptr 0x2[bx] 
9397    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
939A    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
939D    3B 07                     cmp         ax,word ptr [bx] 
939F    0F 84 57 F9               je          L$1060 
93A3    31 C0                     xor         ax,ax 
93A5    36 A3 00 00               mov         word ptr ss:_running_window,ax 
93A9    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
93AD    0E                        push        cs 
93AE    E8 00 00                  call        dostime_ 
93B1    89 C3                     mov         bx,ax 
93B3    8E DA                     mov         ds,dx 
93B5    0F B6 47 02               movzx       ax,byte ptr 0x2[bx] 
93B9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
93BC    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
93BF    89 07                     mov         word ptr [bx],ax 
93C1    0E                        push        cs 
93C2    E8 00 00                  call        human_date_ 
93C5    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
93C8    C5 7C 18                  lds         di,dword ptr 0x18[si] 
93CB    C5 1D                     lds         bx,dword ptr [di] 
93CD    89 47 0C                  mov         word ptr 0xc[bx],ax 
93D0    B9 03 00                  mov         cx,0x0003 
93D3    89 57 0E                  mov         word ptr 0xe[bx],dx 
93D6    BB 01 00                  mov         bx,0x0001 
93D9    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
93DC    89 F0                     mov         ax,si 
93DE    0E                        push        cs 
93DF    E8 00 00                  call        draw_window_ 
93E2    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
93E5    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
93E8    C5 37                     lds         si,dword ptr [bx] 
93EA    66 C7 44 0C 00 00 00 00
                                  mov         dword ptr 0xc[si],0x00000000 
93F2    E9 05 F9                  jmp         L$1060 
93F5                          init_clock_window_:
93F5    53                        push        bx 
93F6    51                        push        cx 
93F7    56                        push        si 
93F8    57                        push        di 
93F9    68 00 00                  push        seg clock_program_ 
93FC    BB 96 00                  mov         bx,0x0096 
93FF    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
9405    68 00 00                  push        offset clock_program_ 
9408    89 C1                     mov         cx,ax 
940A    89 C2                     mov         dx,ax 
940C    16                        push        ss 
940D    41                        inc         cx 
940E    41                        inc         cx 
940F    01 C2                     add         dx,ax 
9411    68 44 03                  push        offset DGROUP:L$1794 
9414    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
9418    83 C2 04                  add         dx,0x0004 
941B    6A 01                     push        0x0001 
941D    29 D0                     sub         ax,dx 
941F    6A 00                     push        0x0000 
9421    89 C2                     mov         dx,ax 
9423    16                        push        ss 
9424    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
9428    68 6D 00                  push        offset DGROUP:L$1731 
942B    2D 96 00                  sub         ax,0x0096 
942E    0E                        push        cs 
942F    E8 00 00                  call        new_window_ 
9432    89 C6                     mov         si,ax 
9434    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
943A    B9 01 00                  mov         cx,0x0001 
943D    50                        push        ax 
943E    BB 05 00                  mov         bx,0x0005 
9441    6A 00                     push        0x0000 
9443    89 F0                     mov         ax,si 
9445    6A 00                     push        0x0000 
9447    89 D7                     mov         di,dx 
9449    0E                        push        cs 
944A    E8 00 00                  call        window_text_ 
944D    B8 02 00                  mov         ax,0x0002 
9450    9A 00 00 00 00            call        malloc_ 
9455    8E DF                     mov         ds,di 
9457    89 44 3A                  mov         word ptr 0x3a[si],ax 
945A    89 54 3C                  mov         word ptr 0x3c[si],dx 
945D    36 A1 00 00               mov         ax,word ptr ss:_desktop_menu 
9461    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_menu+0x2 
9466    89 44 1C                  mov         word ptr 0x1c[si],ax 
9469    89 54 1E                  mov         word ptr 0x1e[si],dx 
946C    80 4C 17 02               or          byte ptr 0x17[si],0x02 
9470    E9 FA 94                  jmp         L$378 
9473                          get_file_assoc_:
9473    53                        push        bx 
9474    51                        push        cx 
9475    56                        push        si 
9476    57                        push        di 
9477    C8 04 00 00               enter       0x0004,0x00 
947B    50                        push        ax 
947C    52                        push        dx 
947D    BB BC 00                  mov         bx,offset DGROUP:L$1744 
9480    B8 54 03                  mov         ax,offset DGROUP:L$1795 
9483    8C D1                     mov         cx,ss 
9485    8C D2                     mov         dx,ss 
9487    9A 00 00 00 00            call        fopen_ 
948C    89 C3                     mov         bx,ax 
948E    89 56 FC                  mov         word ptr -0x4[bp],dx 
9491    85 D2                     test        dx,dx 
9493    75 06                     jne         L$1124 
9495    85 C0                     test        ax,ax 
9497    0F 84 0E FC               je          L$1109 
949B                          L$1124:
949B    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
949E    8B 4E FA                  mov         cx,word ptr -0x6[bp] 
94A1    89 46 FE                  mov         word ptr -0x2[bp],ax 
94A4                          L$1125:
94A4    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
94A7    F6 47 0A 10               test        byte ptr 0xa[bx],0x10 
94AB    0F 85 6F 00               jne         L$1133 
94AF    31 F6                     xor         si,si 
94B1    EB 06                     jmp         L$1127 
94B3                          L$1126:
94B3    46                        inc         si 
94B4    83 FE 56                  cmp         si,0x0056 
94B7    73 22                     jae         L$1129 
94B9                          L$1127:
94B9    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
94BC    89 D8                     mov         ax,bx 
94BE    9A 00 00 00 00            call        fgetc_ 
94C3    36 88 84 55 02            mov         byte ptr ss:L$1942[si],al 
94C8    3C 0A                     cmp         al,0x0a 
94CA    74 09                     je          L$1128 
94CC    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
94CF    F6 47 0A 10               test        byte ptr 0xa[bx],0x10 
94D3    74 DE                     je          L$1126 
94D5                          L$1128:
94D5    36 C6 84 55 02 00         mov         byte ptr ss:L$1942[si],0x00 
94DB                          L$1129:
94DB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
94DE    89 CF                     mov         di,cx 
94E0    31 F6                     xor         si,si 
94E2    EB 07                     jmp         L$1131 
94E4                          L$1130:
94E4    46                        inc         si 
94E5    47                        inc         di 
94E6    83 FE 03                  cmp         si,0x0003 
94E9    73 09                     jae         L$1132 
94EB                          L$1131:
94EB    8A 05                     mov         al,byte ptr [di] 
94ED    36 3A 84 55 02            cmp         al,byte ptr ss:L$1942[si] 
94F2    74 F0                     je          L$1130 
94F4                          L$1132:
94F4    8B 7E FA                  mov         di,word ptr -0x6[bp] 
94F7    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
94FA    01 F7                     add         di,si 
94FC    80 3D 00                  cmp         byte ptr [di],0x00 
94FF    75 A3                     jne         L$1125 
9501    36 80 BC 55 02 20         cmp         byte ptr ss:L$1942[si],0x20 
9507    75 9B                     jne         L$1125 
9509    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
950C    89 D8                     mov         ax,bx 
950E    9A 00 00 00 00            call        fclose_ 
9513    8D 44 01                  lea         ax,0x1[si] 
9516    8C D2                     mov         dx,ss 
9518    05 55 02                  add         ax,offset DGROUP:L$1942 
951B    E9 6C FA                  jmp         L$1094 
951E                          L$1133:
951E    89 D8                     mov         ax,bx 
9520    8C DA                     mov         dx,ds 
9522    9A 00 00 00 00            call        fclose_ 
9527    E9 7F FB                  jmp         L$1109 
952A                          getfileinfo_:
952A    51                        push        cx 
952B    56                        push        si 
952C    C8 2C 00 00               enter       0x002c,0x00 
9530    89 DE                     mov         si,bx 
9532    16                        push        ss 
9533    8D 4E D4                  lea         cx,-0x2c[bp] 
9536    51                        push        cx 
9537    BB FF 00                  mov         bx,0x00ff 
953A    9A 00 00 00 00            call        _dos_findfirst_ 
953F    85 C0                     test        ax,ax 
9541    74 07                     je          L$1134 
9543    B8 FF FF                  mov         ax,0xffff 
9546    89 C2                     mov         dx,ax 
9548    EB 1E                     jmp         L$1136 
954A                          L$1134:
954A    85 F6                     test        si,si 
954C    74 14                     je          L$1135 
954E    8B 46 EA                  mov         ax,word ptr -0x16[bp] 
9551    36 89 04                  mov         word ptr ss:[si],ax 
9554    8B 46 EC                  mov         ax,word ptr -0x14[bp] 
9557    36 89 44 02               mov         word ptr ss:0x2[si],ax 
955B    8A 46 E9                  mov         al,byte ptr -0x17[bp] 
955E    36 88 44 04               mov         byte ptr ss:0x4[si],al 
9562                          L$1135:
9562    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
9565    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
9568                          L$1136:
9568    C9                        leave       
9569    5E                        pop         si 
956A    59                        pop         cx 
956B    C3                        ret         
956C                          check_drive_status_:
956C    53                        push        bx 
956D    51                        push        cx 
956E    89 C3                     mov         bx,ax 
9570    8E DA                     mov         ds,dx 
9572    80 3F 00                  cmp         byte ptr [bx],0x00 
9575    74 06                     je          L$1137 
9577    80 7F 01 3A               cmp         byte ptr 0x1[bx],0x3a 
957B    74 04                     je          L$1138 
957D                          L$1137:
957D    31 C0                     xor         ax,ax 
957F    EB 06                     jmp         L$1139 
9581                          L$1138:
9581    8A 07                     mov         al,byte ptr [bx] 
9583    24 1F                     and         al,0x1f 
9585    30 E4                     xor         ah,ah 
9587                          L$1139:
9587    BB AB 02                  mov         bx,offset DGROUP:L$1943 
958A    8C D1                     mov         cx,ss 
958C    9A 00 00 00 00            call        _dos_getdiskfree_ 
9591    85 C0                     test        ax,ax 
9593    75 08                     jne         L$1140 
9595    B8 AB 02                  mov         ax,offset DGROUP:L$1943 
9598    8C D2                     mov         dx,ss 
959A    59                        pop         cx 
959B    5B                        pop         bx 
959C    C3                        ret         
959D                          L$1140:
959D    31 C0                     xor         ax,ax 
959F    31 D2                     xor         dx,dx 
95A1    59                        pop         cx 
95A2    5B                        pop         bx 
95A3    C3                        ret         
95A4                          get_dir_contents_:
95A4    56                        push        si 
95A5    57                        push        di 
95A6    C8 8A 00 00               enter       0x008a,0x00 
95AA    50                        push        ax 
95AB    52                        push        dx 
95AC    83 ED 78                  sub         bp,0x0078 
95AF    51                        push        cx 
95B0    53                        push        bx 
95B1    52                        push        dx 
95B2    50                        push        ax 
95B3    16                        push        ss 
95B4    68 97 01                  push        offset DGROUP:L$1766 
95B7    16                        push        ss 
95B8    8D 56 EE                  lea         dx,-0x12[bp] 
95BB    52                        push        dx 
95BC    BB 10 00                  mov         bx,0x0010 
95BF    9A 00 00 00 00            call        sprintf_ 
95C4    83 C4 10                  add         sp,0x0010 
95C7    8D 56 40                  lea         dx,0x40[bp] 
95CA    16                        push        ss 
95CB    8D 46 EE                  lea         ax,-0x12[bp] 
95CE    52                        push        dx 
95CF    8C D2                     mov         dx,ss 
95D1    9A 00 00 00 00            call        _dos_findfirst_ 
95D6    89 C2                     mov         dx,ax 
95D8    8B 86 84 00               mov         ax,word ptr 0x84[bp] 
95DC    03 86 86 00               add         ax,word ptr 0x86[bp] 
95E0    89 46 6E                  mov         word ptr 0x6e[bp],ax 
95E3    8B 86 84 00               mov         ax,word ptr 0x84[bp] 
95E7    C1 E0 02                  shl         ax,0x02 
95EA    8B 9E 80 00               mov         bx,word ptr 0x80[bp] 
95EE    F7 D8                     neg         ax 
95F0    C7 46 74 00 00            mov         word ptr 0x74[bp],0x0000 
95F5    01 C3                     add         bx,ax 
95F7    8B 86 82 00               mov         ax,word ptr 0x82[bp] 
95FB    89 5E 76                  mov         word ptr 0x76[bp],bx 
95FE    89 46 72                  mov         word ptr 0x72[bp],ax 
9601                          L$1141:
9601    85 D2                     test        dx,dx 
9603    0F 85 B9 00               jne         L$1147 
9607    FF 46 74                  inc         word ptr 0x74[bp] 
960A    8B 46 74                  mov         ax,word ptr 0x74[bp] 
960D    83 46 76 04               add         word ptr 0x76[bp],0x0004 
9611    3B 46 6E                  cmp         ax,word ptr 0x6e[bp] 
9614    0F 87 A8 00               ja          L$1147 
9618    3B 86 84 00               cmp         ax,word ptr 0x84[bp] 
961C    0F 86 91 00               jbe         L$1146 
9620    83 BE 82 00 00            cmp         word ptr 0x82[bp],0x0000 
9625    75 09                     jne         L$1142 
9627    83 BE 80 00 00            cmp         word ptr 0x80[bp],0x0000 
962C    0F 84 81 00               je          L$1146 
9630                          L$1142:
9630    B8 0E 00                  mov         ax,0x000e 
9633    8B 5E 76                  mov         bx,word ptr 0x76[bp] 
9636    9A 00 00 00 00            call        malloc_ 
963B    8E 5E 72                  mov         ds,word ptr 0x72[bp] 
963E    89 47 FC                  mov         word ptr -0x4[bx],ax 
9641    89 DF                     mov         di,bx 
9643    89 57 FE                  mov         word ptr -0x2[bx],dx 
9646    89 56 70                  mov         word ptr 0x70[bp],dx 
9649    8B 7D FC                  mov         di,word ptr -0x4[di] 
964C    85 D2                     test        dx,dx 
964E    75 09                     jne         L$1143 
9650    85 FF                     test        di,di 
9652    75 05                     jne         L$1143 
9654    B8 FF FF                  mov         ax,0xffff 
9657    EB 74                     jmp         L$1148 
9659                          L$1143:
9659    16                        push        ss 
965A    8D 56 5E                  lea         dx,0x5e[bp] 
965D    52                        push        dx 
965E    FF 76 EA                  push        word ptr -0x16[bp] 
9661    FF 76 EC                  push        word ptr -0x14[bp] 
9664    16                        push        ss 
9665    68 97 01                  push        offset DGROUP:L$1766 
9668    8D 56 EE                  lea         dx,-0x12[bp] 
966B    16                        push        ss 
966C    8D 5E 6C                  lea         bx,0x6c[bp] 
966F    52                        push        dx 
9670    8C D1                     mov         cx,ss 
9672    9A 00 00 00 00            call        sprintf_ 
9677    8D 46 EE                  lea         ax,-0x12[bp] 
967A    83 C4 10                  add         sp,0x0010 
967D    8C D2                     mov         dx,ss 
967F    9A 00 00 00 00            call        _dos_getfileattr_ 
9684    F6 46 6C 10               test        byte ptr 0x6c[bp],0x10 
9688    74 17                     je          L$1144 
968A    16                        push        ss 
968B    8D 56 5E                  lea         dx,0x5e[bp] 
968E    52                        push        dx 
968F    16                        push        ss 
9690    68 61 03                  push        offset DGROUP:L$1796 
9693    FF 76 70                  push        word ptr 0x70[bp] 
9696    57                        push        di 
9697    9A 00 00 00 00            call        sprintf_ 
969C    83 C4 0C                  add         sp,0x000c 
969F    EB 10                     jmp         L$1146 
96A1                          L$1144:
96A1    8D 76 5E                  lea         si,0x5e[bp] 
96A4    8E 46 70                  mov         es,word ptr 0x70[bp] 
96A7    16                        push        ss 
96A8    1F                        pop         ds 
96A9    57                        push        di 
96AA                          L$1145:
96AA    AC                        lodsb       
96AB    AA                        stosb       
96AC    3C 00                     cmp         al,0x00 
96AE    75 FA                     jne         L$1145 
96B0    5F                        pop         di 
96B1                          L$1146:
96B1    8D 46 40                  lea         ax,0x40[bp] 
96B4    8C D2                     mov         dx,ss 
96B6    9A 00 00 00 00            call        _dos_findnext_ 
96BB    89 C2                     mov         dx,ax 
96BD    E9 41 FF                  jmp         L$1141 
96C0                          L$1147:
96C0    8B 46 74                  mov         ax,word ptr 0x74[bp] 
96C3    2B 86 84 00               sub         ax,word ptr 0x84[bp] 
96C7    85 C0                     test        ax,ax 
96C9    7D 02                     jge         L$1148 
96CB    31 C0                     xor         ax,ax 
96CD                          L$1148:
96CD    8D 66 78                  lea         sp,0x78[bp] 
96D0    5D                        pop         bp 
96D1    E9 9E A9                  jmp         L$526 
96D4                          goto_dir_:
96D4    56                        push        si 
96D5    57                        push        di 
96D6    89 C6                     mov         si,ax 
96D8    8E D9                     mov         ds,cx 
96DA    8A 07                     mov         al,byte ptr [bx] 
96DC    3C 2E                     cmp         al,0x2e 
96DE    75 3F                     jne         L$1151 
96E0    8A 4F 01                  mov         cl,byte ptr 0x1[bx] 
96E3    80 F9 5C                  cmp         cl,0x5c 
96E6    74 49                     je          L$1152 
96E8    38 C1                     cmp         cl,al 
96EA    75 33                     jne         L$1151 
96EC    80 7F 02 5C               cmp         byte ptr 0x2[bx],0x5c 
96F0    75 2D                     jne         L$1151 
96F2    89 F7                     mov         di,si 
96F4    8E C2                     mov         es,dx 
96F6    89 F3                     mov         bx,si 
96F8    B9 FF FF                  mov         cx,0xffff 
96FB    33 C0                     xor         ax,ax 
96FD    F2 AE                     repne scasb 
96FF    F7 D1                     not         cx 
9701    49                        dec         cx 
9702    01 CB                     add         bx,cx 
9704    8E DA                     mov         ds,dx 
9706    4B                        dec         bx 
9707    4B                        dec         bx 
9708                          L$1149:
9708    83 C3 FF                  add         bx,0xffff 
970B    80 3F 5C                  cmp         byte ptr [bx],0x5c 
970E    74 04                     je          L$1150 
9710    39 F3                     cmp         bx,si 
9712    73 F4                     jae         L$1149 
9714                          L$1150:
9714    43                        inc         bx 
9715    80 3F 00                  cmp         byte ptr [bx],0x00 
9718    74 17                     je          L$1152 
971A    C6 07 00                  mov         byte ptr [bx],0x00 
971D    EB F5                     jmp         L$1150 
971F                          L$1151:
971F    1E                        push        ds 
9720    53                        push        bx 
9721    52                        push        dx 
9722    56                        push        si 
9723    16                        push        ss 
9724    68 97 01                  push        offset DGROUP:L$1766 
9727    52                        push        dx 
9728    56                        push        si 
9729    9A 00 00 00 00            call        sprintf_ 
972E    83 C4 10                  add         sp,0x0010 
9731                          L$1152:
9731    5F                        pop         di 
9732    5E                        pop         si 
9733    C3                        ret         
9734                          openfile_program_:
9734    51                        push        cx 
9735    56                        push        si 
9736    57                        push        di 
9737    55                        push        bp 
9738    89 E5                     mov         bp,sp 
973A    8B 7E 0C                  mov         di,word ptr 0xc[bp] 
973D    89 C6                     mov         si,ax 
973F    8E DA                     mov         ds,dx 
9741    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
9744    85 C0                     test        ax,ax 
9746    75 04                     jne         L$1153 
9748    85 FF                     test        di,di 
974A    74 15                     je          L$1155 
974C                          L$1153:
974C    8E C0                     mov         es,ax 
974E    26 8B 0D                  mov         cx,word ptr es:[di] 
9751    83 F9 0D                  cmp         cx,0x000d 
9754    75 03                     jne         L$1154 
9756    BB 00 80                  mov         bx,0x8000 
9759                          L$1154:
9759    8E 46 0E                  mov         es,word ptr 0xe[bp] 
975C    26 C7 05 FF FF            mov         word ptr es:[di],0xffff 
9761                          L$1155:
9761    81 FB 00 80               cmp         bx,0x8000 
9765    74 06                     je          L$1156 
9767    81 FB 01 80               cmp         bx,0x8001 
976B    75 25                     jne         L$1157 
976D                          L$1156:
976D    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
9772    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
9775    6A 00                     push        0x0000 
9777    C4 77 0C                  les         si,dword ptr 0xc[bx] 
977A    26 FF 74 0E               push        word ptr es:0xe[si] 
977E    31 C0                     xor         ax,ax 
9780    26 FF 74 0C               push        word ptr es:0xc[si] 
9784    C5 37                     lds         si,dword ptr [bx] 
9786    31 D2                     xor         dx,dx 
9788    8B 5C 0C                  mov         bx,word ptr 0xc[si] 
978B    8B 4C 0E                  mov         cx,word ptr 0xe[si] 
978E    0E                        push        cs 
978F    E8 00 00                  call        run_program_ 
9792                          L$1157:
9792    B8 FF 7F                  mov         ax,0x7fff 
9795                          L$1158:
9795    5D                        pop         bp 
9796    E9 65 F5                  jmp         L$1062 
9799                          init_openfile_window_:
9799    53                        push        bx 
979A    51                        push        cx 
979B    56                        push        si 
979C    57                        push        di 
979D    C8 04 00 00               enter       0x0004,0x00 
97A1    50                        push        ax 
97A2    52                        push        dx 
97A3    68 00 00                  push        seg openfile_program_ 
97A6    68 00 00                  push        offset openfile_program_ 
97A9    66 6A 00                  pushd       0x00000000 
97AC    6A 01                     push        0x0001 
97AE    B9 6E 00                  mov         cx,0x006e 
97B1    6A 01                     push        0x0001 
97B3    BB C8 00                  mov         bx,0x00c8 
97B6    16                        push        ss 
97B7    BA FF FF                  mov         dx,0xffff 
97BA    68 65 03                  push        offset DGROUP:L$1797 
97BD    89 D0                     mov         ax,dx 
97BF    0E                        push        cs 
97C0    E8 00 00                  call        new_window_ 
97C3    89 C6                     mov         si,ax 
97C5    89 56 FE                  mov         word ptr -0x2[bp],dx 
97C8    89 C7                     mov         di,ax 
97CA    89 56 FC                  mov         word ptr -0x4[bp],dx 
97CD    85 D2                     test        dx,dx 
97CF    75 22                     jne         L$1162 
97D1    85 C0                     test        ax,ax 
97D3    75 1E                     jne         L$1162 
97D5                          L$1159:
97D5    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
97D9    75 04                     jne         L$1160 
97DB    85 FF                     test        di,di 
97DD    74 09                     je          L$1161 
97DF                          L$1160:
97DF    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
97E2    89 F8                     mov         ax,di 
97E4    0E                        push        cs 
97E5    E8 00 00                  call        del_window_ 
97E8                          L$1161:
97E8    0E                        push        cs 
97E9    E8 00 00                  call        nomemory_ 
97EC    31 C0                     xor         ax,ax 
97EE    31 D2                     xor         dx,dx 
97F0    E9 97 F7                  jmp         L$1094 
97F3                          L$1162:
97F3    6A 51                     push        0x0051 
97F5    16                        push        ss 
97F6    68 DF 02                  push        offset DGROUP:L$1786 
97F9    B9 46 00                  mov         cx,0x0046 
97FC    68 82 00                  push        0x0082 
97FF    BB 0A 00                  mov         bx,0x000a 
9802    0E                        push        cs 
9803    E8 00 00                  call        window_textbox_ 
9806    85 D2                     test        dx,dx 
9808    75 04                     jne         L$1163 
980A    85 C0                     test        ax,ax 
980C    74 C7                     je          L$1159 
980E                          L$1163:
980E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9814    50                        push        ax 
9815    B9 5A 00                  mov         cx,0x005a 
9818    16                        push        ss 
9819    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
981F    68 7C 03                  push        offset DGROUP:L$1798 
9822    40                        inc         ax 
9823    40                        inc         ax 
9824    BB 0A 00                  mov         bx,0x000a 
9827    50                        push        ax 
9828    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
982B    6A 32                     push        0x0032 
982D    89 F0                     mov         ax,si 
982F    0E                        push        cs 
9830    E8 00 00                  call        window_button_ 
9833    85 D2                     test        dx,dx 
9835    75 04                     jne         L$1164 
9837    85 C0                     test        ax,ax 
9839    74 9A                     je          L$1159 
983B                          L$1164:
983B    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9841    B9 0A 00                  mov         cx,0x000a 
9844    50                        push        ax 
9845    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9848    16                        push        ss 
9849    89 CB                     mov         bx,cx 
984B    68 7F 03                  push        offset DGROUP:L$1799 
984E    89 F0                     mov         ax,si 
9850    0E                        push        cs 
9851    E8 00 00                  call        window_text_ 
9854    85 D2                     test        dx,dx 
9856    75 06                     jne         L$1165 
9858    85 C0                     test        ax,ax 
985A    0F 84 77 FF               je          L$1159 
985E                          L$1165:
985E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9864    B9 1E 00                  mov         cx,0x001e 
9867    50                        push        ax 
9868    BB 0A 00                  mov         bx,0x000a 
986B    FF 76 F8                  push        word ptr -0x8[bp] 
986E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9871    FF 76 FA                  push        word ptr -0x6[bp] 
9874    89 F0                     mov         ax,si 
9876    0E                        push        cs 
9877    E8 00 00                  call        window_text_ 
987A    85 D2                     test        dx,dx 
987C    75 06                     jne         L$1166 
987E    85 C0                     test        ax,ax 
9880    0F 84 51 FF               je          L$1159 
9884                          L$1166:
9884    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
988A    B9 32 00                  mov         cx,0x0032 
988D    50                        push        ax 
988E    BB 0A 00                  mov         bx,0x000a 
9891    16                        push        ss 
9892    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9895    68 89 03                  push        offset DGROUP:L$1800 
9898    89 F0                     mov         ax,si 
989A    0E                        push        cs 
989B    E8 00 00                  call        window_text_ 
989E    85 D2                     test        dx,dx 
98A0    0F 85 CD F6               jne         L$1090 
98A4    85 C0                     test        ax,ax 
98A6    0F 84 2B FF               je          L$1159 
98AA    E9 C4 F6                  jmp         L$1090 
98AD                          createdir_program_:
98AD    56                        push        si 
98AE    57                        push        di 
98AF    C8 52 00 00               enter       0x0052,0x00 
98B3    8B 7E 0A                  mov         di,word ptr 0xa[bp] 
98B6    89 C6                     mov         si,ax 
98B8    8E DA                     mov         ds,dx 
98BA    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
98BD    85 C0                     test        ax,ax 
98BF    75 04                     jne         L$1167 
98C1    85 FF                     test        di,di 
98C3    74 15                     je          L$1169 
98C5                          L$1167:
98C5    8E C0                     mov         es,ax 
98C7    26 8B 05                  mov         ax,word ptr es:[di] 
98CA    3D 0D 00                  cmp         ax,0x000d 
98CD    75 03                     jne         L$1168 
98CF    BB 00 80                  mov         bx,0x8000 
98D2                          L$1168:
98D2    8E 46 0C                  mov         es,word ptr 0xc[bp] 
98D5    26 C7 05 FF FF            mov         word ptr es:[di],0xffff 
98DA                          L$1169:
98DA    81 FB 00 80               cmp         bx,0x8000 
98DE    74 06                     je          L$1170 
98E0    81 FB 01 80               cmp         bx,0x8001 
98E4    75 37                     jne         L$1171 
98E6                          L$1170:
98E6    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
98E9    C4 37                     les         si,dword ptr [bx] 
98EB    66 26 FF 74 0C            push        dword ptr es:0xc[si] 
98F0    C5 77 0C                  lds         si,dword ptr 0xc[bx] 
98F3    66 FF 74 0C               push        dword ptr 0xc[si] 
98F7    16                        push        ss 
98F8    68 97 01                  push        offset DGROUP:L$1766 
98FB    16                        push        ss 
98FC    8D 56 AE                  lea         dx,-0x52[bp] 
98FF    52                        push        dx 
9900    9A 00 00 00 00            call        sprintf_ 
9905    8D 46 AE                  lea         ax,-0x52[bp] 
9908    83 C4 10                  add         sp,0x0010 
990B    8C D2                     mov         dx,ss 
990D    9A 00 00 00 00            call        mkdir_ 
9912    36 C6 06 00 00 01         mov         byte ptr ss:_update_list,0x01 
9918    B8 02 00                  mov         ax,0x0002 
991B    EB 03                     jmp         L$1172 
991D                          L$1171:
991D    B8 FF 7F                  mov         ax,0x7fff 
9920                          L$1172:
9920    C9                        leave       
9921    5F                        pop         di 
9922    5E                        pop         si 
9923    CA 04 00                  retf        0x0004 
9926                          init_createdir_window_:
9926    53                        push        bx 
9927    51                        push        cx 
9928    56                        push        si 
9929    57                        push        di 
992A    C8 04 00 00               enter       0x0004,0x00 
992E    50                        push        ax 
992F    52                        push        dx 
9930    68 00 00                  push        seg createdir_program_ 
9933    68 00 00                  push        offset createdir_program_ 
9936    66 6A 00                  pushd       0x00000000 
9939    6A 01                     push        0x0001 
993B    B9 6E 00                  mov         cx,0x006e 
993E    6A 01                     push        0x0001 
9940    BB C8 00                  mov         bx,0x00c8 
9943    16                        push        ss 
9944    BA FF FF                  mov         dx,0xffff 
9947    68 9C 03                  push        offset DGROUP:L$1801 
994A    89 D0                     mov         ax,dx 
994C    0E                        push        cs 
994D    E8 00 00                  call        new_window_ 
9950    89 C6                     mov         si,ax 
9952    89 56 FE                  mov         word ptr -0x2[bp],dx 
9955    89 C7                     mov         di,ax 
9957    89 56 FC                  mov         word ptr -0x4[bp],dx 
995A    85 D2                     test        dx,dx 
995C    75 22                     jne         L$1176 
995E    85 C0                     test        ax,ax 
9960    75 1E                     jne         L$1176 
9962                          L$1173:
9962    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
9966    75 04                     jne         L$1174 
9968    85 FF                     test        di,di 
996A    74 09                     je          L$1175 
996C                          L$1174:
996C    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
996F    89 F8                     mov         ax,di 
9971    0E                        push        cs 
9972    E8 00 00                  call        del_window_ 
9975                          L$1175:
9975    0E                        push        cs 
9976    E8 00 00                  call        nomemory_ 
9979    31 C0                     xor         ax,ax 
997B    31 D2                     xor         dx,dx 
997D    E9 0A F6                  jmp         L$1094 
9980                          L$1176:
9980    6A 0C                     push        0x000c 
9982    16                        push        ss 
9983    68 DF 02                  push        offset DGROUP:L$1786 
9986    B9 46 00                  mov         cx,0x0046 
9989    68 82 00                  push        0x0082 
998C    BB 0A 00                  mov         bx,0x000a 
998F    0E                        push        cs 
9990    E8 00 00                  call        window_textbox_ 
9993    85 D2                     test        dx,dx 
9995    75 04                     jne         L$1177 
9997    85 C0                     test        ax,ax 
9999    74 C7                     je          L$1173 
999B                          L$1177:
999B    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
99A1    50                        push        ax 
99A2    B9 5A 00                  mov         cx,0x005a 
99A5    16                        push        ss 
99A6    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
99AC    68 7C 03                  push        offset DGROUP:L$1798 
99AF    40                        inc         ax 
99B0    40                        inc         ax 
99B1    BB 0A 00                  mov         bx,0x000a 
99B4    50                        push        ax 
99B5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
99B8    6A 32                     push        0x0032 
99BA    89 F0                     mov         ax,si 
99BC    0E                        push        cs 
99BD    E8 00 00                  call        window_button_ 
99C0    85 D2                     test        dx,dx 
99C2    75 04                     jne         L$1178 
99C4    85 C0                     test        ax,ax 
99C6    74 9A                     je          L$1173 
99C8                          L$1178:
99C8    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
99CE    B9 0A 00                  mov         cx,0x000a 
99D1    50                        push        ax 
99D2    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
99D5    16                        push        ss 
99D6    89 CB                     mov         bx,cx 
99D8    68 AD 03                  push        offset DGROUP:L$1802 
99DB    89 F0                     mov         ax,si 
99DD    0E                        push        cs 
99DE    E8 00 00                  call        window_text_ 
99E1    85 D2                     test        dx,dx 
99E3    75 06                     jne         L$1179 
99E5    85 C0                     test        ax,ax 
99E7    0F 84 77 FF               je          L$1173 
99EB                          L$1179:
99EB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
99F1    B9 1E 00                  mov         cx,0x001e 
99F4    50                        push        ax 
99F5    BB 0A 00                  mov         bx,0x000a 
99F8    FF 76 F8                  push        word ptr -0x8[bp] 
99FB    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
99FE    FF 76 FA                  push        word ptr -0x6[bp] 
9A01    89 F0                     mov         ax,si 
9A03    0E                        push        cs 
9A04    E8 00 00                  call        window_text_ 
9A07    85 D2                     test        dx,dx 
9A09    75 06                     jne         L$1180 
9A0B    85 C0                     test        ax,ax 
9A0D    0F 84 51 FF               je          L$1173 
9A11                          L$1180:
9A11    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9A17    B9 32 00                  mov         cx,0x0032 
9A1A    50                        push        ax 
9A1B    BB 0A 00                  mov         bx,0x000a 
9A1E    16                        push        ss 
9A1F    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9A22    68 C8 03                  push        offset DGROUP:L$1803 
9A25    89 F0                     mov         ax,si 
9A27    0E                        push        cs 
9A28    E8 00 00                  call        window_text_ 
9A2B    85 D2                     test        dx,dx 
9A2D    0F 85 40 F5               jne         L$1090 
9A31    85 C0                     test        ax,ax 
9A33    0F 84 2B FF               je          L$1173 
9A37    E9 37 F5                  jmp         L$1090 
9A3A                          rename_program_:
9A3A    51                        push        cx 
9A3B    56                        push        si 
9A3C    57                        push        di 
9A3D    C8 A4 00 00               enter       0x00a4,0x00 
9A41    83 ED 7C                  sub         bp,0x007c 
9A44    8B BE 88 00               mov         di,word ptr 0x88[bp] 
9A48    89 C6                     mov         si,ax 
9A4A    89 D1                     mov         cx,dx 
9A4C    8E 9E 8A 00               mov         ds,word ptr 0x8a[bp] 
9A50    8B 05                     mov         ax,word ptr [di] 
9A52    3D 0D 00                  cmp         ax,0x000d 
9A55    75 03                     jne         L$1181 
9A57    BB 00 80                  mov         bx,0x8000 
9A5A                          L$1181:
9A5A    8E 9E 8A 00               mov         ds,word ptr 0x8a[bp] 
9A5E    C7 05 FF FF               mov         word ptr [di],0xffff 
9A62    81 FB 00 80               cmp         bx,0x8000 
9A66    74 08                     je          L$1182 
9A68    81 FB 01 80               cmp         bx,0x8001 
9A6C    0F 85 E0 00               jne         L$1186 
9A70                          L$1182:
9A70    8E D9                     mov         ds,cx 
9A72    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
9A75    C4 7F 0C                  les         di,dword ptr 0xc[bx] 
9A78    66 26 FF 75 0C            push        dword ptr es:0xc[di] 
9A7D    C5 7F 18                  lds         di,dword ptr 0x18[bx] 
9A80    66 FF 75 0C               push        dword ptr 0xc[di] 
9A84    16                        push        ss 
9A85    68 97 01                  push        offset DGROUP:L$1766 
9A88    16                        push        ss 
9A89    8D 56 2A                  lea         dx,0x2a[bp] 
9A8C    52                        push        dx 
9A8D    9A 00 00 00 00            call        sprintf_ 
9A92    8E D9                     mov         ds,cx 
9A94    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
9A97    83 C4 10                  add         sp,0x0010 
9A9A    C4 37                     les         si,dword ptr [bx] 
9A9C    66 26 FF 74 0C            push        dword ptr es:0xc[si] 
9AA1    C5 77 18                  lds         si,dword ptr 0x18[bx] 
9AA4    66 FF 74 0C               push        dword ptr 0xc[si] 
9AA8    16                        push        ss 
9AA9    68 97 01                  push        offset DGROUP:L$1766 
9AAC    16                        push        ss 
9AAD    8D 56 D8                  lea         dx,-0x28[bp] 
9AB0    52                        push        dx 
9AB1    8D 7E 2A                  lea         di,0x2a[bp] 
9AB4    9A 00 00 00 00            call        sprintf_ 
9AB9    83 C4 10                  add         sp,0x0010 
9ABC    16                        push        ss 
9ABD    07                        pop         es 
9ABE    B9 FF FF                  mov         cx,0xffff 
9AC1    33 C0                     xor         ax,ax 
9AC3    F2 AE                     repne scasb 
9AC5    F7 D1                     not         cx 
9AC7    49                        dec         cx 
9AC8    89 CE                     mov         si,cx 
9ACA    80 7A 29 5C               cmp         byte ptr 0x29[bp+si],0x5c 
9ACE    75 13                     jne         L$1183 
9AD0    8D 7E 2A                  lea         di,0x2a[bp] 
9AD3    B9 FF FF                  mov         cx,0xffff 
9AD6    33 C0                     xor         ax,ax 
9AD8    F2 AE                     repne scasb 
9ADA    F7 D1                     not         cx 
9ADC    49                        dec         cx 
9ADD    89 CE                     mov         si,cx 
9ADF    C6 42 29 00               mov         byte ptr 0x29[bp+si],0x00 
9AE3                          L$1183:
9AE3    8D 7E D8                  lea         di,-0x28[bp] 
9AE6    16                        push        ss 
9AE7    07                        pop         es 
9AE8    B9 FF FF                  mov         cx,0xffff 
9AEB    33 C0                     xor         ax,ax 
9AED    F2 AE                     repne scasb 
9AEF    F7 D1                     not         cx 
9AF1    49                        dec         cx 
9AF2    89 CE                     mov         si,cx 
9AF4    80 7A D7 5C               cmp         byte ptr -0x29[bp+si],0x5c 
9AF8    75 13                     jne         L$1184 
9AFA    8D 7E D8                  lea         di,-0x28[bp] 
9AFD    B9 FF FF                  mov         cx,0xffff 
9B00    33 C0                     xor         ax,ax 
9B02    F2 AE                     repne scasb 
9B04    F7 D1                     not         cx 
9B06    49                        dec         cx 
9B07    89 CE                     mov         si,cx 
9B09    C6 42 D7 00               mov         byte ptr -0x29[bp+si],0x00 
9B0D                          L$1184:
9B0D    8D 5E D8                  lea         bx,-0x28[bp] 
9B10    8D 46 2A                  lea         ax,0x2a[bp] 
9B13    8C D1                     mov         cx,ss 
9B15    8C D2                     mov         dx,ss 
9B17    9A 00 00 00 00            call        rename_ 
9B1C    85 C0                     test        ax,ax 
9B1E    74 25                     je          L$1185 
9B20    9A 00 00 00 00            call        __get_errno_ptr_ 
9B25    89 C3                     mov         bx,ax 
9B27    8E DA                     mov         ds,dx 
9B29    FF 37                     push        word ptr [bx] 
9B2B    16                        push        ss 
9B2C    68 D7 03                  push        offset DGROUP:L$1804 
9B2F    16                        push        ss 
9B30    8D 56 2A                  lea         dx,0x2a[bp] 
9B33    52                        push        dx 
9B34    9A 00 00 00 00            call        sprintf_ 
9B39    8D 46 2A                  lea         ax,0x2a[bp] 
9B3C    83 C4 0A                  add         sp,0x000a 
9B3F    8C D2                     mov         dx,ss 
9B41    0E                        push        cs 
9B42    E8 00 00                  call        show_error_msg_ 
9B45                          L$1185:
9B45    36 C6 06 00 00 01         mov         byte ptr ss:_update_list,0x01 
9B4B    B8 02 00                  mov         ax,0x0002 
9B4E    EB 03                     jmp         L$1187 
9B50                          L$1186:
9B50    B8 FF 7F                  mov         ax,0x7fff 
9B53                          L$1187:
9B53    8D 66 7C                  lea         sp,0x7c[bp] 
9B56    E9 3C FC                  jmp         L$1158 
9B59                          init_rename_window_:
9B59    56                        push        si 
9B5A    57                        push        di 
9B5B    C8 04 00 00               enter       0x0004,0x00 
9B5F    50                        push        ax 
9B60    52                        push        dx 
9B61    53                        push        bx 
9B62    51                        push        cx 
9B63    68 00 00                  push        seg rename_program_ 
9B66    68 00 00                  push        offset rename_program_ 
9B69    66 6A 00                  pushd       0x00000000 
9B6C    6A 01                     push        0x0001 
9B6E    B9 82 00                  mov         cx,0x0082 
9B71    6A 01                     push        0x0001 
9B73    BB C8 00                  mov         bx,0x00c8 
9B76    16                        push        ss 
9B77    BA FF FF                  mov         dx,0xffff 
9B7A    68 FB 03                  push        offset DGROUP:L$1805 
9B7D    89 D0                     mov         ax,dx 
9B7F    0E                        push        cs 
9B80    E8 00 00                  call        new_window_ 
9B83    89 C6                     mov         si,ax 
9B85    89 56 FE                  mov         word ptr -0x2[bp],dx 
9B88    89 C7                     mov         di,ax 
9B8A    89 56 FC                  mov         word ptr -0x4[bp],dx 
9B8D    85 D2                     test        dx,dx 
9B8F    75 22                     jne         L$1191 
9B91    85 C0                     test        ax,ax 
9B93    75 1E                     jne         L$1191 
9B95                          L$1188:
9B95    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
9B99    75 04                     jne         L$1189 
9B9B    85 FF                     test        di,di 
9B9D    74 09                     je          L$1190 
9B9F                          L$1189:
9B9F    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
9BA2    89 F8                     mov         ax,di 
9BA4    0E                        push        cs 
9BA5    E8 00 00                  call        del_window_ 
9BA8                          L$1190:
9BA8    0E                        push        cs 
9BA9    E8 00 00                  call        nomemory_ 
9BAC    31 C0                     xor         ax,ax 
9BAE    31 D2                     xor         dx,dx 
	     9BB1		; The label referred to here is an undefined location
9BB0    E9 EE 7E                  jmp         0x00011aa1 
9BB3                          L$1191:
9BB3    6A 0C                     push        0x000c 
9BB5    16                        push        ss 
9BB6    68 DF 02                  push        offset DGROUP:L$1786 
9BB9    B9 46 00                  mov         cx,0x0046 
9BBC    68 82 00                  push        0x0082 
9BBF    BB 0A 00                  mov         bx,0x000a 
9BC2    0E                        push        cs 
9BC3    E8 00 00                  call        window_textbox_ 
9BC6    85 D2                     test        dx,dx 
9BC8    75 04                     jne         L$1192 
9BCA    85 C0                     test        ax,ax 
9BCC    74 C7                     je          L$1188 
9BCE                          L$1192:
9BCE    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9BD4    50                        push        ax 
9BD5    B9 6E 00                  mov         cx,0x006e 
9BD8    16                        push        ss 
9BD9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
9BDF    68 7C 03                  push        offset DGROUP:L$1798 
9BE2    40                        inc         ax 
9BE3    40                        inc         ax 
9BE4    BB 0A 00                  mov         bx,0x000a 
9BE7    50                        push        ax 
9BE8    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9BEB    6A 32                     push        0x0032 
9BED    89 F0                     mov         ax,si 
9BEF    0E                        push        cs 
9BF0    E8 00 00                  call        window_button_ 
9BF3    85 D2                     test        dx,dx 
9BF5    75 04                     jne         L$1193 
9BF7    85 C0                     test        ax,ax 
9BF9    74 9A                     je          L$1188 
9BFB                          L$1193:
9BFB    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9C01    B9 0A 00                  mov         cx,0x000a 
9C04    50                        push        ax 
9C05    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9C08    16                        push        ss 
9C09    89 CB                     mov         bx,cx 
9C0B    68 0C 04                  push        offset DGROUP:L$1806 
9C0E    89 F0                     mov         ax,si 
9C10    0E                        push        cs 
9C11    E8 00 00                  call        window_text_ 
9C14    85 D2                     test        dx,dx 
9C16    75 06                     jne         L$1194 
9C18    85 C0                     test        ax,ax 
9C1A    0F 84 77 FF               je          L$1188 
9C1E                          L$1194:
9C1E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9C24    B9 1E 00                  mov         cx,0x001e 
9C27    50                        push        ax 
9C28    BB 0A 00                  mov         bx,0x000a 
9C2B    FF 76 F4                  push        word ptr -0xc[bp] 
9C2E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9C31    FF 76 F6                  push        word ptr -0xa[bp] 
9C34    89 F0                     mov         ax,si 
9C36    0E                        push        cs 
9C37    E8 00 00                  call        window_text_ 
9C3A    85 D2                     test        dx,dx 
9C3C    75 06                     jne         L$1195 
9C3E    85 C0                     test        ax,ax 
9C40    0F 84 51 FF               je          L$1188 
9C44                          L$1195:
9C44    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9C4A    B9 32 00                  mov         cx,0x0032 
9C4D    50                        push        ax 
9C4E    BB 0A 00                  mov         bx,0x000a 
9C51    16                        push        ss 
9C52    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9C55    68 22 04                  push        offset DGROUP:L$1807 
9C58    89 F0                     mov         ax,si 
9C5A    0E                        push        cs 
9C5B    E8 00 00                  call        window_text_ 
9C5E    85 D2                     test        dx,dx 
9C60    75 06                     jne         L$1196 
9C62    85 C0                     test        ax,ax 
9C64    0F 84 2D FF               je          L$1188 
9C68                          L$1196:
9C68    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9C6E    B9 5A 00                  mov         cx,0x005a 
9C71    50                        push        ax 
9C72    BB 0A 00                  mov         bx,0x000a 
9C75    16                        push        ss 
9C76    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9C79    68 26 04                  push        offset DGROUP:L$1808 
9C7C    89 F0                     mov         ax,si 
9C7E    0E                        push        cs 
9C7F    E8 00 00                  call        window_text_ 
9C82    85 D2                     test        dx,dx 
9C84    75 06                     jne         L$1197 
9C86    85 C0                     test        ax,ax 
9C88    0F 84 09 FF               je          L$1188 
9C8C                          L$1197:
9C8C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
9C92    B9 5A 00                  mov         cx,0x005a 
9C95    50                        push        ax 
9C96    BB 1E 00                  mov         bx,0x001e 
9C99    FF 76 F8                  push        word ptr -0x8[bp] 
9C9C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9C9F    FF 76 FA                  push        word ptr -0x6[bp] 
9CA2    89 F0                     mov         ax,si 
9CA4    0E                        push        cs 
9CA5    E8 00 00                  call        window_text_ 
9CA8    85 D2                     test        dx,dx 
9CAA    75 06                     jne         L$1198 
9CAC    85 C0                     test        ax,ax 
9CAE    0F 84 E3 FE               je          L$1188 
9CB2                          L$1198:
9CB2    B9 01 00                  mov         cx,0x0001 
9CB5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9CB8    89 F0                     mov         ax,si 
9CBA    89 CB                     mov         bx,cx 
9CBC    0E                        push        cs 
9CBD    E8 00 00                  call        draw_window_ 
9CC0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
9CC3    89 F0                     mov         ax,si 
9CC5    8C DA                     mov         dx,ds 
9CC7    80 4C 17 02               or          byte ptr 0x17[si],0x02 
	     9CCC		; The label referred to here is an undefined location
9CCB    E9 D3 7D                  jmp         0x00011aa1 
9CCE                          checksuff_:
9CCE    56                        push        si 
9CCF    57                        push        di 
9CD0    C8 02 00 00               enter       0x0002,0x00 
9CD4    89 C6                     mov         si,ax 
9CD6    C7 46 FE 04 00            mov         word ptr -0x2[bp],0x0004 
9CDB    8E D9                     mov         ds,cx 
9CDD    8E C2                     mov         es,dx 
9CDF    EB 06                     jmp         L$1200 
9CE1                          L$1199:
9CE1    43                        inc         bx 
9CE2    FF 4E FE                  dec         word ptr -0x2[bp] 
9CE5    74 3B                     je          L$1201 
9CE7                          L$1200:
9CE7    89 F7                     mov         di,si 
9CE9    B9 FF FF                  mov         cx,0xffff 
9CEC    33 C0                     xor         ax,ax 
9CEE    F2 AE                     repne scasb 
9CF0    F7 D1                     not         cx 
9CF2    49                        dec         cx 
9CF3    2B 4E FE                  sub         cx,word ptr -0x2[bp] 
9CF6    89 F7                     mov         di,si 
9CF8    01 CF                     add         di,cx 
9CFA    26 8A 0D                  mov         cl,byte ptr es:[di] 
9CFD    3A 0F                     cmp         cl,byte ptr [bx] 
9CFF    74 E0                     je          L$1199 
9D01    89 F7                     mov         di,si 
9D03    B9 FF FF                  mov         cx,0xffff 
9D06    33 C0                     xor         ax,ax 
9D08    F2 AE                     repne scasb 
9D0A    F7 D1                     not         cx 
9D0C    49                        dec         cx 
9D0D    2B 4E FE                  sub         cx,word ptr -0x2[bp] 
9D10    89 F7                     mov         di,si 
9D12    01 CF                     add         di,cx 
9D14    0F B6 0F                  movzx       cx,byte ptr [bx] 
9D17    26 0F B6 3D               movzx       di,byte ptr es:[di] 
9D1B    83 C1 20                  add         cx,0x0020 
9D1E    39 CF                     cmp         di,cx 
9D20    74 BF                     je          L$1199 
9D22                          L$1201:
9D22    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
	     9D26		; The label referred to here is an undefined location
9D25    E9 79 7D                  jmp         0x00011aa1 
9D28                          open_file_:
9D28    56                        push        si 
9D29    57                        push        di 
9D2A    C8 54 00 00               enter       0x0054,0x00 
9D2E    50                        push        ax 
9D2F    52                        push        dx 
9D30    89 DE                     mov         si,bx 
9D32    89 4E FE                  mov         word ptr -0x2[bp],cx 
9D35    89 DF                     mov         di,bx 
9D37    8E C1                     mov         es,cx 
9D39    B9 FF FF                  mov         cx,0xffff 
9D3C    33 C0                     xor         ax,ax 
9D3E    F2 AE                     repne scasb 
9D40    F7 D1                     not         cx 
9D42    49                        dec         cx 
9D43    06                        push        es 
9D44    1F                        pop         ds 
9D45    01 CB                     add         bx,cx 
9D47    80 7F FF 5C               cmp         byte ptr -0x1[bx],0x5c 
9D4B    75 0F                     jne         L$1202 
9D4D    8B 46 AA                  mov         ax,word ptr -0x56[bp] 
9D50    89 F3                     mov         bx,si 
9D52    8C C1                     mov         cx,es 
9D54    E8 00 00                  call        goto_dir_ 
9D57    31 C0                     xor         ax,ax 
	     9D5A		; The label referred to here is an undefined location
9D59    E9 52 72                  jmp         0x00010fae 
9D5C                          L$1202:
9D5C    BB 00 00                  mov         bx,offset _comsuf 
9D5F    8C D1                     mov         cx,ss 
9D61    89 F0                     mov         ax,si 
9D63    8C C2                     mov         dx,es 
9D65    E8 00 00                  call        checksuff_ 
9D68    84 C0                     test        al,al 
9D6A    74 22                     je          L$1203 
9D6C    BB 00 00                  mov         bx,offset _exesuf 
9D6F    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9D72    8C D1                     mov         cx,ss 
9D74    89 F0                     mov         ax,si 
9D76    E8 00 00                  call        checksuff_ 
9D79    84 C0                     test        al,al 
9D7B    74 11                     je          L$1203 
9D7D    BB 00 00                  mov         bx,offset _appsuf 
9D80    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9D83    8C D1                     mov         cx,ss 
9D85    89 F0                     mov         ax,si 
9D87    E8 00 00                  call        checksuff_ 
9D8A    84 C0                     test        al,al 
9D8C    75 06                     jne         L$1204 
9D8E                          L$1203:
9D8E    B8 01 00                  mov         ax,0x0001 
	     9D92		; The label referred to here is an undefined location
9D91    E9 1A 72                  jmp         0x00010fae 
9D94                          L$1204:
9D94    BB 00 00                  mov         bx,offset _batsuf 
9D97    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9D9A    8C D1                     mov         cx,ss 
9D9C    89 F0                     mov         ax,si 
9D9E    E8 00 00                  call        checksuff_ 
9DA1    84 C0                     test        al,al 
9DA3    75 0C                     jne         L$1205 
9DA5    80 7E 08 00               cmp         byte ptr 0x8[bp],0x00 
9DA9    75 06                     jne         L$1205 
9DAB    B8 02 00                  mov         ax,0x0002 
	     9DAF		; The label referred to here is an undefined location
9DAE    E9 FD 71                  jmp         0x00010fae 
9DB1                          L$1205:
9DB1    FF 76 FE                  push        word ptr -0x2[bp] 
9DB4    56                        push        si 
9DB5    FF 76 A8                  push        word ptr -0x58[bp] 
9DB8    FF 76 AA                  push        word ptr -0x56[bp] 
9DBB    16                        push        ss 
9DBC    68 97 01                  push        offset DGROUP:L$1766 
9DBF    16                        push        ss 
9DC0    8D 56 AC                  lea         dx,-0x54[bp] 
9DC3    52                        push        dx 
9DC4    9A 00 00 00 00            call        sprintf_ 
9DC9    83 C4 10                  add         sp,0x0010 
9DCC    80 7E 08 00               cmp         byte ptr 0x8[bp],0x00 
9DD0    74 1B                     je          L$1206 
9DD2    8D 56 AC                  lea         dx,-0x54[bp] 
9DD5    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
9DDA    BB 2A 04                  mov         bx,offset DGROUP:L$1809 
9DDD    6A 00                     push        0x0000 
9DDF    8C D1                     mov         cx,ss 
9DE1    16                        push        ss 
9DE2    31 C0                     xor         ax,ax 
9DE4    52                        push        dx 
9DE5    31 D2                     xor         dx,dx 
9DE7    0E                        push        cs 
9DE8    E8 00 00                  call        run_program_ 
9DEB    EB 63                     jmp         L$1210 
9DED                          L$1206:
9DED    BB 2E 00                  mov         bx,0x002e 
9DF0    8D 46 AC                  lea         ax,-0x54[bp] 
9DF3    8C D2                     mov         dx,ss 
9DF5    E8 00 00                  call        str_char_lastocc_ 
9DF8    40                        inc         ax 
9DF9    E8 00 00                  call        get_file_assoc_ 
9DFC    85 D2                     test        dx,dx 
9DFE    75 0E                     jne         L$1207 
9E00    85 C0                     test        ax,ax 
9E02    75 0A                     jne         L$1207 
9E04    8D 46 AC                  lea         ax,-0x54[bp] 
9E07    8C D2                     mov         dx,ss 
9E09    E8 00 00                  call        init_openfile_window_ 
9E0C    EB 18                     jmp         L$1208 
9E0E                          L$1207:
9E0E    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
9E13    8D 4E AC                  lea         cx,-0x54[bp] 
9E16    6A 00                     push        0x0000 
9E18    89 C3                     mov         bx,ax 
9E1A    16                        push        ss 
9E1B    31 C0                     xor         ax,ax 
9E1D    51                        push        cx 
9E1E    89 D1                     mov         cx,dx 
9E20    31 D2                     xor         dx,dx 
9E22    0E                        push        cs 
9E23    E8 00 00                  call        run_program_ 
9E26                          L$1208:
9E26    BB 00 00                  mov         bx,offset _lnksuf 
9E29    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9E2C    8C D1                     mov         cx,ss 
9E2E    89 F0                     mov         ax,si 
9E30    E8 00 00                  call        checksuff_ 
9E33    84 C0                     test        al,al 
9E35    75 19                     jne         L$1210 
9E37    E8 00 00                  call        reload_shortcuts_ 
9E3A    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
9E3E    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
9E43    74 05                     je          L$1209 
9E45    9A 00 00 00 00            call        restore_videomode_ 
9E4A                          L$1209:
9E4A    E8 00 00                  call        draw_desktop_ 
9E4D    E8 00 00                  call        draw_windows_ 
9E50                          L$1210:
9E50    B8 03 00                  mov         ax,0x0003 
	     9E54		; The label referred to here is an undefined location
9E53    E9 58 71                  jmp         0x00010fae 
9E56                          copy_file_:
9E56    56                        push        si 
9E57    55                        push        bp 
9E58    89 E5                     mov         bp,sp 
9E5A    89 C6                     mov         si,ax 
9E5C    51                        push        cx 
9E5D    53                        push        bx 
9E5E    52                        push        dx 
9E5F    50                        push        ax 
9E60    16                        push        ss 
9E61    68 97 01                  push        offset DGROUP:L$1766 
9E64    16                        push        ss 
9E65    68 00 00                  push        offset _filename_clipboard 
9E68    9A 00 00 00 00            call        sprintf_ 
9E6D    83 C4 10                  add         sp,0x0010 
9E70    51                        push        cx 
9E71    53                        push        bx 
9E72    16                        push        ss 
9E73    68 31 01                  push        offset DGROUP:L$1758 
9E76    16                        push        ss 
9E77    68 51 00                  push        offset _filename_clipboard+0x51 
9E7A    8A 56 06                  mov         dl,byte ptr 0x6[bp] 
9E7D    9A 00 00 00 00            call        sprintf_ 
9E82    83 C4 0C                  add         sp,0x000c 
9E85    36 88 16 5E 00            mov         byte ptr ss:_filename_clipboard+0x5e,dl 
9E8A    5D                        pop         bp 
	     9E8C		; The label referred to here is an undefined location
9E8B    E9 22 71                  jmp         0x00010fb0 
9E8E                          paste_dir_:
9E8E    53                        push        bx 
9E8F    51                        push        cx 
9E90    56                        push        si 
9E91    57                        push        di 
9E92    C8 08 00 00               enter       0x0008,0x00 
9E96    50                        push        ax 
9E97    52                        push        dx 
9E98    B8 A5 00                  mov         ax,0x00a5 
9E9B    9A 00 00 00 00            call        malloc_ 
9EA0    89 C6                     mov         si,ax 
9EA2    89 56 FE                  mov         word ptr -0x2[bp],dx 
9EA5    89 46 F8                  mov         word ptr -0x8[bp],ax 
9EA8    B8 45 00                  mov         ax,0x0045 
9EAB    89 D1                     mov         cx,dx 
9EAD    9A 00 00 00 00            call        malloc_ 
9EB2    89 46 FA                  mov         word ptr -0x6[bp],ax 
9EB5    89 56 FC                  mov         word ptr -0x4[bp],dx 
9EB8    89 C3                     mov         bx,ax 
9EBA    89 D7                     mov         di,dx 
9EBC    85 C9                     test        cx,cx 
9EBE    75 04                     jne         L$1211 
9EC0    85 F6                     test        si,si 
9EC2    74 08                     je          L$1212 
9EC4                          L$1211:
9EC4    85 D2                     test        dx,dx 
9EC6    75 1C                     jne         L$1213 
9EC8    85 C0                     test        ax,ax 
9ECA    75 18                     jne         L$1213 
9ECC                          L$1212:
9ECC    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
9ECF    89 CA                     mov         dx,cx 
9ED1    9A 00 00 00 00            call        free_ 
9ED6    89 D8                     mov         ax,bx 
9ED8    89 FA                     mov         dx,di 
9EDA    9A 00 00 00 00            call        free_ 
9EDF    31 C0                     xor         ax,ax 
9EE1    E9 A6 F0                  jmp         L$1094 
9EE4                          L$1213:
9EE4    BF 51 00                  mov         di,offset _filename_clipboard+0x51 
9EE7    16                        push        ss 
9EE8    07                        pop         es 
9EE9    B9 FF FF                  mov         cx,0xffff 
9EEC    33 C0                     xor         ax,ax 
9EEE    F2 AE                     repne scasb 
9EF0    F7 D1                     not         cx 
9EF2    49                        dec         cx 
9EF3    16                        push        ss 
9EF4    68 51 00                  push        offset _filename_clipboard+0x51 
9EF7    FF 76 F4                  push        word ptr -0xc[bp] 
9EFA    FF 76 F6                  push        word ptr -0xa[bp] 
9EFD    16                        push        ss 
9EFE    68 97 01                  push        offset DGROUP:L$1766 
9F01    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9F04    FF 76 FE                  push        word ptr -0x2[bp] 
9F07    89 CB                     mov         bx,cx 
9F09    56                        push        si 
9F0A    36 C6 87 50 00 00         mov         byte ptr ss:_filename_clipboard+0x50[bx],0x00 
9F10    9A 00 00 00 00            call        sprintf_ 
9F15    83 C4 10                  add         sp,0x0010 
9F18    89 F0                     mov         ax,si 
9F1A    9A 00 00 00 00            call        mkdir_ 
9F1F    FF 76 FE                  push        word ptr -0x2[bp] 
9F22    56                        push        si 
9F23    16                        push        ss 
9F24    68 31 01                  push        offset DGROUP:L$1758 
9F27    66 FF 76 FA               push        dword ptr -0x6[bp] 
9F2B    BF 00 00                  mov         di,offset _filename_clipboard 
9F2E    9A 00 00 00 00            call        sprintf_ 
9F33    83 C4 0C                  add         sp,0x000c 
9F36    16                        push        ss 
9F37    07                        pop         es 
9F38    B9 FF FF                  mov         cx,0xffff 
9F3B    33 C0                     xor         ax,ax 
9F3D    F2 AE                     repne scasb 
9F3F    F7 D1                     not         cx 
9F41    49                        dec         cx 
9F42    66 FF 76 FA               push        dword ptr -0x6[bp] 
9F46    16                        push        ss 
9F47    68 00 00                  push        offset _filename_clipboard 
9F4A    16                        push        ss 
9F4B    68 36 04                  push        offset DGROUP:L$1810 
9F4E    FF 76 FE                  push        word ptr -0x2[bp] 
9F51    89 CB                     mov         bx,cx 
9F53    56                        push        si 
9F54    36 C6 87 FF FF 00         mov         byte ptr ss:_filename_clipboard-0x1[bx],0x00 
9F5A    9A 00 00 00 00            call        sprintf_ 
9F5F    83 C4 10                  add         sp,0x0010 
9F62    6A FF                     push        0xffff 
9F64    31 D2                     xor         dx,dx 
9F66    6A 00                     push        0x0000 
9F68    8C D1                     mov         cx,ss 
9F6A    FF 76 FE                  push        word ptr -0x2[bp] 
9F6D    BB 3F 04                  mov         bx,offset DGROUP:L$1811 
9F70    56                        push        si 
9F71    31 C0                     xor         ax,ax 
9F73    0E                        push        cs 
9F74    E8 00 00                  call        run_program_ 
9F77    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
9F7A    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
9F7D    9A 00 00 00 00            call        free_ 
9F82    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
9F85    89 F0                     mov         ax,si 
9F87    9A 00 00 00 00            call        free_ 
9F8C    36 80 3E 5E 00 02         cmp         byte ptr ss:_filename_clipboard+0x5e,0x02 
9F92    75 15                     jne         L$1214 
9F94    6A FF                     push        0xffff 
9F96    BB 45 04                  mov         bx,offset DGROUP:L$1812 
9F99    6A 00                     push        0x0000 
9F9B    8C D1                     mov         cx,ss 
9F9D    16                        push        ss 
9F9E    31 C0                     xor         ax,ax 
9FA0    68 00 00                  push        offset _filename_clipboard 
9FA3    31 D2                     xor         dx,dx 
9FA5    0E                        push        cs 
9FA6    E8 00 00                  call        run_program_ 
9FA9                          L$1214:
9FA9    36 C6 06 5E 00 00         mov         byte ptr ss:_filename_clipboard+0x5e,0x00 
9FAF                          L$1215:
9FAF    B8 01 00                  mov         ax,0x0001 
9FB2    E9 D5 EF                  jmp         L$1094 
9FB5                          end_file_copy_:
9FB5    53                        push        bx 
9FB6    56                        push        si 
9FB7    89 C6                     mov         si,ax 
9FB9    8E DA                     mov         ds,dx 
9FBB    8B 54 3C                  mov         dx,word ptr 0x3c[si] 
9FBE    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
9FC1    8E DA                     mov         ds,dx 
9FC3    8B 47 02                  mov         ax,word ptr 0x2[bx] 
9FC6    9A 00 00 00 00            call        close_ 
9FCB    8E DA                     mov         ds,dx 
9FCD    8B 07                     mov         ax,word ptr [bx] 
9FCF    9A 00 00 00 00            call        close_ 
9FD4    8E DA                     mov         ds,dx 
9FD6    F6 87 60 02 01            test        byte ptr 0x260[bx],0x01 
9FDB    74 09                     je          L$1216 
9FDD    8D 87 0E 02               lea         ax,0x20e[bx] 
9FE1    9A 00 00 00 00            call        remove_ 
9FE6                          L$1216:
9FE6    5E                        pop         si 
9FE7    5B                        pop         bx 
9FE8    CB                        retf        
9FE9                          copy_file_program_:
9FE9    51                        push        cx 
9FEA    56                        push        si 
9FEB    57                        push        di 
9FEC    C8 20 00 00               enter       0x0020,0x00 
9FF0    89 C7                     mov         di,ax 
9FF2    89 56 FA                  mov         word ptr -0x6[bp],dx 
9FF5    8E DA                     mov         ds,dx 
9FF7    8B 45 3C                  mov         ax,word ptr 0x3c[di] 
9FFA    8B 75 3A                  mov         si,word ptr 0x3a[di] 
9FFD    89 46 FC                  mov         word ptr -0x4[bp],ax 
A000    0E                        push        cs 
A001    E8 00 00                  call        dostime_ 
A004    89 C3                     mov         bx,ax 
A006    8E DA                     mov         ds,dx 
A008    8A 47 03                  mov         al,byte ptr 0x3[bx] 
A00B    88 46 FE                  mov         byte ptr -0x2[bp],al 
A00E    B8 00 00                  mov         ax,seg _diskio_in_progress 
A011    8E D8                     mov         ds,ax 
A013    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
A018    0F 85 DE EC               jne         L$1060 
A01C    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A01F    8B 44 0A                  mov         ax,word ptr 0xa[si] 
A022    0B 44 08                  or          ax,word ptr 0x8[si] 
A025    75 0E                     jne         L$1217 
A027    BB 01 00                  mov         bx,0x0001 
A02A    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
A02D    89 F8                     mov         ax,di 
A02F    31 C9                     xor         cx,cx 
A031    0E                        push        cs 
A032    E8 00 00                  call        draw_window_ 
A035                          L$1217:
A035    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A038    89 46 F6                  mov         word ptr -0xa[bp],ax 
A03B    8D 44 0C                  lea         ax,0xc[si] 
A03E    89 46 F4                  mov         word ptr -0xc[bp],ax 
A041                          L$1218:
A041    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A044    BA 00 02                  mov         dx,0x0200 
A047    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
A04A    8B 4E F6                  mov         cx,word ptr -0xa[bp] 
A04D    8B 04                     mov         ax,word ptr [si] 
A04F    9A 00 00 00 00            call        read_ 
A054    89 46 F8                  mov         word ptr -0x8[bp],ax 
A057    85 C0                     test        ax,ax 
A059    0F 8E B5 00               jle         L$1221 
A05D    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A060    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
A063    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
A066    8B 4E F6                  mov         cx,word ptr -0xa[bp] 
A069    8B 44 02                  mov         ax,word ptr 0x2[si] 
A06C    9A 00 00 00 00            call        write_ 
A071    3B 46 F8                  cmp         ax,word ptr -0x8[bp] 
A074    7D 0C                     jge         L$1219 
A076    B8 4D 04                  mov         ax,offset DGROUP:L$1813 
A079    8C D2                     mov         dx,ss 
A07B    0E                        push        cs 
A07C    E8 00 00                  call        show_error_msg_ 
A07F    E9 78 EC                  jmp         L$1060 
A082                          L$1219:
A082    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
A085    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A088    99                        cwd         
A089    01 44 08                  add         word ptr 0x8[si],ax 
A08C    11 54 0A                  adc         word ptr 0xa[si],dx 
A08F    BB 64 00                  mov         bx,0x0064 
A092    8B 44 08                  mov         ax,word ptr 0x8[si] 
A095    8B 54 0A                  mov         dx,word ptr 0xa[si] 
A098    31 C9                     xor         cx,cx 
A09A    9A 00 00 00 00            call        __U4M 
A09F    8B 5C 04                  mov         bx,word ptr 0x4[si] 
A0A2    8B 4C 06                  mov         cx,word ptr 0x6[si] 
A0A5    9A 00 00 00 00            call        __U4D 
A0AA    3B 84 0C 02               cmp         ax,word ptr 0x20c[si] 
A0AE    74 4D                     je          L$1220 
A0B0    50                        push        ax 
A0B1    16                        push        ss 
A0B2    8D 56 E0                  lea         dx,-0x20[bp] 
A0B5    68 66 04                  push        offset DGROUP:L$1814 
A0B8    B9 03 00                  mov         cx,0x0003 
A0BB    16                        push        ss 
A0BC    BB 01 00                  mov         bx,0x0001 
A0BF    52                        push        dx 
A0C0    89 84 0C 02               mov         word ptr 0x20c[si],ax 
A0C4    9A 00 00 00 00            call        sprintf_ 
A0C9    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
A0CC    83 C4 0A                  add         sp,0x000a 
A0CF    89 F8                     mov         ax,di 
A0D1    0E                        push        cs 
A0D2    E8 00 00                  call        draw_window_ 
A0D5    6A 00                     push        0x0000 
A0D7    8D 5E E0                  lea         bx,-0x20[bp] 
A0DA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
A0E0    8C D1                     mov         cx,ss 
A0E2    6A FF                     push        0xffff 
A0E4    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
A0E7    50                        push        ax 
A0E8    8B 55 06                  mov         dx,word ptr 0x6[di] 
A0EB    6A 00                     push        0x0000 
A0ED    8B 45 04                  mov         ax,word ptr 0x4[di] 
A0F0    83 C2 1E                  add         dx,0x001e 
A0F3    05 0A 00                  add         ax,0x000a 
A0F6    0E                        push        cs 
A0F7    E8 00 00                  call        gprint_text_ 
A0FA    E8 00 00                  call        call_drv_screenupdate_ 
A0FD                          L$1220:
A0FD    0E                        push        cs 
A0FE    E8 00 00                  call        dostime_ 
A101    89 C3                     mov         bx,ax 
A103    8E DA                     mov         ds,dx 
A105    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
A108    3A 47 03                  cmp         al,byte ptr 0x3[bx] 
A10B    0F 84 32 FF               je          L$1218 
A10F    E9 E8 EB                  jmp         L$1060 
A112                          L$1221:
A112    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
A115    89 F8                     mov         ax,di 
A117    0E                        push        cs 
A118    E8 00 00                  call        del_window_ 
A11B    E9 DC EB                  jmp         L$1060 
A11E                          copy_file_init_:
A11E    56                        push        si 
A11F    57                        push        di 
A120    C8 3A 00 00               enter       0x003a,0x00 
A124    50                        push        ax 
A125    52                        push        dx 
A126    53                        push        bx 
A127    51                        push        cx 
A128    BA 62 02                  mov         dx,0x0262 
A12B    B8 01 00                  mov         ax,0x0001 
A12E    9A 00 00 00 00            call        calloc_ 
A133    89 C6                     mov         si,ax 
A135    89 D7                     mov         di,dx 
A137    89 46 FA                  mov         word ptr -0x6[bp],ax 
A13A    89 56 FC                  mov         word ptr -0x4[bp],dx 
A13D    85 D2                     test        dx,dx 
A13F    75 0B                     jne         L$1222 
A141    85 C0                     test        ax,ax 
A143    75 07                     jne         L$1222 
A145    0E                        push        cs 
A146    E8 00 00                  call        nomemory_ 
	     A14A		; The label referred to here is an undefined location
A149    E9 C5 79                  jmp         0x00011b11 
A14C                          L$1222:
A14C    8B 46 C4                  mov         ax,word ptr -0x3c[bp] 
A14F    8B 56 C2                  mov         dx,word ptr -0x3e[bp] 
A152    31 DB                     xor         bx,bx 
A154    E8 00 00                  call        getfileinfo_ 
A157    8E DF                     mov         ds,di 
A159    89 44 04                  mov         word ptr 0x4[si],ax 
A15C    89 54 06                  mov         word ptr 0x6[si],dx 
A15F    36 80 3E 5E 00 02         cmp         byte ptr ss:_filename_clipboard+0x5e,0x02 
A165    75 05                     jne         L$1223 
A167    80 8C 60 02 01            or          byte ptr 0x260[si],0x01 
A16C                          L$1223:
A16C    8B 7E FA                  mov         di,word ptr -0x6[bp] 
A16F    8B 76 C4                  mov         si,word ptr -0x3c[bp] 
A172    8E 5E C2                  mov         ds,word ptr -0x3e[bp] 
A175    8E 46 FC                  mov         es,word ptr -0x4[bp] 
A178    81 C7 0E 02               add         di,0x020e 
A17C    57                        push        di 
A17D                          L$1224:
A17D    AC                        lodsb       
A17E    AA                        stosb       
A17F    3C 00                     cmp         al,0x00 
A181    75 FA                     jne         L$1224 
A183    5F                        pop         di 
A184    68 00 00                  push        seg copy_file_program_ 
A187    68 00 00                  push        offset copy_file_program_ 
A18A    66 6A 00                  pushd       0x00000000 
A18D    6A 01                     push        0x0001 
A18F    B9 32 00                  mov         cx,0x0032 
A192    6A 01                     push        0x0001 
A194    BB 96 00                  mov         bx,0x0096 
A197    16                        push        ss 
A198    BA FF FF                  mov         dx,0xffff 
A19B    68 6C 04                  push        offset DGROUP:L$1815 
A19E    89 D0                     mov         ax,dx 
A1A0    0E                        push        cs 
A1A1    E8 00 00                  call        new_window_ 
A1A4    89 C6                     mov         si,ax 
A1A6    89 56 FE                  mov         word ptr -0x2[bp],dx 
A1A9    89 C7                     mov         di,ax 
A1AB    89 56 F8                  mov         word ptr -0x8[bp],dx 
A1AE    85 D2                     test        dx,dx 
A1B0    75 16                     jne         L$1225 
A1B2    85 C0                     test        ax,ax 
A1B4    75 12                     jne         L$1225 
A1B6    0E                        push        cs 
A1B7    E8 00 00                  call        nomemory_ 
A1BA    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
A1BD    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
A1C0    9A 00 00 00 00            call        free_ 
	     A1C6		; The label referred to here is an undefined location
A1C5    E9 49 79                  jmp         0x00011b11 
A1C8                          L$1225:
A1C8    FF 76 0A                  push        word ptr 0xa[bp] 
A1CB    8E DA                     mov         ds,dx 
A1CD    FF 76 08                  push        word ptr 0x8[bp] 
A1D0    66 FF 34                  push        dword ptr [si] 
A1D3    16                        push        ss 
A1D4    68 79 04                  push        offset DGROUP:L$1816 
A1D7    16                        push        ss 
A1D8    8D 56 C6                  lea         dx,-0x3a[bp] 
A1DB    52                        push        dx 
A1DC    9A 00 00 00 00            call        sprintf_ 
A1E1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A1E4    C7 44 3E 00 00            mov         word ptr 0x3e[si],offset end_file_copy_ 
A1E9    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
A1EC    C7 44 40 00 00            mov         word ptr 0x40[si],seg end_file_copy_ 
A1F1    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A1F4    89 5C 3A                  mov         word ptr 0x3a[si],bx 
A1F7    B9 0A 00                  mov         cx,0x000a 
A1FA    89 44 3C                  mov         word ptr 0x3c[si],ax 
A1FD    83 C4 10                  add         sp,0x0010 
A200    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A206    8D 56 C6                  lea         dx,-0x3a[bp] 
A209    50                        push        ax 
A20A    89 CB                     mov         bx,cx 
A20C    16                        push        ss 
A20D    89 F0                     mov         ax,si 
A20F    52                        push        dx 
A210    8C DA                     mov         dx,ds 
A212    0E                        push        cs 
A213    E8 00 00                  call        window_text_ 
A216    85 D2                     test        dx,dx 
A218    75 14                     jne         L$1227 
A21A    85 C0                     test        ax,ax 
A21C    75 10                     jne         L$1227 
A21E    0E                        push        cs 
A21F    E8 00 00                  call        nomemory_ 
A222                          L$1226:
A222    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
A225    89 F8                     mov         ax,di 
A227    0E                        push        cs 
A228    E8 00 00                  call        del_window_ 
	     A22C		; The label referred to here is an undefined location
A22B    E9 E3 78                  jmp         0x00011b11 
A22E                          L$1227:
A22E    68 00 02                  push        0x0200 
A231    FF 76 C2                  push        word ptr -0x3e[bp] 
A234    FF 76 C4                  push        word ptr -0x3c[bp] 
A237    9A 00 00 00 00            call        open_ 
A23C    83 C4 06                  add         sp,0x0006 
A23F    68 C0 01                  push        0x01c0 
A242    68 61 02                  push        0x0261 
A245    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
A248    FF 76 BE                  push        word ptr -0x42[bp] 
A24B    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A24E    FF 76 C0                  push        word ptr -0x40[bp] 
A251    89 07                     mov         word ptr [bx],ax 
A253    9A 00 00 00 00            call        open_ 
A258    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
A25B    83 C4 08                  add         sp,0x0008 
A25E    89 47 02                  mov         word ptr 0x2[bx],ax 
A261    3D FF FF                  cmp         ax,0xffff 
A264    74 05                     je          L$1228 
A266    83 3F FF                  cmp         word ptr [bx],0xffff 
A269    75 2A                     jne         L$1231 
A26B                          L$1228:
A26B    C5 5E FA                  lds         bx,dword ptr -0x6[bp] 
A26E    8B 47 02                  mov         ax,word ptr 0x2[bx] 
A271    85 C0                     test        ax,ax 
A273    7C 05                     jl          L$1229 
A275    9A 00 00 00 00            call        close_ 
A27A                          L$1229:
A27A    C5 5E FA                  lds         bx,dword ptr -0x6[bp] 
A27D    8B 07                     mov         ax,word ptr [bx] 
A27F    85 C0                     test        ax,ax 
A281    7C 05                     jl          L$1230 
A283    9A 00 00 00 00            call        close_ 
A288                          L$1230:
A288    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
A28B    66 C7 45 3E 00 00 00 00
                                  mov         dword ptr 0x3e[di],0x00000000 
A293    EB 8D                     jmp         L$1226 
A295                          L$1231:
A295    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A298    80 4C 17 02               or          byte ptr 0x17[si],0x02 
	     A29D		; The label referred to here is an undefined location
A29C    E9 72 78                  jmp         0x00011b11 
A29F                          paste_file_:
A29F    53                        push        bx 
A2A0    51                        push        cx 
A2A1    56                        push        si 
A2A2    57                        push        di 
A2A3    C8 86 00 00               enter       0x0086,0x00 
A2A7    50                        push        ax 
A2A8    81 ED B2 00               sub         bp,0x00b2 
A2AC    89 D6                     mov         si,dx 
A2AE    36 80 3E 5E 00 00         cmp         byte ptr ss:_filename_clipboard+0x5e,0x00 
A2B4    75 35                     jne         L$1232 
A2B6    16                        push        ss 
A2B7    68 7F 04                  push        offset DGROUP:L$1817 
A2BA    16                        push        ss 
A2BB    8D 56 7E                  lea         dx,0x7e[bp] 
A2BE    52                        push        dx 
A2BF    9A 00 00 00 00            call        sprintf_ 
A2C4    83 C4 08                  add         sp,0x0008 
A2C7    66 6A 00                  pushd       0x00000000 
A2CA    16                        push        ss 
A2CB    68 00 00                  push        offset _infotitle 
A2CE    16                        push        ss 
A2CF    8D 56 7E                  lea         dx,0x7e[bp] 
A2D2    52                        push        dx 
A2D3    B9 32 00                  mov         cx,0x0032 
A2D6    6A 00                     push        0x0000 
A2D8    BB C8 00                  mov         bx,0x00c8 
A2DB    6A 00                     push        0x0000 
A2DD    BA 14 00                  mov         dx,0x0014 
A2E0    6A 00                     push        0x0000 
A2E2    89 D0                     mov         ax,dx 
A2E4    0E                        push        cs 
A2E5    E8 00 00                  call        dialog_ 
A2E8    E9 EA 00                  jmp         L$1236 
A2EB                          L$1232:
A2EB    BF 51 00                  mov         di,offset _filename_clipboard+0x51 
A2EE    16                        push        ss 
A2EF    07                        pop         es 
A2F0    B9 FF FF                  mov         cx,0xffff 
A2F3    33 C0                     xor         ax,ax 
A2F5    F2 AE                     repne scasb 
A2F7    F7 D1                     not         cx 
A2F9    49                        dec         cx 
A2FA    89 CB                     mov         bx,cx 
A2FC    36 80 BF 50 00 5C         cmp         byte ptr ss:_filename_clipboard+0x50[bx],0x5c 
A302    75 51                     jne         L$1233 
A304    16                        push        ss 
A305    68 51 00                  push        offset _filename_clipboard+0x51 
A308    16                        push        ss 
A309    68 91 04                  push        offset DGROUP:L$1818 
A30C    16                        push        ss 
A30D    8D 56 7E                  lea         dx,0x7e[bp] 
A310    52                        push        dx 
A311    9A 00 00 00 00            call        sprintf_ 
A316    83 C4 0C                  add         sp,0x000c 
A319    66 6A 00                  pushd       0x00000000 
A31C    16                        push        ss 
A31D    68 B0 04                  push        offset DGROUP:L$1819 
A320    16                        push        ss 
A321    8D 56 7E                  lea         dx,0x7e[bp] 
A324    52                        push        dx 
A325    B9 32 00                  mov         cx,0x0032 
A328    6A 00                     push        0x0000 
A32A    BB FA 00                  mov         bx,0x00fa 
A32D    6A 00                     push        0x0000 
A32F    BA 14 00                  mov         dx,0x0014 
A332    6A 02                     push        0x0002 
A334    89 D0                     mov         ax,dx 
A336    0E                        push        cs 
A337    E8 00 00                  call        dialog_ 
A33A    85 C0                     test        ax,ax 
A33C    0F 85 95 00               jne         L$1236 
A340    8B 46 2A                  mov         ax,word ptr 0x2a[bp] 
A343    89 F2                     mov         dx,si 
A345    E8 00 00                  call        paste_dir_ 
A348    85 C0                     test        ax,ax 
A34A    0F 85 87 00               jne         L$1236 
A34E    0E                        push        cs 
A34F    E8 00 00                  call        nomemory_ 
A352    E9 80 00                  jmp         L$1236 
A355                          L$1233:
A355    16                        push        ss 
A356    68 51 00                  push        offset _filename_clipboard+0x51 
A359    52                        push        dx 
A35A    FF 76 2A                  push        word ptr 0x2a[bp] 
A35D    16                        push        ss 
A35E    68 97 01                  push        offset DGROUP:L$1766 
A361    8D 56 2C                  lea         dx,0x2c[bp] 
A364    16                        push        ss 
A365    BB D3 00                  mov         bx,offset DGROUP:L$1747 
A368    52                        push        dx 
A369    8C D1                     mov         cx,ss 
A36B    9A 00 00 00 00            call        sprintf_ 
A370    8D 46 2C                  lea         ax,0x2c[bp] 
A373    83 C4 10                  add         sp,0x0010 
A376    8C D2                     mov         dx,ss 
A378    9A 00 00 00 00            call        fopen_ 
A37D    85 D2                     test        dx,dx 
A37F    75 04                     jne         L$1234 
A381    85 C0                     test        ax,ax 
A383    74 3F                     je          L$1235 
A385                          L$1234:
A385    9A 00 00 00 00            call        fclose_ 
A38A    16                        push        ss 
A38B    68 51 00                  push        offset _filename_clipboard+0x51 
A38E    16                        push        ss 
A38F    68 BF 04                  push        offset DGROUP:L$1820 
A392    16                        push        ss 
A393    8D 56 7E                  lea         dx,0x7e[bp] 
A396    52                        push        dx 
A397    9A 00 00 00 00            call        sprintf_ 
A39C    83 C4 0C                  add         sp,0x000c 
A39F    66 6A 00                  pushd       0x00000000 
A3A2    16                        push        ss 
A3A3    68 E8 04                  push        offset DGROUP:L$1821 
A3A6    16                        push        ss 
A3A7    8D 56 7E                  lea         dx,0x7e[bp] 
A3AA    52                        push        dx 
A3AB    B9 32 00                  mov         cx,0x0032 
A3AE    6A 00                     push        0x0000 
A3B0    BB 2C 01                  mov         bx,0x012c 
A3B3    6A 00                     push        0x0000 
A3B5    BA 14 00                  mov         dx,0x0014 
A3B8    6A 02                     push        0x0002 
A3BA    89 D0                     mov         ax,dx 
A3BC    0E                        push        cs 
A3BD    E8 00 00                  call        dialog_ 
A3C0    85 C0                     test        ax,ax 
A3C2    75 11                     jne         L$1236 
A3C4                          L$1235:
A3C4    8D 5E 2C                  lea         bx,0x2c[bp] 
A3C7    B8 00 00                  mov         ax,offset _filename_clipboard 
A3CA    16                        push        ss 
A3CB    8C D1                     mov         cx,ss 
A3CD    68 51 00                  push        offset _filename_clipboard+0x51 
A3D0    8C D2                     mov         dx,ss 
A3D2    E8 00 00                  call        copy_file_init_ 
A3D5                          L$1236:
A3D5    31 C0                     xor         ax,ax 
A3D7    8D A6 B2 00               lea         sp,0xb2[bp] 
	     A3DC		; The label referred to here is an undefined location
A3DB    E9 82 75                  jmp         0x00011960 
A3DE                          delete_dir_:
A3DE    56                        push        si 
A3DF    57                        push        di 
A3E0    C8 82 00 00               enter       0x0082,0x00 
A3E4    50                        push        ax 
A3E5    52                        push        dx 
A3E6    81 ED AC 00               sub         bp,0x00ac 
A3EA    89 DF                     mov         di,bx 
A3EC    89 CE                     mov         si,cx 
A3EE    51                        push        cx 
A3EF    53                        push        bx 
A3F0    16                        push        ss 
A3F1    68 F5 04                  push        offset DGROUP:L$1822 
A3F4    16                        push        ss 
A3F5    8D 56 7E                  lea         dx,0x7e[bp] 
A3F8    52                        push        dx 
A3F9    9A 00 00 00 00            call        sprintf_ 
A3FE    83 C4 0C                  add         sp,0x000c 
A401    66 6A 00                  pushd       0x00000000 
A404    16                        push        ss 
A405    68 18 05                  push        offset DGROUP:L$1823 
A408    16                        push        ss 
A409    8D 56 7E                  lea         dx,0x7e[bp] 
A40C    52                        push        dx 
A40D    B9 32 00                  mov         cx,0x0032 
A410    6A 00                     push        0x0000 
A412    BB FA 00                  mov         bx,0x00fa 
A415    6A 00                     push        0x0000 
A417    BA 14 00                  mov         dx,0x0014 
A41A    6A 02                     push        0x0002 
A41C    89 D0                     mov         ax,dx 
A41E    0E                        push        cs 
A41F    E8 00 00                  call        dialog_ 
A422    85 C0                     test        ax,ax 
A424    75 2F                     jne         L$1237 
A426    56                        push        si 
A427    57                        push        di 
A428    FF 76 26                  push        word ptr 0x26[bp] 
A42B    FF 76 28                  push        word ptr 0x28[bp] 
A42E    16                        push        ss 
A42F    68 29 05                  push        offset DGROUP:L$1824 
A432    16                        push        ss 
A433    8D 76 2A                  lea         si,0x2a[bp] 
A436    56                        push        si 
A437    9A 00 00 00 00            call        sprintf_ 
A43C    83 C4 10                  add         sp,0x0010 
A43F    BB 45 04                  mov         bx,offset DGROUP:L$1812 
A442    6A FF                     push        0xffff 
A444    8C D1                     mov         cx,ss 
A446    6A 00                     push        0x0000 
A448    8D 46 2A                  lea         ax,0x2a[bp] 
A44B    16                        push        ss 
A44C    31 D2                     xor         dx,dx 
A44E    50                        push        ax 
A44F    31 C0                     xor         ax,ax 
A451    0E                        push        cs 
A452    E8 00 00                  call        run_program_ 
A455                          L$1237:
A455    31 C0                     xor         ax,ax 
A457    8D A6 AC 00               lea         sp,0xac[bp] 
A45B    5D                        pop         bp 
A45C    5F                        pop         di 
A45D    5E                        pop         si 
A45E    C3                        ret         
A45F                          delete_file_:
A45F    56                        push        si 
A460    57                        push        di 
A461    C8 70 00 00               enter       0x0070,0x00 
A465    50                        push        ax 
A466    52                        push        dx 
A467    89 DE                     mov         si,bx 
A469    89 4E FE                  mov         word ptr -0x2[bp],cx 
A46C    89 DF                     mov         di,bx 
A46E    8E C1                     mov         es,cx 
A470    B9 FF FF                  mov         cx,0xffff 
A473    33 C0                     xor         ax,ax 
A475    F2 AE                     repne scasb 
A477    F7 D1                     not         cx 
A479    49                        dec         cx 
A47A    06                        push        es 
A47B    1F                        pop         ds 
A47C    01 CB                     add         bx,cx 
A47E    80 7F FF 5C               cmp         byte ptr -0x1[bx],0x5c 
A482    75 21                     jne         L$1238 
A484    89 F7                     mov         di,si 
A486    B9 FF FF                  mov         cx,0xffff 
A489    33 C0                     xor         ax,ax 
A48B    F2 AE                     repne scasb 
A48D    F7 D1                     not         cx 
A48F    49                        dec         cx 
A490    89 F3                     mov         bx,si 
A492    8B 46 8E                  mov         ax,word ptr -0x72[bp] 
A495    01 CB                     add         bx,cx 
A497    8C C1                     mov         cx,es 
A499    C6 47 FF 00               mov         byte ptr -0x1[bx],0x00 
A49D    89 F3                     mov         bx,si 
A49F    E8 00 00                  call        delete_dir_ 
	     A4A3		; The label referred to here is an undefined location
A4A2    E9 FA 75                  jmp         0x00011a9f 
A4A5                          L$1238:
A4A5    06                        push        es 
A4A6    56                        push        si 
A4A7    16                        push        ss 
A4A8    68 31 05                  push        offset DGROUP:L$1825 
A4AB    16                        push        ss 
A4AC    8D 56 E2                  lea         dx,-0x1e[bp] 
A4AF    52                        push        dx 
A4B0    9A 00 00 00 00            call        sprintf_ 
A4B5    83 C4 0C                  add         sp,0x000c 
A4B8    66 6A 00                  pushd       0x00000000 
A4BB    16                        push        ss 
A4BC    68 41 05                  push        offset DGROUP:L$1826 
A4BF    16                        push        ss 
A4C0    8D 56 E2                  lea         dx,-0x1e[bp] 
A4C3    52                        push        dx 
A4C4    B9 32 00                  mov         cx,0x0032 
A4C7    6A 00                     push        0x0000 
A4C9    BB C8 00                  mov         bx,0x00c8 
A4CC    6A 00                     push        0x0000 
A4CE    BA 14 00                  mov         dx,0x0014 
A4D1    6A 02                     push        0x0002 
A4D3    89 D0                     mov         ax,dx 
A4D5    0E                        push        cs 
A4D6    E8 00 00                  call        dialog_ 
A4D9    85 C0                     test        ax,ax 
	     A4DD		; The label referred to here is an undefined location
A4DB    0F 85 C0 75               jne         0x00011a9f 
A4DF    FF 76 FE                  push        word ptr -0x2[bp] 
A4E2    56                        push        si 
A4E3    FF 76 8C                  push        word ptr -0x74[bp] 
A4E6    FF 76 8E                  push        word ptr -0x72[bp] 
A4E9    16                        push        ss 
A4EA    68 97 01                  push        offset DGROUP:L$1766 
A4ED    16                        push        ss 
A4EE    8D 56 90                  lea         dx,-0x70[bp] 
A4F1    52                        push        dx 
A4F2    BB 00 00                  mov         bx,offset _lnksuf 
A4F5    9A 00 00 00 00            call        sprintf_ 
A4FA    8D 46 90                  lea         ax,-0x70[bp] 
A4FD    83 C4 10                  add         sp,0x0010 
A500    8C D2                     mov         dx,ss 
A502    8C D1                     mov         cx,ss 
A504    9A 00 00 00 00            call        remove_ 
A509    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
A50C    89 F0                     mov         ax,si 
A50E    E8 00 00                  call        checksuff_ 
A511    84 C0                     test        al,al 
	     A515		; The label referred to here is an undefined location
A513    0F 85 88 75               jne         0x00011a9f 
A517    E8 00 00                  call        reload_shortcuts_ 
A51A    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
A51E    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
A523    74 05                     je          L$1239 
A525    9A 00 00 00 00            call        restore_videomode_ 
A52A                          L$1239:
A52A    E8 00 00                  call        draw_desktop_ 
A52D    E8 00 00                  call        draw_windows_ 
	     A531		; The label referred to here is an undefined location
A530    E9 6C 75                  jmp         0x00011a9f 
A533                          list_files_:
A533    56                        push        si 
A534    57                        push        di 
A535    C8 08 00 00               enter       0x0008,0x00 
A539    89 C6                     mov         si,ax 
A53B    89 56 FE                  mov         word ptr -0x2[bp],dx 
A53E    89 5E F8                  mov         word ptr -0x8[bp],bx 
A541    89 4E FA                  mov         word ptr -0x6[bp],cx 
A544    89 D8                     mov         ax,bx 
A546    8B 4E 12                  mov         cx,word ptr 0x12[bp] 
A549    C1 E0 02                  shl         ax,0x02 
A54C    C1 E1 02                  shl         cx,0x02 
A54F    89 46 FC                  mov         word ptr -0x4[bp],ax 
A552                          L$1240:
A552    83 E9 04                  sub         cx,0x0004 
A555    83 F9 FC                  cmp         cx,0xfffc 
A558    74 39                     je          L$1241 
A55A    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A55D    8B 5C 18                  mov         bx,word ptr 0x18[si] 
A560    03 5E FC                  add         bx,word ptr -0x4[bp] 
A563    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
A566    C5 3F                     lds         di,dword ptr [bx] 
A568    C5 5D 14                  lds         bx,dword ptr 0x14[di] 
A56B    01 CB                     add         bx,cx 
A56D    8B 07                     mov         ax,word ptr [bx] 
A56F    8B 57 02                  mov         dx,word ptr 0x2[bx] 
A572    9A 00 00 00 00            call        free_ 
A577    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A57A    8B 5C 18                  mov         bx,word ptr 0x18[si] 
A57D    03 5E FC                  add         bx,word ptr -0x4[bp] 
A580    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
A583    C5 3F                     lds         di,dword ptr [bx] 
A585    C5 5D 14                  lds         bx,dword ptr 0x14[di] 
A588    01 CB                     add         bx,cx 
A58A    66 C7 07 00 00 00 00      mov         dword ptr [bx],0x00000000 
A591    EB BF                     jmp         L$1240 
A593                          L$1241:
A593    6A FF                     push        0xffff 
A595    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
A598    6A 00                     push        0x0000 
A59A    8B 4E 0E                  mov         cx,word ptr 0xe[bp] 
A59D    6A 00                     push        0x0000 
A59F    8B 46 08                  mov         ax,word ptr 0x8[bp] 
A5A2    6A 00                     push        0x0000 
A5A4    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
A5A7    E8 00 00                  call        get_dir_contents_ 
A5AA    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
A5AD    89 C1                     mov         cx,ax 
A5AF    2B 46 12                  sub         ax,word ptr 0x12[bp] 
A5B2    C1 E3 02                  shl         bx,0x02 
A5B5    85 C0                     test        ax,ax 
A5B7    7E 0F                     jle         L$1242 
A5B9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A5BC    C5 54 18                  lds         dx,dword ptr 0x18[si] 
A5BF    01 D3                     add         bx,dx 
A5C1    C5 3F                     lds         di,dword ptr [bx] 
A5C3    89 45 20                  mov         word ptr 0x20[di],ax 
A5C6    EB 0F                     jmp         L$1243 
A5C8                          L$1242:
A5C8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A5CB    C5 44 18                  lds         ax,dword ptr 0x18[si] 
A5CE    01 C3                     add         bx,ax 
A5D0    C5 3F                     lds         di,dword ptr [bx] 
A5D2    C7 45 20 00 00            mov         word ptr 0x20[di],0x0000 
A5D7                          L$1243:
A5D7    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
A5DA    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
A5DD    89 F0                     mov         ax,si 
A5DF    0E                        push        cs 
A5E0    E8 00 00                  call        window_drawelement_ 
A5E3    85 C9                     test        cx,cx 
A5E5    7D 04                     jge         L$1244 
A5E7    31 C0                     xor         ax,ax 
A5E9    EB 30                     jmp         L$1245 
A5EB                          L$1244:
A5EB    FF 76 12                  push        word ptr 0x12[bp] 
A5EE    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
A5F1    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A5F4    C1 E2 02                  shl         dx,0x02 
A5F7    C5 44 18                  lds         ax,dword ptr 0x18[si] 
A5FA    89 C6                     mov         si,ax 
A5FC    8B 4E 0E                  mov         cx,word ptr 0xe[bp] 
A5FF    01 D6                     add         si,dx 
A601    FF 76 10                  push        word ptr 0x10[bp] 
A604    C5 1C                     lds         bx,dword ptr [si] 
A606    8B 46 08                  mov         ax,word ptr 0x8[bp] 
A609    FF 77 16                  push        word ptr 0x16[bx] 
A60C    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
A60F    FF 77 14                  push        word ptr 0x14[bx] 
A612    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
A615    E8 00 00                  call        get_dir_contents_ 
A618    B8 01 00                  mov         ax,0x0001 
A61B                          L$1245:
A61B    C9                        leave       
A61C    5F                        pop         di 
A61D    5E                        pop         si 
A61E    C2 0C 00                  ret         0x000c 
A621                          hbytes_:
A621    51                        push        cx 
A622    56                        push        si 
A623    57                        push        di 
A624    C8 0C 00 00               enter       0x000c,0x00 
A628    B9 06 00                  mov         cx,0x0006 
A62B    8D 7E F4                  lea         di,-0xc[bp] 
A62E    16                        push        ss 
A62F    07                        pop         es 
A630    16                        push        ss 
A631    1F                        pop         ds 
A632    BE 0D 03                  mov         si,offset DGROUP:L$1919 
A635    F3 A5                     rep movsw   
A637    81 FA A0 00               cmp         dx,0x00a0 
A63B    77 06                     ja          L$1246 
A63D    75 24                     jne         L$1248 
A63F    85 C0                     test        ax,ax 
A641    76 20                     jbe         L$1248 
A643                          L$1246:
A643    66 FF 76 F4               push        dword ptr -0xc[bp] 
A647    66 FF 76 FC               push        dword ptr -0x4[bp] 
A64B    6A 00                     push        0x0000 
A64D    C1 EA 04                  shr         dx,0x04 
A650    52                        push        dx 
A651                          L$1247:
A651    16                        push        ss 
A652    68 4D 05                  push        offset DGROUP:L$1827 
A655    16                        push        ss 
A656    68 B3 02                  push        offset DGROUP:L$1944 
A659    9A 00 00 00 00            call        sprintf_ 
A65E    83 C4 14                  add         sp,0x0014 
A661    EB 34                     jmp         L$1252 
A663                          L$1248:
A663    85 D2                     test        dx,dx 
A665    75 05                     jne         L$1249 
A667    3D 00 28                  cmp         ax,0x2800 
A66A    76 15                     jbe         L$1251 
A66C                          L$1249:
A66C    66 FF 76 F4               push        dword ptr -0xc[bp] 
A670    66 FF 76 F8               push        dword ptr -0x8[bp] 
A674    B9 0A 00                  mov         cx,0x000a 
A677                          L$1250:
A677    D1 EA                     shr         dx,0x01 
A679    D1 D8                     rcr         ax,0x01 
A67B    E2 FA                     loop        L$1250 
A67D    52                        push        dx 
A67E    50                        push        ax 
A67F    EB D0                     jmp         L$1247 
A681                          L$1251:
A681    66 FF 76 F4               push        dword ptr -0xc[bp] 
A685    52                        push        dx 
A686    50                        push        ax 
A687    16                        push        ss 
A688    68 56 05                  push        offset DGROUP:L$1828 
A68B    16                        push        ss 
A68C    68 B3 02                  push        offset DGROUP:L$1944 
A68F    9A 00 00 00 00            call        sprintf_ 
A694    83 C4 10                  add         sp,0x0010 
A697                          L$1252:
A697    B8 B3 02                  mov         ax,offset DGROUP:L$1944 
A69A    8C D2                     mov         dx,ss 
A69C    E9 6A A4                  jmp         L$600 
A69F                          show_drive_info_:
A69F    53                        push        bx 
A6A0    51                        push        cx 
A6A1    56                        push        si 
A6A2    57                        push        di 
A6A3    C8 5C 00 00               enter       0x005c,0x00 
A6A7    89 C6                     mov         si,ax 
A6A9    89 56 F6                  mov         word ptr -0xa[bp],dx 
A6AC    8E DA                     mov         ds,dx 
A6AE    80 7C 01 3A               cmp         byte ptr 0x1[si],0x3a 
A6B2    75 04                     jne         L$1253 
A6B4    8A 04                     mov         al,byte ptr [si] 
A6B6    EB 06                     jmp         L$1254 
A6B8                          L$1253:
A6B8    36 A0 00 00               mov         al,byte ptr ss:_cwdrive 
A6BC    04 40                     add         al,0x40 
A6BE                          L$1254:
A6BE    30 E4                     xor         ah,ah 
A6C0    50                        push        ax 
A6C1    16                        push        ss 
A6C2    68 5D 05                  push        offset DGROUP:L$1829 
A6C5    16                        push        ss 
A6C6    8D 56 A4                  lea         dx,-0x5c[bp] 
A6C9    52                        push        dx 
A6CA    9A 00 00 00 00            call        sprintf_ 
A6CF    83 C4 0A                  add         sp,0x000a 
A6D2    66 6A 00                  pushd       0x00000000 
A6D5    66 6A 00                  pushd       0x00000000 
A6D8    6A 01                     push        0x0001 
A6DA    6A 01                     push        0x0001 
A6DC    8D 56 A4                  lea         dx,-0x5c[bp] 
A6DF    16                        push        ss 
A6E0    B9 96 00                  mov         cx,0x0096 
A6E3    52                        push        dx 
A6E4    BA FF FF                  mov         dx,0xffff 
A6E7    BB B4 00                  mov         bx,0x00b4 
A6EA    89 D0                     mov         ax,dx 
A6EC    0E                        push        cs 
A6ED    E8 00 00                  call        new_window_ 
A6F0    89 46 FC                  mov         word ptr -0x4[bp],ax 
A6F3    89 D7                     mov         di,dx 
A6F5    89 46 F8                  mov         word ptr -0x8[bp],ax 
A6F8    89 56 FA                  mov         word ptr -0x6[bp],dx 
A6FB    85 D2                     test        dx,dx 
A6FD    75 21                     jne         L$1258 
A6FF    85 C0                     test        ax,ax 
A701    75 1D                     jne         L$1258 
A703                          L$1255:
A703    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
A707    75 06                     jne         L$1256 
A709    83 7E F8 00               cmp         word ptr -0x8[bp],0x0000 
A70D    74 0A                     je          L$1257 
A70F                          L$1256:
A70F    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
A712    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
A715    0E                        push        cs 
A716    E8 00 00                  call        del_window_ 
A719                          L$1257:
A719    0E                        push        cs 
A71A    E8 00 00                  call        nomemory_ 
A71D    E9 6A E8                  jmp         L$1094 
A720                          L$1258:
A720    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
A723    89 F0                     mov         ax,si 
A725    E8 00 00                  call        check_drive_status_ 
A728    89 C6                     mov         si,ax 
A72A    89 56 FE                  mov         word ptr -0x2[bp],dx 
A72D    85 D2                     test        dx,dx 
A72F    75 06                     jne         L$1259 
A731    85 C0                     test        ax,ax 
A733    0F 84 98 01               je          L$1265 
A737                          L$1259:
A737    8E DA                     mov         ds,dx 
A739    FF 34                     push        word ptr [si] 
A73B    16                        push        ss 
A73C    68 6D 05                  push        offset DGROUP:L$1830 
A73F    16                        push        ss 
A740    8D 56 A4                  lea         dx,-0x5c[bp] 
A743    52                        push        dx 
A744    B9 0A 00                  mov         cx,0x000a 
A747    9A 00 00 00 00            call        sprintf_ 
A74C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A752    83 C4 0A                  add         sp,0x000a 
A755    89 CB                     mov         bx,cx 
A757    50                        push        ax 
A758    8D 56 A4                  lea         dx,-0x5c[bp] 
A75B    16                        push        ss 
A75C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A75F    52                        push        dx 
A760    89 FA                     mov         dx,di 
A762    0E                        push        cs 
A763    E8 00 00                  call        window_text_ 
A766    85 D2                     test        dx,dx 
A768    75 04                     jne         L$1260 
A76A    85 C0                     test        ax,ax 
A76C    74 95                     je          L$1255 
A76E                          L$1260:
A76E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A771    FF 74 02                  push        word ptr 0x2[si] 
A774    16                        push        ss 
A775    68 80 05                  push        offset DGROUP:L$1831 
A778    16                        push        ss 
A779    8D 56 A4                  lea         dx,-0x5c[bp] 
A77C    52                        push        dx 
A77D    B9 1E 00                  mov         cx,0x001e 
A780    9A 00 00 00 00            call        sprintf_ 
A785    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A78B    83 C4 0A                  add         sp,0x000a 
A78E    BB 0A 00                  mov         bx,0x000a 
A791    50                        push        ax 
A792    8D 56 A4                  lea         dx,-0x5c[bp] 
A795    16                        push        ss 
A796    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A799    52                        push        dx 
A79A    89 FA                     mov         dx,di 
A79C    0E                        push        cs 
A79D    E8 00 00                  call        window_text_ 
A7A0    85 D2                     test        dx,dx 
A7A2    75 06                     jne         L$1261 
A7A4    85 C0                     test        ax,ax 
A7A6    0F 84 59 FF               je          L$1255 
A7AA                          L$1261:
A7AA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A7AD    FF 74 04                  push        word ptr 0x4[si] 
A7B0    16                        push        ss 
A7B1    68 97 05                  push        offset DGROUP:L$1832 
A7B4    16                        push        ss 
A7B5    8D 56 A4                  lea         dx,-0x5c[bp] 
A7B8    52                        push        dx 
A7B9    B9 32 00                  mov         cx,0x0032 
A7BC    9A 00 00 00 00            call        sprintf_ 
A7C1    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A7C7    83 C4 0A                  add         sp,0x000a 
A7CA    BB 0A 00                  mov         bx,0x000a 
A7CD    50                        push        ax 
A7CE    8D 56 A4                  lea         dx,-0x5c[bp] 
A7D1    16                        push        ss 
A7D2    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A7D5    52                        push        dx 
A7D6    89 FA                     mov         dx,di 
A7D8    0E                        push        cs 
A7D9    E8 00 00                  call        window_text_ 
A7DC    85 D2                     test        dx,dx 
A7DE    75 06                     jne         L$1262 
A7E0    85 C0                     test        ax,ax 
A7E2    0F 84 1D FF               je          L$1255 
A7E6                          L$1262:
A7E6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A7E9    FF 74 06                  push        word ptr 0x6[si] 
A7EC    16                        push        ss 
A7ED    68 AB 05                  push        offset DGROUP:L$1833 
A7F0    16                        push        ss 
A7F1    8D 56 A4                  lea         dx,-0x5c[bp] 
A7F4    52                        push        dx 
A7F5    B9 46 00                  mov         cx,0x0046 
A7F8    9A 00 00 00 00            call        sprintf_ 
A7FD    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A803    83 C4 0A                  add         sp,0x000a 
A806    BB 0A 00                  mov         bx,0x000a 
A809    50                        push        ax 
A80A    8D 56 A4                  lea         dx,-0x5c[bp] 
A80D    16                        push        ss 
A80E    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A811    52                        push        dx 
A812    89 FA                     mov         dx,di 
A814    0E                        push        cs 
A815    E8 00 00                  call        window_text_ 
A818    85 D2                     test        dx,dx 
A81A    75 06                     jne         L$1263 
A81C    85 C0                     test        ax,ax 
A81E    0F 84 E1 FE               je          L$1255 
A822                          L$1263:
A822    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A825    31 D2                     xor         dx,dx 
A827    31 C9                     xor         cx,cx 
A829    8B 44 06                  mov         ax,word ptr 0x6[si] 
A82C    8B 5C 04                  mov         bx,word ptr 0x4[si] 
A82F    9A 00 00 00 00            call        __U4M 
A834    8B 1C                     mov         bx,word ptr [si] 
A836    31 C9                     xor         cx,cx 
A838    9A 00 00 00 00            call        __U4M 
A83D    E8 00 00                  call        hbytes_ 
A840    52                        push        dx 
A841    50                        push        ax 
A842    16                        push        ss 
A843    68 C0 05                  push        offset DGROUP:L$1834 
A846    16                        push        ss 
A847    8D 56 A4                  lea         dx,-0x5c[bp] 
A84A    52                        push        dx 
A84B    B9 5A 00                  mov         cx,0x005a 
A84E    9A 00 00 00 00            call        sprintf_ 
A853    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A859    83 C4 0C                  add         sp,0x000c 
A85C    BB 0A 00                  mov         bx,0x000a 
A85F    50                        push        ax 
A860    8D 56 A4                  lea         dx,-0x5c[bp] 
A863    16                        push        ss 
A864    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A867    52                        push        dx 
A868    89 FA                     mov         dx,di 
A86A    0E                        push        cs 
A86B    E8 00 00                  call        window_text_ 
A86E    85 D2                     test        dx,dx 
A870    75 06                     jne         L$1264 
A872    85 C0                     test        ax,ax 
A874    0F 84 8B FE               je          L$1255 
A878                          L$1264:
A878    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
A87B    31 D2                     xor         dx,dx 
A87D    31 C9                     xor         cx,cx 
A87F    8B 44 06                  mov         ax,word ptr 0x6[si] 
A882    8B 5C 04                  mov         bx,word ptr 0x4[si] 
A885    9A 00 00 00 00            call        __U4M 
A88A    8B 5C 02                  mov         bx,word ptr 0x2[si] 
A88D    31 C9                     xor         cx,cx 
A88F    9A 00 00 00 00            call        __U4M 
A894    E8 00 00                  call        hbytes_ 
A897    52                        push        dx 
A898    50                        push        ax 
A899    16                        push        ss 
A89A    68 CF 05                  push        offset DGROUP:L$1835 
A89D    16                        push        ss 
A89E    8D 56 A4                  lea         dx,-0x5c[bp] 
A8A1    52                        push        dx 
A8A2    B9 6E 00                  mov         cx,0x006e 
A8A5    9A 00 00 00 00            call        sprintf_ 
A8AA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A8B0    83 C4 0C                  add         sp,0x000c 
A8B3    BB 0A 00                  mov         bx,0x000a 
A8B6    50                        push        ax 
A8B7    8D 56 A4                  lea         dx,-0x5c[bp] 
A8BA    16                        push        ss 
A8BB    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A8BE    52                        push        dx 
A8BF    89 FA                     mov         dx,di 
A8C1    0E                        push        cs 
A8C2    E8 00 00                  call        window_text_ 
A8C5    85 D2                     test        dx,dx 
A8C7    75 06                     jne         L$1265 
A8C9    85 C0                     test        ax,ax 
A8CB    0F 84 34 FE               je          L$1255 
A8CF                          L$1265:
A8CF    B9 01 00                  mov         cx,0x0001 
A8D2    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
A8D5    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
A8D8    89 CB                     mov         bx,cx 
A8DA    0E                        push        cs 
A8DB    E8 00 00                  call        draw_window_ 
A8DE    E9 A9 E6                  jmp         L$1094 
A8E1                          show_file_info_:
A8E1    56                        push        si 
A8E2    57                        push        di 
A8E3    C8 5E 00 00               enter       0x005e,0x00 
A8E7    50                        push        ax 
A8E8    52                        push        dx 
A8E9    53                        push        bx 
A8EA    51                        push        cx 
A8EB    31 C0                     xor         ax,ax 
A8ED    50                        push        ax 
A8EE    50                        push        ax 
A8EF    50                        push        ax 
A8F0    50                        push        ax 
A8F1    BA FF FF                  mov         dx,0xffff 
A8F4    6A 01                     push        0x0001 
A8F6    89 46 FE                  mov         word ptr -0x2[bp],ax 
A8F9    6A 01                     push        0x0001 
A8FB    89 D0                     mov         ax,dx 
A8FD    51                        push        cx 
A8FE    B9 96 00                  mov         cx,0x0096 
A901    53                        push        bx 
A902    BB C8 00                  mov         bx,0x00c8 
A905    0E                        push        cs 
A906    E8 00 00                  call        new_window_ 
A909    89 46 FC                  mov         word ptr -0x4[bp],ax 
A90C    89 D6                     mov         si,dx 
A90E    89 46 FA                  mov         word ptr -0x6[bp],ax 
A911    89 D7                     mov         di,dx 
A913    85 D2                     test        dx,dx 
A915    75 1E                     jne         L$1269 
A917    85 C0                     test        ax,ax 
A919    75 1A                     jne         L$1269 
A91B                          L$1266:
A91B    85 FF                     test        di,di 
A91D    75 06                     jne         L$1267 
A91F    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
A923    74 09                     je          L$1268 
A925                          L$1267:
A925    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
A928    89 FA                     mov         dx,di 
A92A    0E                        push        cs 
A92B    E8 00 00                  call        del_window_ 
A92E                          L$1268:
A92E    0E                        push        cs 
A92F    E8 00 00                  call        nomemory_ 
	     A933		; The label referred to here is an undefined location
A932    E9 DC 71                  jmp         0x00011b11 
A935                          L$1269:
A935    FF 76 9A                  push        word ptr -0x66[bp] 
A938    FF 76 9C                  push        word ptr -0x64[bp] 
A93B    16                        push        ss 
A93C    68 DE 05                  push        offset DGROUP:L$1836 
A93F    16                        push        ss 
A940    8D 56 A2                  lea         dx,-0x5e[bp] 
A943    52                        push        dx 
A944    B9 0A 00                  mov         cx,0x000a 
A947    9A 00 00 00 00            call        sprintf_ 
A94C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A952    83 C4 0C                  add         sp,0x000c 
A955    89 CB                     mov         bx,cx 
A957    50                        push        ax 
A958    8D 56 A2                  lea         dx,-0x5e[bp] 
A95B    16                        push        ss 
A95C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A95F    52                        push        dx 
A960    89 F2                     mov         dx,si 
A962    0E                        push        cs 
A963    E8 00 00                  call        window_text_ 
A966    85 D2                     test        dx,dx 
A968    75 04                     jne         L$1270 
A96A    85 C0                     test        ax,ax 
A96C    74 AD                     je          L$1266 
A96E                          L$1270:
A96E    FF 76 9E                  push        word ptr -0x62[bp] 
A971    FF 76 A0                  push        word ptr -0x60[bp] 
A974    16                        push        ss 
A975    68 EC 05                  push        offset DGROUP:L$1837 
A978    16                        push        ss 
A979    8D 56 A2                  lea         dx,-0x5e[bp] 
A97C    52                        push        dx 
A97D    B9 1E 00                  mov         cx,0x001e 
A980    9A 00 00 00 00            call        sprintf_ 
A985    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A98B    83 C4 0C                  add         sp,0x000c 
A98E    BB 0A 00                  mov         bx,0x000a 
A991    50                        push        ax 
A992    8D 56 A2                  lea         dx,-0x5e[bp] 
A995    16                        push        ss 
A996    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A999    52                        push        dx 
A99A    89 F2                     mov         dx,si 
A99C    0E                        push        cs 
A99D    E8 00 00                  call        window_text_ 
A9A0    85 D2                     test        dx,dx 
A9A2    75 06                     jne         L$1271 
A9A4    85 C0                     test        ax,ax 
A9A6    0F 84 71 FF               je          L$1266 
A9AA                          L$1271:
A9AA    8D 5E F4                  lea         bx,-0xc[bp] 
A9AD    8B 46 08                  mov         ax,word ptr 0x8[bp] 
A9B0    8B 56 0A                  mov         dx,word ptr 0xa[bp] 
A9B3    E8 00 00                  call        getfileinfo_ 
A9B6    E8 00 00                  call        hbytes_ 
A9B9    52                        push        dx 
A9BA    50                        push        ax 
A9BB    16                        push        ss 
A9BC    68 FA 05                  push        offset DGROUP:L$1838 
A9BF    16                        push        ss 
A9C0    8D 56 A2                  lea         dx,-0x5e[bp] 
A9C3    52                        push        dx 
A9C4    B9 32 00                  mov         cx,0x0032 
A9C7    9A 00 00 00 00            call        sprintf_ 
A9CC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
A9D2    83 C4 0C                  add         sp,0x000c 
A9D5    BB 0A 00                  mov         bx,0x000a 
A9D8    50                        push        ax 
A9D9    8D 56 A2                  lea         dx,-0x5e[bp] 
A9DC    16                        push        ss 
A9DD    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
A9E0    52                        push        dx 
A9E1    89 F2                     mov         dx,si 
A9E3    0E                        push        cs 
A9E4    E8 00 00                  call        window_text_ 
A9E7    85 D2                     test        dx,dx 
A9E9    75 06                     jne         L$1272 
A9EB    85 C0                     test        ax,ax 
A9ED    0F 84 2A FF               je          L$1266 
A9F1                          L$1272:
A9F1    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
A9F4    25 1F 00                  and         ax,0x001f 
A9F7    01 C0                     add         ax,ax 
A9F9    50                        push        ax 
A9FA    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
A9FD    C1 E8 05                  shr         ax,0x05 
AA00    30 E4                     xor         ah,ah 
AA02    24 3F                     and         al,0x3f 
AA04    50                        push        ax 
AA05    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
AA08    C1 E8 0B                  shr         ax,0x0b 
AA0B    50                        push        ax 
AA0C    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
AA0F    C1 E8 09                  shr         ax,0x09 
AA12    05 BC 07                  add         ax,0x07bc 
AA15    50                        push        ax 
AA16    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
AA19    C1 E8 05                  shr         ax,0x05 
AA1C    30 E4                     xor         ah,ah 
AA1E    24 0F                     and         al,0x0f 
AA20    50                        push        ax 
AA21    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
AA24    30 E4                     xor         ah,ah 
AA26    24 1F                     and         al,0x1f 
AA28    50                        push        ax 
AA29    16                        push        ss 
AA2A    68 03 06                  push        offset DGROUP:L$1839 
AA2D    16                        push        ss 
AA2E    8D 56 A2                  lea         dx,-0x5e[bp] 
AA31    52                        push        dx 
AA32    B9 46 00                  mov         cx,0x0046 
AA35    9A 00 00 00 00            call        sprintf_ 
AA3A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AA40    83 C4 14                  add         sp,0x0014 
AA43    BB 0A 00                  mov         bx,0x000a 
AA46    50                        push        ax 
AA47    8D 56 A2                  lea         dx,-0x5e[bp] 
AA4A    16                        push        ss 
AA4B    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
AA4E    52                        push        dx 
AA4F    89 F2                     mov         dx,si 
AA51    0E                        push        cs 
AA52    E8 00 00                  call        window_text_ 
AA55    85 D2                     test        dx,dx 
AA57    75 06                     jne         L$1273 
AA59    85 C0                     test        ax,ax 
AA5B    0F 84 BC FE               je          L$1266 
AA5F                          L$1273:
AA5F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AA65    B9 5A 00                  mov         cx,0x005a 
AA68    50                        push        ax 
AA69    BB 0A 00                  mov         bx,0x000a 
AA6C    16                        push        ss 
AA6D    89 F2                     mov         dx,si 
AA6F    68 28 06                  push        offset DGROUP:L$1840 
AA72    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
AA75    0E                        push        cs 
AA76    E8 00 00                  call        window_text_ 
AA79    85 D2                     test        dx,dx 
AA7B    75 06                     jne         L$1274 
AA7D    85 C0                     test        ax,ax 
AA7F    0F 84 98 FE               je          L$1266 
AA83                          L$1274:
AA83    F6 46 F8 01               test        byte ptr -0x8[bp],0x01 
AA87    74 29                     je          L$1275 
AA89    B9 5A 00                  mov         cx,0x005a 
AA8C    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AA92    BB 46 00                  mov         bx,0x0046 
AA95    50                        push        ax 
AA96    89 F2                     mov         dx,si 
AA98    16                        push        ss 
AA99    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
AA9C    68 34 06                  push        offset DGROUP:L$1841 
AA9F    C7 46 FE 01 00            mov         word ptr -0x2[bp],0x0001 
AAA4    0E                        push        cs 
AAA5    E8 00 00                  call        window_text_ 
AAA8    85 D2                     test        dx,dx 
AAAA    75 06                     jne         L$1275 
AAAC    85 C0                     test        ax,ax 
AAAE    0F 84 69 FE               je          L$1266 
AAB2                          L$1275:
AAB2    F6 46 F8 02               test        byte ptr -0x8[bp],0x02 
AAB6    74 2B                     je          L$1276 
AAB8    6B 4E FE 14               imul        cx,word ptr -0x2[bp],0x0014 
AABC    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AAC2    BB 46 00                  mov         bx,0x0046 
AAC5    50                        push        ax 
AAC6    89 FA                     mov         dx,di 
AAC8    16                        push        ss 
AAC9    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
AACC    68 3E 06                  push        offset DGROUP:L$1842 
AACF    83 C1 5A                  add         cx,0x005a 
AAD2    FF 46 FE                  inc         word ptr -0x2[bp] 
AAD5    0E                        push        cs 
AAD6    E8 00 00                  call        window_text_ 
AAD9    85 D2                     test        dx,dx 
AADB    75 06                     jne         L$1276 
AADD    85 C0                     test        ax,ax 
AADF    0F 84 38 FE               je          L$1266 
AAE3                          L$1276:
AAE3    F6 46 F8 04               test        byte ptr -0x8[bp],0x04 
AAE7    74 2B                     je          L$1277 
AAE9    6B 4E FE 14               imul        cx,word ptr -0x2[bp],0x0014 
AAED    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AAF3    BB 46 00                  mov         bx,0x0046 
AAF6    50                        push        ax 
AAF7    89 FA                     mov         dx,di 
AAF9    16                        push        ss 
AAFA    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
AAFD    68 45 06                  push        offset DGROUP:L$1843 
AB00    83 C1 5A                  add         cx,0x005a 
AB03    FF 46 FE                  inc         word ptr -0x2[bp] 
AB06    0E                        push        cs 
AB07    E8 00 00                  call        window_text_ 
AB0A    85 D2                     test        dx,dx 
AB0C    75 06                     jne         L$1277 
AB0E    85 C0                     test        ax,ax 
AB10    0F 84 07 FE               je          L$1266 
AB14                          L$1277:
AB14    F6 46 F8 08               test        byte ptr -0x8[bp],0x08 
AB18    74 2B                     je          L$1278 
AB1A    6B 4E FE 14               imul        cx,word ptr -0x2[bp],0x0014 
AB1E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AB24    BB 46 00                  mov         bx,0x0046 
AB27    50                        push        ax 
AB28    89 FA                     mov         dx,di 
AB2A    16                        push        ss 
AB2B    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
AB2E    68 4C 06                  push        offset DGROUP:L$1844 
AB31    83 C1 5A                  add         cx,0x005a 
AB34    FF 46 FE                  inc         word ptr -0x2[bp] 
AB37    0E                        push        cs 
AB38    E8 00 00                  call        window_text_ 
AB3B    85 D2                     test        dx,dx 
AB3D    75 06                     jne         L$1278 
AB3F    85 C0                     test        ax,ax 
AB41    0F 84 D6 FD               je          L$1266 
AB45                          L$1278:
AB45    F6 46 F8 10               test        byte ptr -0x8[bp],0x10 
AB49    74 2B                     je          L$1279 
AB4B    6B 4E FE 14               imul        cx,word ptr -0x2[bp],0x0014 
AB4F    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AB55    BB 46 00                  mov         bx,0x0046 
AB58    50                        push        ax 
AB59    89 FA                     mov         dx,di 
AB5B    16                        push        ss 
AB5C    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
AB5F    68 56 06                  push        offset DGROUP:L$1845 
AB62    83 C1 5A                  add         cx,0x005a 
AB65    FF 46 FE                  inc         word ptr -0x2[bp] 
AB68    0E                        push        cs 
AB69    E8 00 00                  call        window_text_ 
AB6C    85 D2                     test        dx,dx 
AB6E    75 06                     jne         L$1279 
AB70    85 C0                     test        ax,ax 
AB72    0F 84 A5 FD               je          L$1266 
AB76                          L$1279:
AB76    F6 46 F8 20               test        byte ptr -0x8[bp],0x20 
AB7A    74 28                     je          L$1280 
AB7C    6B 4E FE 14               imul        cx,word ptr -0x2[bp],0x0014 
AB80    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
AB86    BB 46 00                  mov         bx,0x0046 
AB89    50                        push        ax 
AB8A    89 FA                     mov         dx,di 
AB8C    16                        push        ss 
AB8D    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
AB90    68 60 06                  push        offset DGROUP:L$1846 
AB93    83 C1 5A                  add         cx,0x005a 
AB96    0E                        push        cs 
AB97    E8 00 00                  call        window_text_ 
AB9A    85 D2                     test        dx,dx 
AB9C    75 06                     jne         L$1280 
AB9E    85 C0                     test        ax,ax 
ABA0    0F 84 77 FD               je          L$1266 
ABA4                          L$1280:
ABA4    B9 01 00                  mov         cx,0x0001 
ABA7    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
ABAA    89 FA                     mov         dx,di 
ABAC    89 CB                     mov         bx,cx 
ABAE    0E                        push        cs 
ABAF    E8 00 00                  call        draw_window_ 
	     ABB3		; The label referred to here is an undefined location
ABB2    E9 5C 6F                  jmp         0x00011b11 
ABB5                          fileman_place_elements_:
ABB5    53                        push        bx 
ABB6    51                        push        cx 
ABB7    56                        push        si 
ABB8    57                        push        di 
ABB9    C8 08 00 00               enter       0x0008,0x00 
ABBD    89 C6                     mov         si,ax 
ABBF    89 56 FE                  mov         word ptr -0x2[bp],dx 
ABC2    8E DA                     mov         ds,dx 
ABC4    8B 44 12                  mov         ax,word ptr 0x12[si] 
ABC7    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ABCA    C5 3F                     lds         di,dword ptr [bx] 
ABCC    2D 50 00                  sub         ax,0x0050 
ABCF    89 45 08                  mov         word ptr 0x8[di],ax 
ABD2    8E DA                     mov         ds,dx 
ABD4    8B 44 12                  mov         ax,word ptr 0x12[si] 
ABD7    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ABDA    C5 7F 04                  lds         di,dword ptr 0x4[bx] 
ABDD    2D 50 00                  sub         ax,0x0050 
ABE0    89 45 08                  mov         word ptr 0x8[di],ax 
ABE3    8E DA                     mov         ds,dx 
ABE5    8B 44 12                  mov         ax,word ptr 0x12[si] 
ABE8    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ABEB    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
ABEE    2D 64 00                  sub         ax,0x0064 
ABF1    89 45 08                  mov         word ptr 0x8[di],ax 
ABF4    8E DA                     mov         ds,dx 
ABF6    8B 44 14                  mov         ax,word ptr 0x14[si] 
ABF9    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ABFC    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
ABFF    2D 5A 00                  sub         ax,0x005a 
AC02    89 45 0A                  mov         word ptr 0xa[di],ax 
AC05    8E DA                     mov         ds,dx 
AC07    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AC0A    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
AC0D    C7 45 2A FF FF            mov         word ptr 0x2a[di],0xffff 
AC12    8E DA                     mov         ds,dx 
AC14    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AC17    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
AC1A    8B 4D 20                  mov         cx,word ptr 0x20[di] 
AC1D    89 C8                     mov         ax,cx 
AC1F    C1 E0 02                  shl         ax,0x02 
AC22    89 46 FC                  mov         word ptr -0x4[bp],ax 
AC25                          L$1281:
AC25    49                        dec         cx 
AC26    83 6E FC 04               sub         word ptr -0x4[bp],0x0004 
AC2A    83 F9 FF                  cmp         cx,0xffff 
AC2D    74 1D                     je          L$1282 
AC2F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
AC32    C5 7C 18                  lds         di,dword ptr 0x18[si] 
AC35    C5 5D 10                  lds         bx,dword ptr 0x10[di] 
AC38    C5 47 14                  lds         ax,dword ptr 0x14[bx] 
AC3B    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
AC3E    01 C3                     add         bx,ax 
AC40    8B 07                     mov         ax,word ptr [bx] 
AC42    8B 57 02                  mov         dx,word ptr 0x2[bx] 
AC45    9A 00 00 00 00            call        free_ 
AC4A    EB D9                     jmp         L$1281 
AC4C                          L$1282:
AC4C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
AC4F    C5 7C 18                  lds         di,dword ptr 0x18[si] 
AC52    31 D2                     xor         dx,dx 
AC54    C5 5D 10                  lds         bx,dword ptr 0x10[di] 
AC57    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
AC5D    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
AC60    41                        inc         cx 
AC61    41                        inc         cx 
AC62    F7 F1                     div         cx 
AC64    89 47 20                  mov         word ptr 0x20[bx],ax 
AC67    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
AC6A    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AC6D    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
AC70    BA 04 00                  mov         dx,0x0004 
AC73    8B 45 20                  mov         ax,word ptr 0x20[di] 
AC76    9A 00 00 00 00            call        calloc_ 
AC7B    89 46 F8                  mov         word ptr -0x8[bp],ax 
AC7E    89 D1                     mov         cx,dx 
AC80    85 D2                     test        dx,dx 
AC82    75 0E                     jne         L$1284 
AC84    85 C0                     test        ax,ax 
AC86    75 0A                     jne         L$1284 
AC88                          L$1283:
AC88    0E                        push        cs 
AC89    E8 00 00                  call        nomemory_ 
AC8C    BB FF 7F                  mov         bx,0x7fff 
AC8F    E9 60 01                  jmp         L$1289 
AC92                          L$1284:
AC92    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
AC95    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AC98    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
AC9B    8B 45 14                  mov         ax,word ptr 0x14[di] 
AC9E    8B 55 16                  mov         dx,word ptr 0x16[di] 
ACA1    9A 00 00 00 00            call        free_ 
ACA6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
ACA9    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ACAC    C5 7F 10                  lds         di,dword ptr 0x10[bx] 
ACAF    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
ACB2    89 45 14                  mov         word ptr 0x14[di],ax 
ACB5    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
ACBA    89 4D 16                  mov         word ptr 0x16[di],cx 
ACBD    31 C9                     xor         cx,cx 
ACBF                          L$1285:
ACBF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
ACC2    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ACC5    C4 7F 10                  les         di,dword ptr 0x10[bx] 
ACC8    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
ACCB    26 3B 45 20               cmp         ax,word ptr es:0x20[di] 
ACCF    73 35                     jae         L$1287 
ACD1    BA 01 00                  mov         dx,0x0001 
ACD4    B8 0E 00                  mov         ax,0x000e 
ACD7    9A 00 00 00 00            call        calloc_ 
ACDC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
ACDF    C5 7C 18                  lds         di,dword ptr 0x18[si] 
ACE2    C5 5D 10                  lds         bx,dword ptr 0x10[di] 
ACE5    C5 7F 14                  lds         di,dword ptr 0x14[bx] 
ACE8    89 FB                     mov         bx,di 
ACEA    01 CB                     add         bx,cx 
ACEC    89 07                     mov         word ptr [bx],ax 
ACEE    89 57 02                  mov         word ptr 0x2[bx],dx 
ACF1    8B 47 02                  mov         ax,word ptr 0x2[bx] 
ACF4    8B 17                     mov         dx,word ptr [bx] 
ACF6    85 C0                     test        ax,ax 
ACF8    75 04                     jne         L$1286 
ACFA    85 D2                     test        dx,dx 
ACFC    74 8A                     je          L$1283 
ACFE                          L$1286:
ACFE    FF 46 FA                  inc         word ptr -0x6[bp] 
AD01    83 C1 04                  add         cx,0x0004 
AD04    EB B9                     jmp         L$1285 
AD06                          L$1287:
AD06    8E 46 FE                  mov         es,word ptr -0x2[bp] 
AD09    26 8B 44 12               mov         ax,word ptr es:0x12[si] 
AD0D    C5 7F 14                  lds         di,dword ptr 0x14[bx] 
AD10    2D 59 00                  sub         ax,0x0059 
AD13    89 45 04                  mov         word ptr 0x4[di],ax 
AD16    06                        push        es 
AD17    1F                        pop         ds 
AD18    8B 44 14                  mov         ax,word ptr 0x14[si] 
AD1B    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD1E    C5 7F 14                  lds         di,dword ptr 0x14[bx] 
AD21    2D 74 00                  sub         ax,0x0074 
AD24    89 45 08                  mov         word ptr 0x8[di],ax 
AD27    06                        push        es 
AD28    1F                        pop         ds 
AD29    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD2C    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD2F    C5 7F 18                  lds         di,dword ptr 0x18[bx] 
AD32    2D 46 00                  sub         ax,0x0046 
AD35    89 45 04                  mov         word ptr 0x4[di],ax 
AD38    06                        push        es 
AD39    1F                        pop         ds 
AD3A    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD3D    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD40    C5 7F 1C                  lds         di,dword ptr 0x1c[bx] 
AD43    2D 46 00                  sub         ax,0x0046 
AD46    89 45 04                  mov         word ptr 0x4[di],ax 
AD49    06                        push        es 
AD4A    1F                        pop         ds 
AD4B    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD4E    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD51    C5 7F 20                  lds         di,dword ptr 0x20[bx] 
AD54    2D 46 00                  sub         ax,0x0046 
AD57    89 45 04                  mov         word ptr 0x4[di],ax 
AD5A    06                        push        es 
AD5B    1F                        pop         ds 
AD5C    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD5F    C5 7C 18                  lds         di,dword ptr 0x18[si] 
AD62    C5 5D 24                  lds         bx,dword ptr 0x24[di] 
AD65    2D 46 00                  sub         ax,0x0046 
AD68    89 47 04                  mov         word ptr 0x4[bx],ax 
AD6B    06                        push        es 
AD6C    1F                        pop         ds 
AD6D    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD70    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD73    C5 7F 28                  lds         di,dword ptr 0x28[bx] 
AD76    2D 46 00                  sub         ax,0x0046 
AD79    89 45 04                  mov         word ptr 0x4[di],ax 
AD7C    06                        push        es 
AD7D    1F                        pop         ds 
AD7E    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD81    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD84    C5 7F 2C                  lds         di,dword ptr 0x2c[bx] 
AD87    2D 46 00                  sub         ax,0x0046 
AD8A    89 45 04                  mov         word ptr 0x4[di],ax 
AD8D    06                        push        es 
AD8E    1F                        pop         ds 
AD8F    8B 44 12                  mov         ax,word ptr 0x12[si] 
AD92    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
AD95    C5 7F 38                  lds         di,dword ptr 0x38[bx] 
AD98    2D 46 00                  sub         ax,0x0046 
AD9B    89 45 04                  mov         word ptr 0x4[di],ax 
AD9E    06                        push        es 
AD9F    1F                        pop         ds 
ADA0    8B 44 14                  mov         ax,word ptr 0x14[si] 
ADA3    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ADA6    C5 7F 30                  lds         di,dword ptr 0x30[bx] 
ADA9    2D 2A 00                  sub         ax,0x002a 
ADAC    89 45 06                  mov         word ptr 0x6[di],ax 
ADAF    06                        push        es 
ADB0    1F                        pop         ds 
ADB1    8B 44 14                  mov         ax,word ptr 0x14[si] 
ADB4    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ADB7    C5 7F 34                  lds         di,dword ptr 0x34[bx] 
ADBA    2D 16 00                  sub         ax,0x0016 
ADBD    89 45 06                  mov         word ptr 0x6[di],ax 
ADC0    06                        push        es 
ADC1    1F                        pop         ds 
ADC2    8B 44 14                  mov         ax,word ptr 0x14[si] 
ADC5    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
ADC8    2D 2A 00                  sub         ax,0x002a 
ADCB    C5 7F 3C                  lds         di,dword ptr 0x3c[bx] 
ADCE    8C C2                     mov         dx,es 
ADD0    89 45 06                  mov         word ptr 0x6[di],ax 
ADD3    89 F0                     mov         ax,si 
ADD5    0E                        push        cs 
ADD6    E8 00 00                  call        window_recalc_hitboxes_ 
ADD9    36 80 3E 00 00 00         cmp         byte ptr ss:_screen_redraw,0x00 
ADDF    75 0E                     jne         L$1288 
ADE1    BB 01 00                  mov         bx,0x0001 
ADE4    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
ADE7    89 F0                     mov         ax,si 
ADE9    31 C9                     xor         cx,cx 
ADEB    0E                        push        cs 
ADEC    E8 00 00                  call        draw_window_ 
ADEF                          L$1288:
ADEF    BB 03 80                  mov         bx,0x8003 
ADF2                          L$1289:
ADF2    89 D8                     mov         ax,bx 
	     ADF5		; The label referred to here is an undefined location
ADF4    E9 79 7A                  jmp         0x00012870 
ADF7    3F 3D 3C 35 34 2B 00                            ?=<54+.
ADFE    C1 AE                                           DW	offset L$1675
AE00    E8 AE                                           DW	offset L$1676
AE02    A9 AE                                           DW	offset L$1674
AE04    48 AF                                           DW	offset L$1681
AE06    45 AF                                           DW	offset L$1680
AE08    F7 AE                                           DW	offset L$1679
AE0A    F4 AE                                           DW	offset L$1678
AE0C    EE AE                                           DW	offset L$1677
AE0E    73 6C 6B 66 60 53 4C 4B 46 40 15 13 0A 00       slkf`SLKF@....
AE1C    BB AF                                           DW	offset L$1691
AE1E    85 AF                                           DW	offset L$1682
AE20    97 AF                                           DW	offset L$1685
AE22    91 AF                                           DW	offset L$1684
AE24    8B AF                                           DW	offset L$1683
AE26    A9 AF                                           DW	offset L$1688
AE28    A3 AF                                           DW	offset L$1687
AE2A    AF AF                                           DW	offset L$1689
AE2C    B5 AF                                           DW	offset L$1690
AE2E    9D AF                                           DW	offset L$1686
AE30    A9 AF                                           DW	offset L$1688
AE32    A3 AF                                           DW	offset L$1687
AE34    AF AF                                           DW	offset L$1689
AE36    B5 AF                                           DW	offset L$1690
AE38    9D AF                                           DW	offset L$1686
AE3A                          fileman_keypress_:
AE3A    56                        push        si 
AE3B    57                        push        di 
AE3C    C8 06 00 00               enter       0x0006,0x00 
AE40    50                        push        ax 
AE41    52                        push        dx 
AE42    53                        push        bx 
AE43    51                        push        cx 
AE44    8E D9                     mov         ds,cx 
AE46    89 DF                     mov         di,bx 
AE48    31 D2                     xor         dx,dx 
AE4A    8B 7D 18                  mov         di,word ptr 0x18[di] 
AE4D    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
AE50    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__FONT_HEIGHT 
AE56    8B 75 14                  mov         si,word ptr 0x14[di] 
AE59    8B 45 16                  mov         ax,word ptr 0x16[di] 
AE5C    8B 5D 10                  mov         bx,word ptr 0x10[di] 
AE5F    89 46 FA                  mov         word ptr -0x6[bp],ax 
AE62    8B 45 12                  mov         ax,word ptr 0x12[di] 
AE65    41                        inc         cx 
AE66    41                        inc         cx 
AE67    8E D8                     mov         ds,ax 
AE69    89 46 FC                  mov         word ptr -0x4[bp],ax 
AE6C    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
AE6F    F7 F1                     div         cx 
AE71    C7 46 FE 01 00            mov         word ptr -0x2[bp],0x0001 
AE76    8B 7E F8                  mov         di,word ptr -0x8[bp] 
AE79    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
AE7C    89 C2                     mov         dx,ax 
AE7E    83 3D 00                  cmp         word ptr [di],0x0000 
AE81    0F 85 3C 00               jne         L$1290 
AE85    9A 00 00 00 00            call        getch_ 
AE8A    2D 14 00                  sub         ax,0x0014 
AE8D    3D 3F 00                  cmp         ax,0x003f 
AE90    0F 87 2D 00               ja          L$1290 
AE94    B9 08 00                  mov         cx,0x0008 
AE97    BF F7 AD                  mov         di,offset load_settings_-0x5209 
AE9A    0E                        push        cs 
AE9B    07                        pop         es 
AE9C    F2 AE                     repne scasb 
AE9E    D1 E1                     shl         cx,0x01 
AEA0    89 CF                     mov         di,cx 
AEA2    2E 8B 85 FE AD            mov         ax,word ptr cs:load_settings_-0x5202[di] 
AEA7    FF E0                     jmp         ax 
AEA9    8E 5E F2                  mov         ds,word ptr -0xe[bp] 
AEAC    8B 5E F4                  mov         bx,word ptr -0xc[bp] 
AEAF    8B 76 F4                  mov         si,word ptr -0xc[bp] 
AEB2    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
AEB5    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
AEB8    C6 07 01                  mov         byte ptr [bx],0x01 
AEBB    36 C6 06 00 00 01         mov         byte ptr ss:_update_list,0x01 
AEC1                          L$1290:
AEC1    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
AEC4    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
AEC7    8B 07                     mov         ax,word ptr [bx] 
AEC9    2D 03 00                  sub         ax,0x0003 
AECC    3D 73 00                  cmp         ax,0x0073 
AECF    0F 87 E8 00               ja          L$1297 
AED3    B9 0F 00                  mov         cx,0x000f 
AED6    BF 0E AE                  mov         di,offset load_settings_-0x51f2 
AED9    0E                        push        cs 
AEDA    07                        pop         es 
AEDB    F2 AE                     repne scasb 
AEDD    D1 E1                     shl         cx,0x01 
AEDF    89 CF                     mov         di,cx 
AEE1    2E 8B 85 1C AE            mov         ax,word ptr cs:load_settings_-0x51e4[di] 
AEE6    FF E0                     jmp         ax 
AEE8    B8 28 80                  mov         ax,0x8028 
	     AEEC		; The label referred to here is an undefined location
AEEB    E9 C0 60                  jmp         0x00010fae 
AEEE    B8 09 80                  mov         ax,0x8009 
	     AEF2		; The label referred to here is an undefined location
AEF1    E9 BA 60                  jmp         0x00010fae 
AEF4    89 56 FE                  mov         word ptr -0x2[bp],dx 
AEF7    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
AEFA    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
AEFD    03 46 FE                  add         ax,word ptr -0x2[bp] 
AF00    3B 47 20                  cmp         ax,word ptr 0x20[bx] 
AF03    72 2B                     jb          L$1293 
AF05    8B 47 20                  mov         ax,word ptr 0x20[bx] 
AF08    2B 47 2A                  sub         ax,word ptr 0x2a[bx] 
AF0B    48                        dec         ax 
AF0C    29 46 FE                  sub         word ptr -0x2[bp],ax 
AF0F    8B 47 20                  mov         ax,word ptr 0x20[bx] 
AF12    48                        dec         ax 
AF13    89 47 2A                  mov         word ptr 0x2a[bx],ax 
AF16    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
AF19    8B 44 18                  mov         ax,word ptr 0x18[si] 
AF1C    03 46 FE                  add         ax,word ptr -0x2[bp] 
AF1F    3B 44 20                  cmp         ax,word ptr 0x20[si] 
AF22    72 03                     jb          L$1291 
AF24    8B 44 20                  mov         ax,word ptr 0x20[si] 
AF27                          L$1291:
AF27    89 44 18                  mov         word ptr 0x18[si],ax 
AF2A                          L$1292:
AF2A    B8 03 80                  mov         ax,0x8003 
	     AF2E		; The label referred to here is an undefined location
AF2D    E9 7E 60                  jmp         0x00010fae 
AF30                          L$1293:
AF30    BB 04 00                  mov         bx,0x0004 
AF33    8B 56 F2                  mov         dx,word ptr -0xe[bp] 
AF36    89 C1                     mov         cx,ax 
AF38    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
AF3B                          L$1294:
AF3B    0E                        push        cs 
AF3C    E8 00 00                  call        window_list_selectrow_ 
AF3F    B8 FF 7F                  mov         ax,0x7fff 
	     AF43		; The label referred to here is an undefined location
AF42    E9 69 60                  jmp         0x00010fae 
AF45    89 56 FE                  mov         word ptr -0x2[bp],dx 
AF48    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
AF4B    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
AF4E    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
AF51    73 22                     jae         L$1296 
AF53    C7 47 2A 00 00            mov         word ptr 0x2a[bx],0x0000 
AF58    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
AF5B    29 46 FE                  sub         word ptr -0x2[bp],ax 
AF5E    8B 44 18                  mov         ax,word ptr 0x18[si] 
AF61    3B 46 FE                  cmp         ax,word ptr -0x2[bp] 
AF64    76 08                     jbe         L$1295 
AF66    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
AF69    29 44 18                  sub         word ptr 0x18[si],ax 
AF6C    EB BC                     jmp         L$1292 
AF6E                          L$1295:
AF6E    C7 44 18 00 00            mov         word ptr 0x18[si],0x0000 
AF73    EB B5                     jmp         L$1292 
AF75                          L$1296:
AF75    BB 04 00                  mov         bx,0x0004 
AF78    8B 56 F2                  mov         dx,word ptr -0xe[bp] 
AF7B    89 C1                     mov         cx,ax 
AF7D    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
AF80    2B 4E FE                  sub         cx,word ptr -0x2[bp] 
AF83    EB B6                     jmp         L$1294 
AF85    B8 06 80                  mov         ax,0x8006 
	     AF89		; The label referred to here is an undefined location
AF88    E9 23 60                  jmp         0x00010fae 
AF8B    B8 07 80                  mov         ax,0x8007 
	     AF8F		; The label referred to here is an undefined location
AF8E    E9 1D 60                  jmp         0x00010fae 
AF91    B8 08 80                  mov         ax,0x8008 
	     AF95		; The label referred to here is an undefined location
AF94    E9 17 60                  jmp         0x00010fae 
AF97    B8 04 80                  mov         ax,0x8004 
	     AF9B		; The label referred to here is an undefined location
AF9A    E9 11 60                  jmp         0x00010fae 
AF9D    B8 05 80                  mov         ax,0x8005 
	     AFA1		; The label referred to here is an undefined location
AFA0    E9 0B 60                  jmp         0x00010fae 
AFA3    B8 0A 80                  mov         ax,0x800a 
	     AFA7		; The label referred to here is an undefined location
AFA6    E9 05 60                  jmp         0x00010fae 
AFA9    B8 0B 80                  mov         ax,0x800b 
	     AFAD		; The label referred to here is an undefined location
AFAC    E9 FF 5F                  jmp         0x00010fae 
AFAF    B8 0C 80                  mov         ax,0x800c 
	     AFB3		; The label referred to here is an undefined location
AFB2    E9 F9 5F                  jmp         0x00010fae 
AFB5    B8 0D 80                  mov         ax,0x800d 
	     AFB9		; The label referred to here is an undefined location
AFB8    E9 F3 5F                  jmp         0x00010fae 
AFBB                          L$1297:
AFBB    8B 46 08                  mov         ax,word ptr 0x8[bp] 
	     AFBF		; The label referred to here is an undefined location
AFBE    E9 ED 5F                  jmp         0x00010fae 
AFC1                          update_title_:
AFC1    56                        push        si 
AFC2    57                        push        di 
AFC3    55                        push        bp 
AFC4    89 E5                     mov         bp,sp 
AFC6    50                        push        ax 
AFC7    52                        push        dx 
AFC8    53                        push        bx 
AFC9    51                        push        cx 
AFCA    B1 5C                     mov         cl,0x5c 
AFCC                          L$1298:
AFCC    8B 76 FA                  mov         si,word ptr -0x6[bp] 
AFCF    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
AFD2    8C DA                     mov         dx,ds 
AFD4                          L$1299:
AFD4    8A 04                     mov         al,byte ptr [si] 
AFD6    3A C1                     cmp         al,cl 
AFD8    74 09                     je          L$1300 
AFDA    46                        inc         si 
AFDB    3C 00                     cmp         al,0x00 
AFDD    75 F5                     jne         L$1299 
AFDF    2B F6                     sub         si,si 
AFE1    2B D2                     sub         dx,dx 
AFE3                          L$1300:
AFE3    89 D0                     mov         ax,dx 
AFE5    85 D2                     test        dx,dx 
AFE7    75 04                     jne         L$1301 
AFE9    85 F6                     test        si,si 
AFEB    74 12                     je          L$1302 
AFED                          L$1301:
AFED    8E DA                     mov         ds,dx 
AFEF    8D 7C 01                  lea         di,0x1[si] 
AFF2    80 3D 00                  cmp         byte ptr [di],0x00 
AFF5    74 08                     je          L$1302 
AFF7    89 7E FA                  mov         word ptr -0x6[bp],di 
AFFA    89 56 F8                  mov         word ptr -0x8[bp],dx 
AFFD    EB CD                     jmp         L$1298 
AFFF                          L$1302:
AFFF    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
B002    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
B005    80 3F 00                  cmp         byte ptr [bx],0x00 
B008    74 2A                     je          L$1303 
B00A    89 DF                     mov         di,bx 
B00C    1E                        push        ds 
B00D    07                        pop         es 
B00E    B9 FF FF                  mov         cx,0xffff 
B011    33 C0                     xor         ax,ax 
B013    F2 AE                     repne scasb 
B015    F7 D1                     not         cx 
B017    49                        dec         cx 
B018    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
B01B    8B 5E FE                  mov         bx,word ptr -0x2[bp] 
B01E    51                        push        cx 
B01F    8C C1                     mov         cx,es 
B021    8B 07                     mov         ax,word ptr [bx] 
B023    8B 57 02                  mov         dx,word ptr 0x2[bx] 
B026    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
B029    9A 00 00 00 00            call        strncmp_ 
B02E    85 C0                     test        ax,ax 
	     B032		; The label referred to here is an undefined location
B030    0F 84 6D 6A               je          0x00011aa1 
B034                          L$1303:
B034    BF 00 00                  mov         di,offset __FILEMAN_TITLE 
B037    16                        push        ss 
B038    07                        pop         es 
B039    B9 FF FF                  mov         cx,0xffff 
B03C    33 C0                     xor         ax,ax 
B03E    F2 AE                     repne scasb 
B040    F7 D1                     not         cx 
B042    49                        dec         cx 
B043    8B 7E FA                  mov         di,word ptr -0x6[bp] 
B046    8E 46 F8                  mov         es,word ptr -0x8[bp] 
B049    89 CA                     mov         dx,cx 
B04B    B9 FF FF                  mov         cx,0xffff 
B04E    33 C0                     xor         ax,ax 
B050    F2 AE                     repne scasb 
B052    F7 D1                     not         cx 
B054    49                        dec         cx 
B055    89 D0                     mov         ax,dx 
B057    01 C8                     add         ax,cx 
B059    BA 01 00                  mov         dx,0x0001 
B05C    05 04 00                  add         ax,0x0004 
B05F    9A 00 00 00 00            call        calloc_ 
B064    89 C3                     mov         bx,ax 
B066    89 D7                     mov         di,dx 
B068    85 D2                     test        dx,dx 
B06A    75 06                     jne         L$1304 
B06C    85 C0                     test        ax,ax 
	     B070		; The label referred to here is an undefined location
B06E    0F 84 2F 6A               je          0x00011aa1 
B072                          L$1304:
B072    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
B075    8B 76 FE                  mov         si,word ptr -0x2[bp] 
B078    8B 04                     mov         ax,word ptr [si] 
B07A    8B 54 02                  mov         dx,word ptr 0x2[si] 
B07D    9A 00 00 00 00            call        free_ 
B082    16                        push        ss 
B083    68 00 00                  push        offset __FILEMAN_TITLE 
B086    FF 76 F8                  push        word ptr -0x8[bp] 
B089    FF 76 FA                  push        word ptr -0x6[bp] 
B08C    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
B08F    16                        push        ss 
B090    89 1C                     mov         word ptr [si],bx 
B092    68 68 06                  push        offset DGROUP:L$1847 
B095    89 F3                     mov         bx,si 
B097    57                        push        di 
B098    FF 37                     push        word ptr [bx] 
B09A    89 7F 02                  mov         word ptr 0x2[bx],di 
B09D    9A 00 00 00 00            call        sprintf_ 
B0A2    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
B0A7    36 A1 00 00               mov         ax,word ptr ss:_windows 
B0AB    C1 E3 02                  shl         bx,0x02 
B0AE    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
B0B3    01 C3                     add         bx,ax 
B0B5    83 C4 10                  add         sp,0x0010 
B0B8    8B 57 02                  mov         dx,word ptr 0x2[bx] 
B0BB    8B 07                     mov         ax,word ptr [bx] 
B0BD    3B 56 FC                  cmp         dx,word ptr -0x4[bp] 
	     B0C2		; The label referred to here is an undefined location
B0C0    0F 85 DD 69               jne         0x00011aa1 
B0C4    39 F0                     cmp         ax,si 
	     B0C8		; The label referred to here is an undefined location
B0C6    0F 85 D7 69               jne         0x00011aa1 
B0CA    B9 02 00                  mov         cx,0x0002 
B0CD    BB 01 00                  mov         bx,0x0001 
B0D0    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
B0D3    89 F0                     mov         ax,si 
B0D5    0E                        push        cs 
B0D6    E8 00 00                  call        draw_window_ 
	     B0DA		; The label referred to here is an undefined location
B0D9    E9 C5 69                  jmp         0x00011aa1 
B0DC                          fileman_program_:
B0DC    51                        push        cx 
B0DD    56                        push        si 
B0DE    57                        push        di 
B0DF    C8 60 00 00               enter       0x0060,0x00 
B0E3    8B 7E 0C                  mov         di,word ptr 0xc[bp] 
B0E6    89 46 FC                  mov         word ptr -0x4[bp],ax 
B0E9    89 56 FE                  mov         word ptr -0x2[bp],dx 
B0EC    89 5E FA                  mov         word ptr -0x6[bp],bx 
B0EF    8E DA                     mov         ds,dx 
B0F1    89 C3                     mov         bx,ax 
B0F3    89 C6                     mov         si,ax 
B0F5    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B0F8    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B0FB    C4 37                     les         si,dword ptr [bx] 
B0FD    26 8B 44 0C               mov         ax,word ptr es:0xc[si] 
B101    89 46 F6                  mov         word ptr -0xa[bp],ax 
B104    26 8B 44 0E               mov         ax,word ptr es:0xe[si] 
B108    C5 77 04                  lds         si,dword ptr 0x4[bx] 
B10B    89 46 F8                  mov         word ptr -0x8[bp],ax 
B10E    8B 44 0C                  mov         ax,word ptr 0xc[si] 
B111    89 46 F2                  mov         word ptr -0xe[bp],ax 
B114    8B 44 0E                  mov         ax,word ptr 0xe[si] 
B117    89 46 F4                  mov         word ptr -0xc[bp],ax 
B11A    B8 00 00                  mov         ax,seg _diskio_in_progress 
B11D    8E D8                     mov         ds,ax 
B11F    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
B124    0F 85 D2 DB               jne         L$1060 
B128    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
B12C    75 04                     jne         L$1305 
B12E    85 FF                     test        di,di 
B130    74 1A                     je          L$1306 
B132                          L$1305:
B132    FF 76 FA                  push        word ptr -0x6[bp] 
B135    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B138    89 D1                     mov         cx,dx 
B13A    89 F8                     mov         ax,di 
B13C    8B 56 0E                  mov         dx,word ptr 0xe[bp] 
B13F    E8 00 00                  call        fileman_keypress_ 
B142    8E 5E 0E                  mov         ds,word ptr 0xe[bp] 
B145    89 46 FA                  mov         word ptr -0x6[bp],ax 
B148    C7 05 FF FF               mov         word ptr [di],0xffff 
B14C                          L$1306:
B14C    81 7E FA 03 80            cmp         word ptr -0x6[bp],0x8003 
B151    75 50                     jne         L$1308 
B153                          L$1307:
B153    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
B156    8B 4E F8                  mov         cx,word ptr -0x8[bp] 
B159    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B15C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B15F    E8 00 00                  call        update_title_ 
B162    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B165    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B168    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B16B    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B16E    C4 77 10                  les         si,dword ptr 0x10[bx] 
B171    26 FF 74 20               push        word ptr es:0x20[si] 
B175    C5 77 14                  lds         si,dword ptr 0x14[bx] 
B178    FF 74 18                  push        word ptr 0x18[si] 
B17B    FF 76 F4                  push        word ptr -0xc[bp] 
B17E    B9 05 00                  mov         cx,0x0005 
B181    FF 76 F2                  push        word ptr -0xe[bp] 
B184    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B187    FF 76 F8                  push        word ptr -0x8[bp] 
B18A    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B18D    FF 76 F6                  push        word ptr -0xa[bp] 
B190    BB 04 00                  mov         bx,0x0004 
B193    E8 00 00                  call        list_files_ 
B196    BB 04 00                  mov         bx,0x0004 
B199    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B19C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B19F    0E                        push        cs 
B1A0    E8 00 00                  call        window_drawelement_ 
B1A3                          L$1308:
B1A3    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B1A6    3D 00 80                  cmp         ax,0x8000 
B1A9    74 07                     je          L$1309 
B1AB    3D 01 80                  cmp         ax,0x8001 
B1AE    0F 85 BA 00               jne         L$1314 
B1B2                          L$1309:
B1B2    81 7E FA 00 80            cmp         word ptr -0x6[bp],0x8000 
B1B7    75 76                     jne         L$1312 
B1B9                          L$1310:
B1B9    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B1BC    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B1BF    8B 74 18                  mov         si,word ptr 0x18[si] 
B1C2    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B1C5    C5 1C                     lds         bx,dword ptr [si] 
B1C7    C4 7F 0C                  les         di,dword ptr 0xc[bx] 
B1CA    26 80 3D 00               cmp         byte ptr es:[di],0x00 
B1CE    74 5F                     je          L$1312 
B1D0    B9 FF FF                  mov         cx,0xffff 
B1D3    33 C0                     xor         ax,ax 
B1D5    F2 AE                     repne scasb 
B1D7    F7 D1                     not         cx 
B1D9    49                        dec         cx 
B1DA    C5 47 0C                  lds         ax,dword ptr 0xc[bx] 
B1DD    89 C3                     mov         bx,ax 
B1DF    01 CB                     add         bx,cx 
B1E1    80 7F FF 5C               cmp         byte ptr -0x1[bx],0x5c 
B1E5    74 48                     je          L$1312 
B1E7    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B1EA    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B1ED    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B1F0    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B1F3    C5 37                     lds         si,dword ptr [bx] 
B1F5    C4 7C 0C                  les         di,dword ptr 0xc[si] 
B1F8    B9 FF FF                  mov         cx,0xffff 
B1FB    33 C0                     xor         ax,ax 
B1FD    F2 AE                     repne scasb 
B1FF    F7 D1                     not         cx 
B201    49                        dec         cx 
B202    83 F9 44                  cmp         cx,0x0044 
B205    73 28                     jae         L$1312 
B207    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B20A    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B20D    8B 74 18                  mov         si,word ptr 0x18[si] 
B210    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B213    C5 1C                     lds         bx,dword ptr [si] 
B215    BE 70 06                  mov         si,offset DGROUP:L$1848 
B218    C4 7F 0C                  les         di,dword ptr 0xc[bx] 
B21B    16                        push        ss 
B21C    1F                        pop         ds 
B21D    57                        push        di 
B21E    51                        push        cx 
B21F    B9 FF FF                  mov         cx,0xffff 
B222    B0 00                     mov         al,0x00 
B224    F2 AE                     repne scasb 
B226    59                        pop         cx 
B227    4F                        dec         di 
B228                          L$1311:
B228    AC                        lodsb       
B229    AA                        stosb       
B22A    3C 00                     cmp         al,0x00 
B22C    75 FA                     jne         L$1311 
B22E    5F                        pop         di 
B22F                          L$1312:
B22F    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B232    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B235    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B238    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B23B    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B23E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B241    C5 77 14                  lds         si,dword ptr 0x14[bx] 
B244    BB 05 00                  mov         bx,0x0005 
B247    C7 44 18 00 00            mov         word ptr 0x18[si],0x0000 
B24C    0E                        push        cs 
B24D    E8 00 00                  call        window_drawelement_ 
B250    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B253    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B256                          L$1313:
B256    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B259    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B25C    C5 77 10                  lds         si,dword ptr 0x10[bx] 
B25F    C7 46 FA FF 7F            mov         word ptr -0x6[bp],0x7fff 
B264    C7 44 2A FF FF            mov         word ptr 0x2a[si],0xffff 
B269    E9 E7 FE                  jmp         L$1307 
B26C                          L$1314:
B26C    3D 02 80                  cmp         ax,0x8002 
B26F    75 23                     jne         L$1315 
B271    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B274    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B277    8B 74 18                  mov         si,word ptr 0x18[si] 
B27A    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B27D    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B280    8B 47 24                  mov         ax,word ptr 0x24[bx] 
B283    3B 47 2A                  cmp         ax,word ptr 0x2a[bx] 
B286    75 0C                     jne         L$1315 
B288    C7 46 FA 04 80            mov         word ptr -0x6[bp],0x8004 
B28D    C7 47 24 FF FF            mov         word ptr 0x24[bx],0xffff 
B292    EB 12                     jmp         L$1316 
B294                          L$1315:
B294    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B297    3D 04 80                  cmp         ax,0x8004 
B29A    74 0A                     je          L$1316 
B29C    3D 05 80                  cmp         ax,0x8005 
B29F    74 05                     je          L$1316 
B2A1    3D 0A 80                  cmp         ax,0x800a 
B2A4    75 37                     jne         L$1317 
B2A6                          L$1316:
B2A6    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B2A9    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B2AC    8B 74 18                  mov         si,word ptr 0x18[si] 
B2AF    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B2B2    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B2B5    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
B2B8    8B 4F 14                  mov         cx,word ptr 0x14[bx] 
B2BB    C1 E0 02                  shl         ax,0x02 
B2BE    8E 5F 16                  mov         ds,word ptr 0x16[bx] 
B2C1    89 CB                     mov         bx,cx 
B2C3    01 C3                     add         bx,ax 
B2C5    66 FF 37                  push        dword ptr [bx] 
B2C8    66 FF 76 F6               push        dword ptr -0xa[bp] 
B2CC    16                        push        ss 
B2CD    68 97 01                  push        offset DGROUP:L$1766 
B2D0    16                        push        ss 
B2D1    8D 5E A0                  lea         bx,-0x60[bp] 
B2D4    53                        push        bx 
B2D5    9A 00 00 00 00            call        sprintf_ 
B2DA    83 C4 10                  add         sp,0x0010 
B2DD                          L$1317:
B2DD    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B2E0    3D 04 80                  cmp         ax,0x8004 
B2E3    74 07                     je          L$1318 
B2E5    3D 05 80                  cmp         ax,0x8005 
B2E8    0F 85 B1 00               jne         L$1324 
B2EC                          L$1318:
B2EC    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B2EF    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B2F2    8B 74 18                  mov         si,word ptr 0x18[si] 
B2F5    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B2F8    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B2FB    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
B2FE    3D FF FF                  cmp         ax,0xffff 
B301    0F 84 98 00               je          L$1324 
B305    C1 E0 02                  shl         ax,0x02 
B308    C5 4F 14                  lds         cx,dword ptr 0x14[bx] 
B30B    89 CB                     mov         bx,cx 
B30D    01 C3                     add         bx,ax 
B30F    8B 47 02                  mov         ax,word ptr 0x2[bx] 
B312    8B 0F                     mov         cx,word ptr [bx] 
B314    85 C0                     test        ax,ax 
B316    75 06                     jne         L$1319 
B318    85 C9                     test        cx,cx 
B31A    0F 84 7F 00               je          L$1324 
B31E                          L$1319:
B31E    8A 46 FA                  mov         al,byte ptr -0x6[bp] 
B321    2C 04                     sub         al,0x04 
B323    30 E4                     xor         ah,ah 
B325    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B328    50                        push        ax 
B329    89 C8                     mov         ax,cx 
B32B    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
B32E    89 C3                     mov         bx,ax 
B330    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B333    E8 00 00                  call        open_file_ 
B336    89 C3                     mov         bx,ax 
B338    85 C0                     test        ax,ax 
B33A    75 27                     jne         L$1320 
B33C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B33F    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B342    0E                        push        cs 
B343    E8 00 00                  call        window_drawelement_ 
B346    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B349    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B34C    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
B34F    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
B352    C5 77 14                  lds         si,dword ptr 0x14[bx] 
B355    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B358    C7 44 18 00 00            mov         word ptr 0x18[si],0x0000 
B35D    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B360    E9 F3 FE                  jmp         L$1313 
B363                          L$1320:
B363    3D 01 00                  cmp         ax,0x0001 
B366    74 05                     je          L$1321 
B368    3D 02 00                  cmp         ax,0x0002 
B36B    75 30                     jne         L$1324 
B36D                          L$1321:
B36D    83 FB 01                  cmp         bx,0x0001 
B370    75 0C                     jne         L$1322 
B372    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
B377    8D 5E A0                  lea         bx,-0x60[bp] 
B37A    6A 00                     push        0x0000 
B37C    EB 0F                     jmp         L$1323 
B37E                          L$1322:
B37E    83 FB 02                  cmp         bx,0x0002 
B381    75 1A                     jne         L$1324 
B383    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
B388    8D 5E A0                  lea         bx,-0x60[bp] 
B38B    6A 01                     push        0x0001 
B38D                          L$1323:
B38D    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B390    6A 00                     push        0x0000 
B392    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B395    6A 00                     push        0x0000 
B397    8C D1                     mov         cx,ss 
B399    0E                        push        cs 
B39A    E8 00 00                  call        run_program_ 
B39D                          L$1324:
B39D    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B3A0    3D 06 80                  cmp         ax,0x8006 
B3A3    74 05                     je          L$1325 
B3A5    3D 07 80                  cmp         ax,0x8007 
B3A8    75 3A                     jne         L$1326 
B3AA                          L$1325:
B3AA    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B3AD    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B3B0    8B 74 18                  mov         si,word ptr 0x18[si] 
B3B3    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B3B6    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B3B9    83 7F 2A FF               cmp         word ptr 0x2a[bx],0xffff 
B3BD    74 25                     je          L$1326 
B3BF    8A 46 FA                  mov         al,byte ptr -0x6[bp] 
B3C2    2C 05                     sub         al,0x05 
B3C4    30 E4                     xor         ah,ah 
B3C6    8B 4F 2A                  mov         cx,word ptr 0x2a[bx] 
B3C9    50                        push        ax 
B3CA    C1 E1 02                  shl         cx,0x02 
B3CD    C5 47 14                  lds         ax,dword ptr 0x14[bx] 
B3D0    89 C3                     mov         bx,ax 
B3D2    01 CB                     add         bx,cx 
B3D4    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B3D7    8B 07                     mov         ax,word ptr [bx] 
B3D9    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
B3DC    89 C3                     mov         bx,ax 
B3DE    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B3E1    E8 00 00                  call        copy_file_ 
B3E4                          L$1326:
B3E4    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B3E7    3D 08 80                  cmp         ax,0x8008 
B3EA    75 11                     jne         L$1327 
B3EC    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B3EF    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B3F2    C7 46 FA FF 7F            mov         word ptr -0x6[bp],0x7fff 
B3F7    E8 00 00                  call        paste_file_ 
B3FA    E9 56 FD                  jmp         L$1307 
B3FD                          L$1327:
B3FD    3D 09 80                  cmp         ax,0x8009 
B400    75 39                     jne         L$1329 
B402    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B405    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B408    8B 74 18                  mov         si,word ptr 0x18[si] 
B40B    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B40E    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B411    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
B414    3D FF FF                  cmp         ax,0xffff 
B417    74 1A                     je          L$1328 
B419    C1 E0 02                  shl         ax,0x02 
B41C    C5 4F 14                  lds         cx,dword ptr 0x14[bx] 
B41F    89 CB                     mov         bx,cx 
B421    01 C3                     add         bx,ax 
B423    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B426    8B 07                     mov         ax,word ptr [bx] 
B428    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
B42B    89 C3                     mov         bx,ax 
B42D    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B430    E8 00 00                  call        delete_file_ 
B433                          L$1328:
B433    C7 46 FA FF 7F            mov         word ptr -0x6[bp],0x7fff 
B438    E9 18 FD                  jmp         L$1307 
B43B                          L$1329:
B43B    3D 0A 80                  cmp         ax,0x800a 
B43E    75 36                     jne         L$1330 
B440    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B443    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B446    8B 74 18                  mov         si,word ptr 0x18[si] 
B449    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B44C    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B44F    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
B452    3D FF FF                  cmp         ax,0xffff 
B455    74 1F                     je          L$1330 
B457    8D 4E A0                  lea         cx,-0x60[bp] 
B45A    16                        push        ss 
B45B    C1 E0 02                  shl         ax,0x02 
B45E    51                        push        cx 
B45F    C5 4F 14                  lds         cx,dword ptr 0x14[bx] 
B462    89 CB                     mov         bx,cx 
B464    01 C3                     add         bx,ax 
B466    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B469    8B 07                     mov         ax,word ptr [bx] 
B46B    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
B46E    89 C3                     mov         bx,ax 
B470    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B473    E8 00 00                  call        show_file_info_ 
B476                          L$1330:
B476    81 7E FA 0B 80            cmp         word ptr -0x6[bp],0x800b 
B47B    75 18                     jne         L$1331 
B47D    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B480    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B483    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B486    E8 00 00                  call        init_createdir_window_ 
B489    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B48C    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
B48F    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
B492    C6 07 01                  mov         byte ptr [bx],0x01 
B495                          L$1331:
B495    36 80 3E 00 00 00         cmp         byte ptr ss:_update_list,0x00 
B49B    74 27                     je          L$1332 
B49D    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B4A0    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B4A3    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
B4A6    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
B4A9    80 3F 01                  cmp         byte ptr [bx],0x01 
B4AC    75 16                     jne         L$1332 
B4AE    30 C0                     xor         al,al 
B4B0    89 F3                     mov         bx,si 
B4B2    36 A2 00 00               mov         byte ptr ss:_update_list,al 
B4B6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
B4B9    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
B4BC    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
B4BF    88 07                     mov         byte ptr [bx],al 
B4C1    E9 8F FC                  jmp         L$1307 
B4C4                          L$1332:
B4C4    81 7E FA 0C 80            cmp         word ptr -0x6[bp],0x800c 
B4C9    75 42                     jne         L$1333 
B4CB    C5 76 FC                  lds         si,dword ptr -0x4[bp] 
B4CE    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B4D1    8B 74 18                  mov         si,word ptr 0x18[si] 
B4D4    8E 5F 1A                  mov         ds,word ptr 0x1a[bx] 
B4D7    C5 5C 10                  lds         bx,dword ptr 0x10[si] 
B4DA    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
B4DD    3D FF FF                  cmp         ax,0xffff 
B4E0    74 2B                     je          L$1333 
B4E2    89 C1                     mov         cx,ax 
B4E4    C1 E1 02                  shl         cx,0x02 
B4E7    C5 47 14                  lds         ax,dword ptr 0x14[bx] 
B4EA    89 C3                     mov         bx,ax 
B4EC    01 CB                     add         bx,cx 
B4EE    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B4F1    8B 07                     mov         ax,word ptr [bx] 
B4F3    8B 4F 02                  mov         cx,word ptr 0x2[bx] 
B4F6    89 C3                     mov         bx,ax 
B4F8    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B4FB    E8 00 00                  call        init_rename_window_ 
B4FE    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B501    8B 76 FC                  mov         si,word ptr -0x4[bp] 
B504    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
B507    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
B50A    C6 07 01                  mov         byte ptr [bx],0x01 
B50D                          L$1333:
B50D    81 7E FA 0D 80            cmp         word ptr -0x6[bp],0x800d 
B512    75 09                     jne         L$1334 
B514    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B517    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B51A    E8 00 00                  call        show_drive_info_ 
B51D                          L$1334:
B51D    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B520    3D 28 80                  cmp         ax,0x8028 
B523    75 1F                     jne         L$1335 
B525    6A FF                     push        0xffff 
B527    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B52A    6A 00                     push        0x0000 
B52C    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B52F    6A 00                     push        0x0000 
B531    36 8B 1E 00 00            mov         bx,word ptr ss:_comspec 
B536    6A 00                     push        0x0000 
B538    36 8B 0E 02 00            mov         cx,word ptr ss:_comspec+0x2 
B53D    0E                        push        cs 
B53E    E8 00 00                  call        run_program_ 
B541    E9 B6 D7                  jmp         L$1060 
B544                          L$1335:
B544    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
B547    80 E4 7F                  and         ah,0x7f 
B54A    3B 47 28                  cmp         ax,word ptr 0x28[bx] 
B54D    0F 82 A9 D7               jb          L$1060 
B551    8B 5F 28                  mov         bx,word ptr 0x28[bx] 
B554    83 C3 1A                  add         bx,0x001a 
B557    39 D8                     cmp         ax,bx 
B559    0F 83 9D D7               jae         L$1060 
B55D    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
B560    05 41 00                  add         ax,0x0041 
B563    2B 47 28                  sub         ax,word ptr 0x28[bx] 
B566    50                        push        ax 
B567    16                        push        ss 
B568    68 72 06                  push        offset DGROUP:L$1849 
B56B    FF 76 F8                  push        word ptr -0x8[bp] 
B56E    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B571    FF 76 F6                  push        word ptr -0xa[bp] 
B574    31 DB                     xor         bx,bx 
B576    9A 00 00 00 00            call        sprintf_ 
B57B    83 C4 0A                  add         sp,0x000a 
B57E    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
B581    0E                        push        cs 
B582    E8 00 00                  call        window_drawelement_ 
B585    E9 31 FC                  jmp         L$1310 
B588                          build_drive_menu_:
B588    53                        push        bx 
B589    51                        push        cx 
B58A    56                        push        si 
B58B    57                        push        di 
B58C    C8 0E 00 00               enter       0x000e,0x00 
B590    89 C6                     mov         si,ax 
B592    89 56 FC                  mov         word ptr -0x4[bp],dx 
B595    8E DA                     mov         ds,dx 
B597    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
B59A    89 46 F6                  mov         word ptr -0xa[bp],ax 
B59D    8B 44 1E                  mov         ax,word ptr 0x1e[si] 
B5A0    89 46 F8                  mov         word ptr -0x8[bp],ax 
B5A3    B8 40 00                  mov         ax,0x0040 
B5A6    BB 10 00                  mov         bx,0x0010 
B5A9    8E D8                     mov         ds,ax 
B5AB    8A 07                     mov         al,byte ptr [bx] 
B5AD    BF 76 06                  mov         di,offset DGROUP:L$1850 
B5B0    88 C4                     mov         ah,al 
B5B2    8C 56 FA                  mov         word ptr -0x6[bp],ss 
B5B5    80 E4 01                  and         ah,0x01 
B5B8    88 66 FE                  mov         byte ptr -0x2[bp],ah 
B5BB    74 0E                     je          L$1336 
B5BD    0F B6 D0                  movzx       dx,al 
B5C0    C1 FA 06                  sar         dx,0x06 
B5C3    0F B6 C4                  movzx       ax,ah 
B5C6    01 D0                     add         ax,dx 
B5C8    88 46 FE                  mov         byte ptr -0x2[bp],al 
B5CB                          L$1336:
B5CB    8D 5E F2                  lea         bx,-0xe[bp] 
B5CE    8C D1                     mov         cx,ss 
B5D0    31 C0                     xor         ax,ax 
B5D2    C7 46 F4 00 00            mov         word ptr -0xc[bp],0x0000 
B5D7    9A 00 00 00 00            call        _dos_setdrive_ 
B5DC                          L$1337:
B5DC    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
B5DF    3B 46 F2                  cmp         ax,word ptr -0xe[bp] 
B5E2    0F 83 C9 E9               jae         L$1215 
B5E6    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
B5EA    3B 46 F4                  cmp         ax,word ptr -0xc[bp] 
B5ED    77 06                     ja          L$1338 
B5EF    83 7E F4 02               cmp         word ptr -0xc[bp],0x0002 
B5F3    72 33                     jb          L$1339 
B5F5                          L$1338:
B5F5    8A 46 F4                  mov         al,byte ptr -0xc[bp] 
B5F8    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
B5FB    04 41                     add         al,0x41 
B5FD    88 05                     mov         byte ptr [di],al 
B5FF    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
B602    8B 44 28                  mov         ax,word ptr 0x28[si] 
B605    8B 4E FA                  mov         cx,word ptr -0x6[bp] 
B608    03 46 F4                  add         ax,word ptr -0xc[bp] 
B60B    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
B60E    80 CC 80                  or          ah,0x80 
B611    89 FB                     mov         bx,di 
B613    50                        push        ax 
B614    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
B617    0E                        push        cs 
B618    E8 00 00                  call        new_menuitem_ 
B61B    85 D2                     test        dx,dx 
B61D    75 09                     jne         L$1339 
B61F    85 C0                     test        ax,ax 
B621    75 05                     jne         L$1339 
B623    31 C0                     xor         ax,ax 
B625    E9 62 D9                  jmp         L$1094 
B628                          L$1339:
B628    FF 46 F4                  inc         word ptr -0xc[bp] 
B62B    EB AF                     jmp         L$1337 
B62D                          init_fileman_window_:
B62D    53                        push        bx 
B62E    51                        push        cx 
B62F    56                        push        si 
B630    57                        push        di 
B631    C8 0C 00 00               enter       0x000c,0x00 
B635    89 C7                     mov         di,ax 
B637    89 56 FA                  mov         word ptr -0x6[bp],dx 
B63A    68 00 00                  push        seg fileman_program_ 
B63D    68 00 00                  push        offset fileman_program_ 
B640    16                        push        ss 
B641    68 79 06                  push        offset DGROUP:L$1851 
B644    6A 01                     push        0x0001 
B646    B9 BE 00                  mov         cx,0x00be 
B649    6A 01                     push        0x0001 
B64B    BB FA 00                  mov         bx,0x00fa 
B64E    16                        push        ss 
B64F    BA FF FF                  mov         dx,0xffff 
B652    68 00 00                  push        offset __FILEMAN_TITLE 
B655    89 D0                     mov         ax,dx 
B657    0E                        push        cs 
B658    E8 00 00                  call        new_window_ 
B65B    89 C3                     mov         bx,ax 
B65D    89 C6                     mov         si,ax 
B65F    36 A1 19 03               mov         ax,word ptr ss:L$1920 
B663    89 46 F8                  mov         word ptr -0x8[bp],ax 
B666    36 A1 1B 03               mov         ax,word ptr ss:L$1921 
B66A    89 D1                     mov         cx,dx 
B66C    89 46 F4                  mov         word ptr -0xc[bp],ax 
B66F    36 A1 1D 03               mov         ax,word ptr ss:L$1922 
B673    89 56 FE                  mov         word ptr -0x2[bp],dx 
B676    89 46 F6                  mov         word ptr -0xa[bp],ax 
B679    85 D2                     test        dx,dx 
B67B    75 1E                     jne         L$1343 
B67D    85 DB                     test        bx,bx 
B67F    75 1A                     jne         L$1343 
B681                          L$1340:
B681    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
B685    75 04                     jne         L$1341 
B687    85 F6                     test        si,si 
B689    74 09                     je          L$1342 
B68B                          L$1341:
B68B    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B68E    89 F0                     mov         ax,si 
B690    0E                        push        cs 
B691    E8 00 00                  call        del_window_ 
B694                          L$1342:
B694    31 C0                     xor         ax,ax 
B696    31 D2                     xor         dx,dx 
B698    E9 EF D8                  jmp         L$1094 
B69B                          L$1343:
B69B    B8 01 00                  mov         ax,0x0001 
B69E    9A 00 00 00 00            call        malloc_ 
B6A3    8E D9                     mov         ds,cx 
B6A5    89 47 3A                  mov         word ptr 0x3a[bx],ax 
B6A8    89 57 3C                  mov         word ptr 0x3c[bx],dx 
B6AB    8B 47 3C                  mov         ax,word ptr 0x3c[bx] 
B6AE    8B 57 3A                  mov         dx,word ptr 0x3a[bx] 
B6B1    85 C0                     test        ax,ax 
B6B3    75 04                     jne         L$1344 
B6B5    85 D2                     test        dx,dx 
B6B7    74 C8                     je          L$1340 
B6B9                          L$1344:
B6B9    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
B6BC    85 C0                     test        ax,ax 
B6BE    75 04                     jne         L$1345 
B6C0    85 FF                     test        di,di 
B6C2    74 07                     je          L$1346 
B6C4                          L$1345:
B6C4    89 7E FC                  mov         word ptr -0x4[bp],di 
B6C7    89 C7                     mov         di,ax 
B6C9    EB 08                     jmp         L$1347 
B6CB                          L$1346:
B6CB    8D 46 F8                  lea         ax,-0x8[bp] 
B6CE    8C D7                     mov         di,ss 
B6D0    89 46 FC                  mov         word ptr -0x4[bp],ax 
B6D3                          L$1347:
B6D3    6A 44                     push        0x0044 
B6D5    B9 03 00                  mov         cx,0x0003 
B6D8    57                        push        di 
B6D9    BB 46 00                  mov         bx,0x0046 
B6DC    FF 76 FC                  push        word ptr -0x4[bp] 
B6DF    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B6E2    68 AA 00                  push        0x00aa 
B6E5    89 F0                     mov         ax,si 
B6E7    0E                        push        cs 
B6E8    E8 00 00                  call        window_textbox_ 
B6EB    85 D2                     test        dx,dx 
B6ED    75 04                     jne         L$1348 
B6EF    85 C0                     test        ax,ax 
B6F1    74 8E                     je          L$1340 
B6F3                          L$1348:
B6F3    6A 0C                     push        0x000c 
B6F5    8D 56 F4                  lea         dx,-0xc[bp] 
B6F8    B9 17 00                  mov         cx,0x0017 
B6FB    16                        push        ss 
B6FC    BB 46 00                  mov         bx,0x0046 
B6FF    52                        push        dx 
B700    89 F0                     mov         ax,si 
B702    68 AA 00                  push        0x00aa 
B705    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B708    0E                        push        cs 
B709    E8 00 00                  call        window_textbox_ 
B70C    85 D2                     test        dx,dx 
B70E    75 06                     jne         L$1349 
B710    85 C0                     test        ax,ax 
B712    0F 84 6B FF               je          L$1340 
B716                          L$1349:
B716    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B71C    B9 03 00                  mov         cx,0x0003 
B71F    50                        push        ax 
B720    BB 0A 00                  mov         bx,0x000a 
B723    16                        push        ss 
B724    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B727    68 8B 06                  push        offset DGROUP:L$1852 
B72A    89 F0                     mov         ax,si 
B72C    0E                        push        cs 
B72D    E8 00 00                  call        window_text_ 
B730    85 D2                     test        dx,dx 
B732    75 06                     jne         L$1350 
B734    85 C0                     test        ax,ax 
B736    0F 84 47 FF               je          L$1340 
B73A                          L$1350:
B73A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B740    B9 17 00                  mov         cx,0x0017 
B743    50                        push        ax 
B744    BB 0A 00                  mov         bx,0x000a 
B747    16                        push        ss 
B748    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B74B    68 96 06                  push        offset DGROUP:L$1853 
B74E    89 F0                     mov         ax,si 
B750    0E                        push        cs 
B751    E8 00 00                  call        window_text_ 
B754    85 D2                     test        dx,dx 
B756    75 06                     jne         L$1351 
B758    85 C0                     test        ax,ax 
B75A    0F 84 23 FF               je          L$1340 
B75E                          L$1351:
B75E    6A 0A                     push        0x000a 
B760    6A 00                     push        0x0000 
B762    B9 2B 00                  mov         cx,0x002b 
B765    6A 00                     push        0x0000 
B767    BB 0A 00                  mov         bx,0x000a 
B76A    6A 64                     push        0x0064 
B76C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B76F    68 96 00                  push        0x0096 
B772    89 F0                     mov         ax,si 
B774    0E                        push        cs 
B775    E8 00 00                  call        window_list_ 
B778    89 C3                     mov         bx,ax 
B77A    89 D1                     mov         cx,dx 
B77C    85 D2                     test        dx,dx 
B77E    75 06                     jne         L$1352 
B780    85 C0                     test        ax,ax 
B782    0F 84 FB FE               je          L$1340 
B786                          L$1352:
B786    BA 04 00                  mov         dx,0x0004 
B789    B8 0A 00                  mov         ax,0x000a 
B78C    9A 00 00 00 00            call        calloc_ 
B791    8E D9                     mov         ds,cx 
B793    89 47 14                  mov         word ptr 0x14[bx],ax 
B796    89 57 16                  mov         word ptr 0x16[bx],dx 
B799    8B 47 14                  mov         ax,word ptr 0x14[bx] 
B79C    85 D2                     test        dx,dx 
B79E    75 06                     jne         L$1353 
B7A0    85 C0                     test        ax,ax 
B7A2    0F 84 DB FE               je          L$1340 
B7A6                          L$1353:
B7A6    66 6A 00                  pushd       0x00000000 
B7A9    6A FF                     push        0xffff 
B7AB    B9 2B 00                  mov         cx,0x002b 
B7AE    6A 00                     push        0x0000 
B7B0    BB A1 00                  mov         bx,0x00a1 
B7B3    6A 4A                     push        0x004a 
B7B5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B7B8    6A 00                     push        0x0000 
B7BA    89 F0                     mov         ax,si 
B7BC    0E                        push        cs 
B7BD    E8 00 00                  call        window_scrollbar_ 
B7C0    85 D2                     test        dx,dx 
B7C2    75 06                     jne         L$1354 
B7C4    85 C0                     test        ax,ax 
B7C6    0F 84 B7 FE               je          L$1340 
B7CA                          L$1354:
B7CA    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B7D0    50                        push        ax 
B7D1    B9 2B 00                  mov         cx,0x002b 
B7D4    16                        push        ss 
B7D5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B7DB    68 A2 06                  push        offset DGROUP:L$1854 
B7DE    40                        inc         ax 
B7DF    40                        inc         ax 
B7E0    BB B4 00                  mov         bx,0x00b4 
B7E3    50                        push        ax 
B7E4    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B7E7    6A 3C                     push        0x003c 
B7E9    89 F0                     mov         ax,si 
B7EB    0E                        push        cs 
B7EC    E8 00 00                  call        window_button_ 
B7EF    85 D2                     test        dx,dx 
B7F1    75 06                     jne         L$1355 
B7F3    85 C0                     test        ax,ax 
B7F5    0F 84 88 FE               je          L$1340 
B7F9                          L$1355:
B7F9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B7FF    50                        push        ax 
B800    B9 3F 00                  mov         cx,0x003f 
B803    16                        push        ss 
B804    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B80A    68 A7 06                  push        offset DGROUP:L$1855 
B80D    40                        inc         ax 
B80E    40                        inc         ax 
B80F    BB B4 00                  mov         bx,0x00b4 
B812    50                        push        ax 
B813    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B816    6A 3C                     push        0x003c 
B818    89 F0                     mov         ax,si 
B81A    0E                        push        cs 
B81B    E8 00 00                  call        window_button_ 
B81E    85 D2                     test        dx,dx 
B820    75 06                     jne         L$1356 
B822    85 C0                     test        ax,ax 
B824    0F 84 59 FE               je          L$1340 
B828                          L$1356:
B828    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B82E    50                        push        ax 
B82F    B9 53 00                  mov         cx,0x0053 
B832    16                        push        ss 
B833    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B839    68 AD 06                  push        offset DGROUP:L$1856 
B83C    40                        inc         ax 
B83D    40                        inc         ax 
B83E    BB B4 00                  mov         bx,0x00b4 
B841    50                        push        ax 
B842    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B845    6A 3C                     push        0x003c 
B847    89 F0                     mov         ax,si 
B849    0E                        push        cs 
B84A    E8 00 00                  call        window_button_ 
B84D    85 D2                     test        dx,dx 
B84F    75 06                     jne         L$1357 
B851    85 C0                     test        ax,ax 
B853    0F 84 2A FE               je          L$1340 
B857                          L$1357:
B857    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B85D    50                        push        ax 
B85E    B9 67 00                  mov         cx,0x0067 
B861    16                        push        ss 
B862    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B868    68 B2 06                  push        offset DGROUP:L$1857 
B86B    40                        inc         ax 
B86C    40                        inc         ax 
B86D    BB B4 00                  mov         bx,0x00b4 
B870    50                        push        ax 
B871    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B874    6A 3C                     push        0x003c 
B876    89 F0                     mov         ax,si 
B878    0E                        push        cs 
B879    E8 00 00                  call        window_button_ 
B87C    85 D2                     test        dx,dx 
B87E    75 06                     jne         L$1358 
B880    85 C0                     test        ax,ax 
B882    0F 84 FB FD               je          L$1340 
B886                          L$1358:
B886    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B88C    50                        push        ax 
B88D    B9 7B 00                  mov         cx,0x007b 
B890    16                        push        ss 
B891    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B897    68 B6 06                  push        offset DGROUP:L$1858 
B89A    40                        inc         ax 
B89B    40                        inc         ax 
B89C    BB B4 00                  mov         bx,0x00b4 
B89F    50                        push        ax 
B8A0    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B8A3    6A 3C                     push        0x003c 
B8A5    89 F0                     mov         ax,si 
B8A7    0E                        push        cs 
B8A8    E8 00 00                  call        window_button_ 
B8AB    85 D2                     test        dx,dx 
B8AD    75 06                     jne         L$1359 
B8AF    85 C0                     test        ax,ax 
B8B1    0F 84 CC FD               je          L$1340 
B8B5                          L$1359:
B8B5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B8BB    50                        push        ax 
B8BC    B9 8F 00                  mov         cx,0x008f 
B8BF    16                        push        ss 
B8C0    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B8C6    68 BC 06                  push        offset DGROUP:L$1859 
B8C9    40                        inc         ax 
B8CA    40                        inc         ax 
B8CB    BB B4 00                  mov         bx,0x00b4 
B8CE    50                        push        ax 
B8CF    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B8D2    6A 3C                     push        0x003c 
B8D4    89 F0                     mov         ax,si 
B8D6    0E                        push        cs 
B8D7    E8 00 00                  call        window_button_ 
B8DA    85 D2                     test        dx,dx 
B8DC    75 06                     jne         L$1360 
B8DE    85 C0                     test        ax,ax 
B8E0    0F 84 9D FD               je          L$1340 
B8E4                          L$1360:
B8E4    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B8EA    50                        push        ax 
B8EB    B9 94 00                  mov         cx,0x0094 
B8EE    16                        push        ss 
B8EF    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B8F5    68 C3 06                  push        offset DGROUP:L$1860 
B8F8    40                        inc         ax 
B8F9    40                        inc         ax 
B8FA    BB 0A 00                  mov         bx,0x000a 
B8FD    50                        push        ax 
B8FE    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B901    6A 3C                     push        0x003c 
B903    89 F0                     mov         ax,si 
B905    0E                        push        cs 
B906    E8 00 00                  call        window_button_ 
B909    85 D2                     test        dx,dx 
B90B    75 06                     jne         L$1361 
B90D    85 C0                     test        ax,ax 
B90F    0F 84 6E FD               je          L$1340 
B913                          L$1361:
B913    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B919    50                        push        ax 
B91A    B9 A8 00                  mov         cx,0x00a8 
B91D    16                        push        ss 
B91E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B924    68 CE 06                  push        offset DGROUP:L$1861 
B927    40                        inc         ax 
B928    40                        inc         ax 
B929    BB 0A 00                  mov         bx,0x000a 
B92C    50                        push        ax 
B92D    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B930    68 85 00                  push        0x0085 
B933    89 F0                     mov         ax,si 
B935    0E                        push        cs 
B936    E8 00 00                  call        window_button_ 
B939    85 D2                     test        dx,dx 
B93B    75 06                     jne         L$1362 
B93D    85 C0                     test        ax,ax 
B93F    0F 84 3E FD               je          L$1340 
B943                          L$1362:
B943    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B949    50                        push        ax 
B94A    B9 A3 00                  mov         cx,0x00a3 
B94D    16                        push        ss 
B94E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B954    68 E0 06                  push        offset DGROUP:L$1862 
B957    40                        inc         ax 
B958    40                        inc         ax 
B959    BB B4 00                  mov         bx,0x00b4 
B95C    50                        push        ax 
B95D    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B960    6A 3C                     push        0x003c 
B962    89 F0                     mov         ax,si 
B964    0E                        push        cs 
B965    E8 00 00                  call        window_button_ 
B968    85 D2                     test        dx,dx 
B96A    75 06                     jne         L$1363 
B96C    85 C0                     test        ax,ax 
B96E    0F 84 0F FD               je          L$1340 
B972                          L$1363:
B972    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
B978    50                        push        ax 
B979    B9 94 00                  mov         cx,0x0094 
B97C    16                        push        ss 
B97D    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
B983    68 E8 06                  push        offset DGROUP:L$1863 
B986    40                        inc         ax 
B987    40                        inc         ax 
B988    BB 4B 00                  mov         bx,0x004b 
B98B    50                        push        ax 
B98C    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B98F    6A 44                     push        0x0044 
B991    89 F0                     mov         ax,si 
B993    0E                        push        cs 
B994    E8 00 00                  call        window_button_ 
B997    85 D2                     test        dx,dx 
B999    75 06                     jne         L$1364 
B99B    85 C0                     test        ax,ax 
B99D    0F 84 E0 FC               je          L$1340 
B9A1                          L$1364:
B9A1    B8 F4 06                  mov         ax,offset DGROUP:L$1864 
B9A4    8C D2                     mov         dx,ss 
B9A6    31 DB                     xor         bx,bx 
B9A8    31 C9                     xor         cx,cx 
B9AA    0E                        push        cs 
B9AB    E8 00 00                  call        new_menu_ 
B9AE    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
B9B1    89 44 1C                  mov         word ptr 0x1c[si],ax 
B9B4    89 54 1E                  mov         word ptr 0x1e[si],dx 
B9B7    8B 44 1E                  mov         ax,word ptr 0x1e[si] 
B9BA    8B 54 1C                  mov         dx,word ptr 0x1c[si] 
B9BD    85 C0                     test        ax,ax 
B9BF    75 06                     jne         L$1365 
B9C1    85 D2                     test        dx,dx 
B9C3    0F 84 BA FC               je          L$1340 
B9C7                          L$1365:
B9C7    89 F0                     mov         ax,si 
B9C9    8C DA                     mov         dx,ds 
B9CB    E8 00 00                  call        build_drive_menu_ 
B9CE    85 C0                     test        ax,ax 
B9D0    0F 84 AD FC               je          L$1340 
B9D4    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
B9D7    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
B9DA    6A 0A                     push        0x000a 
B9DC    C5 47 14                  lds         ax,dword ptr 0x14[bx] 
B9DF    89 C3                     mov         bx,ax 
B9E1    FF 77 18                  push        word ptr 0x18[bx] 
B9E4    8D 56 F4                  lea         dx,-0xc[bp] 
B9E7    16                        push        ss 
B9E8    B9 05 00                  mov         cx,0x0005 
B9EB    52                        push        dx 
B9EC    89 F0                     mov         ax,si 
B9EE    57                        push        di 
B9EF    BB 04 00                  mov         bx,0x0004 
B9F2    FF 76 FC                  push        word ptr -0x4[bp] 
B9F5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
B9F8    E8 00 00                  call        list_files_ 
B9FB    85 C0                     test        ax,ax 
B9FD    0F 84 80 FC               je          L$1340 
BA01    B9 01 00                  mov         cx,0x0001 
BA04    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BA07    89 F0                     mov         ax,si 
BA09    89 CB                     mov         bx,cx 
BA0B    0E                        push        cs 
BA0C    E8 00 00                  call        draw_window_ 
BA0F    E8 00 00                  call        draw_menubar_ 
BA12    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
BA15    C7 44 42 00 00            mov         word ptr 0x42[si],offset fileman_place_elements_ 
BA1A    89 F0                     mov         ax,si 
BA1C    C7 44 44 00 00            mov         word ptr 0x44[si],seg fileman_place_elements_ 
BA21    E9 60 D5                  jmp         L$1092 
BA24                          reload_shortcuts_:
BA24    53                        push        bx 
BA25    52                        push        dx 
BA26    55                        push        bp 
BA27    31 ED                     xor         bp,bp 
BA29                          L$1366:
BA29    83 BE 00 00 00            cmp         word ptr _shortcut_count[bp],0x0000 
BA2E    74 38                     je          L$1367 
BA30    FF 8E 00 00               dec         word ptr _shortcut_count[bp] 
BA34    69 86 00 00 D2 00         imul        ax,word ptr _shortcut_count[bp],0x00d2 
BA3A    C5 9E 00 00               lds         bx,dword ptr _desktop_shortcuts[bp] 
BA3E    01 C3                     add         bx,ax 
BA40    8B 87 C8 00               mov         ax,word ptr 0xc8[bx] 
BA44    8B 97 CA 00               mov         dx,word ptr 0xca[bx] 
BA48    9A 00 00 00 00            call        free_ 
BA4D    69 9E 00 00 D2 00         imul        bx,word ptr _shortcut_count[bp],0x00d2 
BA53    C5 86 00 00               lds         ax,dword ptr _desktop_shortcuts[bp] 
BA57    01 C3                     add         bx,ax 
BA59    8B 87 CC 00               mov         ax,word ptr 0xcc[bx] 
BA5D    8B 97 CE 00               mov         dx,word ptr 0xce[bx] 
BA61    9A 00 00 00 00            call        free_ 
BA66    EB C1                     jmp         L$1366 
BA68                          L$1367:
BA68    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
BA6C    8B 96 02 00               mov         dx,word ptr _desktop_shortcuts+0x2[bp] 
BA70    9A 00 00 00 00            call        free_ 
BA75    E8 00 00                  call        load_desktop_shortcuts_ 
BA78    85 C0                     test        ax,ax 
BA7A    75 19                     jne         L$1368 
BA7C    B8 03 00                  mov         ax,0x0003 
BA7F    9A 00 00 00 00            call        video_mode_ 
BA84    16                        push        ss 
BA85    68 FA 06                  push        offset DGROUP:L$1865 
BA88    9A 00 00 00 00            call        printf_ 
BA8D    83 C4 04                  add         sp,0x0004 
BA90    9A 00 00 00 00            call        abort_ 
BA95                          L$1368:
BA95    5D                        pop         bp 
BA96    5A                        pop         dx 
BA97    5B                        pop         bx 
BA98    C3                        ret         
BA99                          newsc_program_:
BA99    51                        push        cx 
BA9A    56                        push        si 
BA9B    57                        push        di 
BA9C    55                        push        bp 
BA9D    89 E5                     mov         bp,sp 
BA9F    8B 7E 0C                  mov         di,word ptr 0xc[bp] 
BAA2    89 C6                     mov         si,ax 
BAA4    8E DA                     mov         ds,dx 
BAA6    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
BAA9    85 C0                     test        ax,ax 
BAAB    75 04                     jne         L$1369 
BAAD    85 FF                     test        di,di 
BAAF    74 1A                     je          L$1372 
BAB1                          L$1369:
BAB1    8E C0                     mov         es,ax 
BAB3    26 8B 05                  mov         ax,word ptr es:[di] 
BAB6    3D 72 00                  cmp         ax,0x0072 
BAB9    74 05                     je          L$1370 
BABB    3D 52 00                  cmp         ax,0x0052 
BABE    75 03                     jne         L$1371 
BAC0                          L$1370:
BAC0    BB 00 80                  mov         bx,0x8000 
BAC3                          L$1371:
BAC3    8E 46 0E                  mov         es,word ptr 0xe[bp] 
BAC6    26 C7 05 FF FF            mov         word ptr es:[di],0xffff 
BACB                          L$1372:
BACB    81 FB 00 80               cmp         bx,0x8000 
BACF    74 08                     je          L$1373 
BAD1    81 FB 01 80               cmp         bx,0x8001 
BAD5    0F 85 B9 DC               jne         L$1157 
BAD9                          L$1373:
BAD9    6A FF                     push        0xffff 
BADB    8C D1                     mov         cx,ss 
BADD    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
BAE0    6A 00                     push        0x0000 
BAE2    C5 77 04                  lds         si,dword ptr 0x4[bx] 
BAE5    31 C0                     xor         ax,ax 
BAE7    FF 74 0E                  push        word ptr 0xe[si] 
BAEA    31 D2                     xor         dx,dx 
BAEC    FF 74 0C                  push        word ptr 0xc[si] 
BAEF    BB 18 07                  mov         bx,offset DGROUP:L$1866 
BAF2    0E                        push        cs 
BAF3    E8 00 00                  call        run_program_ 
BAF6    E8 00 00                  call        reload_shortcuts_ 
BAF9    B8 02 00                  mov         ax,0x0002 
BAFC    E9 96 DC                  jmp         L$1158 
BAFF                          newsc_window_:
BAFF    53                        push        bx 
BB00    51                        push        cx 
BB01    56                        push        si 
BB02    57                        push        di 
BB03    C8 04 00 00               enter       0x0004,0x00 
BB07    68 00 00                  push        seg newsc_program_ 
BB0A    68 00 00                  push        offset newsc_program_ 
BB0D    16                        push        ss 
BB0E    68 25 07                  push        offset DGROUP:L$1867 
BB11    6A 01                     push        0x0001 
BB13    B9 3C 00                  mov         cx,0x003c 
BB16    6A 01                     push        0x0001 
BB18    BB FA 00                  mov         bx,0x00fa 
BB1B    16                        push        ss 
BB1C    BA FF FF                  mov         dx,0xffff 
BB1F    68 38 07                  push        offset DGROUP:L$1868 
BB22    89 D0                     mov         ax,dx 
BB24    0E                        push        cs 
BB25    E8 00 00                  call        new_window_ 
BB28    89 C6                     mov         si,ax 
BB2A    89 56 FE                  mov         word ptr -0x2[bp],dx 
BB2D    89 C7                     mov         di,ax 
BB2F    89 56 FC                  mov         word ptr -0x4[bp],dx 
BB32    85 D2                     test        dx,dx 
BB34    75 22                     jne         L$1377 
BB36    85 C0                     test        ax,ax 
BB38    75 1E                     jne         L$1377 
BB3A                          L$1374:
BB3A    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
BB3E    75 04                     jne         L$1375 
BB40    85 FF                     test        di,di 
BB42    74 09                     je          L$1376 
BB44                          L$1375:
BB44    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
BB47    89 F8                     mov         ax,di 
BB49    0E                        push        cs 
BB4A    E8 00 00                  call        del_window_ 
BB4D                          L$1376:
BB4D    0E                        push        cs 
BB4E    E8 00 00                  call        nomemory_ 
BB51    31 C0                     xor         ax,ax 
BB53    31 D2                     xor         dx,dx 
BB55    E9 32 D4                  jmp         L$1094 
BB58                          L$1377:
BB58    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
BB5E    50                        push        ax 
BB5F    B9 05 00                  mov         cx,0x0005 
BB62    16                        push        ss 
BB63    89 CB                     mov         bx,cx 
BB65    68 45 07                  push        offset DGROUP:L$1869 
BB68    89 F0                     mov         ax,si 
BB6A    0E                        push        cs 
BB6B    E8 00 00                  call        window_text_ 
BB6E    85 D2                     test        dx,dx 
BB70    75 04                     jne         L$1378 
BB72    85 C0                     test        ax,ax 
BB74    74 C4                     je          L$1374 
BB76                          L$1378:
BB76    6A 51                     push        0x0051 
BB78    B9 05 00                  mov         cx,0x0005 
BB7B    16                        push        ss 
BB7C    BB 6E 00                  mov         bx,0x006e 
BB7F    68 58 07                  push        offset DGROUP:L$1870 
BB82    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BB85    6A 64                     push        0x0064 
BB87    89 F0                     mov         ax,si 
BB89    0E                        push        cs 
BB8A    E8 00 00                  call        window_textbox_ 
BB8D    85 D2                     test        dx,dx 
BB8F    75 04                     jne         L$1379 
BB91    85 C0                     test        ax,ax 
BB93    74 A5                     je          L$1374 
BB95                          L$1379:
BB95    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
BB9B    50                        push        ax 
BB9C    BB 0A 00                  mov         bx,0x000a 
BB9F    16                        push        ss 
BBA0    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
BBA6    68 61 07                  push        offset DGROUP:L$1871 
BBA9    89 C2                     mov         dx,ax 
BBAB    89 C1                     mov         cx,ax 
BBAD    42                        inc         dx 
BBAE    42                        inc         dx 
BBAF    83 C1 0D                  add         cx,0x000d 
BBB2    52                        push        dx 
BBB3    89 F0                     mov         ax,si 
BBB5    68 96 00                  push        0x0096 
BBB8    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BBBB    0E                        push        cs 
BBBC    E8 00 00                  call        window_button_ 
BBBF    85 D2                     test        dx,dx 
BBC1    0F 85 AC D3               jne         L$1090 
BBC5    85 C0                     test        ax,ax 
BBC7    0F 84 6F FF               je          L$1374 
BBCB    E9 A3 D3                  jmp         L$1090 
BBCE                          reload_config_:
BBCE    53                        push        bx 
BBCF    51                        push        cx 
BBD0    52                        push        dx 
BBD1    36 A1 04 00               mov         ax,word ptr ss:_wallpaper_struct+0x4 
BBD5    36 8B 16 06 00            mov         dx,word ptr ss:_wallpaper_struct+0x6 
BBDA    BB 00 00                  mov         bx,offset _system_font 
BBDD    9A 00 00 00 00            call        free_ 
BBE2    E8 00 00                  call        load_settings_ 
BBE5    36 A1 00 00               mov         ax,word ptr ss:_system_font 
BBE9    36 8B 16 02 00            mov         dx,word ptr ss:_system_font+0x2 
BBEE    8C D1                     mov         cx,ss 
BBF0    9A 00 00 00 00            call        free_ 
BBF5    B8 00 00                  mov         ax,offset _system_font_file 
BBF8    8C D2                     mov         dx,ss 
BBFA    0E                        push        cs 
BBFB    E8 00 00                  call        load_system_font_ 
BBFE    36 A1 00 00               mov         ax,word ptr ss:_monospace_font 
BC02    36 8B 16 02 00            mov         dx,word ptr ss:_monospace_font+0x2 
BC07    BB 00 00                  mov         bx,offset _monospace_font 
BC0A    9A 00 00 00 00            call        free_ 
BC0F    8C D1                     mov         cx,ss 
BC11    B8 00 00                  mov         ax,offset _monospace_font_file 
BC14    8C D2                     mov         dx,ss 
BC16    0E                        push        cs 
BC17    E8 00 00                  call        load_system_font_ 
BC1A    9A 00 00 00 00            call        restore_videomode_ 
BC1F    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
BC23    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
BC28    74 05                     je          L$1380 
BC2A    9A 00 00 00 00            call        restore_videomode_ 
BC2F                          L$1380:
BC2F    E8 00 00                  call        draw_desktop_ 
BC32    E8 00 00                  call        draw_windows_ 
BC35    E9 6A 87                  jmp         L$563 
BC38    32 2D 25 22 20 12 0D 05 02 00                   2-%" .....
BC42    9C BC                                           DW	offset L$1697
BC44    90 BC                                           DW	offset L$1695
BC46    7E BC                                           DW	offset L$1692
BC48    84 BC                                           DW	offset L$1693
BC4A    8A BC                                           DW	offset L$1694
BC4C    96 BC                                           DW	offset L$1696
BC4E    90 BC                                           DW	offset L$1695
BC50    7E BC                                           DW	offset L$1692
BC52    84 BC                                           DW	offset L$1693
BC54    8A BC                                           DW	offset L$1694
BC56    96 BC                                           DW	offset L$1696
BC58                          cpanel_getkb_:
BC58    51                        push        cx 
BC59    56                        push        si 
BC5A    57                        push        di 
BC5B    89 C6                     mov         si,ax 
BC5D    8E DA                     mov         ds,dx 
BC5F    8B 04                     mov         ax,word ptr [si] 
BC61    2D 41 00                  sub         ax,0x0041 
BC64    3D 32 00                  cmp         ax,0x0032 
BC67    77 33                     ja          L$1381 
BC69    B9 0B 00                  mov         cx,0x000b 
BC6C    BF 38 BC                  mov         di,offset load_settings_-0x43c8 
BC6F    0E                        push        cs 
BC70    07                        pop         es 
BC71    F2 AE                     repne scasb 
BC73    D1 E1                     shl         cx,0x01 
BC75    89 CF                     mov         di,cx 
BC77    2E 8B 85 42 BC            mov         ax,word ptr cs:load_settings_-0x43be[di] 
BC7C    FF E0                     jmp         ax 
BC7E    B8 00 80                  mov         ax,0x8000 
BC81    E9 86 8E                  jmp         L$601 
BC84    B8 01 80                  mov         ax,0x8001 
BC87    E9 80 8E                  jmp         L$601 
BC8A    B8 02 80                  mov         ax,0x8002 
BC8D    E9 7A 8E                  jmp         L$601 
BC90    B8 03 80                  mov         ax,0x8003 
BC93    E9 74 8E                  jmp         L$601 
BC96    B8 04 80                  mov         ax,0x8004 
BC99    E9 6E 8E                  jmp         L$601 
BC9C                          L$1381:
BC9C    89 D8                     mov         ax,bx 
BC9E    E9 69 8E                  jmp         L$601 
BCA1                          cpanel_program_:
BCA1    51                        push        cx 
BCA2    56                        push        si 
BCA3    55                        push        bp 
BCA4    89 E5                     mov         bp,sp 
BCA6    8B 76 0A                  mov         si,word ptr 0xa[bp] 
BCA9    89 D9                     mov         cx,bx 
BCAB    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
BCAF    75 04                     jne         L$1382 
BCB1    85 F6                     test        si,si 
BCB3    74 11                     je          L$1383 
BCB5                          L$1382:
BCB5    8B 56 0C                  mov         dx,word ptr 0xc[bp] 
BCB8    89 F0                     mov         ax,si 
BCBA    E8 00 00                  call        cpanel_getkb_ 
BCBD    8E 5E 0C                  mov         ds,word ptr 0xc[bp] 
BCC0    89 C1                     mov         cx,ax 
BCC2    C7 04 FF FF               mov         word ptr [si],0xffff 
BCC6                          L$1383:
BCC6    F6 C5 80                  test        ch,0x80 
BCC9    0F 84 7A 00               je          L$1388 
BCCD    81 F9 00 80               cmp         cx,0x8000 
BCD1    75 1A                     jne         L$1384 
BCD3    6A FF                     push        0xffff 
BCD5    BB 76 07                  mov         bx,offset DGROUP:L$1872 
BCD8    6A 00                     push        0x0000 
BCDA    8C D1                     mov         cx,ss 
BCDC    6A 00                     push        0x0000 
BCDE    31 C0                     xor         ax,ax 
BCE0    6A 00                     push        0x0000 
BCE2    31 D2                     xor         dx,dx 
BCE4    0E                        push        cs 
BCE5    E8 00 00                  call        run_program_ 
BCE8    E8 00 00                  call        reload_config_ 
BCEB    EB 5A                     jmp         L$1388 
BCED                          L$1384:
BCED    81 F9 01 80               cmp         cx,0x8001 
BCF1    75 17                     jne         L$1385 
BCF3    6A FF                     push        0xffff 
BCF5    BB 81 07                  mov         bx,offset DGROUP:L$1873 
BCF8    6A 00                     push        0x0000 
BCFA    8C D1                     mov         cx,ss 
BCFC    6A 00                     push        0x0000 
BCFE    31 C0                     xor         ax,ax 
BD00    6A 00                     push        0x0000 
BD02    31 D2                     xor         dx,dx 
BD04    0E                        push        cs 
BD05    E8 00 00                  call        run_program_ 
BD08    EB 3D                     jmp         L$1388 
BD0A                          L$1385:
BD0A    81 F9 02 80               cmp         cx,0x8002 
BD0E    75 05                     jne         L$1386 
BD10    E8 00 00                  call        newsc_window_ 
BD13    EB 32                     jmp         L$1388 
BD15                          L$1386:
BD15    81 F9 03 80               cmp         cx,0x8003 
BD19    75 22                     jne         L$1387 
BD1B    66 6A 00                  pushd       0x00000000 
BD1E    16                        push        ss 
BD1F    68 00 00                  push        offset _infotitle 
BD22    16                        push        ss 
BD23    68 00 00                  push        offset _versioninfo 
BD26    B9 32 00                  mov         cx,0x0032 
BD29    6A 00                     push        0x0000 
BD2B    BB FA 00                  mov         bx,0x00fa 
BD2E    6A 00                     push        0x0000 
BD30    BA 14 00                  mov         dx,0x0014 
BD33    6A 00                     push        0x0000 
BD35    89 D0                     mov         ax,dx 
BD37    0E                        push        cs 
BD38    E8 00 00                  call        dialog_ 
BD3B    EB 0A                     jmp         L$1388 
BD3D                          L$1387:
BD3D    81 F9 04 80               cmp         cx,0x8004 
BD41    75 04                     jne         L$1388 
BD43    0E                        push        cs 
BD44    E8 00 00                  call        show_error_console_ 
BD47                          L$1388:
BD47    B8 FF 7F                  mov         ax,0x7fff 
BD4A    5D                        pop         bp 
BD4B    E9 B1 CF                  jmp         L$1063 
BD4E                          init_cpanel_window_:
BD4E    53                        push        bx 
BD4F    51                        push        cx 
BD50    56                        push        si 
BD51    57                        push        di 
BD52    C8 04 00 00               enter       0x0004,0x00 
BD56    68 00 00                  push        seg cpanel_program_ 
BD59    68 00 00                  push        offset cpanel_program_ 
BD5C    16                        push        ss 
BD5D    68 8C 07                  push        offset DGROUP:L$1874 
BD60    6A 01                     push        0x0001 
BD62    B9 46 00                  mov         cx,0x0046 
BD65    6A 01                     push        0x0001 
BD67    BB FA 00                  mov         bx,0x00fa 
BD6A    16                        push        ss 
BD6B    BA FF FF                  mov         dx,0xffff 
BD6E    68 9D 07                  push        offset DGROUP:L$1875 
BD71    89 D0                     mov         ax,dx 
BD73    0E                        push        cs 
BD74    E8 00 00                  call        new_window_ 
BD77    89 C6                     mov         si,ax 
BD79    89 56 FE                  mov         word ptr -0x2[bp],dx 
BD7C    89 C7                     mov         di,ax 
BD7E    89 56 FC                  mov         word ptr -0x4[bp],dx 
BD81    85 D2                     test        dx,dx 
BD83    75 22                     jne         L$1392 
BD85    85 C0                     test        ax,ax 
BD87    75 1E                     jne         L$1392 
BD89                          L$1389:
BD89    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
BD8D    75 04                     jne         L$1390 
BD8F    85 FF                     test        di,di 
BD91    74 09                     je          L$1391 
BD93                          L$1390:
BD93    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
BD96    89 F8                     mov         ax,di 
BD98    0E                        push        cs 
BD99    E8 00 00                  call        del_window_ 
BD9C                          L$1391:
BD9C    0E                        push        cs 
BD9D    E8 00 00                  call        nomemory_ 
BDA0    31 C0                     xor         ax,ax 
BDA2    31 D2                     xor         dx,dx 
BDA4    E9 E3 D1                  jmp         L$1094 
BDA7                          L$1392:
BDA7    16                        push        ss 
BDA8    68 AB 07                  push        offset DGROUP:L$1876 
BDAB    16                        push        ss 
BDAC    B9 05 00                  mov         cx,0x0005 
BDAF    68 BC 07                  push        offset DGROUP:L$1877 
BDB2    BB 0A 00                  mov         bx,0x000a 
BDB5    0E                        push        cs 
BDB6    E8 00 00                  call        window_icon_ 
BDB9    85 D2                     test        dx,dx 
BDBB    75 04                     jne         L$1393 
BDBD    85 C0                     test        ax,ax 
BDBF    74 C8                     je          L$1389 
BDC1                          L$1393:
BDC1    16                        push        ss 
BDC2    B9 05 00                  mov         cx,0x0005 
BDC5    68 CB 07                  push        offset DGROUP:L$1878 
BDC8    BB 5A 00                  mov         bx,0x005a 
BDCB    16                        push        ss 
BDCC    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BDCF    68 DC 07                  push        offset DGROUP:L$1879 
BDD2    89 F0                     mov         ax,si 
BDD4    0E                        push        cs 
BDD5    E8 00 00                  call        window_icon_ 
BDD8    85 D2                     test        dx,dx 
BDDA    75 04                     jne         L$1394 
BDDC    85 C0                     test        ax,ax 
BDDE    74 A9                     je          L$1389 
BDE0                          L$1394:
BDE0    16                        push        ss 
BDE1    B9 05 00                  mov         cx,0x0005 
BDE4    68 25 07                  push        offset DGROUP:L$1867 
BDE7    BB AA 00                  mov         bx,0x00aa 
BDEA    16                        push        ss 
BDEB    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BDEE    68 E8 07                  push        offset DGROUP:L$1880 
BDF1    89 F0                     mov         ax,si 
BDF3    0E                        push        cs 
BDF4    E8 00 00                  call        window_icon_ 
BDF7    85 D2                     test        dx,dx 
BDF9    75 04                     jne         L$1395 
BDFB    85 C0                     test        ax,ax 
BDFD    74 8A                     je          L$1389 
BDFF                          L$1395:
BDFF    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
BE05    50                        push        ax 
BE06    B9 32 00                  mov         cx,0x0032 
BE09    16                        push        ss 
BE0A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
BE10    68 F6 07                  push        offset DGROUP:L$1881 
BE13    40                        inc         ax 
BE14    40                        inc         ax 
BE15    BB 0A 00                  mov         bx,0x000a 
BE18    50                        push        ax 
BE19    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BE1C    6A 64                     push        0x0064 
BE1E    89 F0                     mov         ax,si 
BE20    0E                        push        cs 
BE21    E8 00 00                  call        window_button_ 
BE24    85 D2                     test        dx,dx 
BE26    75 06                     jne         L$1396 
BE28    85 C0                     test        ax,ax 
BE2A    0F 84 5B FF               je          L$1389 
BE2E                          L$1396:
BE2E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__WINDOW_BASICTEXTCOLOR 
BE34    50                        push        ax 
BE35    B9 32 00                  mov         cx,0x0032 
BE38    16                        push        ss 
BE39    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
BE3F    68 05 08                  push        offset DGROUP:L$1882 
BE42    40                        inc         ax 
BE43    40                        inc         ax 
BE44    BB 78 00                  mov         bx,0x0078 
BE47    50                        push        ax 
BE48    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
BE4B    6A 64                     push        0x0064 
BE4D    89 F0                     mov         ax,si 
BE4F    0E                        push        cs 
BE50    E8 00 00                  call        window_button_ 
BE53    85 D2                     test        dx,dx 
BE55    0F 85 18 D1               jne         L$1090 
BE59    85 C0                     test        ax,ax 
BE5B    0F 84 2A FF               je          L$1389 
BE5F    E9 0F D1                  jmp         L$1090 
BE62                          screen_saver_:
BE62    53                        push        bx 
BE63    51                        push        cx 
BE64    52                        push        dx 
BE65    C8 16 00 00               enter       0x0016,0x00 
BE69    16                        push        ss 
BE6A    68 00 00                  push        offset _screensaver_program 
BE6D    16                        push        ss 
BE6E    68 15 08                  push        offset DGROUP:L$1883 
BE71    16                        push        ss 
BE72    8D 5E EA                  lea         bx,-0x16[bp] 
BE75    53                        push        bx 
BE76    9A 00 00 00 00            call        sprintf_ 
BE7B    83 C4 0C                  add         sp,0x000c 
BE7E    6A FF                     push        0xffff 
BE80    8C D1                     mov         cx,ss 
BE82    6A 00                     push        0x0000 
BE84    31 D2                     xor         dx,dx 
BE86    6A 00                     push        0x0000 
BE88    8D 5E EA                  lea         bx,-0x16[bp] 
BE8B    6A 00                     push        0x0000 
BE8D    31 C0                     xor         ax,ax 
BE8F    0E                        push        cs 
BE90    E8 00 00                  call        run_program_ 
BE93    31 C0                     xor         ax,ax 
BE95    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
BE99    C9                        leave       
BE9A    E9 05 85                  jmp         L$563 
BE9D                          tile_windows_:
BE9D    53                        push        bx 
BE9E    51                        push        cx 
BE9F    52                        push        dx 
BEA0    56                        push        si 
BEA1    57                        push        di 
BEA2    C8 16 00 00               enter       0x0016,0x00 
BEA6    31 C0                     xor         ax,ax 
BEA8    36 8B 36 00 00            mov         si,word ptr ss:_window_count 
BEAD    89 46 FA                  mov         word ptr -0x6[bp],ax 
BEB0    89 46 FC                  mov         word ptr -0x4[bp],ax 
BEB3    89 46 F6                  mov         word ptr -0xa[bp],ax 
BEB6    89 46 F4                  mov         word ptr -0xc[bp],ax 
BEB9    89 F1                     mov         cx,si 
BEBB    89 F0                     mov         ax,si 
BEBD    C1 E1 02                  shl         cx,0x02 
BEC0                          L$1397:
BEC0    48                        dec         ax 
BEC1    83 E9 04                  sub         cx,0x0004 
BEC4    3D FF FF                  cmp         ax,0xffff 
BEC7    74 2E                     je          L$1400 
BEC9    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
BECE    01 CF                     add         di,cx 
BED0    C5 1D                     lds         bx,dword ptr [di] 
BED2    F6 47 16 20               test        byte ptr 0x16[bx],0x20 
BED6    75 1C                     jne         L$1399 
BED8    8B 57 36                  mov         dx,word ptr 0x36[bx] 
BEDB    89 56 EA                  mov         word ptr -0x16[bp],dx 
BEDE    8B 57 38                  mov         dx,word ptr 0x38[bx] 
BEE1    81 FA 00 00               cmp         dx,seg clock_program_ 
BEE5    75 07                     jne         L$1398 
BEE7    81 7E EA 00 00            cmp         word ptr -0x16[bp],offset clock_program_ 
BEEC    74 06                     je          L$1399 
BEEE                          L$1398:
BEEE    F6 47 16 40               test        byte ptr 0x16[bx],0x40 
BEF2    74 CC                     je          L$1397 
BEF4                          L$1399:
BEF4    4E                        dec         si 
BEF5    EB C9                     jmp         L$1397 
BEF7                          L$1400:
BEF7    85 F6                     test        si,si 
BEF9    0F 84 36 12               je          L$1509 
BEFD    89 76 F8                  mov         word ptr -0x8[bp],si 
BF00    6B 46 FA 03               imul        ax,word ptr -0x6[bp],0x0003 
BF04                          L$1401:
BF04    05 03 00                  add         ax,0x0003 
BF07    FF 46 FA                  inc         word ptr -0x6[bp] 
BF0A    3B 46 F8                  cmp         ax,word ptr -0x8[bp] 
BF0D    73 05                     jae         L$1402 
BF0F    D1 6E F8                  shr         word ptr -0x8[bp],0x01 
BF12    EB F0                     jmp         L$1401 
BF14                          L$1402:
BF14    89 F0                     mov         ax,si 
BF16    31 D2                     xor         dx,dx 
BF18    F7 76 F8                  div         word ptr -0x8[bp] 
BF1B    85 D2                     test        dx,dx 
BF1D    74 03                     je          L$1403 
BF1F    FF 46 FA                  inc         word ptr -0x6[bp] 
BF22                          L$1403:
BF22    36 8B 0E 00 00            mov         cx,word ptr ss:_window_count 
BF27    89 C8                     mov         ax,cx 
BF29    C1 E0 02                  shl         ax,0x02 
BF2C    89 46 F2                  mov         word ptr -0xe[bp],ax 
BF2F                          L$1404:
BF2F    49                        dec         cx 
BF30    83 6E F2 04               sub         word ptr -0xe[bp],0x0004 
BF34    83 F9 FF                  cmp         cx,0xffff 
BF37    0F 84 F8 11               je          L$1509 
BF3B    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
BF3E    C1 E0 02                  shl         ax,0x02 
BF41    F7 D8                     neg         ax 
BF43    03 46 F2                  add         ax,word ptr -0xe[bp] 
BF46    89 46 FE                  mov         word ptr -0x2[bp],ax 
BF49                          L$1405:
BF49    36 8B 3E 00 00            mov         di,word ptr ss:_windows 
BF4E    89 C8                     mov         ax,cx 
BF50    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
BF55    03 7E FE                  add         di,word ptr -0x2[bp] 
BF58    2B 46 FC                  sub         ax,word ptr -0x4[bp] 
BF5B    C5 1D                     lds         bx,dword ptr [di] 
BF5D    89 46 EE                  mov         word ptr -0x12[bp],ax 
BF60    F6 47 16 20               test        byte ptr 0x16[bx],0x20 
BF64    75 17                     jne         L$1407 
BF66    8B 57 38                  mov         dx,word ptr 0x38[bx] 
BF69    8B 47 36                  mov         ax,word ptr 0x36[bx] 
BF6C    81 FA 00 00               cmp         dx,seg clock_program_ 
BF70    75 05                     jne         L$1406 
BF72    3D 00 00                  cmp         ax,offset clock_program_ 
BF75    74 06                     je          L$1407 
BF77                          L$1406:
BF77    F6 47 16 40               test        byte ptr 0x16[bx],0x40 
BF7B    74 20                     je          L$1409 
BF7D                          L$1407:
BF7D    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
BF82    03 5E FE                  add         bx,word ptr -0x2[bp] 
BF85    C5 3F                     lds         di,dword ptr [bx] 
BF87    F6 45 16 40               test        byte ptr 0x16[di],0x40 
BF8B    74 07                     je          L$1408 
BF8D    89 F8                     mov         ax,di 
BF8F    8C DA                     mov         dx,ds 
BF91    E8 00 00                  call        minimize_window_ 
BF94                          L$1408:
BF94    83 6E FE 04               sub         word ptr -0x2[bp],0x0004 
BF98    FF 46 FC                  inc         word ptr -0x4[bp] 
BF9B    EB AC                     jmp         L$1405 
BF9D                          L$1409:
BF9D    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
BFA0    36 3B 06 00 00            cmp         ax,word ptr ss:_window_count 
BFA5    0F 87 8A 11               ja          L$1509 
BFA9    80 67 16 FB               and         byte ptr 0x16[bx],0xfb 
BFAD    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
BFB2    03 7E FE                  add         di,word ptr -0x2[bp] 
BFB5    C5 1D                     lds         bx,dword ptr [di] 
BFB7    80 67 16 F7               and         byte ptr 0x16[bx],0xf7 
BFBB    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
BFC0    03 7E FE                  add         di,word ptr -0x2[bp] 
BFC3    C5 1D                     lds         bx,dword ptr [di] 
BFC5    81 67 16 EF E3            and         word ptr 0x16[bx],0xe3ef 
BFCA    81 4F 16 10 10            or          word ptr 0x16[bx],0x1010 
BFCF    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
BFD4    03 7E FE                  add         di,word ptr -0x2[bp] 
BFD7    C5 1D                     lds         bx,dword ptr [di] 
BFD9    F6 47 16 01               test        byte ptr 0x16[bx],0x01 
BFDD    74 61                     je          L$1411 
BFDF    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
BFE3    31 D2                     xor         dx,dx 
BFE5    F7 76 FA                  div         word ptr -0x6[bp] 
BFE8    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
BFEE    47                        inc         di 
BFEF    47                        inc         di 
BFF0    29 F8                     sub         ax,di 
BFF2    89 47 14                  mov         word ptr 0x14[bx],ax 
BFF5    3D 78 00                  cmp         ax,0x0078 
BFF8    7D 0F                     jge         L$1410 
BFFA    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
BFFF    03 5E FE                  add         bx,word ptr -0x2[bp] 
C002    C5 3F                     lds         di,dword ptr [bx] 
C004    C7 45 14 78 00            mov         word ptr 0x14[di],0x0078 
C009                          L$1410:
C009    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
C00D    31 D2                     xor         dx,dx 
C00F    F7 76 F8                  div         word ptr -0x8[bp] 
C012    89 C2                     mov         dx,ax 
C014    89 C8                     mov         ax,cx 
C016    2B 46 FC                  sub         ax,word ptr -0x4[bp] 
C019    36 8B 3E 00 00            mov         di,word ptr ss:_windows 
C01E    C1 E0 02                  shl         ax,0x02 
C021    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
C026    01 C7                     add         di,ax 
C028    C5 1D                     lds         bx,dword ptr [di] 
C02A    89 57 12                  mov         word ptr 0x12[bx],dx 
C02D    83 FA 78                  cmp         dx,0x0078 
C030    7D 0E                     jge         L$1411 
C032    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C037    01 C3                     add         bx,ax 
C039    C5 3F                     lds         di,dword ptr [bx] 
C03B    C7 45 12 78 00            mov         word ptr 0x12[di],0x0078 
C040                          L$1411:
C040    89 CF                     mov         di,cx 
C042    2B 7E FC                  sub         di,word ptr -0x4[bp] 
C045    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
C04A    C1 E7 02                  shl         di,0x02 
C04D    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
C052    01 FB                     add         bx,di 
C054    C5 07                     lds         ax,dword ptr [bx] 
C056    89 C3                     mov         bx,ax 
C058    C7 47 06 00 00            mov         word ptr 0x6[bx],0x0000 
C05D    36 A1 00 00               mov         ax,word ptr ss:_window_count 
C061    89 CB                     mov         bx,cx 
C063    29 F0                     sub         ax,si 
C065    31 D2                     xor         dx,dx 
C067    29 C3                     sub         bx,ax 
C069    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
C06D    F7 76 F8                  div         word ptr -0x8[bp] 
C070    0F AF C3                  imul        ax,bx 
C073    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C078    01 FB                     add         bx,di 
C07A    89 7E EC                  mov         word ptr -0x14[bp],di 
C07D    C5 17                     lds         dx,dword ptr [bx] 
C07F    89 D3                     mov         bx,dx 
C081    89 7E F0                  mov         word ptr -0x10[bp],di 
C084    89 47 04                  mov         word ptr 0x4[bx],ax 
C087                          L$1412:
C087    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
C08C    03 7E F0                  add         di,word ptr -0x10[bp] 
C08F    C5 1D                     lds         bx,dword ptr [di] 
C091    36 8B 3E 00 00            mov         di,word ptr ss:__RES_X 
C096    8B 47 04                  mov         ax,word ptr 0x4[bx] 
C099    2B 7F 12                  sub         di,word ptr 0x12[bx] 
C09C    39 C7                     cmp         di,ax 
C09E    73 34                     jae         L$1414 
C0A0    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
C0A4    29 47 04                  sub         word ptr 0x4[bx],ax 
C0A7    83 7F 04 00               cmp         word ptr 0x4[bx],0x0000 
C0AB    7D 0F                     jge         L$1413 
C0AD    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C0B2    03 5E F0                  add         bx,word ptr -0x10[bp] 
C0B5    C5 3F                     lds         di,dword ptr [bx] 
C0B7    C7 45 04 00 00            mov         word ptr 0x4[di],0x0000 
C0BC                          L$1413:
C0BC    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C0C1    03 5E EC                  add         bx,word ptr -0x14[bp] 
C0C4    31 D2                     xor         dx,dx 
C0C6    C5 3F                     lds         di,dword ptr [bx] 
C0C8    36 A1 00 00               mov         ax,word ptr ss:__RES_Y 
C0CC    F7 76 FA                  div         word ptr -0x6[bp] 
C0CF    01 45 06                  add         word ptr 0x6[di],ax 
C0D2    EB B3                     jmp         L$1412 
C0D4                          L$1414:
C0D4    36 3B 06 00 00            cmp         ax,word ptr ss:__RES_X 
C0D9    73 0A                     jae         L$1415 
C0DB    8B 47 06                  mov         ax,word ptr 0x6[bx] 
C0DE    36 3B 06 00 00            cmp         ax,word ptr ss:__RES_Y 
C0E3    72 41                     jb          L$1416 
C0E5                          L$1415:
C0E5    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C0EB    40                        inc         ax 
C0EC    40                        inc         ax 
C0ED    01 46 F6                  add         word ptr -0xa[bp],ax 
C0F0    89 C8                     mov         ax,cx 
C0F2    2B 46 FC                  sub         ax,word ptr -0x4[bp] 
C0F5    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
C0FA    C1 E0 02                  shl         ax,0x02 
C0FD    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
C102    01 C3                     add         bx,ax 
C104    C5 3F                     lds         di,dword ptr [bx] 
C106    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
C109    89 55 04                  mov         word ptr 0x4[di],dx 
C10C    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C112    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C117    42                        inc         dx 
C118    42                        inc         dx 
C119    01 C3                     add         bx,ax 
C11B    01 56 F4                  add         word ptr -0xc[bp],dx 
C11E    C5 3F                     lds         di,dword ptr [bx] 
C120    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
C123    89 45 06                  mov         word ptr 0x6[di],ax 
C126                          L$1416:
C126    89 C8                     mov         ax,cx 
C128    31 D2                     xor         dx,dx 
C12A    2B 46 FC                  sub         ax,word ptr -0x4[bp] 
C12D    0E                        push        cs 
C12E    E8 00 00                  call        set_active_window_ 
C131    E9 FB FD                  jmp         L$1404 
C134                          cascade_windows_:
C134    53                        push        bx 
C135    51                        push        cx 
C136    52                        push        dx 
C137    56                        push        si 
C138    57                        push        di 
C139    C8 04 00 00               enter       0x0004,0x00 
C13D    BF 28 00                  mov         di,0x0028 
C140    31 C0                     xor         ax,ax 
C142    31 C9                     xor         cx,cx 
C144    89 46 FC                  mov         word ptr -0x4[bp],ax 
C147    89 46 FE                  mov         word ptr -0x2[bp],ax 
C14A                          L$1417:
C14A    36 C5 36 00 00            lds         si,dword ptr ss:_windows 
C14F    01 CE                     add         si,cx 
C151    C5 1C                     lds         bx,dword ptr [si] 
C153    F6 47 16 20               test        byte ptr 0x16[bx],0x20 
C157    75 17                     jne         L$1419 
C159    8B 77 38                  mov         si,word ptr 0x38[bx] 
C15C    8B 47 36                  mov         ax,word ptr 0x36[bx] 
C15F    81 FE 00 00               cmp         si,seg clock_program_ 
C163    75 05                     jne         L$1418 
C165    3D 00 00                  cmp         ax,offset clock_program_ 
C168    74 06                     je          L$1419 
C16A                          L$1418:
C16A    F6 47 16 40               test        byte ptr 0x16[bx],0x40 
C16E    74 18                     je          L$1420 
C170                          L$1419:
C170    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C175    01 CB                     add         bx,cx 
C177    C5 37                     lds         si,dword ptr [bx] 
C179    F6 44 16 40               test        byte ptr 0x16[si],0x40 
C17D    74 74                     je          L$1423 
C17F    89 F0                     mov         ax,si 
C181    8C DA                     mov         dx,ds 
C183    E8 00 00                  call        minimize_window_ 
C186    EB 6B                     jmp         L$1423 
C188                          L$1420:
C188    80 67 16 F7               and         byte ptr 0x16[bx],0xf7 
C18C    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C191    01 CB                     add         bx,cx 
C193    C5 37                     lds         si,dword ptr [bx] 
C195    80 64 16 FB               and         byte ptr 0x16[si],0xfb 
C199    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
C19F    43                        inc         bx 
C1A0    43                        inc         bx 
C1A1    01 DF                     add         di,bx 
C1A3    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C1A8    01 CB                     add         bx,cx 
C1AA    C5 37                     lds         si,dword ptr [bx] 
C1AC    89 7C 04                  mov         word ptr 0x4[si],di 
C1AF    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
C1B5    43                        inc         bx 
C1B6    43                        inc         bx 
C1B7    01 5E FE                  add         word ptr -0x2[bp],bx 
C1BA    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
C1BF    01 CB                     add         bx,cx 
C1C1    C5 37                     lds         si,dword ptr [bx] 
C1C3    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
C1C6    89 44 06                  mov         word ptr 0x6[si],ax 
C1C9    36 8B 1E 00 00            mov         bx,word ptr ss:__RES_X 
C1CE    81 EB C8 00               sub         bx,0x00c8 
C1D2    39 DF                     cmp         di,bx 
C1D4    76 02                     jbe         L$1421 
C1D6    31 FF                     xor         di,di 
C1D8                          L$1421:
C1D8    36 8B 1E 00 00            mov         bx,word ptr ss:__RES_Y 
C1DD    83 EB 64                  sub         bx,0x0064 
C1E0    3B 5E FE                  cmp         bx,word ptr -0x2[bp] 
C1E3    73 05                     jae         L$1422 
C1E5    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
C1EA                          L$1422:
C1EA    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
C1ED    31 D2                     xor         dx,dx 
C1EF    0E                        push        cs 
C1F0    E8 00 00                  call        set_active_window_ 
C1F3                          L$1423:
C1F3    FF 46 FC                  inc         word ptr -0x4[bp] 
C1F6    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
C1F9    83 C1 04                  add         cx,0x0004 
C1FC    36 3B 06 00 00            cmp         ax,word ptr ss:_window_count 
C201    0F 82 45 FF               jb          L$1417 
C205    E9 2B 0F                  jmp         L$1509 

Routine Size: 12014 bytes,    Routine Base: main_TEXT + 931A

C208                          vpucon_caret_:
C208    51                        push        cx 
C209    56                        push        si 
C20A    57                        push        di 
C20B    C8 02 00 00               enter       0x0002,0x00 
C20F    50                        push        ax 
C210    89 D1                     mov         cx,dx 
C212    B8 00 00                  mov         ax,seg _clock_ticks 
C215    8E D8                     mov         ds,ax 
C217    A1 00 00                  mov         ax,word ptr _clock_ticks 
C21A    A8 04                     test        al,0x04 
C21C    74 0A                     je          L$1424 
C21E    84 DB                     test        bl,bl 
C220    75 06                     jne         L$1424 
C222    36 A0 00 00               mov         al,byte ptr ss:__TEXTBOX_TEXTCOLOR 
C226    EB 04                     jmp         L$1425 
C228                          L$1424:
C228    36 A0 00 00               mov         al,byte ptr ss:__TEXTBOX_BGCOLOR 
C22C                          L$1425:
C22C    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
C231    30 E4                     xor         ah,ah 
C233    C4 7F 18                  les         di,dword ptr 0x18[bx] 
C236    50                        push        ax 
C237    26 8B 35                  mov         si,word ptr es:[di] 
C23A    26 8B 7D 02               mov         di,word ptr es:0x2[di] 
C23E    8B 57 06                  mov         dx,word ptr 0x6[bx] 
C241    8E C7                     mov         es,di 
C243    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C249    40                        inc         ax 
C24A    40                        inc         ax 
C24B    89 46 FE                  mov         word ptr -0x2[bp],ax 
C24E    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
C251    40                        inc         ax 
C252    40                        inc         ax 
C253    0F AF 46 FE               imul        ax,word ptr -0x2[bp] 
C257    8B 5F 04                  mov         bx,word ptr 0x4[bx] 
C25A    26 03 54 06               add         dx,word ptr es:0x6[si] 
C25E    8E DF                     mov         ds,di 
C260    01 C2                     add         dx,ax 
C262    89 C8                     mov         ax,cx 
C264    03 5C 04                  add         bx,word ptr 0x4[si] 
C267    C1 E0 03                  shl         ax,0x03 
C26A    01 D8                     add         ax,bx 
C26C    89 C3                     mov         bx,ax 
C26E    89 D1                     mov         cx,dx 
C270    83 C3 06                  add         bx,0x0006 
C273    40                        inc         ax 
C274    9A 00 00 00 00            call        draw_line_ 
C279    E9 72 8C                  jmp         L$616 
C27C                          vpuconsole_hiderow_:
C27C    51                        push        cx 
C27D    56                        push        si 
C27E    57                        push        di 
C27F    C8 04 00 00               enter       0x0004,0x00 
C283    89 C6                     mov         si,ax 
C285    8E DA                     mov         ds,dx 
C287    89 DA                     mov         dx,bx 
C289    F6 44 17 01               test        byte ptr 0x17[si],0x01 
C28D    0F 85 78 88               jne         L$600 
C291    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
C297    8B 5C 18                  mov         bx,word ptr 0x18[si] 
C29A    50                        push        ax 
C29B    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C2A1    8E 44 1A                  mov         es,word ptr 0x1a[si] 
C2A4    89 D1                     mov         cx,dx 
C2A6    26 C4 3F                  les         di,dword ptr es:[bx] 
C2A9    C1 E1 02                  shl         cx,0x02 
C2AC    26 C4 5D 14               les         bx,dword ptr es:0x14[di] 
C2B0    01 CB                     add         bx,cx 
C2B2    05 03 00                  add         ax,0x0003 
C2B5    26 C4 3F                  les         di,dword ptr es:[bx] 
C2B8    89 46 FC                  mov         word ptr -0x4[bp],ax 
C2BB    B9 FF FF                  mov         cx,0xffff 
C2BE    33 C0                     xor         ax,ax 
C2C0    F2 AE                     repne scasb 
C2C2    F7 D1                     not         cx 
C2C4    49                        dec         cx 
C2C5    C1 E1 03                  shl         cx,0x03 
C2C8    8B 5C 18                  mov         bx,word ptr 0x18[si] 
C2CB    83 C1 08                  add         cx,0x0008 
C2CE    8E 44 1A                  mov         es,word ptr 0x1a[si] 
C2D1    89 4E FE                  mov         word ptr -0x2[bp],cx 
C2D4    26 8B 3F                  mov         di,word ptr es:[bx] 
C2D7    26 8B 4F 02               mov         cx,word ptr es:0x2[bx] 
C2DB    8B 44 06                  mov         ax,word ptr 0x6[si] 
C2DE    8E C1                     mov         es,cx 
C2E0    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
C2E6    26 03 45 06               add         ax,word ptr es:0x6[di] 
C2EA    01 D8                     add         ax,bx 
C2EC    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
C2F2    43                        inc         bx 
C2F3    43                        inc         bx 
C2F4    0F AF D3                  imul        dx,bx 
C2F7    40                        inc         ax 
C2F8    40                        inc         ax 
C2F9    8B 5E FE                  mov         bx,word ptr -0x2[bp] 
C2FC    01 C2                     add         dx,ax 
C2FE    8B 44 04                  mov         ax,word ptr 0x4[si] 
C301    8E D9                     mov         ds,cx 
C303    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
C306    E9 F8 87                  jmp         L$599 
C309                          vpuconsole_clearrow_:
C309    51                        push        cx 
C30A    56                        push        si 
C30B    57                        push        di 
C30C    89 C6                     mov         si,ax 
C30E    89 D7                     mov         di,dx 
C310    89 D9                     mov         cx,bx 
C312    E8 00 00                  call        vpuconsole_hiderow_ 
C315    8E DF                     mov         ds,di 
C317    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
C31A    89 CE                     mov         si,cx 
C31C    C1 E6 02                  shl         si,0x02 
C31F    C5 8F DA 06               lds         cx,dword ptr 0x6da[bx] 
C323    89 CB                     mov         bx,cx 
C325    01 F3                     add         bx,si 
C327    30 C0                     xor         al,al 
C329    8B 3F                     mov         di,word ptr [bx] 
C32B    8B 5F 02                  mov         bx,word ptr 0x2[bx] 
C32E    B9 50 00                  mov         cx,0x0050 
C331    8E C3                     mov         es,bx 
C333    57                        push        di 
C334    F3 AA                     rep stosb   
C336    5F                        pop         di 
C337    E9 D0 87                  jmp         L$601 

Routine Size: 306 bytes,    Routine Base: main_TEXT + C208

C33A                          clear_row_:
C33A    53                        push        bx 
C33B    51                        push        cx 
C33C    52                        push        dx 
C33D    36 8B 16 00 00            mov         dx,word ptr ss:_running_console 
C342    36 8B 0E 02 00            mov         cx,word ptr ss:_running_console+0x2 
C347    89 C3                     mov         bx,ax 
C349    89 D0                     mov         ax,dx 
C34B    89 CA                     mov         dx,cx 
C34D    E8 00 00                  call        vpuconsole_clearrow_ 
	     C351		; The label referred to here is an undefined location
C350    E9 50 68                  jmp         0x00012ba3 
C353                          vpuconsole_clearchar_:
C353    53                        push        bx 
C354    51                        push        cx 
C355    56                        push        si 
C356    57                        push        di 
C357    C8 06 00 00               enter       0x0006,0x00 
C35B    89 C6                     mov         si,ax 
C35D    89 56 FE                  mov         word ptr -0x2[bp],dx 
C360    8E DA                     mov         ds,dx 
C362    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
C365    8B 44 3C                  mov         ax,word ptr 0x3c[si] 
C368    89 5E FA                  mov         word ptr -0x6[bp],bx 
C36B    89 46 FC                  mov         word ptr -0x4[bp],ax 
C36E    F6 44 17 01               test        byte ptr 0x17[si],0x01 
C372    75 5F                     jne         L$1426 
C374    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
C37A    8B 5C 18                  mov         bx,word ptr 0x18[si] 
C37D    50                        push        ax 
C37E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C384    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
C387    C5 3F                     lds         di,dword ptr [bx] 
C389    8E C2                     mov         es,dx 
C38B    89 C1                     mov         cx,ax 
C38D    26 8B 5C 06               mov         bx,word ptr es:0x6[si] 
C391    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C397    03 5D 06                  add         bx,word ptr 0x6[di] 
C39A    01 DA                     add         dx,bx 
C39C    36 C4 1E 00 00            les         bx,dword ptr ss:_cursor_row 
C3A1    40                        inc         ax 
C3A2    40                        inc         ax 
C3A3    26 0F AF 07               imul        ax,word ptr es:[bx] 
C3A7    42                        inc         dx 
C3A8    42                        inc         dx 
C3A9    8E 46 FE                  mov         es,word ptr -0x2[bp] 
C3AC    01 C2                     add         dx,ax 
C3AE    26 8B 44 04               mov         ax,word ptr es:0x4[si] 
C3B2    36 8B 1E 00 00            mov         bx,word ptr ss:_cursor_col 
C3B7    03 45 04                  add         ax,word ptr 0x4[di] 
C3BA    36 8E 1E 02 00            mov         ds,word ptr ss:_cursor_col+0x2 
C3BF    8B 1F                     mov         bx,word ptr [bx] 
C3C1    C1 E3 03                  shl         bx,0x03 
C3C4    83 C1 03                  add         cx,0x0003 
C3C7    01 D8                     add         ax,bx 
C3C9    BB 10 00                  mov         bx,0x0010 
C3CC    40                        inc         ax 
C3CD    40                        inc         ax 
C3CE    9A 00 00 00 00            call        draw_rectangle_ 
C3D3                          L$1426:
C3D3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
C3D6    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
C3D9    C4 76 FA                  les         si,dword ptr -0x6[bp] 
C3DC    26 8B 04                  mov         ax,word ptr es:[si] 
C3DF    8B 97 DA 06               mov         dx,word ptr 0x6da[bx] 
C3E3    C1 E0 02                  shl         ax,0x02 
C3E6    8E 9F DC 06               mov         ds,word ptr 0x6dc[bx] 
C3EA    89 D3                     mov         bx,dx 
C3EC    01 C3                     add         bx,ax 
C3EE    C5 17                     lds         dx,dword ptr [bx] 
C3F0    89 F3                     mov         bx,si 
C3F2    26 8B 5F 02               mov         bx,word ptr es:0x2[bx] 
C3F6    01 D3                     add         bx,dx 
C3F8    C6 07 20                  mov         byte ptr [bx],0x20 
C3FB    E9 8C CB                  jmp         L$1094 
C3FE                          vpuconsole_clearscr_:
C3FE    53                        push        bx 
C3FF    51                        push        cx 
C400    56                        push        si 
C401    57                        push        di 
C402    C8 04 00 00               enter       0x0004,0x00 
C406    89 C6                     mov         si,ax 
C408    89 56 FE                  mov         word ptr -0x2[bp],dx 
C40B    8E DA                     mov         ds,dx 
C40D    8B 4C 3C                  mov         cx,word ptr 0x3c[si] 
C410    8B 7C 3A                  mov         di,word ptr 0x3a[si] 
C413    8E D9                     mov         ds,cx 
C415    89 4E FC                  mov         word ptr -0x4[bp],cx 
C418    0F B6 8D BC 06            movzx       cx,byte ptr 0x6bc[di] 
C41D                          L$1427:
C41D    49                        dec         cx 
C41E    83 F9 FF                  cmp         cx,0xffff 
C421    74 0C                     je          L$1428 
C423    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
C426    89 CB                     mov         bx,cx 
C428    89 F0                     mov         ax,si 
C42A    E8 00 00                  call        vpuconsole_clearrow_ 
C42D    EB EE                     jmp         L$1427 
C42F                          L$1428:
C42F    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
C432    66 C7 05 00 00 00 00      mov         dword ptr [di],0x00000000 
C439    E9 4E CB                  jmp         L$1094 

Routine Size: 258 bytes,    Routine Base: main_TEXT + C33A

C43C                          clear_console_:
C43C    52                        push        dx 
C43D    36 A1 00 00               mov         ax,word ptr ss:_running_console 
C441    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
C446    E8 00 00                  call        vpuconsole_clearscr_ 
C449    5A                        pop         dx 
C44A    CB                        retf        
C44B                          fastscroll_:
C44B    53                        push        bx 
C44C    51                        push        cx 
C44D    56                        push        si 
C44E    57                        push        di 
C44F    C8 20 00 00               enter       0x0020,0x00 
C453    89 C3                     mov         bx,ax 
C455    8E DA                     mov         ds,dx 
C457    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C45D    8B 7F 18                  mov         di,word ptr 0x18[bx] 
C460    03 47 06                  add         ax,word ptr 0x6[bx] 
C463    8E 47 1A                  mov         es,word ptr 0x1a[bx] 
C466    26 C4 35                  les         si,dword ptr es:[di] 
C469    40                        inc         ax 
C46A    40                        inc         ax 
C46B    26 8B 54 06               mov         dx,word ptr es:0x6[si] 
C46F    01 C2                     add         dx,ax 
C471    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C477    89 56 FA                  mov         word ptr -0x6[bp],dx 
C47A    26 8B 54 0A               mov         dx,word ptr es:0xa[si] 
C47E    C7 46 FC 80 02            mov         word ptr -0x4[bp],0x0280 
C483    29 C2                     sub         dx,ax 
C485    8B 7F 04                  mov         di,word ptr 0x4[bx] 
C488    89 D0                     mov         ax,dx 
C48A    26 03 7C 04               add         di,word ptr es:0x4[si] 
C48E    2D 03 00                  sub         ax,0x0003 
C491    89 7E FE                  mov         word ptr -0x2[bp],di 
C494    89 46 F8                  mov         word ptr -0x8[bp],ax 
C497    85 FF                     test        di,di 
C499    7D 0C                     jge         L$1429 
C49B    81 C7 80 02               add         di,0x0280 
C49F    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
C4A4    89 7E FC                  mov         word ptr -0x4[bp],di 
C4A7                          L$1429:
C4A7    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
C4AA    85 C0                     test        ax,ax 
C4AC    7D 08                     jge         L$1430 
C4AE    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
C4B3    01 46 F8                  add         word ptr -0x8[bp],ax 
C4B6                          L$1430:
C4B6    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
C4B9    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C4BF    03 56 F8                  add         dx,word ptr -0x8[bp] 
C4C2    01 C2                     add         dx,ax 
C4C4    42                        inc         dx 
C4C5    42                        inc         dx 
C4C6    36 3B 16 00 00            cmp         dx,word ptr ss:__RES_Y 
C4CB    72 12                     jb          L$1431 
C4CD    03 46 FA                  add         ax,word ptr -0x6[bp] 
C4D0    36 8B 16 00 00            mov         dx,word ptr ss:__RES_Y 
C4D5    40                        inc         ax 
C4D6    40                        inc         ax 
C4D7    29 C2                     sub         dx,ax 
C4D9    89 D0                     mov         ax,dx 
C4DB    48                        dec         ax 
C4DC    89 46 F8                  mov         word ptr -0x8[bp],ax 
C4DF                          L$1431:
C4DF    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
C4E2    03 46 FC                  add         ax,word ptr -0x4[bp] 
C4E5    36 3B 06 00 00            cmp         ax,word ptr ss:__RES_X 
C4EA    72 0B                     jb          L$1432 
C4EC    36 A1 00 00               mov         ax,word ptr ss:__RES_X 
C4F0    2B 46 FE                  sub         ax,word ptr -0x2[bp] 
C4F3    48                        dec         ax 
C4F4    89 46 FC                  mov         word ptr -0x4[bp],ax 
C4F7                          L$1432:
C4F7    83 7E F8 00               cmp         word ptr -0x8[bp],0x0000 
C4FB    0F 8C 8B CA               jl          L$1094 
C4FF    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
C502    85 C0                     test        ax,ax 
C504    0F 8C 82 CA               jl          L$1094 
C508    8B 7E FE                  mov         di,word ptr -0x2[bp] 
C50B    C5 77 18                  lds         si,dword ptr 0x18[bx] 
C50E    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
C511    C5 1C                     lds         bx,dword ptr [si] 
C513    01 C7                     add         di,ax 
C515    8B 4F 0A                  mov         cx,word ptr 0xa[bx] 
C518    89 C3                     mov         bx,ax 
C51A    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
C51D    9A 00 00 00 00            call        hide_mouse_if_in_box_ 
C522    36 83 3E 00 00 FF         cmp         word ptr ss:_videodriver,0xffff 
C528    74 27                     je          L$1433 
C52A    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C530    89 C2                     mov         dx,ax 
C532    42                        inc         dx 
C533    42                        inc         dx 
C534    8B 4E F8                  mov         cx,word ptr -0x8[bp] 
C537    F7 DA                     neg         dx 
C539    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
C53C    52                        push        dx 
C53D    89 C2                     mov         dx,ax 
C53F    6A 00                     push        0x0000 
C541    03 56 FA                  add         dx,word ptr -0x6[bp] 
C544    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
C547    42                        inc         dx 
C548    42                        inc         dx 
C549    9A 00 00 00 00            call        scrmemcpy_ 
C54E    E9 39 CA                  jmp         L$1094 
C551                          L$1433:
C551    C1 7E FC 03               sar         word ptr -0x4[bp],0x03 
C555    36 3B 3E 00 00            cmp         di,word ptr ss:__RES_X 
C55A    74 03                     je          L$1434 
C55C    FF 4E FC                  dec         word ptr -0x4[bp] 
C55F                          L$1434:
C55F    89 F8                     mov         ax,di 
C561    25 07 00                  and         ax,0x0007 
C564    89 46 EE                  mov         word ptr -0x12[bp],ax 
C567    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
C56A    30 E4                     xor         ah,ah 
C56C    BA 07 00                  mov         dx,0x0007 
C56F    24 07                     and         al,0x07 
C571    29 C2                     sub         dx,ax 
C573    C7 46 F4 00 00            mov         word ptr -0xc[bp],0x0000 
C578    89 D0                     mov         ax,dx 
C57A    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
C57D    8B 4E FA                  mov         cx,word ptr -0x6[bp] 
C580    89 56 E8                  mov         word ptr -0x18[bp],dx 
C583    01 C2                     add         dx,ax 
C585    89 7E E6                  mov         word ptr -0x1a[bp],di 
C588    89 56 E4                  mov         word ptr -0x1c[bp],dx 
C58B                          L$1435:
C58B    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
C58E    3B 46 F8                  cmp         ax,word ptr -0x8[bp] 
C591    73 6C                     jae         L$1440 
C593    8B 76 E4                  mov         si,word ptr -0x1c[bp] 
C596    89 4E EC                  mov         word ptr -0x14[bp],cx 
C599                          L$1436:
C599    3B 76 E8                  cmp         si,word ptr -0x18[bp] 
C59C    74 22                     je          L$1437 
C59E    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C5A4    03 56 EC                  add         dx,word ptr -0x14[bp] 
C5A7    89 F0                     mov         ax,si 
C5A9    42                        inc         dx 
C5AA    42                        inc         dx 
C5AB    9A 00 00 00 00            call        get_pixel_ 
C5B0    8B 56 EC                  mov         dx,word ptr -0x14[bp] 
C5B3    0F B6 D8                  movzx       bx,al 
C5B6    89 F0                     mov         ax,si 
C5B8    9A 00 00 00 00            call        put_pixel_ 
C5BD    4E                        dec         si 
C5BE    EB D9                     jmp         L$1436 
C5C0                          L$1437:
C5C0    8B 46 EE                  mov         ax,word ptr -0x12[bp] 
C5C3    89 C6                     mov         si,ax 
C5C5    89 4E F0                  mov         word ptr -0x10[bp],cx 
C5C8    F7 DE                     neg         si 
C5CA    89 46 F6                  mov         word ptr -0xa[bp],ax 
C5CD    01 FE                     add         si,di 
C5CF                          L$1438:
C5CF    3B 76 E6                  cmp         si,word ptr -0x1a[bp] 
C5D2    74 25                     je          L$1439 
C5D4    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C5DA    03 56 F0                  add         dx,word ptr -0x10[bp] 
C5DD    89 F0                     mov         ax,si 
C5DF    42                        inc         dx 
C5E0    42                        inc         dx 
C5E1    9A 00 00 00 00            call        get_pixel_ 
C5E6    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
C5E9    0F B6 D8                  movzx       bx,al 
C5EC    89 F0                     mov         ax,si 
C5EE    FF 4E F6                  dec         word ptr -0xa[bp] 
C5F1    9A 00 00 00 00            call        put_pixel_ 
C5F6    46                        inc         si 
C5F7    EB D6                     jmp         L$1438 
C5F9                          L$1439:
C5F9    FF 46 F4                  inc         word ptr -0xc[bp] 
C5FC    41                        inc         cx 
C5FD    EB 8C                     jmp         L$1435 
C5FF                          L$1440:
C5FF    C1 7E FE 03               sar         word ptr -0x2[bp],0x03 
C603    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
C607    FF 46 FE                  inc         word ptr -0x2[bp] 
C60A    3C 06                     cmp         al,0x06 
C60C    0F 84 90 00               je          L$1444 
C610    3C 10                     cmp         al,0x10 
C612    74 04                     je          L$1441 
C614    3C 12                     cmp         al,0x12 
C616    75 1B                     jne         L$1442 
C618                          L$1441:
C618    B8 05 00                  mov         ax,0x0005 
C61B    BA CE 03                  mov         dx,0x03ce 
C61E    EE                        out         dx,al 
C61F    B8 02 00                  mov         ax,0x0002 
C622    BA CF 03                  mov         dx,0x03cf 
C625    EE                        out         dx,al 
C626    B8 08 00                  mov         ax,0x0008 
C629    BA CE 03                  mov         dx,0x03ce 
C62C    EE                        out         dx,al 
C62D    BA CF 03                  mov         dx,0x03cf 
C630    31 C0                     xor         ax,ax 
C632    EE                        out         dx,al 
C633                          L$1442:
C633    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
C636    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
C639    31 DB                     xor         bx,bx 
C63B    C1 E0 04                  shl         ax,0x04 
C63E    C1 E2 06                  shl         dx,0x06 
C641    89 46 F2                  mov         word ptr -0xe[bp],ax 
C644                          L$1443:
C644    3B 5E F8                  cmp         bx,word ptr -0x8[bp] 
C647    0F 83 D0 00               jae         L$1447 
C64B    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
C64E    8B 76 FE                  mov         si,word ptr -0x2[bp] 
C651    01 D0                     add         ax,dx 
C653    01 C6                     add         si,ax 
C655    89 76 E0                  mov         word ptr -0x20[bp],si 
C658    8B 4E FA                  mov         cx,word ptr -0x6[bp] 
C65B    8B 7E E0                  mov         di,word ptr -0x20[bp] 
C65E    36 8B 36 00 00            mov         si,word ptr ss:_VGA 
C663    83 46 F2 10               add         word ptr -0xe[bp],0x0010 
C667    01 F7                     add         di,si 
C669    01 D9                     add         cx,bx 
C66B    89 7E E2                  mov         word ptr -0x1e[bp],di 
C66E    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
C674    83 C2 40                  add         dx,0x0040 
C677    01 F9                     add         cx,di 
C679    36 A1 02 00               mov         ax,word ptr ss:_VGA+0x2 
C67D    41                        inc         cx 
C67E    41                        inc         cx 
C67F    89 CF                     mov         di,cx 
C681    8E D8                     mov         ds,ax 
C683    C1 E7 06                  shl         di,0x06 
C686    C1 E1 04                  shl         cx,0x04 
C689    8E C0                     mov         es,ax 
C68B    01 F9                     add         cx,di 
C68D    03 4E FE                  add         cx,word ptr -0x2[bp] 
C690    8B 7E E2                  mov         di,word ptr -0x1e[bp] 
C693    01 CE                     add         si,cx 
C695    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
C698    43                        inc         bx 
C699    9C                        pushf       
C69A    FC                        cld         
C69B    F3 A4                     rep movsb   
C69D    9D                        popf        
C69E    EB A4                     jmp         L$1443 
C6A0                          L$1444:
C6A0    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
C6A3    31 C0                     xor         ax,ax 
C6A5                          L$1445:
C6A5    3B 46 F8                  cmp         ax,word ptr -0x8[bp] 
C6A8    73 71                     jae         L$1447 
C6AA    89 D3                     mov         bx,dx 
C6AC    D1 EB                     shr         bx,0x01 
C6AE    89 D9                     mov         cx,bx 
C6B0    C1 E1 06                  shl         cx,0x06 
C6B3    C1 E3 04                  shl         bx,0x04 
C6B6    36 8B 36 00 00            mov         si,word ptr ss:_VGA 
C6BB    01 CB                     add         bx,cx 
C6BD    36 8B 0E 02 00            mov         cx,word ptr ss:_VGA+0x2 
C6C2    03 5E FE                  add         bx,word ptr -0x2[bp] 
C6C5    89 4E E0                  mov         word ptr -0x20[bp],cx 
C6C8    89 4E EA                  mov         word ptr -0x16[bp],cx 
C6CB    89 F1                     mov         cx,si 
C6CD    01 D9                     add         cx,bx 
C6CF    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:__FONT_HEIGHT 
C6D5    01 D3                     add         bx,dx 
C6D7    43                        inc         bx 
C6D8    43                        inc         bx 
C6D9    D1 EB                     shr         bx,0x01 
C6DB    89 DF                     mov         di,bx 
C6DD    C1 E7 06                  shl         di,0x06 
C6E0    C1 E3 04                  shl         bx,0x04 
C6E3    01 FB                     add         bx,di 
C6E5    8B 7E FE                  mov         di,word ptr -0x2[bp] 
C6E8    01 DF                     add         di,bx 
C6EA    89 7E E2                  mov         word ptr -0x1e[bp],di 
C6ED    8B 5E E2                  mov         bx,word ptr -0x1e[bp] 
C6F0    8B 7E E0                  mov         di,word ptr -0x20[bp] 
C6F3    01 F3                     add         bx,si 
C6F5    A8 01                     test        al,0x01 
C6F7    74 06                     je          L$1446 
C6F9    80 C5 20                  add         ch,0x20 
C6FC    80 C7 20                  add         bh,0x20 
C6FF                          L$1446:
C6FF    8B 76 F6                  mov         si,word ptr -0xa[bp] 
C702    8E 46 EA                  mov         es,word ptr -0x16[bp] 
C705    8E DF                     mov         ds,di 
C707    42                        inc         dx 
C708    01 DE                     add         si,bx 
C70A    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
C70D    40                        inc         ax 
C70E    01 CB                     add         bx,cx 
C710    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
C713    89 DF                     mov         di,bx 
C715    57                        push        di 
C716    F3 A4                     rep movsb   
C718    5F                        pop         di 
C719    EB 8A                     jmp         L$1445 
C71B                          L$1447:
C71B    36 C7 06 00 00 FF FF      mov         word ptr ss:_ega4_lastoperation,0xffff 
C722    E9 65 C8                  jmp         L$1094 
C725                          vpuconsole_scrollup_:
C725    53                        push        bx 
C726    51                        push        cx 
C727    56                        push        si 
C728    57                        push        di 
C729    C8 0C 00 00               enter       0x000c,0x00 
C72D    50                        push        ax 
C72E    52                        push        dx 
C72F    8E DA                     mov         ds,dx 
C731    89 C3                     mov         bx,ax 
C733    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
C736    89 5E F8                  mov         word ptr -0x8[bp],bx 
C739    89 C3                     mov         bx,ax 
C73B    8B 47 3C                  mov         ax,word ptr 0x3c[bx] 
C73E    89 46 FA                  mov         word ptr -0x6[bp],ax 
C741    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
C747    0F 85 F0 00               jne         L$1450 
C74B    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
C750    36 A1 00 00               mov         ax,word ptr ss:_windows 
C754    C1 E3 02                  shl         bx,0x02 
C757    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
C75C    01 C3                     add         bx,ax 
C75E    8B 57 02                  mov         dx,word ptr 0x2[bx] 
C761    8B 07                     mov         ax,word ptr [bx] 
C763    3B 56 F0                  cmp         dx,word ptr -0x10[bp] 
C766    75 19                     jne         L$1448 
C768    3B 46 F2                  cmp         ax,word ptr -0xe[bp] 
C76B    75 14                     jne         L$1448 
C76D    36 80 3E 00 00 13         cmp         byte ptr ss:__VIDEO_MODE,0x13 
C773    74 0C                     je          L$1448 
C775    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
C778    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
C77B    E8 00 00                  call        fastscroll_ 
C77E    E9 BA 00                  jmp         L$1450 
C781                          L$1448:
C781    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
C786    36 A1 00 00               mov         ax,word ptr ss:_windows 
C78A    C1 E3 02                  shl         bx,0x02 
C78D    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
C792    01 C3                     add         bx,ax 
C794    C5 37                     lds         si,dword ptr [bx] 
C796    F6 44 16 40               test        byte ptr 0x16[si],0x40 
C79A    0F 85 9D 00               jne         L$1450 
C79E    8E 5E F0                  mov         ds,word ptr -0x10[bp] 
C7A1    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
C7A4    8B 76 F2                  mov         si,word ptr -0xe[bp] 
C7A7    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
C7AA    8E 5C 1A                  mov         ds,word ptr 0x1a[si] 
C7AD    8B 37                     mov         si,word ptr [bx] 
C7AF    8B 47 02                  mov         ax,word ptr 0x2[bx] 
C7B2    8E 5E F0                  mov         ds,word ptr -0x10[bp] 
C7B5    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
C7B8    8B 5F 04                  mov         bx,word ptr 0x4[bx] 
C7BB    8E D8                     mov         ds,ax 
C7BD    89 46 FE                  mov         word ptr -0x2[bp],ax 
C7C0    03 5C 04                  add         bx,word ptr 0x4[si] 
C7C3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
C7C9    43                        inc         bx 
C7CA    43                        inc         bx 
C7CB    8E 5E F0                  mov         ds,word ptr -0x10[bp] 
C7CE    89 5E F6                  mov         word ptr -0xa[bp],bx 
C7D1    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
C7D4    03 47 06                  add         ax,word ptr 0x6[bx] 
C7D7    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
C7DA    40                        inc         ax 
C7DB    40                        inc         ax 
C7DC    03 44 06                  add         ax,word ptr 0x6[si] 
C7DF    31 FF                     xor         di,di 
C7E1    40                        inc         ax 
C7E2    40                        inc         ax 
C7E3    89 7E FC                  mov         word ptr -0x4[bp],di 
C7E6    89 46 F4                  mov         word ptr -0xc[bp],ax 
C7E9                          L$1449:
C7E9    C5 5E F8                  lds         bx,dword ptr -0x8[bp] 
C7EC    0F B6 87 BC 06            movzx       ax,byte ptr 0x6bc[bx] 
C7F1    48                        dec         ax 
C7F2    39 C7                     cmp         di,ax 
C7F4    73 45                     jae         L$1450 
C7F6    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
C7F9    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
C7FC    89 FB                     mov         bx,di 
C7FE    E8 00 00                  call        vpuconsole_hiderow_ 
C801    6A 01                     push        0x0001 
C803    36 FF 36 00 00            push        word ptr ss:__RES_X 
C808    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C80E    52                        push        dx 
C80F    42                        inc         dx 
C810    42                        inc         dx 
C811    0F AF D7                  imul        dx,di 
C814    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
C817    8B 5C 14                  mov         bx,word ptr 0x14[si] 
C81A    03 5E FC                  add         bx,word ptr -0x4[bp] 
C81D    8E 5C 16                  mov         ds,word ptr 0x16[si] 
C820    6A 00                     push        0x0000 
C822    8B 47 04                  mov         ax,word ptr 0x4[bx] 
C825    8B 4F 06                  mov         cx,word ptr 0x6[bx] 
C828    89 C3                     mov         bx,ax 
C82A    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
C82D    03 56 F4                  add         dx,word ptr -0xc[bp] 
C830    83 46 FC 04               add         word ptr -0x4[bp],0x0004 
C834    0E                        push        cs 
C835    E8 00 00                  call        gprint_text_ 
C838    47                        inc         di 
C839    EB AE                     jmp         L$1449 
C83B                          L$1450:
C83B    31 D2                     xor         dx,dx 
C83D    31 C9                     xor         cx,cx 
C83F                          L$1451:
C83F    8E 5E F0                  mov         ds,word ptr -0x10[bp] 
C842    8B 5E F2                  mov         bx,word ptr -0xe[bp] 
C845    8B 76 F2                  mov         si,word ptr -0xe[bp] 
C848    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
C84B    8E 5C 3C                  mov         ds,word ptr 0x3c[si] 
C84E    C5 87 DA 06               lds         ax,dword ptr 0x6da[bx] 
C852    89 C3                     mov         bx,ax 
C854    01 CB                     add         bx,cx 
C856    8B 77 04                  mov         si,word ptr 0x4[bx] 
C859    8B 47 06                  mov         ax,word ptr 0x6[bx] 
C85C    8B 3F                     mov         di,word ptr [bx] 
C85E    8E 47 02                  mov         es,word ptr 0x2[bx] 
C861    8E D8                     mov         ds,ax 
C863    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
C866    57                        push        di 
C867                          L$1452:
C867    AC                        lodsb       
C868    AA                        stosb       
C869    3C 00                     cmp         al,0x00 
C86B    75 FA                     jne         L$1452 
C86D    5F                        pop         di 
C86E    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
C871    0F B6 9F BC 06            movzx       bx,byte ptr 0x6bc[bx] 
C876    42                        inc         dx 
C877    4B                        dec         bx 
C878    83 C1 04                  add         cx,0x0004 
C87B    39 DA                     cmp         dx,bx 
C87D    72 C0                     jb          L$1451 
C87F    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
C882    8B 56 F0                  mov         dx,word ptr -0x10[bp] 
C885    E8 00 00                  call        vpuconsole_clearrow_ 
C888    E9 FF C6                  jmp         L$1094 
C88B                          vpuconsole_incrow_:
C88B    53                        push        bx 
C88C    51                        push        cx 
C88D    56                        push        si 
C88E    57                        push        di 
C88F    C8 02 00 00               enter       0x0002,0x00 
C893    89 C7                     mov         di,ax 
C895    89 56 FE                  mov         word ptr -0x2[bp],dx 
C898    8E DA                     mov         ds,dx 
C89A    8B 4D 3C                  mov         cx,word ptr 0x3c[di] 
C89D    8B 75 3A                  mov         si,word ptr 0x3a[di] 
C8A0    8E D9                     mov         ds,cx 
C8A2    8B 44 02                  mov         ax,word ptr 0x2[si] 
C8A5    3D 50 00                  cmp         ax,0x0050 
C8A8    73 0B                     jae         L$1453 
C8AA    BB 01 00                  mov         bx,0x0001 
C8AD    89 C2                     mov         dx,ax 
C8AF    8B 04                     mov         ax,word ptr [si] 
C8B1    0E                        push        cs 
C8B2    E8 00 00                  call        vpucon_caret_ 
C8B5                          L$1453:
C8B5    8E D9                     mov         ds,cx 
C8B7    0F B6 84 BC 06            movzx       ax,byte ptr 0x6bc[si] 
C8BC    FF 04                     inc         word ptr [si] 
C8BE    3B 04                     cmp         ax,word ptr [si] 
C8C0    75 0A                     jne         L$1454 
C8C2    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
C8C5    89 F8                     mov         ax,di 
C8C7    FF 0C                     dec         word ptr [si] 
C8C9    E8 00 00                  call        vpuconsole_scrollup_ 
C8CC                          L$1454:
C8CC    8E D9                     mov         ds,cx 
C8CE    C7 44 02 00 00            mov         word ptr 0x2[si],0x0000 
C8D3    E9 B4 C6                  jmp         L$1094 

Routine Size: 1178 bytes,    Routine Base: main_TEXT + C43C

C8D6                          inc_row_:
C8D6    52                        push        dx 
C8D7    36 A1 00 00               mov         ax,word ptr ss:_running_console 
C8DB    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
C8E0    E8 00 00                  call        vpuconsole_incrow_ 
C8E3    5A                        pop         dx 
C8E4    CB                        retf        

Routine Size: 15 bytes,    Routine Base: main_TEXT + C8D6

C8E5                          move_:
C8E5    53                        push        bx 
C8E6    51                        push        cx 
C8E7    56                        push        si 
C8E8    57                        push        di 
C8E9    C8 02 00 00               enter       0x0002,0x00 
C8ED    89 C7                     mov         di,ax 
C8EF    89 D1                     mov         cx,dx 
C8F1    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
C8F6    8B 77 3A                  mov         si,word ptr 0x3a[bx] 
C8F9    8B 47 3C                  mov         ax,word ptr 0x3c[bx] 
C8FC    BB 01 00                  mov         bx,0x0001 
C8FF    8E D8                     mov         ds,ax 
C901    89 46 FE                  mov         word ptr -0x2[bp],ax 
C904    8B 54 02                  mov         dx,word ptr 0x2[si] 
C907    8B 04                     mov         ax,word ptr [si] 
C909    0E                        push        cs 
C90A    E8 00 00                  call        vpucon_caret_ 
C90D    83 F9 50                  cmp         cx,0x0050 
C910    72 03                     jb          L$1455 
C912    B9 4F 00                  mov         cx,0x004f 
C915                          L$1455:
C915    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
C918    0F B6 84 BC 06            movzx       ax,byte ptr 0x6bc[si] 
C91D    39 C7                     cmp         di,ax 
C91F    72 06                     jb          L$1456 
C921    0F B6 BC BC 06            movzx       di,byte ptr 0x6bc[si] 
C926    4F                        dec         di 
C927                          L$1456:
C927    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
C92A    89 3C                     mov         word ptr [si],di 
C92C    89 4C 02                  mov         word ptr 0x2[si],cx 
	     C930		; The label referred to here is an undefined location
C92F    E9 3E 5F                  jmp         0x00012870 
C932                          vpuconsole_printchar_:
C932    51                        push        cx 
C933    56                        push        si 
C934    57                        push        di 
C935    C8 08 00 00               enter       0x0008,0x00 
C939    50                        push        ax 
C93A    52                        push        dx 
C93B    88 5E FE                  mov         byte ptr -0x2[bp],bl 
C93E    8E DA                     mov         ds,dx 
C940    89 C6                     mov         si,ax 
C942    89 C3                     mov         bx,ax 
C944    8B 74 3A                  mov         si,word ptr 0x3a[si] 
C947    8B 47 3C                  mov         ax,word ptr 0x3c[bx] 
C94A    BB 01 00                  mov         bx,0x0001 
C94D    8E D8                     mov         ds,ax 
C94F    89 46 FC                  mov         word ptr -0x4[bp],ax 
C952    8B 54 02                  mov         dx,word ptr 0x2[si] 
C955    8B 04                     mov         ax,word ptr [si] 
C957    0E                        push        cs 
C958    E8 00 00                  call        vpucon_caret_ 
C95B    8E 5E F4                  mov         ds,word ptr -0xc[bp] 
C95E    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
C961    F6 47 17 01               test        byte ptr 0x17[bx],0x01 
C965    0F 85 F4 00               jne         L$1458 
C969    8B 7E F6                  mov         di,word ptr -0xa[bp] 
C96C    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
C96F    8E 5D 3C                  mov         ds,word ptr 0x3c[di] 
C972    8E 46 FC                  mov         es,word ptr -0x4[bp] 
C975    26 8B 14                  mov         dx,word ptr es:[si] 
C978    8B 87 DA 06               mov         ax,word ptr 0x6da[bx] 
C97C    C1 E2 02                  shl         dx,0x02 
C97F    8E 87 DC 06               mov         es,word ptr 0x6dc[bx] 
C983    89 C3                     mov         bx,ax 
C985    01 D3                     add         bx,dx 
C987    26 C4 3F                  les         di,dword ptr es:[bx] 
C98A    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
C98D    8B 5C 02                  mov         bx,word ptr 0x2[si] 
C990    06                        push        es 
C991    1F                        pop         ds 
C992    01 FB                     add         bx,di 
C994    80 3F 00                  cmp         byte ptr [bx],0x00 
C997    74 6B                     je          L$1457 
C999    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__TEXTBOX_BGCOLOR 
C99F    36 0F B6 16 00 00         movzx       dx,byte ptr ss:__FONT_HEIGHT 
C9A5    36 C4 1E 00 00            les         bx,dword ptr ss:_running_console 
C9AA    26 C5 7F 18               lds         di,dword ptr es:0x18[bx] 
C9AE    50                        push        ax 
C9AF    8B 05                     mov         ax,word ptr [di] 
C9B1    89 46 FA                  mov         word ptr -0x6[bp],ax 
C9B4    8B 45 02                  mov         ax,word ptr 0x2[di] 
C9B7    8B 7E FA                  mov         di,word ptr -0x6[bp] 
C9BA    89 46 F8                  mov         word ptr -0x8[bp],ax 
C9BD    26 8B 47 06               mov         ax,word ptr es:0x6[bx] 
C9C1    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
C9C4    89 D1                     mov         cx,dx 
C9C6    03 45 06                  add         ax,word ptr 0x6[di] 
C9C9    36 0F B6 3E 00 00         movzx       di,byte ptr ss:__FONT_HEIGHT 
C9CF    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
C9D2    42                        inc         dx 
C9D3    42                        inc         dx 
C9D4    0F AF 14                  imul        dx,word ptr [si] 
C9D7    01 F8                     add         ax,di 
C9D9    8B 7E FA                  mov         di,word ptr -0x6[bp] 
C9DC    26 8B 5F 04               mov         bx,word ptr es:0x4[bx] 
C9E0    8E 5E F8                  mov         ds,word ptr -0x8[bp] 
C9E3    40                        inc         ax 
C9E4    40                        inc         ax 
C9E5    03 5D 04                  add         bx,word ptr 0x4[di] 
C9E8    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
C9EB    01 C2                     add         dx,ax 
C9ED    8B 44 02                  mov         ax,word ptr 0x2[si] 
C9F0    C1 E0 03                  shl         ax,0x03 
C9F3    83 C1 03                  add         cx,0x0003 
C9F6    01 D8                     add         ax,bx 
C9F8    BB 08 00                  mov         bx,0x0008 
C9FB    40                        inc         ax 
C9FC    40                        inc         ax 
C9FD    9A 00 00 00 00            call        draw_rectangle_ 
CA02    EB 59                     jmp         L$1458 
CA04                          L$1457:
CA04    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
CA07    8B 44 02                  mov         ax,word ptr 0x2[si] 
CA0A    85 C0                     test        ax,ax 
CA0C    74 4F                     je          L$1458 
CA0E    89 C3                     mov         bx,ax 
CA10    06                        push        es 
CA11    1F                        pop         ds 
CA12    01 FB                     add         bx,di 
CA14    80 7F FF 00               cmp         byte ptr -0x1[bx],0x00 
CA18    75 43                     jne         L$1458 
CA1A    B9 FF FF                  mov         cx,0xffff 
CA1D    33 C0                     xor         ax,ax 
CA1F    F2 AE                     repne scasb 
CA21    F7 D1                     not         cx 
CA23    49                        dec         cx 
CA24    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
CA27    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
CA2A    8B 44 02                  mov         ax,word ptr 0x2[si] 
CA2D    8E 5E F4                  mov         ds,word ptr -0xc[bp] 
CA30    8B 7E F6                  mov         di,word ptr -0xa[bp] 
CA33    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
CA36    8E 5D 3C                  mov         ds,word ptr 0x3c[di] 
CA39    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CA3C    26 8B 14                  mov         dx,word ptr es:[si] 
CA3F    8B BF DA 06               mov         di,word ptr 0x6da[bx] 
CA43    C1 E2 02                  shl         dx,0x02 
CA46    8E 87 DC 06               mov         es,word ptr 0x6dc[bx] 
CA4A    89 FB                     mov         bx,di 
CA4C    01 D3                     add         bx,dx 
CA4E    29 C8                     sub         ax,cx 
CA50    26 C4 3F                  les         di,dword ptr es:[bx] 
CA53    01 CF                     add         di,cx 
CA55    89 C1                     mov         cx,ax 
CA57    B0 20                     mov         al,0x20 
CA59    57                        push        di 
CA5A    F3 AA                     rep stosb   
CA5C    5F                        pop         di 
CA5D                          L$1458:
CA5D    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
CA60    36 FF 36 02 00            push        word ptr ss:_monospace_font+0x2 
CA65    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
CA6B    36 FF 36 00 00            push        word ptr ss:_monospace_font 
CA70    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:__TEXTBOX_TEXTCOLOR 
CA76    50                        push        ax 
CA77    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
CA7D    8E 5E F4                  mov         ds,word ptr -0xc[bp] 
CA80    8B 7E F6                  mov         di,word ptr -0xa[bp] 
CA83    8B 57 06                  mov         dx,word ptr 0x6[bx] 
CA86    8B 5F 18                  mov         bx,word ptr 0x18[bx] 
CA89    01 C2                     add         dx,ax 
CA8B    8E 45 1A                  mov         es,word ptr 0x1a[di] 
CA8E    83 C2 04                  add         dx,0x0004 
CA91    26 C5 3F                  lds         di,dword ptr es:[bx] 
CA94    40                        inc         ax 
CA95    40                        inc         ax 
CA96    8B 5D 06                  mov         bx,word ptr 0x6[di] 
CA99    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CA9C    01 D3                     add         bx,dx 
CA9E    26 8B 14                  mov         dx,word ptr es:[si] 
CAA1    0F AF D0                  imul        dx,ax 
CAA4    8E 46 F4                  mov         es,word ptr -0xc[bp] 
CAA7    01 DA                     add         dx,bx 
CAA9    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
CAAC    26 8B 47 04               mov         ax,word ptr es:0x4[bx] 
CAB0    03 45 04                  add         ax,word ptr 0x4[di] 
CAB3    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
CAB6    8B 5C 02                  mov         bx,word ptr 0x2[si] 
CAB9    89 C7                     mov         di,ax 
CABB    C1 E3 03                  shl         bx,0x03 
CABE    01 DF                     add         di,bx 
CAC0    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
CAC4    47                        inc         di 
CAC5    47                        inc         di 
CAC6    89 D3                     mov         bx,dx 
CAC8    89 FA                     mov         dx,di 
CACA    0E                        push        cs 
CACB    E8 00 00                  call        draw_char_ 
CACE    8E 5E F4                  mov         ds,word ptr -0xc[bp] 
CAD1    8B 5E F6                  mov         bx,word ptr -0xa[bp] 
CAD4    8B 7E F6                  mov         di,word ptr -0xa[bp] 
CAD7    8B 5F 3A                  mov         bx,word ptr 0x3a[bx] 
CADA    8E 5D 3C                  mov         ds,word ptr 0x3c[di] 
CADD    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CAE0    26 8B 04                  mov         ax,word ptr es:[si] 
CAE3    8B 97 DA 06               mov         dx,word ptr 0x6da[bx] 
CAE7    C1 E0 02                  shl         ax,0x02 
CAEA    8E 9F DC 06               mov         ds,word ptr 0x6dc[bx] 
CAEE    89 D3                     mov         bx,dx 
CAF0    01 C3                     add         bx,ax 
CAF2    26 8B 44 02               mov         ax,word ptr es:0x2[si] 
CAF6    89 C2                     mov         dx,ax 
CAF8    42                        inc         dx 
CAF9    26 89 54 02               mov         word ptr es:0x2[si],dx 
CAFD    C5 0F                     lds         cx,dword ptr [bx] 
CAFF    89 CB                     mov         bx,cx 
CB01    01 C3                     add         bx,ax 
CB03    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
CB06    88 07                     mov         byte ptr [bx],al 
CB08    06                        push        es 
CB09    1F                        pop         ds 
CB0A    83 7C 02 50               cmp         word ptr 0x2[si],0x0050 
	     CB10		; The label referred to here is an undefined location
CB0E    0F 85 F7 7F               jne         0x00014b09 
CB12    8B 56 F4                  mov         dx,word ptr -0xc[bp] 
CB15    89 F8                     mov         ax,di 
CB17    E8 00 00                  call        vpuconsole_incrow_ 
	     CB1B		; The label referred to here is an undefined location
CB1A    E9 EC 7F                  jmp         0x00014b09 
CB1D                          vpuconsole_printtxt_:
CB1D    56                        push        si 
CB1E    57                        push        di 
CB1F    C8 02 00 00               enter       0x0002,0x00 
CB23    89 C7                     mov         di,ax 
CB25    89 56 FE                  mov         word ptr -0x2[bp],dx 
CB28    89 DE                     mov         si,bx 
CB2A                          L$1459:
CB2A    8E D9                     mov         ds,cx 
CB2C    8A 04                     mov         al,byte ptr [si] 
CB2E    84 C0                     test        al,al 
	     CB32		; The label referred to here is an undefined location
CB30    0F 84 6D 4F               je          0x00011aa1 
CB34    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
CB37    0F B6 D8                  movzx       bx,al 
CB3A    89 F8                     mov         ax,di 
CB3C    46                        inc         si 
CB3D    E8 00 00                  call        vpuconsole_printchar_ 
CB40    EB E8                     jmp         L$1459 
CB42                          save_cursor_position_:
CB42    53                        push        bx 
CB43    56                        push        si 
CB44    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
CB49    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
CB4C    8B 37                     mov         si,word ptr [bx] 
CB4E    89 77 04                  mov         word ptr 0x4[bx],si 
CB51    8B 77 02                  mov         si,word ptr 0x2[bx] 
CB54    89 77 06                  mov         word ptr 0x6[bx],si 
CB57    5E                        pop         si 
CB58    5B                        pop         bx 
CB59    C3                        ret         
CB5A                          restore_cursor_position_:
CB5A    53                        push        bx 
CB5B    51                        push        cx 
CB5C    52                        push        dx 
CB5D    56                        push        si 
CB5E    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
CB63    8B 4F 3C                  mov         cx,word ptr 0x3c[bx] 
CB66    8B 77 3A                  mov         si,word ptr 0x3a[bx] 
CB69    8E D9                     mov         ds,cx 
CB6B    BB 01 00                  mov         bx,0x0001 
CB6E    8B 54 02                  mov         dx,word ptr 0x2[si] 
CB71    8B 04                     mov         ax,word ptr [si] 
CB73    0E                        push        cs 
CB74    E8 00 00                  call        vpucon_caret_ 
CB77    8E D9                     mov         ds,cx 
CB79    8B 44 04                  mov         ax,word ptr 0x4[si] 
CB7C    89 04                     mov         word ptr [si],ax 
CB7E    8B 44 06                  mov         ax,word ptr 0x6[si] 
CB81    89 44 02                  mov         word ptr 0x2[si],ax 
CB84    E9 AE 05                  jmp         L$1510 
CB87                          device_status_report_:
CB87    53                        push        bx 
CB88    B8 1B 00                  mov         ax,0x001b 
CB8B    E8 00 00                  call        con_write_stdin_ 
CB8E    B8 5B 00                  mov         ax,0x005b 
CB91    E8 00 00                  call        con_write_stdin_ 
CB94    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_row 
CB99    0F B6 07                  movzx       ax,byte ptr [bx] 
CB9C    E8 00 00                  call        con_write_stdin_ 
CB9F    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_col 
CBA4    0F B6 07                  movzx       ax,byte ptr [bx] 
CBA7    E8 00 00                  call        con_write_stdin_ 
CBAA    B8 52 00                  mov         ax,0x0052 
CBAD    E8 00 00                  call        con_write_stdin_ 
CBB0    5B                        pop         bx 
CBB1    C3                        ret         
CBB2                          parse_ansi_arg_:
CBB2    56                        push        si 
CBB3    57                        push        di 
CBB4    C8 02 00 00               enter       0x0002,0x00 
CBB8    89 C6                     mov         si,ax 
CBBA    89 56 FE                  mov         word ptr -0x2[bp],dx 
CBBD    8E DA                     mov         ds,dx 
CBBF    8B 04                     mov         ax,word ptr [si] 
CBC1    8B 54 02                  mov         dx,word ptr 0x2[si] 
CBC4    9A 00 00 00 00            call        atoi_ 
CBC9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
CBCC    C5 3C                     lds         di,dword ptr [si] 
CBCE    80 3D 30                  cmp         byte ptr [di],0x30 
CBD1    72 2F                     jb          L$1461 
CBD3    80 3D 39                  cmp         byte ptr [di],0x39 
CBD6    77 2A                     ja          L$1461 
CBD8    8E 46 FE                  mov         es,word ptr -0x2[bp] 
CBDB                          L$1460:
CBDB    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
CBDE    C5 3C                     lds         di,dword ptr [si] 
CBE0    80 3D 30                  cmp         byte ptr [di],0x30 
	     CBE5		; The label referred to here is an undefined location
CBE3    0F 82 BA 4E               jb          0x00011aa1 
CBE7    80 3D 39                  cmp         byte ptr [di],0x39 
	     CBEC		; The label referred to here is an undefined location
CBEA    0F 87 B3 4E               ja          0x00011aa1 
CBEE    26 8C 5C 02               mov         word ptr es:0x2[si],ds 
CBF2    06                        push        es 
CBF3    1F                        pop         ds 
CBF4    47                        inc         di 
CBF5    89 3C                     mov         word ptr [si],di 
CBF7    8E D9                     mov         ds,cx 
CBF9    FF 0F                     dec         word ptr [bx] 
CBFB    75 DE                     jne         L$1460 
CBFD    30 C0                     xor         al,al 
	     CC00		; The label referred to here is an undefined location
CBFF    E9 9F 4E                  jmp         0x00011aa1 
CC02                          L$1461:
CC02    B0 01                     mov         al,0x01 
	     CC05		; The label referred to here is an undefined location
CC04    E9 9A 4E                  jmp         0x00011aa1 
CC07                          parse_ansi_code_:
CC07    56                        push        si 
CC08    57                        push        di 
CC09    C8 06 00 00               enter       0x0006,0x00 
CC0D    50                        push        ax 
CC0E    52                        push        dx 
CC0F    89 DE                     mov         si,bx 
CC11    89 4E FC                  mov         word ptr -0x4[bp],cx 
CC14    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
CC19    8B 7F 3A                  mov         di,word ptr 0x3a[bx] 
CC1C    8B 47 3C                  mov         ax,word ptr 0x3c[bx] 
CC1F    8E D9                     mov         ds,cx 
CC21    89 46 FA                  mov         word ptr -0x6[bp],ax 
CC24    83 3C 00                  cmp         word ptr [si],0x0000 
	     CC29		; The label referred to here is an undefined location
CC27    0F 84 76 4E               je          0x00011aa1 
CC2B    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
CC2E    89 F3                     mov         bx,si 
CC30    E8 00 00                  call        parse_ansi_arg_ 
CC33    88 C4                     mov         ah,al 
CC35    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
CC38    88 46 FE                  mov         byte ptr -0x2[bp],al 
CC3B    83 3C 00                  cmp         word ptr [si],0x0000 
	     CC40		; The label referred to here is an undefined location
CC3E    0F 84 5F 4E               je          0x00011aa1 
CC42    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
CC45    FF 0C                     dec         word ptr [si] 
CC47    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
CC4A    C5 17                     lds         dx,dword ptr [bx] 
CC4C    89 D3                     mov         bx,dx 
CC4E    8A 07                     mov         al,byte ptr [bx] 
CC50    3C 43                     cmp         al,0x43 
CC52    72 2E                     jb          L$1463 
CC54    0F 86 74 00               jbe         L$1467 
CC58    3C 4B                     cmp         al,0x4b 
CC5A    72 19                     jb          L$1462 
CC5C    0F 86 19 01               jbe         L$1475 
CC60    3C 75                     cmp         al,0x75 
CC62    0F 84 3C 01               je          L$1477 
CC66    3C 73                     cmp         al,0x73 
CC68    0F 84 30 01               je          L$1476 
CC6C    3C 6E                     cmp         al,0x6e 
CC6E    0F 84 36 01               je          L$1478 
	     CC73		; The label referred to here is an undefined location
CC72    E9 2C 4E                  jmp         0x00011aa1 
CC75                          L$1462:
CC75    3C 4A                     cmp         al,0x4a 
CC77    0F 84 DD 00               je          L$1473 
CC7B    3C 44                     cmp         al,0x44 
CC7D    74 65                     je          L$1470 
	     CC80		; The label referred to here is an undefined location
CC7F    E9 1F 4E                  jmp         0x00011aa1 
CC82                          L$1463:
CC82    3C 3B                     cmp         al,0x3b 
CC84    72 0D                     jb          L$1464 
CC86    76 76                     jbe         L$1471 
CC88    3C 42                     cmp         al,0x42 
CC8A    74 2D                     je          L$1466 
CC8C    3C 41                     cmp         al,0x41 
CC8E    74 12                     je          L$1465 
	     CC91		; The label referred to here is an undefined location
CC90    E9 0E 4E                  jmp         0x00011aa1 
CC93                          L$1464:
CC93    3C 12                     cmp         al,0x12 
CC95    0F 84 2F 01               je          L$1480 
CC99    3C 11                     cmp         al,0x11 
CC9B    0F 84 16 01               je          L$1479 
	     CCA0		; The label referred to here is an undefined location
CC9F    E9 FF 4D                  jmp         0x00011aa1 
CCA2                          L$1465:
CCA2    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_col 
CCA7    8B 17                     mov         dx,word ptr [bx] 
CCA9    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_row 
CCAE    0F B6 C4                  movzx       ax,ah 
CCB1    8B 1F                     mov         bx,word ptr [bx] 
CCB3    29 C3                     sub         bx,ax 
CCB5    89 D8                     mov         ax,bx 
CCB7    EB 24                     jmp         L$1469 
CCB9                          L$1466:
CCB9    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_col 
CCBE    8B 17                     mov         dx,word ptr [bx] 
CCC0    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_row 
CCC5    0F B6 C4                  movzx       ax,ah 
CCC8    03 07                     add         ax,word ptr [bx] 
CCCA    EB 11                     jmp         L$1469 
CCCC                          L$1467:
CCCC    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_col 
CCD1    0F B6 D4                  movzx       dx,ah 
CCD4    03 17                     add         dx,word ptr [bx] 
CCD6    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_row 
CCDB                          L$1468:
CCDB    8B 07                     mov         ax,word ptr [bx] 
CCDD                          L$1469:
CCDD    0E                        push        cs 
CCDE    E8 00 00                  call        move_ 
	     CCE2		; The label referred to here is an undefined location
CCE1    E9 BD 4D                  jmp         0x00011aa1 
CCE4                          L$1470:
CCE4    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_col 
CCE9    0F B6 D4                  movzx       dx,ah 
CCEC    8B 07                     mov         ax,word ptr [bx] 
CCEE    36 8B 1E 00 00            mov         bx,word ptr ss:_cursor_row 
CCF3    29 D0                     sub         ax,dx 
CCF5    36 8E 1E 02 00            mov         ds,word ptr ss:_cursor_row+0x2 
CCFA    89 C2                     mov         dx,ax 
CCFC    EB DD                     jmp         L$1468 
CCFE                          L$1471:
CCFE    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CD01    26 83 3C 00               cmp         word ptr es:[si],0x0000 
	     CD07		; The label referred to here is an undefined location
CD05    0F 84 98 4D               je          0x00011aa1 
CD09    8E 46 F6                  mov         es,word ptr -0xa[bp] 
CD0C    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
CD0F    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
CD12    42                        inc         dx 
CD13    26 8C 5F 02               mov         word ptr es:0x2[bx],ds 
CD17    06                        push        es 
CD18    1F                        pop         ds 
CD19    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
CD1C    89 17                     mov         word ptr [bx],dx 
CD1E    89 F3                     mov         bx,si 
CD20    8C C2                     mov         dx,es 
CD22    E8 00 00                  call        parse_ansi_arg_ 
CD25    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
CD28    88 C4                     mov         ah,al 
CD2A    83 3C 00                  cmp         word ptr [si],0x0000 
	     CD2F		; The label referred to here is an undefined location
CD2D    0F 84 70 4D               je          0x00011aa1 
CD31    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
CD34    FF 0C                     dec         word ptr [si] 
CD36    8E 5E F6                  mov         ds,word ptr -0xa[bp] 
CD39    8B 76 F8                  mov         si,word ptr -0x8[bp] 
CD3C    8B 1F                     mov         bx,word ptr [bx] 
CD3E    8E 5C 02                  mov         ds,word ptr 0x2[si] 
CD41    8A 07                     mov         al,byte ptr [bx] 
CD43    3C 66                     cmp         al,0x66 
CD45    74 06                     je          L$1472 
CD47    3C 48                     cmp         al,0x48 
	     CD4B		; The label referred to here is an undefined location
CD49    0F 85 54 4D               jne         0x00011aa1 
CD4D                          L$1472:
CD4D    0F B6 D4                  movzx       dx,ah 
CD50    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
CD54    4A                        dec         dx 
CD55    48                        dec         ax 
CD56    EB 85                     jmp         L$1469 
CD58                          L$1473:
CD58    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CD5C    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CD61    B9 01 00                  mov         cx,0x0001 
CD64    E8 00 00                  call        vpuconsole_clearscr_ 
CD67    31 DB                     xor         bx,bx 
CD69    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CD6D    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CD72                          L$1474:
CD72    0E                        push        cs 
CD73    E8 00 00                  call        draw_window_ 
	     CD77		; The label referred to here is an undefined location
CD76    E9 28 4D                  jmp         0x00011aa1 
CD79                          L$1475:
CD79    36 C5 1E 00 00            lds         bx,dword ptr ss:_cursor_row 
CD7E    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CD82    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CD87    8B 1F                     mov         bx,word ptr [bx] 
CD89    B9 01 00                  mov         cx,0x0001 
CD8C    E8 00 00                  call        vpuconsole_clearrow_ 
CD8F    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CD93    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CD98    31 DB                     xor         bx,bx 
CD9A    EB D6                     jmp         L$1474 
CD9C                          L$1476:
CD9C    E8 00 00                  call        save_cursor_position_ 
	     CDA0		; The label referred to here is an undefined location
CD9F    E9 FF 4C                  jmp         0x00011aa1 
CDA2                          L$1477:
CDA2    E8 00 00                  call        restore_cursor_position_ 
	     CDA6		; The label referred to here is an undefined location
CDA5    E9 F9 4C                  jmp         0x00011aa1 
CDA8                          L$1478:
CDA8    80 FC 06                  cmp         ah,0x06 
	     CDAD		; The label referred to here is an undefined location
CDAB    0F 85 F2 4C               jne         0x00011aa1 
CDAF    E8 00 00                  call        device_status_report_ 
	     CDB3		; The label referred to here is an undefined location
CDB2    E9 EC 4C                  jmp         0x00011aa1 
CDB5                          L$1479:
CDB5    0F B6 C4                  movzx       ax,ah 
CDB8    30 E4                     xor         ah,ah 
CDBA    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
CDBD    24 01                     and         al,0x01 
CDBF    80 65 0F FE               and         byte ptr 0xf[di],0xfe 
CDC3    C1 E0 08                  shl         ax,0x08 
CDC6    EB 11                     jmp         L$1481 
CDC8                          L$1480:
CDC8    0F B6 C4                  movzx       ax,ah 
CDCB    30 E4                     xor         ah,ah 
CDCD    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
CDD0    24 01                     and         al,0x01 
CDD2    80 65 0F FD               and         byte ptr 0xf[di],0xfd 
CDD6    C1 E0 09                  shl         ax,0x09 
CDD9                          L$1481:
CDD9    09 45 0E                  or          word ptr 0xe[di],ax 
	     CDDD		; The label referred to here is an undefined location
CDDC    E9 C2 4C                  jmp         0x00011aa1 

Routine Size: 1274 bytes,    Routine Base: main_TEXT + C8E5

CDDF                          flush_stdout_:
CDDF    53                        push        bx 
CDE0    51                        push        cx 
CDE1    52                        push        dx 
CDE2    56                        push        si 
CDE3    57                        push        di 
CDE4    C8 04 00 00               enter       0x0004,0x00 
CDE8    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
CDED    C4 7C 3A                  les         di,dword ptr 0x3a[si] 
CDF0    26 8B 9D C8 06            mov         bx,word ptr es:0x6c8[di] 
CDF5    89 5E FC                  mov         word ptr -0x4[bp],bx 
CDF8    26 8B 9D CA 06            mov         bx,word ptr es:0x6ca[di] 
CDFD    89 5E FE                  mov         word ptr -0x2[bp],bx 
CE00    8B 54 3A                  mov         dx,word ptr 0x3a[si] 
CE03    8B 7C 3C                  mov         di,word ptr 0x3c[si] 
CE06    89 D6                     mov         si,dx 
CE08    81 C6 CE 06               add         si,0x06ce 
CE0C                          L$1482:
CE0C    8E DF                     mov         ds,di 
CE0E    FF 0C                     dec         word ptr [si] 
CE10    83 3C FF                  cmp         word ptr [si],0xffff 
	     CE15		; The label referred to here is an undefined location
CE13    0F 84 89 5D               je          0x00012ba0 
CE17    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
CE1A    8A 07                     mov         al,byte ptr [bx] 
CE1C    3C 07                     cmp         al,0x07 
CE1E    75 09                     jne         L$1483 
CE20    B8 01 00                  mov         ax,0x0001 
CE23    0E                        push        cs 
CE24    E8 00 00                  call        make_sound_ 
CE27    EB 3C                     jmp         L$1485 
CE29                          L$1483:
CE29    3C 1B                     cmp         al,0x1b 
CE2B    75 26                     jne         L$1484 
CE2D    8E DF                     mov         ds,di 
CE2F    83 3C 00                  cmp         word ptr [si],0x0000 
CE32    74 1F                     je          L$1484 
CE34    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
CE37    80 7F 01 5B               cmp         byte ptr 0x1[bx],0x5b 
CE3B    75 28                     jne         L$1485 
CE3D    8D 46 FC                  lea         ax,-0x4[bp] 
CE40    8E DF                     mov         ds,di 
CE42    89 F3                     mov         bx,si 
CE44    89 F9                     mov         cx,di 
CE46    FF 0C                     dec         word ptr [si] 
CE48    8C D2                     mov         dx,ss 
CE4A    83 46 FC 02               add         word ptr -0x4[bp],0x0002 
CE4E    E8 00 00                  call        parse_ansi_code_ 
CE51    EB 12                     jmp         L$1485 
CE53                          L$1484:
CE53    C5 5E FC                  lds         bx,dword ptr -0x4[bp] 
CE56    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CE5A    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CE5F    0F B6 1F                  movzx       bx,byte ptr [bx] 
CE62    E8 00 00                  call        vpuconsole_printchar_ 
CE65                          L$1485:
CE65    FF 46 FC                  inc         word ptr -0x4[bp] 
CE68    EB A2                     jmp         L$1482 

Routine Size: 139 bytes,    Routine Base: main_TEXT + CDDF

CE6A                          print_text_:
CE6A    0E                        push        cs 
CE6B    E8 00 00                  call        move_ 
CE6E    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CE72    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CE77    E8 00 00                  call        vpuconsole_printtxt_ 
CE7A    CB                        retf        

Routine Size: 17 bytes,    Routine Base: main_TEXT + CE6A

CE7B                          putstr_:
CE7B    53                        push        bx 
CE7C    51                        push        cx 
CE7D    56                        push        si 
CE7E    57                        push        di 
CE7F    36 8B 36 00 00            mov         si,word ptr ss:_running_console 
CE84    36 8B 3E 02 00            mov         di,word ptr ss:_running_console+0x2 
CE89    89 C3                     mov         bx,ax 
CE8B    89 D1                     mov         cx,dx 
CE8D    89 F0                     mov         ax,si 
CE8F    89 FA                     mov         dx,di 
CE91    E8 00 00                  call        vpuconsole_printtxt_ 
CE94    89 F0                     mov         ax,si 
CE96    89 FA                     mov         dx,di 
CE98    E8 00 00                  call        vpuconsole_incrow_ 
	     CE9C		; The label referred to here is an undefined location
CE9B    E9 D3 59                  jmp         0x00012871 

Routine Size: 35 bytes,    Routine Base: main_TEXT + CE7B

CE9E                          refresh_:
CE9E    53                        push        bx 
CE9F    52                        push        dx 
CEA0    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CEA4    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CEA9    31 DB                     xor         bx,bx 
CEAB    0E                        push        cs 
CEAC    E8 00 00                  call        window_drawelement_ 
CEAF    5A                        pop         dx 
CEB0    5B                        pop         bx 
CEB1    CB                        retf        

Routine Size: 20 bytes,    Routine Base: main_TEXT + CE9E

CEB2                          scroll_up_:
CEB2    52                        push        dx 
CEB3    36 A1 00 00               mov         ax,word ptr ss:_running_console 
CEB7    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
CEBC    E8 00 00                  call        vpuconsole_scrollup_ 
CEBF    5A                        pop         dx 
CEC0    CB                        retf        

Routine Size: 15 bytes,    Routine Base: main_TEXT + CEB2

CEC1                          vpuconsole_getch_:
CEC1    53                        push        bx 
CEC2    56                        push        si 
CEC3    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
CEC8    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
CECB    8B 77 14                  mov         si,word ptr 0x14[bx] 
CECE    C7 47 14 FF FF            mov         word ptr 0x14[bx],0xffff 
CED3    8B 47 12                  mov         ax,word ptr 0x12[bx] 
CED6    89 77 12                  mov         word ptr 0x12[bx],si 
CED9    5E                        pop         si 
CEDA    5B                        pop         bx 
CEDB    CB                        retf        
CEDC                          vpuconsole_keypress_:
CEDC    56                        push        si 
CEDD    57                        push        di 
CEDE    89 C6                     mov         si,ax 
CEE0    8E C2                     mov         es,dx 
CEE2    8E D9                     mov         ds,cx 
CEE4    26 8B 7C 3A               mov         di,word ptr es:0x3a[si] 
CEE8    26 8B 74 3C               mov         si,word ptr es:0x3c[si] 
CEEC    8B 07                     mov         ax,word ptr [bx] 
CEEE    8E C6                     mov         es,si 
CEF0    26 89 45 12               mov         word ptr es:0x12[di],ax 
CEF4    85 C0                     test        ax,ax 
CEF6    75 0A                     jne         L$1486 
CEF8    9A 00 00 00 00            call        getch_ 
CEFD    8E DE                     mov         ds,si 
CEFF    89 45 14                  mov         word ptr 0x14[di],ax 
CF02                          L$1486:
CF02    31 C0                     xor         ax,ax 
CF04    5F                        pop         di 
CF05    5E                        pop         si 
CF06    C3                        ret         

Routine Size: 70 bytes,    Routine Base: main_TEXT + CEC1

CF07                          vpu_has_active_window_:
CF07    53                        push        bx 
CF08    56                        push        si 
CF09    57                        push        di 
CF0A    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
CF0F    36 C5 06 00 00            lds         ax,dword ptr ss:_windows 
CF14    C1 E3 02                  shl         bx,0x02 
CF17    36 8B 36 00 00            mov         si,word ptr ss:_running_console 
CF1C    01 C3                     add         bx,ax 
CF1E    36 A1 02 00               mov         ax,word ptr ss:_running_console+0x2 
CF22    8B 57 02                  mov         dx,word ptr 0x2[bx] 
CF25    8B 3F                     mov         di,word ptr [bx] 
CF27    39 C2                     cmp         dx,ax 
CF29    75 04                     jne         L$1487 
CF2B    39 F7                     cmp         di,si 
CF2D    74 21                     je          L$1488 
CF2F                          L$1487:
CF2F    8E C2                     mov         es,dx 
CF31    26 C4 5D 3A               les         bx,dword ptr es:0x3a[di] 
CF35    8E D8                     mov         ds,ax 
CF37    C5 7C 3A                  lds         di,dword ptr 0x3a[si] 
CF3A    26 8B 77 04               mov         si,word ptr es:0x4[bx] 
CF3E    26 8B 57 06               mov         dx,word ptr es:0x6[bx] 
CF42    8B 45 18                  mov         ax,word ptr 0x18[di] 
CF45    8B 5D 16                  mov         bx,word ptr 0x16[di] 
CF48    39 C2                     cmp         dx,ax 
CF4A    75 08                     jne         L$1489 
CF4C    39 DE                     cmp         si,bx 
CF4E    75 04                     jne         L$1489 
CF50                          L$1488:
CF50    B0 01                     mov         al,0x01 
CF52    EB 02                     jmp         L$1490 
CF54                          L$1489:
CF54    30 C0                     xor         al,al 
CF56                          L$1490:
CF56    5F                        pop         di 
CF57    5E                        pop         si 
CF58    5B                        pop         bx 
CF59    CB                        retf        

Routine Size: 83 bytes,    Routine Base: main_TEXT + CF07

CF5A                          vpu_cwd_:
CF5A    53                        push        bx 
CF5B    51                        push        cx 
CF5C    56                        push        si 
CF5D    57                        push        di 
CF5E    C8 54 00 00               enter       0x0054,0x00 
CF62    89 C6                     mov         si,ax 
CF64    89 56 FC                  mov         word ptr -0x4[bp],dx 
CF67    85 D2                     test        dx,dx 
CF69    75 06                     jne         L$1491 
CF6B    85 C0                     test        ax,ax 
CF6D    0F 84 7F 00               je          L$1497 
CF71                          L$1491:
CF71    8E DA                     mov         ds,dx 
CF73    8A 84 CC 00               mov         al,byte ptr 0xcc[si] 
CF77    2C 40                     sub         al,0x40 
CF79    88 46 FE                  mov         byte ptr -0x2[bp],al 
CF7C    3C 20                     cmp         al,0x20 
CF7E    76 04                     jbe         L$1492 
CF80    80 6E FE 20               sub         byte ptr -0x2[bp],0x20 
CF84                          L$1492:
CF84    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
CF88    BA 50 00                  mov         dx,0x0050 
CF8B    8D 5E AC                  lea         bx,-0x54[bp] 
CF8E    8C D1                     mov         cx,ss 
CF90    9A 00 00 00 00            call        _getdcwd_ 
CF95    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CF98    8D 9C CC 00               lea         bx,0xcc[si] 
CF9C    16                        push        ss 
CF9D    1F                        pop         ds 
CF9E    8D 76 AC                  lea         si,-0x54[bp] 
CFA1    89 DF                     mov         di,bx 
CFA3                          L$1493:
CFA3    AC                        lodsb       
CFA4    26 8A 25                  mov         ah,byte ptr es:[di] 
CFA7    2A C4                     sub         al,ah 
CFA9    75 05                     jne         L$1494 
CFAB    47                        inc         di 
CFAC    3A C4                     cmp         al,ah 
CFAE    75 F3                     jne         L$1493 
CFB0                          L$1494:
CFB0    18 E4                     sbb         ah,ah 
CFB2    85 C0                     test        ax,ax 
	     CFB6		; The label referred to here is an undefined location
CFB4    0F 84 B8 58               je          0x00012870 
CFB8    89 D8                     mov         ax,bx 
CFBA    8C C2                     mov         dx,es 
CFBC    9A 00 00 00 00            call        chdir_ 
CFC1    85 C0                     test        ax,ax 
CFC3    74 15                     je          L$1496 
CFC5    BE 00 00                  mov         si,offset _cwd 
CFC8    8E 46 FC                  mov         es,word ptr -0x4[bp] 
CFCB    16                        push        ss 
CFCC    1F                        pop         ds 
CFCD    89 DF                     mov         di,bx 
CFCF    57                        push        di 
CFD0                          L$1495:
CFD0    AC                        lodsb       
CFD1    AA                        stosb       
CFD2    3C 00                     cmp         al,0x00 
CFD4    75 FA                     jne         L$1495 
CFD6    5F                        pop         di 
	     CFD8		; The label referred to here is an undefined location
CFD7    E9 96 58                  jmp         0x00012870 
CFDA                          L$1496:
CFDA    0F B6 46 FE               movzx       ax,byte ptr -0x2[bp] 
CFDE    36 3B 06 00 00            cmp         ax,word ptr ss:_cwdrive 
	     CFE5		; The label referred to here is an undefined location
CFE3    0F 85 89 58               jne         0x00012870 
CFE7    36 C6 06 2B 03 01         mov         byte ptr ss:L$1923,0x01 
	     CFEE		; The label referred to here is an undefined location
CFED    E9 80 58                  jmp         0x00012870 
CFF0                          L$1497:
CFF0    36 80 3E 2B 03 00         cmp         byte ptr ss:L$1923,0x00 
	     CFF8		; The label referred to here is an undefined location
CFF6    0F 84 76 58               je          0x00012870 
CFFA    B8 00 00                  mov         ax,seg _diskio_in_progress 
CFFD    8E D8                     mov         ds,ax 
CFFF    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
	     D006		; The label referred to here is an undefined location
D004    0F 85 68 58               jne         0x00012870 
D008    B8 00 00                  mov         ax,offset _cwd 
D00B    8C D2                     mov         dx,ss 
D00D    9A 00 00 00 00            call        chdir_ 
D012    36 C6 06 2B 03 00         mov         byte ptr ss:L$1923,0x00 
	     D019		; The label referred to here is an undefined location
D018    E9 55 58                  jmp         0x00012870 

Routine Size: 193 bytes,    Routine Base: main_TEXT + CF5A

D01B                          con_move_back_:
D01B    53                        push        bx 
D01C    52                        push        dx 
D01D    55                        push        bp 
D01E    31 ED                     xor         bp,bp 
D020    C5 9E 00 00               lds         bx,dword ptr _cursor_col[bp] 
D024    8B 07                     mov         ax,word ptr [bx] 
D026    85 C0                     test        ax,ax 
D028    75 0C                     jne         L$1498 
D02A    C5 9E 00 00               lds         bx,dword ptr _cursor_row[bp] 
D02E    8B 07                     mov         ax,word ptr [bx] 
D030    BA 4F 00                  mov         dx,0x004f 
D033    48                        dec         ax 
D034    EB 0D                     jmp         L$1499 
D036                          L$1498:
D036    8B 9E 00 00               mov         bx,word ptr _cursor_row[bp] 
D03A    89 C2                     mov         dx,ax 
D03C    8E 9E 02 00               mov         ds,word ptr _cursor_row+0x2[bp] 
D040    4A                        dec         dx 
D041    8B 07                     mov         ax,word ptr [bx] 
D043                          L$1499:
D043    0E                        push        cs 
D044    E8 00 00                  call        move_ 
D047    5D                        pop         bp 
D048    5A                        pop         dx 
D049    5B                        pop         bx 
D04A    CB                        retf        
D04B                          con_write_stdin_:
D04B    53                        push        bx 
D04C    51                        push        cx 
D04D    52                        push        dx 
D04E    56                        push        si 
D04F    57                        push        di 
D050    C8 02 00 00               enter       0x0002,0x00 
D054    88 46 FE                  mov         byte ptr -0x2[bp],al 
D057    3C 03                     cmp         al,0x03 
D059    75 13                     jne         L$1500 
D05B    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D060    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D063    C5 77 16                  lds         si,dword ptr 0x16[bx] 
D066    C7 44 26 02 00            mov         word ptr 0x26[si],0x0002 
D06B    E9 C3 00                  jmp         L$1508 
D06E                          L$1500:
D06E    3C 13                     cmp         al,0x13 
D070    75 24                     jne         L$1502 
D072    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D077    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D07A    C5 77 16                  lds         si,dword ptr 0x16[bx] 
D07D    C7 44 26 17 00            mov         word ptr 0x26[si],0x0017 
D082    BB 21 08                  mov         bx,offset DGROUP:L$1884 
D085                          L$1501:
D085    36 A1 00 00               mov         ax,word ptr ss:_running_console 
D089    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
D08E    8C D1                     mov         cx,ss 
D090    E8 00 00                  call        vpuconsole_printtxt_ 
D093    E9 9B 00                  jmp         L$1508 
D096                          L$1502:
D096    3C 11                     cmp         al,0x11 
D098    75 15                     jne         L$1503 
D09A    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
D09F    C5 77 3A                  lds         si,dword ptr 0x3a[bx] 
D0A2    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
D0A5    C7 47 26 19 00            mov         word ptr 0x26[bx],0x0019 
D0AA    BB 24 08                  mov         bx,offset DGROUP:L$1885 
D0AD    EB D6                     jmp         L$1501 
D0AF                          L$1503:
D0AF    3C 1A                     cmp         al,0x1a 
D0B1    75 15                     jne         L$1504 
D0B3    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
D0B8    C5 77 3A                  lds         si,dword ptr 0x3a[bx] 
D0BB    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
D0BE    C7 47 26 18 00            mov         word ptr 0x26[bx],0x0018 
D0C3    BB 27 08                  mov         bx,offset DGROUP:L$1886 
D0C6    EB BD                     jmp         L$1501 
D0C8                          L$1504:
D0C8    3C 04                     cmp         al,0x04 
D0CA    75 11                     jne         L$1505 
D0CC    BB 2A 08                  mov         bx,offset DGROUP:L$1887 
D0CF    36 A1 00 00               mov         ax,word ptr ss:_running_console 
D0D3    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
D0D8    8C D1                     mov         cx,ss 
D0DA    E8 00 00                  call        vpuconsole_printtxt_ 
D0DD                          L$1505:
D0DD    80 7E FE 08               cmp         byte ptr -0x2[bp],0x08 
D0E1    75 5E                     jne         L$1512 
D0E3    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D0E8    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D0EB    8A 47 0F                  mov         al,byte ptr 0xf[bx] 
D0EE    A8 02                     test        al,0x02 
D0F0    75 47                     jne         L$1511 
D0F2    83 BF D8 06 00            cmp         word ptr 0x6d8[bx],0x0000 
D0F7    74 38                     je          L$1508 
D0F9    A8 01                     test        al,0x01 
D0FB    75 10                     jne         L$1506 
D0FD    0E                        push        cs 
D0FE    E8 00 00                  call        con_move_back_ 
D101    36 A1 00 00               mov         ax,word ptr ss:_running_console 
D105    36 8B 16 02 00            mov         dx,word ptr ss:_running_console+0x2 
D10A    E8 00 00                  call        vpuconsole_clearchar_ 
D10D                          L$1506:
D10D    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D112    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D115    FF 8F D8 06               dec         word ptr 0x6d8[bx] 
D119    36 C4 36 00 00            les         si,dword ptr ss:_running_console 
D11E    26 C4 7C 3A               les         di,dword ptr es:0x3a[si] 
D122    26 C4 95 C0 06            les         dx,dword ptr es:0x6c0[di] 
D127    8B 9F D8 06               mov         bx,word ptr 0x6d8[bx] 
D12B    01 D3                     add         bx,dx 
D12D                          L$1507:
D12D    26 C6 07 00               mov         byte ptr es:[bx],0x00 
D131                          L$1508:
D131    31 C0                     xor         ax,ax 
D133                          L$1509:
D133    C9                        leave       
D134    5F                        pop         di 
D135                          L$1510:
D135    5E                        pop         si 
	     D137		; The label referred to here is an undefined location
D136    E9 69 72                  jmp         0x000143a2 
D139                          L$1511:
D139    A8 01                     test        al,0x01 
D13B    75 04                     jne         L$1512 
D13D    0E                        push        cs 
D13E    E8 00 00                  call        con_move_back_ 
D141                          L$1512:
D141    80 7E FE 0D               cmp         byte ptr -0x2[bp],0x0d 
D145    75 04                     jne         L$1513 
D147    C6 46 FE 0A               mov         byte ptr -0x2[bp],0x0a 
D14B                          L$1513:
D14B    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D150    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D153    8B 87 D8 06               mov         ax,word ptr 0x6d8[bx] 
D157    89 C2                     mov         dx,ax 
D159    42                        inc         dx 
D15A    89 97 D8 06               mov         word ptr 0x6d8[bx],dx 
D15E    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D163    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D166    C5 97 C0 06               lds         dx,dword ptr 0x6c0[bx] 
D16A    89 D3                     mov         bx,dx 
D16C    01 C3                     add         bx,ax 
D16E    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
D171    88 07                     mov         byte ptr [bx],al 
D173    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D178    C4 5C 3A                  les         bx,dword ptr 0x3a[si] 
D17B    26 F6 47 0F 01            test        byte ptr es:0xf[bx],0x01 
D180    75 1B                     jne         L$1515 
D182    3C 0A                     cmp         al,0x0a 
D184    75 09                     jne         L$1514 
D186    89 F0                     mov         ax,si 
D188    8C DA                     mov         dx,ds 
D18A    E8 00 00                  call        vpuconsole_incrow_ 
D18D    EB 0E                     jmp         L$1515 
D18F                          L$1514:
D18F    3C 08                     cmp         al,0x08 
D191    74 0A                     je          L$1515 
D193    0F B6 D8                  movzx       bx,al 
D196    8C DA                     mov         dx,ds 
D198    89 F0                     mov         ax,si 
D19A    E8 00 00                  call        vpuconsole_printchar_ 
D19D                          L$1515:
D19D    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D1A2    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D1A5    8B 87 C4 06               mov         ax,word ptr 0x6c4[bx] 
D1A9    48                        dec         ax 
D1AA    3B 87 D8 06               cmp         ax,word ptr 0x6d8[bx] 
D1AE    75 45                     jne         L$1517 
D1B0    83 87 C4 06 20            add         word ptr 0x6c4[bx],0x0020 
D1B5    36 8B 36 00 00            mov         si,word ptr ss:_running_console 
D1BA    8B 87 C4 06               mov         ax,word ptr 0x6c4[bx] 
D1BE    36 8E 1E 02 00            mov         ds,word ptr ss:_running_console+0x2 
D1C3    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D1C6    8B B7 C0 06               mov         si,word ptr 0x6c0[bx] 
D1CA    8B 97 C2 06               mov         dx,word ptr 0x6c2[bx] 
D1CE    89 C3                     mov         bx,ax 
D1D0    89 F0                     mov         ax,si 
D1D2    9A 00 00 00 00            call        realloc_ 
D1D7    85 D2                     test        dx,dx 
D1D9    75 0A                     jne         L$1516 
D1DB    85 C0                     test        ax,ax 
D1DD    75 06                     jne         L$1516 
D1DF    B8 FF FF                  mov         ax,0xffff 
D1E2    E9 4E FF                  jmp         L$1509 
D1E5                          L$1516:
D1E5    36 C5 1E 00 00            lds         bx,dword ptr ss:_running_console 
D1EA    C5 77 3A                  lds         si,dword ptr 0x3a[bx] 
D1ED    89 84 C0 06               mov         word ptr 0x6c0[si],ax 
D1F1    89 94 C2 06               mov         word ptr 0x6c2[si],dx 
D1F5                          L$1517:
D1F5    36 C5 36 00 00            lds         si,dword ptr ss:_running_console 
D1FA    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D1FD    C4 87 C0 06               les         ax,dword ptr 0x6c0[bx] 
D201    8B 9F D8 06               mov         bx,word ptr 0x6d8[bx] 
D205    01 C3                     add         bx,ax 
D207    E9 23 FF                  jmp         L$1507 

Routine Size: 495 bytes,    Routine Base: main_TEXT + D01B

D20A                          vpuconsole_program_:
D20A    51                        push        cx 
D20B    56                        push        si 
D20C    57                        push        di 
D20D    C8 0E 00 00               enter       0x000e,0x00 
D211    89 C7                     mov         di,ax 
D213    89 56 FC                  mov         word ptr -0x4[bp],dx 
D216    89 D9                     mov         cx,bx 
D218    8E DA                     mov         ds,dx 
D21A    8B 45 3C                  mov         ax,word ptr 0x3c[di] 
D21D    8B 75 3A                  mov         si,word ptr 0x3a[di] 
D220    8E D8                     mov         ds,ax 
D222    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
D225    89 46 FE                  mov         word ptr -0x2[bp],ax 
D228    8B 47 48                  mov         ax,word ptr 0x48[bx] 
D22B    8B 57 4A                  mov         dx,word ptr 0x4a[bx] 
D22E    36 A3 00 00               mov         word ptr ss:_data,ax 
D232    36 89 16 02 00            mov         word ptr ss:_data+0x2,dx 
D237    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D23A    8A 84 BC 06               mov         al,byte ptr 0x6bc[si] 
D23E    36 A2 00 00               mov         byte ptr ss:_SCR_ROWS,al 
D242    36 89 3E 00 00            mov         word ptr ss:_running_console,di 
D247    36 89 36 00 00            mov         word ptr ss:_cursor_row,si 
D24C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
D24F    36 8C 1E 02 00            mov         word ptr ss:_cursor_row+0x2,ds 
D254    36 A3 02 00               mov         word ptr ss:_running_console+0x2,ax 
D258    8D 44 02                  lea         ax,0x2[si] 
D25B    36 8C 1E 02 00            mov         word ptr ss:_cursor_col+0x2,ds 
D260    89 C3                     mov         bx,ax 
D262    36 A3 00 00               mov         word ptr ss:_cursor_col,ax 
D266    8B 17                     mov         dx,word ptr [bx] 
D268    8B 04                     mov         ax,word ptr [si] 
D26A    31 DB                     xor         bx,bx 
D26C    0E                        push        cs 
D26D    E8 00 00                  call        vpucon_caret_ 
D270    F6 C5 80                  test        ch,0x80 
D273    74 45                     je          L$1520 
D275    80 E5 7F                  and         ch,0x7f 
D278    83 F9 02                  cmp         cx,0x0002 
D27B    74 20                     je          L$1518 
D27D    83 F9 01                  cmp         cx,0x0001 
D280    75 38                     jne         L$1520 
D282    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D285    8B 44 0E                  mov         ax,word ptr 0xe[si] 
D288    C1 E8 08                  shr         ax,0x08 
D28B    25 01 00                  and         ax,0x0001 
D28E    F7 D0                     not         ax 
D290    30 E4                     xor         ah,ah 
D292    24 01                     and         al,0x01 
D294    80 64 0F FE               and         byte ptr 0xf[si],0xfe 
D298    C1 E0 08                  shl         ax,0x08 
D29B    EB 1A                     jmp         L$1519 
D29D                          L$1518:
D29D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D2A0    8B 44 0E                  mov         ax,word ptr 0xe[si] 
D2A3    C1 E8 09                  shr         ax,0x09 
D2A6    30 E4                     xor         ah,ah 
D2A8    24 01                     and         al,0x01 
D2AA    F7 D0                     not         ax 
D2AC    30 E4                     xor         ah,ah 
D2AE    24 01                     and         al,0x01 
D2B0    80 64 0F FD               and         byte ptr 0xf[si],0xfd 
D2B4    C1 E0 09                  shl         ax,0x09 
D2B7                          L$1519:
D2B7    09 44 0E                  or          word ptr 0xe[si],ax 
D2BA                          L$1520:
D2BA    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D2BD    8B 44 0E                  mov         ax,word ptr 0xe[si] 
D2C0    30 E4                     xor         ah,ah 
D2C2    24 0C                     and         al,0x0c 
D2C4    3D 0C 00                  cmp         ax,0x000c 
D2C7    0F 84 AA 00               je          L$1522 
D2CB    8B 44 10                  mov         ax,word ptr 0x10[si] 
D2CE    36 A3 00 00               mov         word ptr ss:_symbol_count,ax 
D2D2    8B 84 BE 06               mov         ax,word ptr 0x6be[si] 
D2D6    36 A3 00 00               mov         word ptr ss:_line_num,ax 
D2DA    8B 44 26                  mov         ax,word ptr 0x26[si] 
D2DD    36 A3 00 00               mov         word ptr ss:_datap_segment,ax 
D2E1    8B 44 28                  mov         ax,word ptr 0x28[si] 
D2E4    36 A3 00 00               mov         word ptr ss:_datap_offset,ax 
D2E8    8B 44 0E                  mov         ax,word ptr 0xe[si] 
D2EB    C1 E8 05                  shr         ax,0x05 
D2EE    24 01                     and         al,0x01 
D2F0    36 A2 00 00               mov         byte ptr ss:_debug,al 
D2F4    8B 44 1E                  mov         ax,word ptr 0x1e[si] 
D2F7    8B 54 20                  mov         dx,word ptr 0x20[si] 
D2FA    36 A3 00 00               mov         word ptr ss:_symbols,ax 
D2FE    36 89 16 02 00            mov         word ptr ss:_symbols+0x2,dx 
D303    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
D306    F6 87 8A 01 08            test        byte ptr 0x18a[bx],0x08 
D30B    74 51                     je          L$1521 
D30D    FF 77 02                  push        word ptr 0x2[bx] 
D310    16                        push        ss 
D311    68 2D 08                  push        offset DGROUP:L$1888 
D314    66 36 FF 36 00 00         push        dword ptr ss:_message 
D31A    9A 00 00 00 00            call        sprintf_ 
D31F    36 8B 1E 00 00            mov         bx,word ptr ss:_message 
D324    36 A1 00 00               mov         ax,word ptr ss:_running_console 
D328    36 8B 0E 02 00            mov         cx,word ptr ss:_message+0x2 
D32D    89 46 F6                  mov         word ptr -0xa[bp],ax 
D330    36 A1 02 00               mov         ax,word ptr ss:_running_console+0x2 
D334    83 C4 0A                  add         sp,0x000a 
D337    89 46 F2                  mov         word ptr -0xe[bp],ax 
D33A    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
D33D    8B 56 F2                  mov         dx,word ptr -0xe[bp] 
D340    E8 00 00                  call        vpuconsole_printtxt_ 
D343    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
D346    8B 56 F2                  mov         dx,word ptr -0xe[bp] 
D349    E8 00 00                  call        vpuconsole_incrow_ 
D34C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D34F    C5 5C 16                  lds         bx,dword ptr 0x16[si] 
D352    80 A7 8A 01 F7            and         byte ptr 0x18a[bx],0xf7 
D357    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D35A    80 64 0E F3               and         byte ptr 0xe[si],0xf3 
D35E                          L$1521:
D35E    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D361    F6 44 0E 03               test        byte ptr 0xe[si],0x03 
D365    0F 85 81 00               jne         L$1526 
D369    8B 44 0E                  mov         ax,word ptr 0xe[si] 
D36C    30 E4                     xor         ah,ah 
D36E    24 0C                     and         al,0x0c 
D370    3D 0C 00                  cmp         ax,0x000c 
D373    75 26                     jne         L$1523 
D375                          L$1522:
D375    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D378    8B 44 16                  mov         ax,word ptr 0x16[si] 
D37B    8B 54 18                  mov         dx,word ptr 0x18[si] 
D37E    9A 00 00 00 00            call        vpu_run_ 
D383    3C 02                     cmp         al,0x02 
D385    0F 84 20 01               je          L$1532 
D389    3C 01                     cmp         al,0x01 
D38B    0F 85 A7 00               jne         L$1528 
D38F    B8 48 08                  mov         ax,offset DGROUP:L$1889 
D392    8C D2                     mov         dx,ss 
D394    0E                        push        cs 
D395    E8 00 00                  call        show_error_msg_ 
D398    E9 0E 01                  jmp         L$1532 
D39B                          L$1523:
D39B    3D 08 00                  cmp         ax,0x0008 
D39E    75 1C                     jne         L$1524 
D3A0    89 F0                     mov         ax,si 
D3A2    8C DA                     mov         dx,ds 
D3A4    9A 00 00 00 00            call        vpu_run_program_ 
D3A9    84 C0                     test        al,al 
D3AB    74 46                     je          L$1527 
D3AD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D3B0    80 64 0E F3               and         byte ptr 0xe[si],0xf3 
D3B4    36 C6 06 00 00 00         mov         byte ptr ss:_pass,0x00 
D3BA    EB 37                     jmp         L$1527 
D3BC                          L$1524:
D3BC    3D 04 00                  cmp         ax,0x0004 
D3BF    75 18                     jne         L$1525 
D3C1    89 F0                     mov         ax,si 
D3C3    8C DA                     mov         dx,ds 
D3C5    9A 00 00 00 00            call        vpu_run_program_ 
D3CA    36 C6 06 00 00 00         mov         byte ptr ss:_pass,0x00 
D3D0    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D3D3    80 64 0E F3               and         byte ptr 0xe[si],0xf3 
D3D7    EB 1A                     jmp         L$1527 
D3D9                          L$1525:
D3D9    89 F0                     mov         ax,si 
D3DB    8C DA                     mov         dx,ds 
D3DD    9A 00 00 00 00            call        commandline_ 
D3E2    84 C0                     test        al,al 
D3E4    0F 84 C1 00               je          L$1532 
D3E8    EB 09                     jmp         L$1527 
D3EA                          L$1526:
D3EA    89 F0                     mov         ax,si 
D3EC    8C DA                     mov         dx,ds 
D3EE    9A 00 00 00 00            call        code_editor_ 
D3F3                          L$1527:
D3F3    36 A1 00 00               mov         ax,word ptr ss:_line_num 
D3F7    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D3FA    89 84 BE 06               mov         word ptr 0x6be[si],ax 
D3FE    36 A1 00 00               mov         ax,word ptr ss:_symbol_count 
D402    89 44 10                  mov         word ptr 0x10[si],ax 
D405    36 A1 00 00               mov         ax,word ptr ss:_datap_segment 
D409    89 44 26                  mov         word ptr 0x26[si],ax 
D40C    36 A1 00 00               mov         ax,word ptr ss:_datap_offset 
D410    89 44 28                  mov         word ptr 0x28[si],ax 
D413    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_debug 
D419    30 E4                     xor         ah,ah 
D41B    24 01                     and         al,0x01 
D41D    80 64 0E DF               and         byte ptr 0xe[si],0xdf 
D421    C1 E0 05                  shl         ax,0x05 
D424    09 44 0E                  or          word ptr 0xe[si],ax 
D427    36 A1 00 00               mov         ax,word ptr ss:_symbols 
D42B    36 8B 16 02 00            mov         dx,word ptr ss:_symbols+0x2 
D430    89 44 1E                  mov         word ptr 0x1e[si],ax 
D433    89 54 20                  mov         word ptr 0x20[si],dx 
D436                          L$1528:
D436    31 C0                     xor         ax,ax 
D438    31 D2                     xor         dx,dx 
D43A    0E                        push        cs 
D43B    E8 00 00                  call        vpu_cwd_ 
D43E    83 7E 0E 00               cmp         word ptr 0xe[bp],0x0000 
D442    75 06                     jne         L$1529 
D444    83 7E 0C 00               cmp         word ptr 0xc[bp],0x0000 
D448    74 57                     je          L$1531 
D44A                          L$1529:
D44A    8B 5E 0C                  mov         bx,word ptr 0xc[bp] 
D44D    8B 4E 0E                  mov         cx,word ptr 0xe[bp] 
D450    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
D453    89 F8                     mov         ax,di 
D455    E8 00 00                  call        vpuconsole_keypress_ 
D458    C5 5E 0C                  lds         bx,dword ptr 0xc[bp] 
D45B    C7 07 FF FF               mov         word ptr [bx],0xffff 
D45F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D462    F6 44 0E 0C               test        byte ptr 0xe[si],0x0c 
D466    74 39                     je          L$1531 
D468                          L$1530:
D468    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D46B    83 7C 12 00               cmp         word ptr 0x12[si],0x0000 
D46F    7C 30                     jl          L$1531 
D471    0E                        push        cs 
D472    E8 00 00                  call        vpuconsole_getch_ 
D475    30 E4                     xor         ah,ah 
D477    E8 00 00                  call        con_write_stdin_ 
D47A    85 C0                     test        ax,ax 
D47C    74 EA                     je          L$1530 
D47E    BB 00 00                  mov         bx,offset _outofmemory 
D481    36 A1 02 00               mov         ax,word ptr ss:_running_console+0x2 
D485    36 8B 3E 00 00            mov         di,word ptr ss:_running_console 
D48A    89 46 F8                  mov         word ptr -0x8[bp],ax 
D48D    8C D1                     mov         cx,ss 
D48F    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
D492    89 F8                     mov         ax,di 
D494    E8 00 00                  call        vpuconsole_printtxt_ 
D497    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
D49A    89 F8                     mov         ax,di 
D49C    E8 00 00                  call        vpuconsole_incrow_ 
D49F    EB C7                     jmp         L$1530 
D4A1                          L$1531:
D4A1    C7 46 F4 FF 7F            mov         word ptr -0xc[bp],0x7fff 
D4A6    E9 E5 00                  jmp         L$1539 
D4A9                          L$1532:
D4A9    31 C0                     xor         ax,ax 
D4AB    31 D2                     xor         dx,dx 
D4AD    0E                        push        cs 
D4AE    E8 00 00                  call        vpu_cwd_ 
D4B1    36 A1 00 00               mov         ax,word ptr ss:_window_count 
D4B5    89 C3                     mov         bx,ax 
D4B7    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
D4BC    C1 E3 02                  shl         bx,0x02 
D4BF                          L$1533:
D4BF    48                        dec         ax 
D4C0    83 EB 04                  sub         bx,0x0004 
D4C3    3D FF FF                  cmp         ax,0xffff 
D4C6    74 38                     je          L$1534 
D4C8    36 8B 3E 00 00            mov         di,word ptr ss:_running_console 
D4CD    36 8B 36 00 00            mov         si,word ptr ss:_windows 
D4D2    89 7E FA                  mov         word ptr -0x6[bp],di 
D4D5    01 DE                     add         si,bx 
D4D7    36 8B 3E 02 00            mov         di,word ptr ss:_running_console+0x2 
D4DC    8B 54 02                  mov         dx,word ptr 0x2[si] 
D4DF    8B 0C                     mov         cx,word ptr [si] 
D4E1    39 FA                     cmp         dx,di 
D4E3    75 DA                     jne         L$1533 
D4E5    3B 4E FA                  cmp         cx,word ptr -0x6[bp] 
D4E8    75 D5                     jne         L$1533 
D4EA    C7 46 F4 02 00            mov         word ptr -0xc[bp],0x0002 
D4EF    89 CB                     mov         bx,cx 
D4F1    8E DA                     mov         ds,dx 
D4F3    31 D2                     xor         dx,dx 
D4F5    80 67 16 DF               and         byte ptr 0x16[bx],0xdf 
D4F9    0E                        push        cs 
D4FA    E8 00 00                  call        set_active_window_ 
D4FD    E9 8E 00                  jmp         L$1539 
D500                          L$1534:
D500    B8 04 00                  mov         ax,0x0004 
D503    BB C0 02                  mov         bx,0x02c0 
D506    36 8B 16 02 00            mov         dx,word ptr ss:_ttys+0x2 
D50B    36 8B 3E 00 00            mov         di,word ptr ss:_running_console 
D510                          L$1535:
D510    48                        dec         ax 
D511    81 EB B0 00               sub         bx,0x00b0 
D515    3D FF FF                  cmp         ax,0xffff 
D518    74 74                     je          L$1539 
D51A    36 8B 36 00 00            mov         si,word ptr ss:_ttys 
D51F    01 DE                     add         si,bx 
D521    8D 4C 6A                  lea         cx,0x6a[si] 
D524    8E DA                     mov         ds,dx 
D526    89 4E FA                  mov         word ptr -0x6[bp],cx 
D529    36 8B 0E 02 00            mov         cx,word ptr ss:_running_console+0x2 
D52E    39 CA                     cmp         dx,cx 
D530    75 DE                     jne         L$1535 
D532    3B 7E FA                  cmp         di,word ptr -0x6[bp] 
D535    75 D9                     jne         L$1535 
D537    80 64 68 FE               and         byte ptr 0x68[si],0xfe 
D53B    36 0F B6 16 00 00         movzx       dx,byte ptr ss:_tty 
D541    4A                        dec         dx 
D542    39 C2                     cmp         dx,ax 
D544    75 06                     jne         L$1536 
D546    36 C6 06 00 00 00         mov         byte ptr ss:_new_tty,0x00 
D54C                          L$1536:
D54C    BE 64 00                  mov         si,0x0064 
D54F    69 C8 B0 00               imul        cx,ax,0x00b0 
D553                          L$1537:
D553    83 EE 04                  sub         si,0x0004 
D556    83 FE FC                  cmp         si,0xfffc 
D559    74 1A                     je          L$1538 
D55B    36 8B 1E 00 00            mov         bx,word ptr ss:_ttys 
D560    01 CB                     add         bx,cx 
D562    36 8E 1E 02 00            mov         ds,word ptr ss:_ttys+0x2 
D567    01 F3                     add         bx,si 
D569    8B 07                     mov         ax,word ptr [bx] 
D56B    8B 57 02                  mov         dx,word ptr 0x2[bx] 
D56E    9A 00 00 00 00            call        free_ 
D573    EB DE                     jmp         L$1537 
D575                          L$1538:
D575    36 C5 36 00 00            lds         si,dword ptr ss:_ttys 
D57A    01 CE                     add         si,cx 
D57C    8B 84 A4 00               mov         ax,word ptr 0xa4[si] 
D580    8B 94 A6 00               mov         dx,word ptr 0xa6[si] 
D584    C7 46 F4 00 00            mov         word ptr -0xc[bp],0x0000 
D589    9A 00 00 00 00            call        delete_console_ 
D58E                          L$1539:
D58E    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
D591    E9 69 B7                  jmp         L$1061 
D594                          init_vpuconsole_window_:
D594    53                        push        bx 
D595    51                        push        cx 
D596    56                        push        si 
D597    57                        push        di 
D598    C8 5C 00 00               enter       0x005c,0x00 
D59C    50                        push        ax 
D59D    52                        push        dx 
D59E    36 A1 00 00               mov         ax,word ptr ss:_running_console 
D5A2    89 46 F6                  mov         word ptr -0xa[bp],ax 
D5A5    36 A1 02 00               mov         ax,word ptr ss:_running_console+0x2 
D5A9    36 0F B6 3E 00 00         movzx       di,byte ptr ss:_VPUCON_LINES 
D5AF    89 46 F8                  mov         word ptr -0x8[bp],ax 
D5B2    85 D2                     test        dx,dx 
D5B4    75 0D                     jne         L$1540 
D5B6    83 7E A2 00               cmp         word ptr -0x5e[bp],0x0000 
D5BA    75 07                     jne         L$1540 
D5BC    B9 00 00                  mov         cx,offset _vpuconsole_window_title 
D5BF    8C D6                     mov         si,ss 
D5C1    EB 05                     jmp         L$1541 
D5C3                          L$1540:
D5C3    8B 4E A2                  mov         cx,word ptr -0x5e[bp] 
D5C6    89 D6                     mov         si,dx 
D5C8                          L$1541:
D5C8    BB 50 00                  mov         bx,0x0050 
D5CB    8D 46 A4                  lea         ax,-0x5c[bp] 
D5CE    8C D2                     mov         dx,ss 
D5D0    9A 00 00 00 00            call        getcwd_ 
D5D5    B8 00 00                  mov         ax,offset _cwd 
D5D8    8C D2                     mov         dx,ss 
D5DA    9A 00 00 00 00            call        chdir_ 
D5DF    8D 46 A4                  lea         ax,-0x5c[bp] 
D5E2    8C D2                     mov         dx,ss 
D5E4    9A 00 00 00 00            call        chdir_ 
D5E9    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
D5EF    0F 85 92 01               jne         L$1556 
D5F3    68 00 00                  push        seg vpuconsole_program_ 
D5F6    68 00 00                  push        offset vpuconsole_program_ 
D5F9    16                        push        ss 
D5FA    68 4F 08                  push        offset DGROUP:L$1890 
D5FD    6A 01                     push        0x0001 
D5FF    6A 00                     push        0x0000 
D601    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
D607    56                        push        si 
D608    40                        inc         ax 
D609    40                        inc         ax 
D60A    51                        push        cx 
D60B    36 0F B6 0E 00 00         movzx       cx,byte ptr ss:_VPUCON_LINES 
D611    0F AF C8                  imul        cx,ax 
D614    BB 85 02                  mov         bx,0x0285 
D617    BA FF FF                  mov         dx,0xffff 
D61A    83 C1 03                  add         cx,0x0003 
D61D    31 C0                     xor         ax,ax 
D61F    0E                        push        cs 
D620    E8 00 00                  call        new_window_ 
D623    89 C6                     mov         si,ax 
D625    89 56 FE                  mov         word ptr -0x2[bp],dx 
D628    85 D2                     test        dx,dx 
D62A    75 0F                     jne         L$1544 
D62C    85 C0                     test        ax,ax 
D62E    75 0B                     jne         L$1544 
D630                          L$1542:
D630    0E                        push        cs 
D631    E8 00 00                  call        nomemory_ 
D634                          L$1543:
D634    31 C0                     xor         ax,ax 
D636    31 D2                     xor         dx,dx 
D638    E9 4F B9                  jmp         L$1094 
D63B                          L$1544:
D63B    BA 04 00                  mov         dx,0x0004 
D63E    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_VPUCON_LINES 
D644    9A 00 00 00 00            call        calloc_ 
D649    89 46 FA                  mov         word ptr -0x6[bp],ax 
D64C    89 56 FC                  mov         word ptr -0x4[bp],dx 
D64F    85 D2                     test        dx,dx 
D651    75 06                     jne         L$1545 
D653    85 C0                     test        ax,ax 
D655    0F 84 A6 00               je          L$1551 
D659                          L$1545:
D659    89 FB                     mov         bx,di 
D65B    C1 E3 02                  shl         bx,0x02 
D65E    89 D1                     mov         cx,dx 
D660    01 C3                     add         bx,ax 
D662                          L$1546:
D662    4F                        dec         di 
D663    83 C3 FC                  add         bx,0xfffc 
D666    83 FF FF                  cmp         di,0xffff 
D669    74 55                     je          L$1550 
D66B    BA 01 00                  mov         dx,0x0001 
D66E    B8 51 00                  mov         ax,0x0051 
D671    9A 00 00 00 00            call        calloc_ 
D676    8E D9                     mov         ds,cx 
D678    89 07                     mov         word ptr [bx],ax 
D67A    89 57 02                  mov         word ptr 0x2[bx],dx 
D67D    8B 47 02                  mov         ax,word ptr 0x2[bx] 
D680    8B 17                     mov         dx,word ptr [bx] 
D682    85 C0                     test        ax,ax 
D684    75 DC                     jne         L$1546 
D686    85 D2                     test        dx,dx 
D688    75 D8                     jne         L$1546 
D68A                          L$1547:
D68A    89 F8                     mov         ax,di 
D68C    8B 5E FA                  mov         bx,word ptr -0x6[bp] 
D68F    C1 E0 02                  shl         ax,0x02 
D692    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
D695    01 C3                     add         bx,ax 
D697                          L$1548:
D697    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_VPUCON_LINES 
D69D    47                        inc         di 
D69E    83 C3 04                  add         bx,0x0004 
D6A1    39 C7                     cmp         di,ax 
D6A3    73 0E                     jae         L$1549 
D6A5    8E D9                     mov         ds,cx 
D6A7    8B 07                     mov         ax,word ptr [bx] 
D6A9    8B 57 02                  mov         dx,word ptr 0x2[bx] 
D6AC    9A 00 00 00 00            call        free_ 
D6B1    EB E4                     jmp         L$1548 
D6B3                          L$1549:
D6B3    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
D6B6    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
D6B9    9A 00 00 00 00            call        free_ 
D6BE    EB 3F                     jmp         L$1551 
D6C0                          L$1550:
D6C0    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_VPUCON_LINES 
D6C6    50                        push        ax 
D6C7    36 0F B6 06 00 00         movzx       ax,byte ptr ss:__FONT_HEIGHT 
D6CD    36 0F B6 16 00 00         movzx       dx,byte ptr ss:_VPUCON_LINES 
D6D3    40                        inc         ax 
D6D4    40                        inc         ax 
D6D5    0F AF C2                  imul        ax,dx 
D6D8    FF 76 FC                  push        word ptr -0x4[bp] 
D6DB    B9 01 00                  mov         cx,0x0001 
D6DE    FF 76 FA                  push        word ptr -0x6[bp] 
D6E1    40                        inc         ax 
D6E2    89 CB                     mov         bx,cx 
D6E4    50                        push        ax 
D6E5    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
D6E8    68 83 02                  push        0x0283 
D6EB    89 F0                     mov         ax,si 
D6ED    0E                        push        cs 
D6EE    E8 00 00                  call        window_list_ 
D6F1    89 C3                     mov         bx,ax 
D6F3    89 D1                     mov         cx,dx 
D6F5    85 D2                     test        dx,dx 
D6F7    75 12                     jne         L$1552 
D6F9    85 C0                     test        ax,ax 
D6FB    74 8D                     je          L$1547 
D6FD    EB 0C                     jmp         L$1552 
D6FF                          L$1551:
D6FF    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
D702    89 F0                     mov         ax,si 
D704    0E                        push        cs 
D705    E8 00 00                  call        del_window_ 
D708    E9 25 FF                  jmp         L$1542 
D70B                          L$1552:
D70B    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
D70E    8B 56 FC                  mov         dx,word ptr -0x4[bp] 
D711    9A 00 00 00 00            call        free_ 
D716    B8 60 08                  mov         ax,offset DGROUP:L$1891 
D719    8E D9                     mov         ds,cx 
D71B    8C D2                     mov         dx,ss 
D71D    80 67 02 F3               and         byte ptr 0x2[bx],0xf3 
D721    31 C9                     xor         cx,cx 
D723    80 4F 02 08               or          byte ptr 0x2[bx],0x08 
D727    31 DB                     xor         bx,bx 
D729    0E                        push        cs 
D72A    E8 00 00                  call        new_menu_ 
D72D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D730    89 44 1C                  mov         word ptr 0x1c[si],ax 
D733    89 54 1E                  mov         word ptr 0x1e[si],dx 
D736    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
D739    85 D2                     test        dx,dx 
D73B    75 04                     jne         L$1553 
D73D    85 C0                     test        ax,ax 
D73F    74 BE                     je          L$1551 
D741                          L$1553:
D741    68 01 80                  push        0x8001 
D744    BB 65 08                  mov         bx,offset DGROUP:L$1892 
D747    8C D1                     mov         cx,ss 
D749    0E                        push        cs 
D74A    E8 00 00                  call        new_menuitem_ 
D74D    85 D2                     test        dx,dx 
D74F    75 04                     jne         L$1554 
D751    85 C0                     test        ax,ax 
D753    74 AA                     je          L$1551 
D755                          L$1554:
D755    68 02 80                  push        0x8002 
D758    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D75B    BB 70 08                  mov         bx,offset DGROUP:L$1893 
D75E    8C D1                     mov         cx,ss 
D760    8B 44 1C                  mov         ax,word ptr 0x1c[si] 
D763    8B 54 1E                  mov         dx,word ptr 0x1e[si] 
D766    0E                        push        cs 
D767    E8 00 00                  call        new_menuitem_ 
D76A    85 D2                     test        dx,dx 
D76C    75 04                     jne         L$1555 
D76E    85 C0                     test        ax,ax 
D770    74 8D                     je          L$1551 
D772                          L$1555:
D772    E8 00 00                  call        draw_menubar_ 
D775    B9 01 00                  mov         cx,0x0001 
D778    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
D77B    89 F0                     mov         ax,si 
D77D    89 CB                     mov         bx,cx 
D77F    0E                        push        cs 
D780    E8 00 00                  call        draw_window_ 
D783    EB 1D                     jmp         L$1557 
D785                          L$1556:
D785    36 0F B6 36 00 00         movzx       si,byte ptr ss:_tty 
D78B    4E                        dec         si 
D78C    69 F6 B0 00               imul        si,0x00b0 
D790    36 8B 16 00 00            mov         dx,word ptr ss:_ttys 
D795    36 8B 1E 02 00            mov         bx,word ptr ss:_ttys+0x2 
D79A    01 D6                     add         si,dx 
D79C    89 5E FE                  mov         word ptr -0x2[bp],bx 
D79F    83 C6 6A                  add         si,0x006a 
D7A2                          L$1557:
D7A2    BA DE 06                  mov         dx,0x06de 
D7A5    B8 01 00                  mov         ax,0x0001 
D7A8    9A 00 00 00 00            call        calloc_ 
D7AD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D7B0    89 44 3A                  mov         word ptr 0x3a[si],ax 
D7B3    89 54 3C                  mov         word ptr 0x3c[si],dx 
D7B6    89 D0                     mov         ax,dx 
D7B8    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
D7BB    85 D2                     test        dx,dx 
D7BD    75 06                     jne         L$1558 
D7BF    85 DB                     test        bx,bx 
D7C1    0F 84 3A FF               je          L$1551 
D7C5                          L$1558:
D7C5    8E DA                     mov         ds,dx 
D7C7    C7 47 12 FF FF            mov         word ptr 0x12[bx],0xffff 
D7CC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D7CF    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D7D2    C7 47 14 FF FF            mov         word ptr 0x14[bx],0xffff 
D7D7    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
D7DD    75 25                     jne         L$1559 
D7DF    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D7E2    C5 7C 18                  lds         di,dword ptr 0x18[si] 
D7E5    C5 1D                     lds         bx,dword ptr [di] 
D7E7    8E 46 FE                  mov         es,word ptr -0x2[bp] 
D7EA    26 8B 7C 3A               mov         di,word ptr es:0x3a[si] 
D7EE    26 8B 4C 3C               mov         cx,word ptr es:0x3c[si] 
D7F2    8B 57 14                  mov         dx,word ptr 0x14[bx] 
D7F5    8B 47 16                  mov         ax,word ptr 0x16[bx] 
D7F8    8E D9                     mov         ds,cx 
D7FA    89 95 DA 06               mov         word ptr 0x6da[di],dx 
D7FE    89 85 DC 06               mov         word ptr 0x6dc[di],ax 
D802    EB 24                     jmp         L$1560 
D804                          L$1559:
D804    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_tty 
D80A    48                        dec         ax 
D80B    69 D8 B0 00               imul        bx,ax,0x00b0 
D80F    36 8B 16 02 00            mov         dx,word ptr ss:_ttys+0x2 
D814    36 A1 00 00               mov         ax,word ptr ss:_ttys 
D818    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D81B    01 D8                     add         ax,bx 
D81D    C5 5C 3A                  lds         bx,dword ptr 0x3a[si] 
D820    89 87 DA 06               mov         word ptr 0x6da[bx],ax 
D824    89 97 DC 06               mov         word ptr 0x6dc[bx],dx 
D828                          L$1560:
D828    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
D82B    8B 5E A2                  mov         bx,word ptr -0x5e[bp] 
D82E    36 89 36 00 00            mov         word ptr ss:_running_console,si 
D833    36 A3 02 00               mov         word ptr ss:_running_console+0x2,ax 
D837    8E D8                     mov         ds,ax 
D839    8B 4E A0                  mov         cx,word ptr -0x60[bp] 
D83C    8B 44 3A                  mov         ax,word ptr 0x3a[si] 
D83F    8B 54 3C                  mov         dx,word ptr 0x3c[si] 
D842    9A 00 00 00 00            call        new_console_ 
D847    8B 56 F6                  mov         dx,word ptr -0xa[bp] 
D84A    36 89 16 00 00            mov         word ptr ss:_running_console,dx 
D84F    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
D852    36 89 16 02 00            mov         word ptr ss:_running_console+0x2,dx 
D857    3D 02 00                  cmp         ax,0x0002 
D85A    74 18                     je          L$1561 
D85C    3D 01 00                  cmp         ax,0x0001 
D85F    0F 85 1C B7               jne         L$1091 
D863    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D866    8B 44 3A                  mov         ax,word ptr 0x3a[si] 
D869    8B 54 3C                  mov         dx,word ptr 0x3c[si] 
D86C    9A 00 00 00 00            call        delete_console_ 
D871    E9 8B FE                  jmp         L$1551 
D874                          L$1561:
D874    B8 7C 08                  mov         ax,offset DGROUP:L$1894 
D877    8C D2                     mov         dx,ss 
D879    0E                        push        cs 
D87A    E8 00 00                  call        show_error_msg_ 
D87D    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D880    8B 44 3A                  mov         ax,word ptr 0x3a[si] 
D883    8B 54 3C                  mov         dx,word ptr 0x3c[si] 
D886    9A 00 00 00 00            call        delete_console_ 
D88B    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
D88E    89 F0                     mov         ax,si 
D890    0E                        push        cs 
D891    E8 00 00                  call        del_window_ 
D894    E9 9D FD                  jmp         L$1543 
D897                          vpuprog_window_close_:
D897    53                        push        bx 
D898    51                        push        cx 
D899    56                        push        si 
D89A    57                        push        di 
D89B    C8 04 00 00               enter       0x0004,0x00 
D89F    89 C7                     mov         di,ax 
D8A1    89 56 FC                  mov         word ptr -0x4[bp],dx 
D8A4    8E DA                     mov         ds,dx 
D8A6    8B 45 3C                  mov         ax,word ptr 0x3c[di] 
D8A9    8B 75 3A                  mov         si,word ptr 0x3a[di] 
D8AC    8E D8                     mov         ds,ax 
D8AE    89 46 FE                  mov         word ptr -0x2[bp],ax 
D8B1    8B 44 04                  mov         ax,word ptr 0x4[si] 
D8B4    89 C3                     mov         bx,ax 
D8B6    8E 5C 06                  mov         ds,word ptr 0x6[si] 
D8B9    81 7F 62 85 00            cmp         word ptr 0x62[bx],0x0085 
D8BE    76 61                     jbe         L$1565 
D8C0    BB 85 00                  mov         bx,0x0085 
D8C3    8C DA                     mov         dx,ds 
D8C5    9A 00 00 00 00            call        send_vpu_signal_ 
D8CA    85 C0                     test        ax,ax 
D8CC    74 06                     je          L$1562 
D8CE    B8 FF FF                  mov         ax,0xffff 
	     D8D2		; The label referred to here is an undefined location
D8D1    E9 9C 4F                  jmp         0x00012870 
D8D4                          L$1562:
D8D4    B8 05 00                  mov         ax,0x0005 
D8D7    BA 5A 00                  mov         dx,0x005a 
D8DA                          L$1563:
D8DA    48                        dec         ax 
D8DB    83 EA 12                  sub         dx,0x0012 
D8DE    3D FF FF                  cmp         ax,0xffff 
D8E1    74 17                     je          L$1564 
D8E3    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D8E6    C5 5C 04                  lds         bx,dword ptr 0x4[si] 
D8E9    01 D3                     add         bx,dx 
D8EB    8B 4F 76                  mov         cx,word ptr 0x76[bx] 
D8EE    8B 5F 78                  mov         bx,word ptr 0x78[bx] 
D8F1    3B 5E FC                  cmp         bx,word ptr -0x4[bp] 
D8F4    75 E4                     jne         L$1563 
D8F6    39 CF                     cmp         di,cx 
D8F8    75 E0                     jne         L$1563 
D8FA                          L$1564:
D8FA    6B C0 12                  imul        ax,0x0012 
D8FD    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D900    8B 7C 04                  mov         di,word ptr 0x4[si] 
D903    89 FB                     mov         bx,di 
D905    8E 5C 06                  mov         ds,word ptr 0x6[si] 
D908    01 C3                     add         bx,ax 
D90A    8B 5F 7A                  mov         bx,word ptr 0x7a[bx] 
D90D    8B 55 58                  mov         dx,word ptr 0x58[di] 
D910    01 DB                     add         bx,bx 
D912    8E 5D 5A                  mov         ds,word ptr 0x5a[di] 
D915    01 D3                     add         bx,dx 
D917    B8 01 00                  mov         ax,0x0001 
D91A    C7 07 00 00               mov         word ptr [bx],0x0000 
	     D91F		; The label referred to here is an undefined location
D91E    E9 4F 4F                  jmp         0x00012870 
D921                          L$1565:
D921    31 C0                     xor         ax,ax 
	     D924		; The label referred to here is an undefined location
D923    E9 4A 4F                  jmp         0x00012870 
D926                          vpuprog_window_resize_:
D926    53                        push        bx 
D927    51                        push        cx 
D928    56                        push        si 
D929    57                        push        di 
D92A    89 C6                     mov         si,ax 
D92C    89 D7                     mov         di,dx 
D92E    0E                        push        cs 
D92F    E8 00 00                  call        vpuprog_window_close_ 
D932    3D 01 00                  cmp         ax,0x0001 
D935    74 15                     je          L$1566 
D937    3D FF FF                  cmp         ax,0xffff 
D93A    7C 1D                     jl          L$1567 
D93C    85 C0                     test        ax,ax 
D93E    7F 19                     jg          L$1567 
D940    8E DF                     mov         ds,di 
D942    80 64 17 E3               and         byte ptr 0x17[si],0xe3 
D946    80 4C 17 10               or          byte ptr 0x17[si],0x10 
D94A    EB 0D                     jmp         L$1567 
D94C                          L$1566:
D94C    B9 02 00                  mov         cx,0x0002 
D94F    89 C3                     mov         bx,ax 
D951    89 FA                     mov         dx,di 
D953    89 F0                     mov         ax,si 
D955    0E                        push        cs 
D956    E8 00 00                  call        draw_window_ 
D959                          L$1567:
D959    B8 FF 7F                  mov         ax,0x7fff 
	     D95D		; The label referred to here is an undefined location
D95C    E9 12 4F                  jmp         0x00012871 
D95F                          vpuwindow_program_:
D95F    56                        push        si 
D960    57                        push        di 
D961    C8 04 00 00               enter       0x0004,0x00 
D965    8B 7E 0A                  mov         di,word ptr 0xa[bp] 
D968    89 C6                     mov         si,ax 
D96A    89 56 FE                  mov         word ptr -0x2[bp],dx 
D96D    89 DA                     mov         dx,bx 
D96F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D972    8B 44 3C                  mov         ax,word ptr 0x3c[si] 
D975    89 46 FC                  mov         word ptr -0x4[bp],ax 
D978    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
D97B    8B 5C 3A                  mov         bx,word ptr 0x3a[si] 
D97E    85 C0                     test        ax,ax 
D980    75 04                     jne         L$1568 
D982    85 FF                     test        di,di 
D984    74 23                     je          L$1570 
D986                          L$1568:
D986    8E D8                     mov         ds,ax 
D988    8B 05                     mov         ax,word ptr [di] 
D98A    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
D98D    89 07                     mov         word ptr [bx],ax 
D98F    8E 5E 0C                  mov         ds,word ptr 0xc[bp] 
D992    83 3D 00                  cmp         word ptr [di],0x0000 
D995    75 0B                     jne         L$1569 
D997    9A 00 00 00 00            call        getch_ 
D99C    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
D99F    89 47 02                  mov         word ptr 0x2[bx],ax 
D9A2                          L$1569:
D9A2    8E 5E 0C                  mov         ds,word ptr 0xc[bp] 
D9A5    C7 05 FF FF               mov         word ptr [di],0xffff 
D9A9                          L$1570:
D9A9    F6 C6 80                  test        dh,0x80 
D9AC    0F 84 6D BF               je          L$1171 
D9B0    80 E6 7F                  and         dh,0x7f 
D9B3    6B FA 0A                  imul        di,dx,0x000a 
D9B6    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D9B9    C5 44 2A                  lds         ax,dword ptr 0x2a[si] 
D9BC    01 C7                     add         di,ax 
D9BE    8B 45 08                  mov         ax,word ptr 0x8[di] 
D9C1    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
D9C4    FE C6                     inc         dh 
D9C6    89 17                     mov         word ptr [bx],dx 
D9C8    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
D9CB    C1 E0 02                  shl         ax,0x02 
D9CE    C5 5C 18                  lds         bx,dword ptr 0x18[si] 
D9D1    01 C3                     add         bx,ax 
D9D3    C5 37                     lds         si,dword ptr [bx] 
D9D5    8A 04                     mov         al,byte ptr [si] 
D9D7    24 1F                     and         al,0x1f 
D9D9    3C 02                     cmp         al,0x02 
D9DB    0F 85 3E BF               jne         L$1171 
D9DF    8B 44 0C                  mov         ax,word ptr 0xc[si] 
D9E2    8B 5C 0E                  mov         bx,word ptr 0xe[si] 
D9E5    C4 7C 26                  les         di,dword ptr 0x26[si] 
D9E8    89 C6                     mov         si,ax 
D9EA    8E DB                     mov         ds,bx 
D9EC    57                        push        di 
D9ED                          L$1571:
D9ED    AC                        lodsb       
D9EE    AA                        stosb       
D9EF    3C 00                     cmp         al,0x00 
D9F1    75 FA                     jne         L$1571 
D9F3    5F                        pop         di 
D9F4    E9 26 BF                  jmp         L$1171 

Routine Size: 2029 bytes,    Routine Base: main_TEXT + D20A

D9F7                          init_vpuprog_window_:
D9F7    56                        push        si 
D9F8    55                        push        bp 
D9F9    89 E5                     mov         bp,sp 
D9FB    68 00 00                  push        seg vpuwindow_program_ 
D9FE    68 00 00                  push        offset vpuwindow_program_ 
DA01    66 6A 00                  pushd       0x00000000 
DA04    6A 01                     push        0x0001 
DA06    6A 01                     push        0x0001 
DA08    51                        push        cx 
DA09    53                        push        bx 
DA0A    89 D1                     mov         cx,dx 
DA0C    BA FF FF                  mov         dx,0xffff 
DA0F    89 C3                     mov         bx,ax 
DA11    89 D0                     mov         ax,dx 
DA13    0E                        push        cs 
DA14    E8 00 00                  call        new_window_ 
DA17    89 C3                     mov         bx,ax 
DA19    89 D1                     mov         cx,dx 
DA1B    85 D2                     test        dx,dx 
DA1D    75 0A                     jne         L$1572 
DA1F    85 C0                     test        ax,ax 
DA21    75 06                     jne         L$1572 
DA23    31 C0                     xor         ax,ax 
DA25    31 D2                     xor         dx,dx 
DA27    EB 57                     jmp         L$1573 
DA29                          L$1572:
DA29    BA 0C 00                  mov         dx,0x000c 
DA2C    B8 01 00                  mov         ax,0x0001 
DA2F    9A 00 00 00 00            call        calloc_ 
DA34    8E D9                     mov         ds,cx 
DA36    89 47 3A                  mov         word ptr 0x3a[bx],ax 
DA39    89 57 3C                  mov         word ptr 0x3c[bx],dx 
DA3C    8B 77 3A                  mov         si,word ptr 0x3a[bx] 
DA3F    8E DA                     mov         ds,dx 
DA41    C7 04 FF FF               mov         word ptr [si],0xffff 
DA45    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
DA48    C7 44 02 FF FF            mov         word ptr 0x2[si],0xffff 
DA4D    89 44 04                  mov         word ptr 0x4[si],ax 
DA50    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
DA53    89 44 06                  mov         word ptr 0x6[si],ax 
DA56    8B 46 08                  mov         ax,word ptr 0x8[bp] 
DA59    89 44 08                  mov         word ptr 0x8[si],ax 
DA5C    8B 46 0A                  mov         ax,word ptr 0xa[bp] 
DA5F    89 44 0A                  mov         word ptr 0xa[si],ax 
DA62    8E D9                     mov         ds,cx 
DA64    C7 47 3E 00 00            mov         word ptr 0x3e[bx],offset vpuprog_window_close_ 
DA69    C7 47 40 00 00            mov         word ptr 0x40[bx],seg vpuprog_window_close_ 
DA6E    C7 47 42 00 00            mov         word ptr 0x42[bx],offset vpuprog_window_resize_ 
DA73    89 CA                     mov         dx,cx 
DA75    C7 47 44 00 00            mov         word ptr 0x44[bx],seg vpuprog_window_resize_ 
DA7A    89 D8                     mov         ax,bx 
DA7C    80 4F 17 02               or          byte ptr 0x17[bx],0x02 
DA80                          L$1573:
DA80    5D                        pop         bp 
	     DA82		; The label referred to here is an undefined location
DA81    E9 27 32                  jmp         0x00010cab 

Routine Size: 141 bytes,    Routine Base: main_TEXT + D9F7

DA84                          mtask_win_:
DA84    51                        push        cx 
DA85    56                        push        si 
DA86    57                        push        di 
DA87    C8 02 00 00               enter       0x0002,0x00 
DA8B    50                        push        ax 
DA8C    52                        push        dx 
DA8D    53                        push        bx 
DA8E    36 83 3E 00 00 00         cmp         word ptr ss:_next_tty,0x0000 
DA94    0F 8D DC 01               jge         L$1586 
DA98    36 83 3E 00 00 00         cmp         word ptr ss:_next_window,0x0000 
DA9E    7D 08                     jge         L$1574 
DAA0    36 A1 00 00               mov         ax,word ptr ss:_window_count 
DAA4    36 A3 00 00               mov         word ptr ss:_next_window,ax 
DAA8                          L$1574:
DAA8    36 83 06 00 00 FF         add         word ptr ss:_next_window,0xffff 
DAAE    36 8B 3E 00 00            mov         di,word ptr ss:_next_window 
DAB3    85 FF                     test        di,di 
DAB5    0F 8C B4 01               jl          L$1585 
DAB9    36 83 3E 00 00 00         cmp         word ptr ss:_next_tty,0x0000 
DABF    0F 8D B1 01               jge         L$1586 
DAC3    89 F8                     mov         ax,di 
DAC5    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
DACA    C1 E0 02                  shl         ax,0x02 
DACD    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
DAD2    01 C3                     add         bx,ax 
DAD4    C5 37                     lds         si,dword ptr [bx] 
DAD6    F6 44 16 10               test        byte ptr 0x16[si],0x10 
DADA    74 67                     je          L$1579 
DADC    1E                        push        ds 
DADD    07                        pop         es 
DADE    8D 5C 16                  lea         bx,0x16[si] 
DAE1    8B 44 44                  mov         ax,word ptr 0x44[si] 
DAE4    8B 54 42                  mov         dx,word ptr 0x42[si] 
DAE7    85 C0                     test        ax,ax 
DAE9    75 04                     jne         L$1575 
DAEB    85 D2                     test        dx,dx 
DAED    74 05                     je          L$1576 
DAEF                          L$1575:
DAEF    B8 01 00                  mov         ax,0x0001 
DAF2    EB 02                     jmp         L$1577 
DAF4                          L$1576:
DAF4    31 C0                     xor         ax,ax 
DAF6                          L$1577:
DAF6    01 C0                     add         ax,ax 
DAF8    25 07 00                  and         ax,0x0007 
DAFB    26 80 67 01 E3            and         byte ptr es:0x1[bx],0xe3 
DB00    C1 E0 0A                  shl         ax,0x0a 
DB03    26 09 07                  or          word ptr es:[bx],ax 
DB06    89 F8                     mov         ax,di 
DB08    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
DB0D    C1 E0 02                  shl         ax,0x02 
DB10    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
DB15    01 C3                     add         bx,ax 
DB17    C5 37                     lds         si,dword ptr [bx] 
DB19    80 64 16 EF               and         byte ptr 0x16[si],0xef 
DB1D    36 C5 36 00 00            lds         si,dword ptr ss:_windows 
DB22    01 C6                     add         si,ax 
DB24    C5 1C                     lds         bx,dword ptr [si] 
DB26    8B 47 44                  mov         ax,word ptr 0x44[bx] 
DB29    8B 57 42                  mov         dx,word ptr 0x42[bx] 
DB2C    85 C0                     test        ax,ax 
DB2E    75 04                     jne         L$1578 
DB30    85 D2                     test        dx,dx 
DB32    74 33                     je          L$1580 
DB34                          L$1578:
DB34    89 DE                     mov         si,bx 
DB36    1E                        push        ds 
DB37    07                        pop         es 
DB38    89 D8                     mov         ax,bx 
DB3A    8C DA                     mov         dx,ds 
DB3C    26 FF 5C 42               call        dword ptr es:0x42[si] 
DB40    89 46 F8                  mov         word ptr -0x8[bp],ax 
DB43                          L$1579:
DB43    89 FB                     mov         bx,di 
DB45    36 A1 00 00               mov         ax,word ptr ss:_windows 
DB49    C1 E3 02                  shl         bx,0x02 
DB4C    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
DB51    01 C3                     add         bx,ax 
DB53    C5 37                     lds         si,dword ptr [bx] 
DB55    F6 44 17 1C               test        byte ptr 0x17[si],0x1c 
DB59    74 57                     je          L$1581 
DB5B    B8 00 00                  mov         ax,seg _diskio_in_progress 
DB5E    8E D8                     mov         ds,ax 
DB60    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
DB65    75 4B                     jne         L$1581 
DB67                          L$1580:
DB67    36 80 3E 00 00 00         cmp         byte ptr ss:_screen_redraw,0x00 
DB6D    75 43                     jne         L$1581 
DB6F    36 8B 0E 00 00            mov         cx,word ptr ss:_windows 
DB74    89 FB                     mov         bx,di 
DB76    36 8B 16 02 00            mov         dx,word ptr ss:_windows+0x2 
DB7B    C1 E3 02                  shl         bx,0x02 
DB7E    8E DA                     mov         ds,dx 
DB80    01 CB                     add         bx,cx 
DB82    C5 37                     lds         si,dword ptr [bx] 
DB84    8B 44 16                  mov         ax,word ptr 0x16[si] 
DB87    C1 E8 0A                  shr         ax,0x0a 
DB8A    30 E4                     xor         ah,ah 
DB8C    24 03                     and         al,0x03 
DB8E    89 46 FE                  mov         word ptr -0x2[bp],ax 
DB91    36 3B 3E 00 00            cmp         di,word ptr ss:_active_window 
DB96    0F 94 C0                  sete        al 
DB99    89 FB                     mov         bx,di 
DB9B    C1 E3 02                  shl         bx,0x02 
DB9E    8E DA                     mov         ds,dx 
DBA0    01 CB                     add         bx,cx 
DBA2    8B 4E FE                  mov         cx,word ptr -0x2[bp] 
DBA5    8B 37                     mov         si,word ptr [bx] 
DBA7    8B 57 02                  mov         dx,word ptr 0x2[bx] 
DBAA    89 C3                     mov         bx,ax 
DBAC    89 F0                     mov         ax,si 
DBAE    0E                        push        cs 
DBAF    E8 00 00                  call        draw_window_ 
DBB2                          L$1581:
DBB2    89 FA                     mov         dx,di 
DBB4    36 8B 1E 00 00            mov         bx,word ptr ss:_windows 
DBB9    C1 E2 02                  shl         dx,0x02 
DBBC    36 8E 06 02 00            mov         es,word ptr ss:_windows+0x2 
DBC1    01 D3                     add         bx,dx 
DBC3    26 C5 37                  lds         si,dword ptr es:[bx] 
DBC6    8B 4C 38                  mov         cx,word ptr 0x38[si] 
DBC9    8B 44 36                  mov         ax,word ptr 0x36[si] 
DBCC    85 C9                     test        cx,cx 
DBCE    75 06                     jne         L$1582 
DBD0    85 C0                     test        ax,ax 
DBD2    0F 84 79 00               je          L$1584 
DBD6                          L$1582:
DBD6    F6 44 17 02               test        byte ptr 0x17[si],0x02 
DBDA    74 73                     je          L$1584 
DBDC    B8 00 00                  mov         ax,seg _diskio_in_progress 
DBDF    36 89 36 00 00            mov         word ptr ss:_running_window,si 
DBE4    36 8C 1E 02 00            mov         word ptr ss:_running_window+0x2,ds 
DBE9    8E D8                     mov         ds,ax 
DBEB    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
DBF0    75 3E                     jne         L$1583 
DBF2    36 3B 3E 00 00            cmp         di,word ptr ss:_active_window 
DBF7    75 37                     jne         L$1583 
DBF9    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
DBFF    75 2F                     jne         L$1583 
DC01    FF 76 FA                  push        word ptr -0x6[bp] 
DC04    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
DC07    26 8B 37                  mov         si,word ptr es:[bx] 
DC0A    FF 76 FC                  push        word ptr -0x4[bp] 
DC0D    26 8B 4F 02               mov         cx,word ptr es:0x2[bx] 
DC11    E8 00 00                  call        call_mouse_handler_ 
DC14    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
DC19    01 D3                     add         bx,dx 
DC1B    8B 17                     mov         dx,word ptr [bx] 
DC1D    8B 7F 02                  mov         di,word ptr 0x2[bx] 
DC20    89 C3                     mov         bx,ax 
DC22    8E D9                     mov         ds,cx 
DC24    89 D0                     mov         ax,dx 
DC26    89 FA                     mov         dx,di 
DC28    FF 5C 36                  call        dword ptr 0x36[si] 
DC2B    89 46 F8                  mov         word ptr -0x8[bp],ax 
DC2E    EB 1F                     jmp         L$1584 
DC30                          L$1583:
DC30    6A 00                     push        0x0000 
DC32    89 FB                     mov         bx,di 
DC34    36 A1 00 00               mov         ax,word ptr ss:_windows 
DC38    C1 E3 02                  shl         bx,0x02 
DC3B    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
DC40    01 C3                     add         bx,ax 
DC42    6A 00                     push        0x0000 
DC44    C5 37                     lds         si,dword ptr [bx] 
DC46    89 F0                     mov         ax,si 
DC48    8C DA                     mov         dx,ds 
DC4A    31 DB                     xor         bx,bx 
DC4C    FF 5C 36                  call        dword ptr 0x36[si] 
DC4F                          L$1584:
DC4F    B8 00 00                  mov         ax,seg _diskio_in_progress 
DC52    8E D8                     mov         ds,ax 
DC54    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
DC59    75 12                     jne         L$1585 
DC5B    9A 00 00 00 00            call        kbhit_ 
DC60    85 C0                     test        ax,ax 
DC62    75 09                     jne         L$1585 
DC64    E8 00 00                  call        mouseclick_ 
DC67    85 C0                     test        ax,ax 
DC69    0F 84 3B FE               je          L$1574 
DC6D                          L$1585:
DC6D    36 C7 06 00 00 04 00      mov         word ptr ss:_next_tty,0x0004 
DC74                          L$1586:
DC74    36 83 06 00 00 FF         add         word ptr ss:_next_tty,0xffff 
DC7A    36 A1 00 00               mov         ax,word ptr ss:_next_tty 
DC7E    85 C0                     test        ax,ax 
DC80    7C 70                     jl          L$1589 
DC82    36 83 3E 00 00 00         cmp         word ptr ss:_next_window,0x0000 
DC88    0F 8D 1C FE               jge         L$1574 
DC8C    69 C8 B0 00               imul        cx,ax,0x00b0 
DC90    36 8B 16 02 00            mov         dx,word ptr ss:_ttys+0x2 
DC95    36 8B 1E 00 00            mov         bx,word ptr ss:_ttys 
DC9A    8E DA                     mov         ds,dx 
DC9C    01 CB                     add         bx,cx 
DC9E    F6 47 68 01               test        byte ptr 0x68[bx],0x01 
DCA2    74 D0                     je          L$1586 
DCA4    83 C3 6A                  add         bx,0x006a 
DCA7    36 89 16 02 00            mov         word ptr ss:_running_window+0x2,dx 
DCAC    36 89 1E 00 00            mov         word ptr ss:_running_window,bx 
DCB1    36 0F B6 1E 00 00         movzx       bx,byte ptr ss:_tty 
DCB7    4B                        dec         bx 
DCB8    39 C3                     cmp         bx,ax 
DCBA    75 0C                     jne         L$1587 
DCBC    FF 76 FA                  push        word ptr -0x6[bp] 
DCBF    36 A1 00 00               mov         ax,word ptr ss:_running_window 
DCC3    FF 76 FC                  push        word ptr -0x4[bp] 
DCC6    EB 08                     jmp         L$1588 
DCC8                          L$1587:
DCC8    6A 00                     push        0x0000 
DCCA    36 A1 00 00               mov         ax,word ptr ss:_running_window 
DCCE    6A 00                     push        0x0000 
DCD0                          L$1588:
DCD0    31 DB                     xor         bx,bx 
DCD2    0E                        push        cs 
DCD3    E8 00 00                  call        vpuconsole_program_ 
DCD6    B8 00 00                  mov         ax,seg _diskio_in_progress 
DCD9    8E D8                     mov         ds,ax 
DCDB    80 3E 00 00 00            cmp         byte ptr _diskio_in_progress,0x00 
DCE0    75 10                     jne         L$1589 
DCE2    9A 00 00 00 00            call        kbhit_ 
DCE7    85 C0                     test        ax,ax 
DCE9    75 07                     jne         L$1589 
DCEB    E8 00 00                  call        mouseclick_ 
DCEE    85 C0                     test        ax,ax 
DCF0    74 82                     je          L$1586 
DCF2                          L$1589:
DCF2    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
DCF5    36 A3 00 00               mov         word ptr ss:_running_window,ax 
DCF9    8B 46 0E                  mov         ax,word ptr 0xe[bp] 
DCFC    36 A3 02 00               mov         word ptr ss:_running_window+0x2,ax 
DD00    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
DD03    E9 F7 AF                  jmp         L$1061 
DD06                          start_program_:
DD06    53                        push        bx 
DD07    51                        push        cx 
DD08    52                        push        dx 
DD09    56                        push        si 
DD0A    C8 08 00 00               enter       0x0008,0x00 
DD0E    B8 9D 08                  mov         ax,offset DGROUP:L$1895 
DD11    8C D2                     mov         dx,ss 
DD13    BB 00 00                  mov         bx,offset _system_font 
DD16    9A 00 00 00 00            call        puts_ 
DD1B    E8 00 00                  call        load_settings_ 
DD1E    B8 B1 08                  mov         ax,offset DGROUP:L$1896 
DD21    8C D2                     mov         dx,ss 
DD23    8C D1                     mov         cx,ss 
DD25    9A 00 00 00 00            call        puts_ 
DD2A    B8 00 00                  mov         ax,offset _system_font_file 
DD2D    8C D2                     mov         dx,ss 
DD2F    0E                        push        cs 
DD30    E8 00 00                  call        load_system_font_ 
DD33    BB 00 00                  mov         bx,offset _monospace_font 
DD36    B8 00 00                  mov         ax,offset _monospace_font_file 
DD39    8C D1                     mov         cx,ss 
DD3B    8C D2                     mov         dx,ss 
DD3D    0E                        push        cs 
DD3E    E8 00 00                  call        load_system_font_ 
DD41    B8 C8 08                  mov         ax,offset DGROUP:L$1897 
DD44    8C D2                     mov         dx,ss 
DD46    9A 00 00 00 00            call        puts_ 
DD4B    9A 00 00 00 00            call        set_int24_ 
DD50    E8 00 00                  call        set_timer_rtn_ 
DD53    9A 00 00 00 00            call        set_keyboard_handler_ 
DD58    B8 DE 08                  mov         ax,offset DGROUP:L$1898 
DD5B    8C D2                     mov         dx,ss 
DD5D    9A 00 00 00 00            call        puts_ 
DD62    E8 00 00                  call        update_envvars_ 
DD65    B8 FF 08                  mov         ax,offset DGROUP:L$1899 
DD68    8C D2                     mov         dx,ss 
DD6A    9A 00 00 00 00            call        puts_ 
DD6F    E8 00 00                  call        init_desktop_ 
DD72    B8 14 09                  mov         ax,offset DGROUP:L$1900 
DD75    8C D2                     mov         dx,ss 
DD77    9A 00 00 00 00            call        puts_ 
DD7C    E8 00 00                  call        load_desktop_shortcuts_ 
DD7F    B8 31 09                  mov         ax,offset DGROUP:L$1901 
DD82    8C D2                     mov         dx,ss 
DD84    9A 00 00 00 00            call        puts_ 
DD89    30 C0                     xor         al,al 
DD8B    8D 76 F8                  lea         si,-0x8[bp] 
DD8E    36 A2 5E 00               mov         byte ptr ss:_filename_clipboard+0x5e,al 
DD92    30 E4                     xor         ah,ah 
DD94    31 D2                     xor         dx,dx 
DD96    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
DD9A    9A 00 00 00 00            call        unixtime_ 
DD9F    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
DDA2    36 A3 00 00               mov         word ptr ss:_starttime_low,ax 
DDA6    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
DDA9    36 A3 00 00               mov         word ptr ss:_starttime_high,ax 
DDAD    31 C0                     xor         ax,ax 
DDAF    BA 01 00                  mov         dx,0x0001 
DDB2    36 A3 02 00               mov         word ptr ss:_clipboard+0x2,ax 
DDB6    36 A3 04 00               mov         word ptr ss:_clipboard+0x4,ax 
DDBA    B8 00 02                  mov         ax,0x0200 
DDBD    9A 00 00 00 00            call        calloc_ 
DDC2    36 A3 00 00               mov         word ptr ss:_errorlog,ax 
DDC6    36 89 16 02 00            mov         word ptr ss:_errorlog+0x2,dx 
DDCB    B8 48 09                  mov         ax,offset DGROUP:L$1902 
DDCE    8C D2                     mov         dx,ss 
DDD0    9A 00 00 00 00            call        puts_ 
DDD5    BA B0 00                  mov         dx,0x00b0 
DDD8    B8 04 00                  mov         ax,0x0004 
DDDB    9A 00 00 00 00            call        calloc_ 
DDE0    36 A3 00 00               mov         word ptr ss:_ttys,ax 
DDE4    36 89 16 02 00            mov         word ptr ss:_ttys+0x2,dx 
DDE9    B8 67 09                  mov         ax,offset DGROUP:L$1903 
DDEC    8C D2                     mov         dx,ss 
DDEE    9A 00 00 00 00            call        puts_ 
DDF3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_video 
DDF9    BB 50 00                  mov         bx,0x0050 
DDFC    9A 00 00 00 00            call        video_mode_ 
DE01    E8 00 00                  call        init_mouse_ 
DE04    36 A3 00 00               mov         word ptr ss:_mouse,ax 
DE08    36 89 16 02 00            mov         word ptr ss:_mouse+0x2,dx 
DE0D    E8 00 00                  call        init_clock_window_ 
DE10    B8 00 00                  mov         ax,offset _cwd 
DE13    8C D2                     mov         dx,ss 
DE15    9A 00 00 00 00            call        getcwd_ 
DE1A    B8 00 00                  mov         ax,offset _cwdrive 
DE1D    8C D2                     mov         dx,ss 
DE1F    9A 00 00 00 00            call        _dos_getdrive_ 
DE24    9A 00 00 00 00            call        save_dosidle_handler_ 
DE29    E8 00 00                  call        run_startup_programs_ 
DE2C    C9                        leave       
DE2D    E9 05 F3                  jmp         L$1510 
DE30                          end_program_:
DE30    53                        push        bx 
DE31    51                        push        cx 
DE32    9A 00 00 00 00            call        unload_drivers_ 
DE37    9A 00 00 00 00            call        reset_dosidle_handler_ 
DE3C    9A 00 00 00 00            call        reset_vpu_interrupt_handlers_ 
DE41    B8 03 00                  mov         ax,0x0003 
DE44    BB 00 00                  mov         bx,seg _old_timer_rtn 
DE47    9A 00 00 00 00            call        video_mode_ 
DE4C    8E DB                     mov         ds,bx 
DE4E    B8 1C 00                  mov         ax,0x001c 
DE51    8B 1E 00 00               mov         bx,word ptr _old_timer_rtn 
DE55    8B 0E 02 00               mov         cx,word ptr _old_timer_rtn+0x2 
DE59    9A 00 00 00 00            call        _dos_setvect_ 
DE5E    9A 00 00 00 00            call        reset_int24_ 
DE63    9A 00 00 00 00            call        reset_keyboard_handler_ 
DE68    59                        pop         cx 
DE69    5B                        pop         bx 
DE6A    C3                        ret         
DE6B                          call_drv_screenupdate_:
DE6B    53                        push        bx 
DE6C    56                        push        si 
DE6D    55                        push        bp 
DE6E    31 ED                     xor         bp,bp 
DE70    8B 9E 02 00               mov         bx,word ptr _update_screen+0x2[bp] 
DE74    8B B6 00 00               mov         si,word ptr _update_screen[bp] 
DE78    85 DB                     test        bx,bx 
DE7A    75 06                     jne         L$1590 
DE7C    85 F6                     test        si,si 
	     DE80		; The label referred to here is an undefined location
DE7E    0F 84 90 48               je          0x00012712 
DE82                          L$1590:
DE82    36 A1 00 00               mov         ax,word ptr ss:_active_window 
DE86    85 C0                     test        ax,ax 
DE88    7C 22                     jl          L$1591 
DE8A    89 C3                     mov         bx,ax 
DE8C    8B B6 00 00               mov         si,word ptr _windows[bp] 
DE90    C1 E3 02                  shl         bx,0x02 
DE93    8E 9E 02 00               mov         ds,word ptr _windows+0x2[bp] 
DE97    01 DE                     add         si,bx 
DE99    C5 1C                     lds         bx,dword ptr [si] 
DE9B    F6 47 16 40               test        byte ptr 0x16[bx],0x40 
DE9F    74 0B                     je          L$1591 
DEA1    8A 5F 10                  mov         bl,byte ptr 0x10[bx] 
DEA4    3A 9E 00 00               cmp         bl,byte ptr _video[bp] 
	     DEAA		; The label referred to here is an undefined location
DEA8    0F 85 66 48               jne         0x00012712 
DEAC                          L$1591:
DEAC    FF 9E 00 00               call        dword ptr _update_screen[bp] 
	     DEB1		; The label referred to here is an undefined location
DEB0    E9 5F 48                  jmp         0x00012712 
DEB3                          mouse_set_normal_cursor_:
DEB3    53                        push        bx 
DEB4    51                        push        cx 
DEB5    52                        push        dx 
DEB6    55                        push        bp 
DEB7    31 ED                     xor         bp,bp 
DEB9    8B 8E 00 00               mov         cx,word ptr _mouse_cursor[bp] 
DEBD    8B 96 02 00               mov         dx,word ptr _mouse_cursor+0x2[bp] 
DEC1    36 A1 02 00               mov         ax,word ptr ss:_busy_cursor+0x2 
DEC5    8B 9E 00 00               mov         bx,word ptr _busy_cursor[bp] 
DEC9    39 C2                     cmp         dx,ax 
	     DECD		; The label referred to here is an undefined location
DECB    0F 85 D2 64               jne         0x000143a1 
DECF    39 D9                     cmp         cx,bx 
	     DED3		; The label referred to here is an undefined location
DED1    0F 85 CC 64               jne         0x000143a1 
DED5    0E                        push        cs 
DED6    E8 00 00                  call        hide_mouse_cursor_ 
DED9    36 A1 00 00               mov         ax,word ptr ss:_normal_cursor 
DEDD    8B 96 02 00               mov         dx,word ptr _normal_cursor+0x2[bp] 
DEE1    36 A3 00 00               mov         word ptr ss:_mouse_cursor,ax 
DEE5    89 96 02 00               mov         word ptr _mouse_cursor+0x2[bp],dx 
DEE9    0E                        push        cs 
DEEA    E8 00 00                  call        redraw_mouse_cursor_ 
	     DEEE		; The label referred to here is an undefined location
DEED    E9 B1 64                  jmp         0x000143a1 
DEF0                          call_mouse_handler_:
DEF0    53                        push        bx 
DEF1    51                        push        cx 
DEF2    52                        push        dx 
DEF3    55                        push        bp 
DEF4    31 ED                     xor         bp,bp 
DEF6    89 C1                     mov         cx,ax 
DEF8    B8 FF 7F                  mov         ax,0x7fff 
DEFB    80 BE 00 00 00            cmp         byte ptr _tty[bp],0x00 
	     DF02		; The label referred to here is an undefined location
DF00    0F 85 9D 64               jne         0x000143a1 
DF04    83 BE 00 00 00            cmp         word ptr _menu_selected[bp],0x0000 
DF09    7C 0C                     jl          L$1593 
DF0B    31 C0                     xor         ax,ax 
DF0D    31 D2                     xor         dx,dx 
DF0F    E8 00 00                  call        mouse_handler_ 
DF12                          L$1592:
DF12    89 C8                     mov         ax,cx 
	     DF15		; The label referred to here is an undefined location
DF14    E9 8A 64                  jmp         0x000143a1 
DF17                          L$1593:
DF17    8B 9E 02 00               mov         bx,word ptr _mouse+0x2[bp] 
DF1B    8B 96 00 00               mov         dx,word ptr _mouse[bp] 
DF1F    85 DB                     test        bx,bx 
DF21    75 04                     jne         L$1594 
DF23    85 D2                     test        dx,dx 
DF25    74 26                     je          L$1597 
DF27                          L$1594:
DF27    E8 00 00                  call        mouse_set_normal_cursor_ 
DF2A    36 A1 00 00               mov         ax,word ptr ss:_active_window 
DF2E    85 C0                     test        ax,ax 
DF30    7C 14                     jl          L$1595 
DF32    8B 9E 00 00               mov         bx,word ptr _windows[bp] 
DF36    C1 E0 02                  shl         ax,0x02 
DF39    8E 9E 02 00               mov         ds,word ptr _windows+0x2[bp] 
DF3D    01 C3                     add         bx,ax 
DF3F    8B 07                     mov         ax,word ptr [bx] 
DF41    8B 57 02                  mov         dx,word ptr 0x2[bx] 
DF44    EB 04                     jmp         L$1596 
DF46                          L$1595:
DF46    31 C0                     xor         ax,ax 
DF48    31 D2                     xor         dx,dx 
DF4A                          L$1596:
DF4A    E8 00 00                  call        mouse_handler_ 
DF4D                          L$1597:
DF4D    3D FF 7F                  cmp         ax,0x7fff 
DF50    74 C0                     je          L$1592 
	     DF53		; The label referred to here is an undefined location
DF52    E9 4C 64                  jmp         0x000143a1 
DF55                          start_arg1_prog_:
DF55    52                        push        dx 
DF56    56                        push        si 
DF57    57                        push        di 
DF58    C8 06 01 00               enter       0x0106,0x00 
DF5C    50                        push        ax 
DF5D    53                        push        bx 
DF5E    51                        push        cx 
DF5F    8D 9E FA FE               lea         bx,-0x106[bp] 
DF63    8B B6 F6 FE               mov         si,word ptr -0x10a[bp] 
DF67    8C 56 FE                  mov         word ptr -0x2[bp],ss 
DF6A    89 4E FA                  mov         word ptr -0x6[bp],cx 
DF6D    31 D2                     xor         dx,dx 
DF6F    8E 46 FE                  mov         es,word ptr -0x2[bp] 
DF72    89 76 FC                  mov         word ptr -0x4[bp],si 
DF75                          L$1598:
DF75    42                        inc         dx 
DF76    83 46 FC 04               add         word ptr -0x4[bp],0x0004 
DF7A    3B 96 F8 FE               cmp         dx,word ptr -0x108[bp] 
DF7E    73 2C                     jae         L$1600 
DF80    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
DF83    8B 76 FC                  mov         si,word ptr -0x4[bp] 
DF86    8B 7E FC                  mov         di,word ptr -0x4[bp] 
DF89    8B 34                     mov         si,word ptr [si] 
DF8B    8E 5D 02                  mov         ds,word ptr 0x2[di] 
DF8E    89 DF                     mov         di,bx 
DF90    57                        push        di 
DF91                          L$1599:
DF91    AC                        lodsb       
DF92    AA                        stosb       
DF93    3C 00                     cmp         al,0x00 
DF95    75 FA                     jne         L$1599 
DF97    5F                        pop         di 
DF98    B9 FF FF                  mov         cx,0xffff 
DF9B    33 C0                     xor         ax,ax 
DF9D    F2 AE                     repne scasb 
DF9F    F7 D1                     not         cx 
DFA1    49                        dec         cx 
DFA2    06                        push        es 
DFA3    1F                        pop         ds 
DFA4    01 CB                     add         bx,cx 
DFA6    C6 07 20                  mov         byte ptr [bx],0x20 
DFA9    43                        inc         bx 
DFAA    EB C9                     jmp         L$1598 
DFAC                          L$1600:
DFAC    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
DFAF    8B B6 F6 FE               mov         si,word ptr -0x10a[bp] 
DFB3    C6 07 00                  mov         byte ptr [bx],0x00 
DFB6    31 C0                     xor         ax,ax 
DFB8    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
DFBD    31 D2                     xor         dx,dx 
DFBF    6A 00                     push        0x0000 
DFC1    8D 9E FA FE               lea         bx,-0x106[bp] 
DFC5    16                        push        ss 
DFC6    8E 9E F4 FE               mov         ds,word ptr -0x10c[bp] 
DFCA    53                        push        bx 
DFCB    8B 9E F6 FE               mov         bx,word ptr -0x10a[bp] 
DFCF    8B 4C 02                  mov         cx,word ptr 0x2[si] 
DFD2    8B 1F                     mov         bx,word ptr [bx] 
DFD4    0E                        push        cs 
DFD5    E8 00 00                  call        run_program_ 
DFD8    C9                        leave       
DFD9    5F                        pop         di 
DFDA    5E                        pop         si 
DFDB    5A                        pop         dx 
DFDC    C3                        ret         
DFDD                          screensaver_func_:
DFDD    53                        push        bx 
DFDE    52                        push        dx 
DFDF    55                        push        bp 
DFE0    31 ED                     xor         bp,bp 
DFE2    83 BE 00 00 00            cmp         word ptr _screensaver_delay[bp],0x0000 
DFE7    0F 84 AA DA               je          L$1368 
DFEB    0E                        push        cs 
DFEC    E8 00 00                  call        dostime_ 
DFEF    89 C3                     mov         bx,ax 
DFF1    8E DA                     mov         ds,dx 
DFF3    0F B6 5F 02               movzx       bx,byte ptr 0x2[bx] 
DFF7    3B 9E C7 02               cmp         bx,word ptr DGROUP:L$1945[bp] 
DFFB    0F 84 96 DA               je          L$1368 
DFFF    FF 86 00 00               inc         word ptr _screensaver_timer[bp] 
E003    0E                        push        cs 
E004    E8 00 00                  call        dostime_ 
E007    89 C3                     mov         bx,ax 
E009    8E DA                     mov         ds,dx 
E00B    0F B6 5F 02               movzx       bx,byte ptr 0x2[bx] 
E00F    89 9E C7 02               mov         word ptr DGROUP:L$1945[bp],bx 
E013    8B 9E 00 00               mov         bx,word ptr _screensaver_timer[bp] 
E017    3B 9E 00 00               cmp         bx,word ptr _screensaver_delay[bp] 
E01B    0F 86 76 DA               jbe         L$1368 
E01F    E8 00 00                  call        screen_saver_ 
E022    E9 70 DA                  jmp         L$1368 
E025                          quitprompt_:
E025    53                        push        bx 
E026    51                        push        cx 
E027    52                        push        dx 
E028    16                        push        ss 
E029    68 8E 09                  push        offset DGROUP:L$1904 
E02C    16                        push        ss 
E02D    68 B2 09                  push        offset DGROUP:L$1905 
E030    16                        push        ss 
E031    68 B7 09                  push        offset DGROUP:L$1906 
E034    B9 32 00                  mov         cx,0x0032 
E037    6A 01                     push        0x0001 
E039    BB C8 00                  mov         bx,0x00c8 
E03C    6A 01                     push        0x0001 
E03E    BA 14 00                  mov         dx,0x0014 
E041    6A 02                     push        0x0002 
E043    89 D0                     mov         ax,dx 
E045    0E                        push        cs 
E046    E8 00 00                  call        dialog_ 
E049    85 C0                     test        ax,ax 
	     E04D		; The label referred to here is an undefined location
E04B    0F 85 53 63               jne         0x000143a2 
E04F    E8 00 00                  call        end_program_ 
E052    31 C0                     xor         ax,ax 
E054    9A 00 00 00 00            call        exit_ 
	     E05A		; The label referred to here is an undefined location
E059    E9 46 63                  jmp         0x000143a2 
E05C    73 3B 3A 39 38 37 00                            s;:987.
E063    84 E1                                           DW	offset L$1709
E065    45 E1                                           DW	offset L$1703
E067    72 E1                                           DW	offset L$1706
E069    6C E1                                           DW	offset L$1705
E06B    5E E1                                           DW	offset L$1704
E06D    78 E1                                           DW	offset L$1707
E06F    7E E1                                           DW	offset L$1708
E071    BD E0                                           DW	offset L$1702
E073                          main_kbd_handler_:
E073    53                        push        bx 
E074    51                        push        cx 
E075    56                        push        si 
E076    57                        push        di 
E077    C8 02 00 00               enter       0x0002,0x00 
E07B    89 C3                     mov         bx,ax 
E07D    89 56 FE                  mov         word ptr -0x2[bp],dx 
E080    31 C0                     xor         ax,ax 
E082    36 A3 00 00               mov         word ptr ss:_screensaver_timer,ax 
E086    9A 00 00 00 00            call        getch_ 
E08B    8E DA                     mov         ds,dx 
E08D    89 07                     mov         word ptr [bx],ax 
E08F    85 C0                     test        ax,ax 
E091    0F 85 1E 01               jne         L$1609 
E095    9A 00 00 00 00            call        getch_ 
E09A    8E DA                     mov         ds,dx 
E09C    89 07                     mov         word ptr [bx],ax 
E09E    2D 32 00                  sub         ax,0x0032 
E0A1    3D 73 00                  cmp         ax,0x0073 
E0A4    0F 87 DC 00               ja          L$1607 
E0A8    B9 08 00                  mov         cx,0x0008 
E0AB    BF 5C E0                  mov         di,offset load_settings_-0x1fa4 
E0AE    0E                        push        cs 
E0AF    07                        pop         es 
E0B0    F2 AE                     repne scasb 
E0B2    D1 E1                     shl         cx,0x01 
E0B4    89 CF                     mov         di,cx 
E0B6    2E 8B 85 63 E0            mov         ax,word ptr cs:load_settings_-0x1f9d[di] 
E0BB    FF E0                     jmp         ax 
E0BD    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E0C1    85 C0                     test        ax,ax 
E0C3    7C 1F                     jl          L$1601 
E0C5    89 C6                     mov         si,ax 
E0C7    36 A1 00 00               mov         ax,word ptr ss:_windows 
E0CB    C1 E6 02                  shl         si,0x02 
E0CE    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
E0D3    01 C6                     add         si,ax 
E0D5    C5 3C                     lds         di,dword ptr [si] 
E0D7    F6 45 16 40               test        byte ptr 0x16[di],0x40 
E0DB    74 07                     je          L$1601 
E0DD    89 F8                     mov         ax,di 
E0DF    8C DA                     mov         dx,ds 
E0E1    E8 00 00                  call        minimize_window_ 
E0E4                          L$1601:
E0E4    36 83 3E 00 00 00         cmp         word ptr ss:_window_count,0x0000 
E0EA    0F 84 4D 00               je          L$1605 
E0EE    36 8E 1E 02 00            mov         ds,word ptr ss:_window_visibility_order+0x2 
E0F3    31 C0                     xor         ax,ax 
E0F5                          L$1602:
E0F5    36 8B 36 00 00            mov         si,word ptr ss:_window_visibility_order 
E0FA    01 C6                     add         si,ax 
E0FC    8B 3C                     mov         di,word ptr [si] 
E0FE    36 8B 16 00 00            mov         dx,word ptr ss:_windows 
E103    C1 E7 02                  shl         di,0x02 
E106    36 8E 06 02 00            mov         es,word ptr ss:_windows+0x2 
E10B    01 D7                     add         di,dx 
E10D    26 8B 15                  mov         dx,word ptr es:[di] 
E110    26 8B 7D 02               mov         di,word ptr es:0x2[di] 
E114    8E C7                     mov         es,di 
E116    89 D7                     mov         di,dx 
E118    26 F6 45 16 20            test        byte ptr es:0x16[di],0x20 
E11D    74 04                     je          L$1603 
E11F    40                        inc         ax 
E120    40                        inc         ax 
E121    EB D2                     jmp         L$1602 
E123                          L$1603:
E123    26 F6 45 16 08            test        byte ptr es:0x16[di],0x08 
E128    74 08                     je          L$1604 
E12A    8B 04                     mov         ax,word ptr [si] 
E12C    E8 00 00                  call        unminimize_window_ 
E12F    E9 09 00                  jmp         L$1605 
E132                          L$1604:
E132    BA 01 00                  mov         dx,0x0001 
E135    8B 04                     mov         ax,word ptr [si] 
E137    0E                        push        cs 
E138    E8 00 00                  call        set_active_window_ 
E13B                          L$1605:
E13B    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
E13E    C7 07 FF FF               mov         word ptr [bx],0xffff 
	     E143		; The label referred to here is an undefined location
E142    E9 76 5A                  jmp         0x00013bbb 
E145    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E14B    7C 08                     jl          L$1606 
E14D    31 C0                     xor         ax,ax 
E14F    36 A3 00 00               mov         word ptr ss:_menu_selected,ax 
E153    EB E6                     jmp         L$1605 
E155                          L$1606:
E155    36 C7 06 00 00 01 00      mov         word ptr ss:_menu_selected,0x0001 
E15C    EB DD                     jmp         L$1605 
E15E    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E164    7C D5                     jl          L$1605 
E166    B8 02 00                  mov         ax,0x0002 
E169    E9 1E AE                  jmp         L$1094 
E16C    B8 05 00                  mov         ax,0x0005 
E16F    E9 18 AE                  jmp         L$1094 
E172    B8 32 00                  mov         ax,0x0032 
E175    E9 12 AE                  jmp         L$1094 
E178    B8 33 00                  mov         ax,0x0033 
E17B    E9 0C AE                  jmp         L$1094 
E17E    B8 34 00                  mov         ax,0x0034 
E181    E9 06 AE                  jmp         L$1094 
E184                          L$1607:
E184    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E18A    7D 13                     jge         L$1608 
E18C    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
E18F    8B 07                     mov         ax,word ptr [bx] 
E191    E8 00 00                  call        desktop_iconnav_ 
E194    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
E197    8B 07                     mov         ax,word ptr [bx] 
E199    E8 00 00                  call        desktop_iconmov_ 
	     E19D		; The label referred to here is an undefined location
E19C    E9 1C 5A                  jmp         0x00013bbb 
E19F                          L$1608:
E19F    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
E1A2    8B 07                     mov         ax,word ptr [bx] 
E1A4    9A 00 00 00 00            call        ungetch_ 
E1A9    8E 5E FE                  mov         ds,word ptr -0x2[bp] 
E1AC    C7 07 00 00               mov         word ptr [bx],0x0000 
	     E1B1		; The label referred to here is an undefined location
E1B0    E9 08 5A                  jmp         0x00013bbb 
E1B3                          L$1609:
E1B3    36 8B 16 00 00            mov         dx,word ptr ss:_active_window 
E1B8    C1 E2 02                  shl         dx,0x02 
E1BB    3D 1B 00                  cmp         ax,0x001b 
E1BE    74 38                     je          L$1611 
E1C0    3D 0D 00                  cmp         ax,0x000d 
E1C3    74 23                     je          L$1610 
E1C5    3D 09 00                  cmp         ax,0x0009 
	     E1CA		; The label referred to here is an undefined location
E1C8    0F 85 EF 59               jne         0x00013bbb 
E1CC    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
	     E1D4		; The label referred to here is an undefined location
E1D2    0F 8C E5 59               jl          0x00013bbb 
E1D6    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
E1DB    01 D3                     add         bx,dx 
E1DD    8B 07                     mov         ax,word ptr [bx] 
E1DF    8B 57 02                  mov         dx,word ptr 0x2[bx] 
E1E2    E8 00 00                  call        activate_next_element_ 
	     E1E6		; The label referred to here is an undefined location
E1E5    E9 D3 59                  jmp         0x00013bbb 
E1E8                          L$1610:
E1E8    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
	     E1F0		; The label referred to here is an undefined location
E1EE    0F 8D C9 59               jge         0x00013bbb 
E1F2    B8 46 00                  mov         ax,0x0046 
E1F5    E9 92 AD                  jmp         L$1094 
E1F8                          L$1611:
E1F8    36 83 3E 00 00 00         cmp         word ptr ss:_window_count,0x0000 
E1FE    74 22                     je          L$1612 
E200    36 C5 36 00 00            lds         si,dword ptr ss:_windows 
E205    01 D6                     add         si,dx 
E207    C5 1C                     lds         bx,dword ptr [si] 
E209    F6 47 16 20               test        byte ptr 0x16[bx],0x20 
E20D    75 13                     jne         L$1612 
E20F    8B 57 38                  mov         dx,word ptr 0x38[bx] 
E212    8B 47 36                  mov         ax,word ptr 0x36[bx] 
E215    81 FA 00 00               cmp         dx,seg vpuconsole_program_ 
E219    75 07                     jne         L$1612 
E21B    3D 00 00                  cmp         ax,offset vpuconsole_program_ 
	     E220		; The label referred to here is an undefined location
E21E    0F 84 99 59               je          0x00013bbb 
E222                          L$1612:
E222    B8 3C 00                  mov         ax,0x003c 
E225    E9 62 AD                  jmp         L$1094 
E228    45 3B 33 32 31 04 03 02 01 00                   E;321.....
E232    8A 8F                                           DW	offset L$1673
E234    87 E2                                           DW	offset L$1710
E236    99 E2                                           DW	offset L$1711
E238    6C E4                                           DW	offset L$1719
E23A    8D E3                                           DW	offset L$1712
E23C    B8 E4                                           DW	offset L$1720
E23E    B8 E4                                           DW	offset L$1720
E240    20 E5                                           DW	offset L$1721
E242    34 E5                                           DW	offset L$1722
E244    41 E5                                           DW	offset L$1723
E246    9F E3                                           DW	offset L$1713
E248    CC E3                                           DW	offset L$1718
E24A    C3 E3                                           DW	offset L$1717
E24C    BE E3                                           DW	offset L$1716
E24E    B9 E3                                           DW	offset L$1715
E250    B0 E3                                           DW	offset L$1714
E252                          wm_action_:
E252    53                        push        bx 
E253    51                        push        cx 
E254    56                        push        si 
E255    57                        push        di 
E256    C8 10 00 00               enter       0x0010,0x00 
E25A    89 C6                     mov         si,ax 
E25C    89 56 FC                  mov         word ptr -0x4[bp],dx 
E25F    8E DA                     mov         ds,dx 
E261    8B 04                     mov         ax,word ptr [si] 
E263    48                        dec         ax 
E264    3D 45 00                  cmp         ax,0x0045 
E267    0F 87 1F AD               ja          L$1094 
E26B    B9 0B 00                  mov         cx,0x000b 
E26E    BF 28 E2                  mov         di,offset load_settings_-0x1dd8 
E271    0E                        push        cs 
E272    07                        pop         es 
E273    F2 AE                     repne scasb 
E275    D1 E1                     shl         cx,0x01 
E277    89 CF                     mov         di,cx 
E279    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E27D    2E 8B 95 32 E2            mov         dx,word ptr cs:load_settings_-0x1dce[di] 
E282    C1 E0 02                  shl         ax,0x02 
E285    FF E2                     jmp         dx 
E287    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
E28C    01 C3                     add         bx,ax 
E28E    8B 07                     mov         ax,word ptr [bx] 
E290    8B 57 02                  mov         dx,word ptr 0x2[bx] 
E293    E8 00 00                  call        window_kbdmove_ 
E296    E9 F1 AC                  jmp         L$1094 
E299    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
E29E    01 C7                     add         di,ax 
E2A0    C5 1D                     lds         bx,dword ptr [di] 
E2A2    8B 47 38                  mov         ax,word ptr 0x38[bx] 
E2A5    8B 57 36                  mov         dx,word ptr 0x36[bx] 
E2A8    3D 00 00                  cmp         ax,seg vpuconsole_program_ 
E2AB    75 14                     jne         L$1613 
E2AD    81 FA 00 00               cmp         dx,offset vpuconsole_program_ 
E2B1    75 0E                     jne         L$1613 
E2B3    8B 47 3A                  mov         ax,word ptr 0x3a[bx] 
E2B6    8B 57 3C                  mov         dx,word ptr 0x3c[bx] 
E2B9    9A 00 00 00 00            call        delete_console_ 
E2BE    E9 A6 00                  jmp         L$1616 
E2C1                          L$1613:
E2C1    3D 00 00                  cmp         ax,seg vpuwindow_program_ 
E2C4    0F 85 9F 00               jne         L$1616 
E2C8    81 FA 00 00               cmp         dx,offset vpuwindow_program_ 
E2CC    0F 85 97 00               jne         L$1616 
E2D0    36 8B 0E 00 00            mov         cx,word ptr ss:_vpu_count 
E2D5    89 C8                     mov         ax,cx 
E2D7    C1 E0 02                  shl         ax,0x02 
E2DA    89 46 F8                  mov         word ptr -0x8[bp],ax 
E2DD                          L$1614:
E2DD    49                        dec         cx 
E2DE    83 6E F8 04               sub         word ptr -0x8[bp],0x0004 
E2E2    83 F9 FF                  cmp         cx,0xffff 
E2E5    0F 84 7E 00               je          L$1616 
E2E9    C7 46 FA 05 00            mov         word ptr -0x6[bp],0x0005 
E2EE    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
E2F1    C7 46 F0 5A 00            mov         word ptr -0x10[bp],0x005a 
E2F6    89 46 F6                  mov         word ptr -0xa[bp],ax 
E2F9                          L$1615:
E2F9    FF 4E FA                  dec         word ptr -0x6[bp] 
E2FC    83 6E F0 12               sub         word ptr -0x10[bp],0x0012 
E300    83 7E FA FF               cmp         word ptr -0x6[bp],0xffff 
E304    74 D7                     je          L$1614 
E306    36 C5 1E 00 00            lds         bx,dword ptr ss:_vpus 
E30B    03 5E F6                  add         bx,word ptr -0xa[bp] 
E30E    C5 07                     lds         ax,dword ptr [bx] 
E310    36 8B 3E 00 00            mov         di,word ptr ss:_active_window 
E315    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
E318    C1 E7 02                  shl         di,0x02 
E31B    01 C3                     add         bx,ax 
E31D    36 C4 06 00 00            les         ax,dword ptr ss:_windows 
E322    01 C7                     add         di,ax 
E324    8B 47 76                  mov         ax,word ptr 0x76[bx] 
E327    26 8B 15                  mov         dx,word ptr es:[di] 
E32A    89 46 F2                  mov         word ptr -0xe[bp],ax 
E32D    89 56 F4                  mov         word ptr -0xc[bp],dx 
E330    8B 47 78                  mov         ax,word ptr 0x78[bx] 
E333    26 8B 55 02               mov         dx,word ptr es:0x2[di] 
E337    39 D0                     cmp         ax,dx 
E339    75 BE                     jne         L$1615 
E33B    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
E33E    3B 46 F4                  cmp         ax,word ptr -0xc[bp] 
E341    75 B6                     jne         L$1615 
E343    66 C7 47 76 00 00 00 00
                                  mov         dword ptr 0x76[bx],0x00000000 
E34B    36 C5 1E 00 00            lds         bx,dword ptr ss:_vpus 
E350    03 5E F6                  add         bx,word ptr -0xa[bp] 
E353    C5 07                     lds         ax,dword ptr [bx] 
E355    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
E358    01 C3                     add         bx,ax 
E35A    8B 47 72                  mov         ax,word ptr 0x72[bx] 
E35D    8B 57 74                  mov         dx,word ptr 0x74[bx] 
E360    9A 00 00 00 00            call        _ffree_ 
E365    EB 92                     jmp         L$1615 
E367                          L$1616:
E367    36 8B 1E 00 00            mov         bx,word ptr ss:_active_window 
E36C    36 A1 00 00               mov         ax,word ptr ss:_windows 
E370    C1 E3 02                  shl         bx,0x02 
E373    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
E378    01 C3                     add         bx,ax 
E37A    8B 07                     mov         ax,word ptr [bx] 
E37C    8B 57 02                  mov         dx,word ptr 0x2[bx] 
E37F    0E                        push        cs 
E380    E8 00 00                  call        del_window_ 
E383    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
E386    C7 04 00 00               mov         word ptr [si],0x0000 
E38A    E9 FD AB                  jmp         L$1094 
E38D    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
E392    01 C3                     add         bx,ax 
E394    8B 07                     mov         ax,word ptr [bx] 
E396    8B 57 02                  mov         dx,word ptr 0x2[bx] 
E399    E8 00 00                  call        window_kbdresize_ 
E39C    E9 EB AB                  jmp         L$1094 
E39F    36 8B 1E 00 00            mov         bx,word ptr ss:_icon_selected 
E3A4    83 FB 04                  cmp         bx,0x0004 
E3A7    77 2A                     ja          L$1617 
E3A9    01 DB                     add         bx,bx 
E3AB    2E FF A7 48 E2            jmp         word ptr cs:load_settings_-0x1db8[bx] 
E3B0    31 C0                     xor         ax,ax 
E3B2    31 D2                     xor         dx,dx 
E3B4    E8 00 00                  call        init_vpuconsole_window_ 
E3B7    EB 1A                     jmp         L$1617 
E3B9    E8 00 00                  call        init_clock_window_ 
E3BC    EB 15                     jmp         L$1617 
E3BE    E8 00 00                  call        init_cpanel_window_ 
E3C1    EB 10                     jmp         L$1617 
E3C3    31 C0                     xor         ax,ax 
E3C5    31 D2                     xor         dx,dx 
E3C7    E8 00 00                  call        init_fileman_window_ 
E3CA    EB 07                     jmp         L$1617 
E3CC    31 C0                     xor         ax,ax 
E3CE    31 D2                     xor         dx,dx 
E3D0    E8 00 00                  call        init_run_window_ 
E3D3                          L$1617:
E3D3    36 8B 36 00 00            mov         si,word ptr ss:_shortcut_count 
E3D8    69 C6 D2 00               imul        ax,si,0x00d2 
E3DC    89 46 FE                  mov         word ptr -0x2[bp],ax 
E3DF                          L$1618:
E3DF    4E                        dec         si 
E3E0    81 6E FE D2 00            sub         word ptr -0x2[bp],0x00d2 
E3E5    83 FE FF                  cmp         si,0xffff 
E3E8    0F 84 9E AB               je          L$1094 
E3EC    36 A1 00 00               mov         ax,word ptr ss:_desktop_icon_count 
E3F0    01 F0                     add         ax,si 
E3F2    36 3B 06 00 00            cmp         ax,word ptr ss:_icon_selected 
E3F7    75 E6                     jne         L$1618 
E3F9    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
E3FE    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
E403    03 5E FE                  add         bx,word ptr -0x2[bp] 
E406    8E C2                     mov         es,dx 
E408    8D 7F 0D                  lea         di,0xd[bx] 
E40B    B9 FF FF                  mov         cx,0xffff 
E40E    33 C0                     xor         ax,ax 
E410    F2 AE                     repne scasb 
E412    F7 D1                     not         cx 
E414    49                        dec         cx 
E415    8E DA                     mov         ds,dx 
E417    01 CB                     add         bx,cx 
E419    80 7F 0C 5C               cmp         byte ptr 0xc[bx],0x5c 
E41D    75 14                     jne         L$1619 
E41F    36 A1 00 00               mov         ax,word ptr ss:_desktop_shortcuts 
E423    03 46 FE                  add         ax,word ptr -0x2[bp] 
E426    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
E42B    05 0D 00                  add         ax,0x000d 
E42E    E8 00 00                  call        init_fileman_window_ 
E431    EB AC                     jmp         L$1618 
E433                          L$1619:
E433    36 8B 1E 00 00            mov         bx,word ptr ss:_desktop_shortcuts 
E438    36 8B 16 02 00            mov         dx,word ptr ss:_desktop_shortcuts+0x2 
E43D    03 5E FE                  add         bx,word ptr -0x2[bp] 
E440    8E DA                     mov         ds,dx 
E442    8D 47 0D                  lea         ax,0xd[bx] 
E445    80 BF D0 00 00            cmp         byte ptr 0xd0[bx],0x00 
E44A    74 05                     je          L$1620 
E44C    E8 00 00                  call        init_run_window_ 
E44F    EB 8E                     jmp         L$1618 
E451                          L$1620:
E451    36 FF 36 00 00            push        word ptr ss:_DEFAULT_PRIVS 
E456    8D 7F 5E                  lea         di,0x5e[bx] 
E459    6A 00                     push        0x0000 
E45B    89 D1                     mov         cx,dx 
E45D    6A 00                     push        0x0000 
E45F    89 C3                     mov         bx,ax 
E461    6A 00                     push        0x0000 
E463    89 F8                     mov         ax,di 
E465    0E                        push        cs 
E466    E8 00 00                  call        run_program_ 
E469    E9 73 FF                  jmp         L$1618 
E46C    36 C5 3E 00 00            lds         di,dword ptr ss:_windows 
E471    01 C7                     add         di,ax 
E473    C5 1D                     lds         bx,dword ptr [di] 
E475    8A 47 16                  mov         al,byte ptr 0x16[bx] 
E478    A8 01                     test        al,0x01 
E47A    74 3C                     je          L$1623 
E47C    A8 04                     test        al,0x04 
E47E    74 0F                     je          L$1621 
E480    89 D8                     mov         ax,bx 
E482    8C DA                     mov         dx,ds 
E484    E8 00 00                  call        unmaximize_window_ 
E487    36 C6 06 00 00 01         mov         byte ptr ss:_screen_redraw,0x01 
E48D    EB 07                     jmp         L$1622 
E48F                          L$1621:
E48F    89 D8                     mov         ax,bx 
E491    8C DA                     mov         dx,ds 
E493    E8 00 00                  call        maximize_window_ 
E496                          L$1622:
E496    36 8B 36 00 00            mov         si,word ptr ss:_active_window 
E49B    36 A1 00 00               mov         ax,word ptr ss:_windows 
E49F    C1 E6 02                  shl         si,0x02 
E4A2    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
E4A7    01 C6                     add         si,ax 
E4A9    C5 1C                     lds         bx,dword ptr [si] 
E4AB    81 67 16 EF E3            and         word ptr 0x16[bx],0xe3ef 
E4B0    81 4F 16 10 10            or          word ptr 0x16[bx],0x1010 
E4B5    E9 D2 AA                  jmp         L$1094 
E4B8                          L$1623:
E4B8    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E4BC    85 C0                     test        ax,ax 
E4BE    7C 18                     jl          L$1624 
E4C0    89 C3                     mov         bx,ax 
E4C2    36 A1 00 00               mov         ax,word ptr ss:_windows 
E4C6    C1 E3 02                  shl         bx,0x02 
E4C9    36 8E 1E 02 00            mov         ds,word ptr ss:_windows+0x2 
E4CE    01 C3                     add         bx,ax 
E4D0    8B 07                     mov         ax,word ptr [bx] 
E4D2    8B 57 02                  mov         dx,word ptr 0x2[bx] 
E4D5    E8 00 00                  call        minimize_window_ 
E4D8                          L$1624:
E4D8    8E 5E FC                  mov         ds,word ptr -0x4[bp] 
E4DB    83 3C 32                  cmp         word ptr [si],0x0032 
E4DE    0F 85 A8 AA               jne         L$1094 
E4E2    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E4E8    7D CE                     jge         L$1623 
E4EA    36 8B 16 00 00            mov         dx,word ptr ss:_window_count 
E4EF    89 D1                     mov         cx,dx 
E4F1    C1 E1 02                  shl         cx,0x02 
E4F4                          L$1625:
E4F4    4A                        dec         dx 
E4F5    83 E9 04                  sub         cx,0x0004 
E4F8    83 FA FF                  cmp         dx,0xffff 
E4FB    0F 84 8B AA               je          L$1094 
E4FF    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
E504    01 CB                     add         bx,cx 
E506    C5 37                     lds         si,dword ptr [bx] 
E508    8B 5C 38                  mov         bx,word ptr 0x38[si] 
E50B    8B 44 36                  mov         ax,word ptr 0x36[si] 
E50E    81 FB 00 00               cmp         bx,seg clock_program_ 
E512    75 E0                     jne         L$1625 
E514    3D 00 00                  cmp         ax,offset clock_program_ 
E517    75 DB                     jne         L$1625 
E519    89 D0                     mov         ax,dx 
E51B    E8 00 00                  call        unminimize_window_ 
E51E    EB D4                     jmp         L$1625 
E520    36 83 3E 00 00 00         cmp         word ptr ss:_window_count,0x0000 
E526    74 03                     je          L$1626 
E528    E8 00 00                  call        tile_windows_ 
E52B                          L$1626:
E52B    36 C6 06 00 00 01         mov         byte ptr ss:_screen_redraw,0x01 
E531    E9 56 AA                  jmp         L$1094 
E534    36 83 3E 00 00 00         cmp         word ptr ss:_window_count,0x0000 
E53A    74 EF                     je          L$1626 
E53C    E8 00 00                  call        cascade_windows_ 
E53F    EB EA                     jmp         L$1626 
E541    E8 00 00                  call        quitprompt_ 
E544    E9 43 AA                  jmp         L$1094 
E547                          mouseclick_:
E547    53                        push        bx 
E548    36 A1 02 00               mov         ax,word ptr ss:_mouse+0x2 
E54C    36 8B 1E 00 00            mov         bx,word ptr ss:_mouse 
E551    85 C0                     test        ax,ax 
E553    75 08                     jne         L$1627 
E555    85 DB                     test        bx,bx 
E557    75 04                     jne         L$1627 
E559    31 C0                     xor         ax,ax 
E55B    5B                        pop         bx 
E55C    C3                        ret         
E55D                          L$1627:
E55D    8E D8                     mov         ds,ax 
E55F    8B 47 04                  mov         ax,word ptr 0x4[bx] 
E562    89 C3                     mov         bx,ax 
E564    30 E7                     xor         bh,ah 
E566    D1 E8                     shr         ax,0x01 
E568    30 E4                     xor         ah,ah 
E56A    80 E3 01                  and         bl,0x01 
E56D    24 01                     and         al,0x01 
E56F    09 D8                     or          ax,bx 
E571    5B                        pop         bx 
E572    C3                        ret         

Routine Size: 2799 bytes,    Routine Base: main_TEXT + DA84

E573                          main_:
E573    C8 04 00 00               enter       0x0004,0x00 
E577    89 C2                     mov         dx,ax 
E579    C7 46 FE 00 00            mov         word ptr -0x2[bp],0x0000 
E57E    E8 00 00                  call        start_program_ 
E581    83 FA 01                  cmp         dx,0x0001 
E584    76 09                     jbe         L$1628 
E586    89 D0                     mov         ax,dx 
E588    83 C3 04                  add         bx,0x0004 
E58B    48                        dec         ax 
E58C    E8 00 00                  call        start_arg1_prog_ 
E58F                          L$1628:
E58F    C7 46 FC FF 7F            mov         word ptr -0x4[bp],0x7fff 
E594    E8 00 00                  call        screensaver_func_ 
E597    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E59B    C1 E0 02                  shl         ax,0x02 
E59E    36 83 3E 00 00 00         cmp         word ptr ss:_menu_selected,0x0000 
E5A4    7C 48                     jl          L$1631 
E5A6    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E5AC    7D 18                     jge         L$1630 
E5AE    31 C0                     xor         ax,ax 
E5B0    31 D2                     xor         dx,dx 
E5B2    E8 00 00                  call        dropmenu_handler_ 
E5B5    89 46 FC                  mov         word ptr -0x4[bp],ax 
E5B8    85 C0                     test        ax,ax 
E5BA    0F 85 8E 00               jne         L$1635 
E5BE                          L$1629:
E5BE    C7 46 FC FF 7F            mov         word ptr -0x4[bp],0x7fff 
E5C3    E9 7D 00                  jmp         L$1634 
E5C6                          L$1630:
E5C6    36 C5 36 00 00            lds         si,dword ptr ss:_windows 
E5CB    01 C6                     add         si,ax 
E5CD    8B 04                     mov         ax,word ptr [si] 
E5CF    8B 54 02                  mov         dx,word ptr 0x2[si] 
E5D2    E8 00 00                  call        dropmenu_handler_ 
E5D5    89 46 FC                  mov         word ptr -0x4[bp],ax 
E5D8    85 C0                     test        ax,ax 
E5DA    74 E2                     je          L$1629 
E5DC    F6 C4 80                  test        ah,0x80 
E5DF    0F 84 23 01               je          L$1644 
E5E3    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E5E7    40                        inc         ax 
E5E8    36 A3 00 00               mov         word ptr ss:_next_window,ax 
E5EC    EB 5E                     jmp         L$1635 
E5EE                          L$1631:
E5EE    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
E5F4    75 4D                     jne         L$1634 
E5F6    36 83 3E 00 00 00         cmp         word ptr ss:_active_window,0x0000 
E5FC    7C 45                     jl          L$1634 
E5FE    36 C5 1E 00 00            lds         bx,dword ptr ss:_windows 
E603    01 C3                     add         bx,ax 
E605    C5 37                     lds         si,dword ptr [bx] 
E607    8B 44 34                  mov         ax,word ptr 0x34[si] 
E60A    85 C0                     test        ax,ax 
E60C    7C 35                     jl          L$1634 
E60E    89 C3                     mov         bx,ax 
E610    C1 E3 02                  shl         bx,0x02 
E613    C4 44 18                  les         ax,dword ptr 0x18[si] 
E616    01 C3                     add         bx,ax 
E618    26 C4 3F                  les         di,dword ptr es:[bx] 
E61B    26 8A 05                  mov         al,byte ptr es:[di] 
E61E    24 1F                     and         al,0x1f 
E620    3C 08                     cmp         al,0x08 
E622    74 13                     je          L$1633 
E624    3C 02                     cmp         al,0x02 
E626    75 24                     jne         L$1635 
E628    89 F0                     mov         ax,si 
E62A    8C DA                     mov         dx,ds 
E62C    8B 5C 34                  mov         bx,word ptr 0x34[si] 
E62F    E8 00 00                  call        edit_textbox_ 
E632                          L$1632:
E632    89 46 FC                  mov         word ptr -0x4[bp],ax 
E635    EB 15                     jmp         L$1635 
E637                          L$1633:
E637    89 F0                     mov         ax,si 
E639    8C DA                     mov         dx,ds 
E63B    8B 5C 34                  mov         bx,word ptr 0x34[si] 
E63E    E8 00 00                  call        edit_ml_textbox_ 
E641    EB EF                     jmp         L$1632 
E643                          L$1634:
E643    9A 00 00 00 00            call        kbhit_ 
E648    85 C0                     test        ax,ax 
E64A    75 1F                     jne         L$1637 
E64C                          L$1635:
E64C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
E64F    E8 00 00                  call        call_mouse_handler_ 
E652    89 46 FC                  mov         word ptr -0x4[bp],ax 
E655    F6 C4 80                  test        ah,0x80 
E658    75 07                     jne         L$1636 
E65A    3D FF 7F                  cmp         ax,0x7fff 
E65D    0F 85 A5 00               jne         L$1644 
E661                          L$1636:
E661    C7 46 FE FF FF            mov         word ptr -0x2[bp],0xffff 
E666    E8 00 00                  call        switch_tty_ 
E669    EB 49                     jmp         L$1640 
E66B                          L$1637:
E66B    8D 46 FE                  lea         ax,-0x2[bp] 
E66E    8C D2                     mov         dx,ss 
E670    E8 00 00                  call        main_kbd_handler_ 
E673    89 46 FC                  mov         word ptr -0x4[bp],ax 
E676    85 C0                     test        ax,ax 
E678    76 0F                     jbe         L$1638 
E67A    3D FF 7F                  cmp         ax,0x7fff 
E67D    74 0A                     je          L$1638 
E67F    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
E685    0F 84 7D 00               je          L$1644 
E689                          L$1638:
E689    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
E68F    75 12                     jne         L$1639 
E691    36 A1 00 00               mov         ax,word ptr ss:_active_window 
E695    40                        inc         ax 
E696    36 A3 00 00               mov         word ptr ss:_next_window,ax 
E69A    36 C7 06 00 00 FF FF      mov         word ptr ss:_next_tty,0xffff 
E6A1    EB 11                     jmp         L$1640 
E6A3                          L$1639:
E6A3    36 0F B6 06 00 00         movzx       ax,byte ptr ss:_tty 
E6A9    36 A3 00 00               mov         word ptr ss:_next_tty,ax 
E6AD    36 C7 06 00 00 FF FF      mov         word ptr ss:_next_window,0xffff 
E6B4                          L$1640:
E6B4    6A 00                     push        0x0000 
E6B6    8B 5E FC                  mov         bx,word ptr -0x4[bp] 
E6B9    8D 46 FE                  lea         ax,-0x2[bp] 
E6BC    6A 00                     push        0x0000 
E6BE    8C D2                     mov         dx,ss 
E6C0    0E                        push        cs 
E6C1    E8 00 00                  call        mtask_win_ 
E6C4    89 46 FC                  mov         word ptr -0x4[bp],ax 
E6C7    E8 00 00                  call        draw_mouse_cursor_ 
E6CA    9A 00 00 00 00            call        all_proc_blocking_ 
E6CF    85 C0                     test        ax,ax 
E6D1    74 01                     je          L$1641 
E6D3    F4                        hlt         
E6D4                          L$1641:
E6D4    36 80 3E 00 00 00         cmp         byte ptr ss:_tty,0x00 
E6DA    74 06                     je          L$1642 
E6DC    E8 00 00                  call        draw_tty_ 
E6DF    E9 AD FE                  jmp         L$1628 
E6E2                          L$1642:
E6E2    36 80 3E 00 00 00         cmp         byte ptr ss:_screen_redraw,0x00 
E6E8    74 1C                     je          L$1644 
E6EA    36 A0 00 00               mov         al,byte ptr ss:__VIDEO_MODE 
E6EE    36 3A 06 00 00            cmp         al,byte ptr ss:_video 
E6F3    74 05                     je          L$1643 
E6F5    9A 00 00 00 00            call        restore_videomode_ 
E6FA                          L$1643:
E6FA    E8 00 00                  call        draw_desktop_ 
E6FD    E8 00 00                  call        draw_windows_ 
E700    36 C6 06 00 00 00         mov         byte ptr ss:_screen_redraw,0x00 
E706                          L$1644:
E706    8D 46 FC                  lea         ax,-0x4[bp] 
E709    8C D2                     mov         dx,ss 
E70B    E8 00 00                  call        wm_action_ 
E70E    E9 7E FE                  jmp         L$1628 

Routine Size: 414 bytes,    Routine Base: main_TEXT + E573

No disassembly errors

Segment: CONST WORD USE16 000009C4 bytes
0000                          L$1724:
0000    69 63 6F 6E 73 2F 72 75 6E 70 72 6D 70 74 2E 69 icons/runprmpt.i
0010    63 6F 00                                        co.
0013                          L$1725:
0013    52 75 6E 20 70 72 6F 67 72 61 6D 00             Run program.
001F                          L$1726:
001F    69 63 6F 6E 73 2F 66 69 6C 65 6D 61 6E 2E 69 63 icons/fileman.ic
002F    6F 00                                           o.
0031                          L$1727:
0031    46 69 6C 65 20 6D 61 6E 61 67 65 72 00          File manager.
003E                          L$1728:
003E    69 63 6F 6E 73 2F 63 70 61 6E 65 6C 2E 69 63 6F icons/cpanel.ico
004E    00                                              .
004F                          L$1729:
004F    43 6F 6E 74 72 6F 6C 20 70 61 6E 65 6C 00       Control panel.
005D                          L$1730:
005D    69 63 6F 6E 73 2F 63 6C 6F 63 6B 2E 69 63 6F 00 icons/clock.ico.
006D                          L$1731:
006D    43 6C 6F 63 6B 00                               Clock.
0073                          L$1732:
0073    69 63 6F 6E 73 2F 76 70 75 63 6F 6E 2E 69 63 6F icons/vpucon.ico
0083    00                                              .
0084                          L$1733:
0084    56 50 55 20 43 6F 6E 73 6F 6C 65 00             VPU Console.
0090                          L$1734:
0090    73 75 6E 00                                     sun.
0094                          L$1735:
0094    6D 6F 6E 00                                     mon.
0098                          L$1736:
0098    74 75 65 00                                     tue.
009C                          L$1737:
009C    77 65 64 00                                     wed.
00A0                          L$1738:
00A0    74 68 75 00                                     thu.
00A4                          L$1739:
00A4    66 72 69 00                                     fri.
00A8                          L$1740:
00A8    73 61 74 00                                     sat.
00AC                          L$1741:
00AC    62 79 74 65 73 00                               bytes.
00B2                          L$1742:
00B2    6B 69 6C 6F 00                                  kilo.
00B7                          L$1743:
00B7    6D 65 67 61 00                                  mega.
00BC                          L$1744:
00BC    72 00                                           r.
00BE                          L$1745:
00BE    73 65 74 75 70 2E 69 6E 69 00                   setup.ini.
00C8                          L$1746:
00C8    44 45 53 4B 54 4F 50 5C 25 73 00                DESKTOP\%s.
00D3                          L$1747:
00D3    72 62 00                                        rb.
00D6                          L$1748:
00D6    44 65 73 6B 74 6F 70 00                         Desktop.
00DE                          L$1749:
00DE    53 68 6F 77 20 64 65 73 6B 74 6F 70 00          Show desktop.
00EB                          L$1750:
00EB    45 78 69 74 20 74 6F 20 44 4F 53 00             Exit to DOS.
00F7                          L$1751:
00F7    57 69 6E 64 6F 77 00                            Window.
00FE                          L$1752:
00FE    54 69 6C 65 00                                  Tile.
0103                          L$1753:
0103    43 61 73 63 61 64 65 00                         Cascade.
010B                          L$1754:
010B    69 63 6F 6E 73 2F 77 6E 64 77 64 66 6C 74 2E 69 icons/wndwdflt.i
011B    63 6F 00                                        co.
011E                          L$1755:
011E    77 00                                           w.
0120                          L$1756:
0120    25 69 00                                        %i.
0123                          L$1757:
0123    44 45 53 4B 54 4F 50 5C 2A 2E 6C 6E 6B 00       DESKTOP\*.lnk.
0131                          L$1758:
0131    25 73 00                                        %s.
0134                          L$1759:
0134    6E 6F 72 6D 61 6C 2E 63 75 72 00                normal.cur.
013F                          L$1760:
013F    68 6F 75 72 67 6C 61 73 2E 63 75 72 00          hourglas.cur.
014C                          L$1761:
014C    45 72 72 6F 72 00                               Error.
0152                          L$1762:
0152    0D 25 73 20 25 75 20 25 73 00                   .%s %u %s.
015C                          L$1763:
015C    45 72 72 6F 72 20 63 6F 64 65 3A 20 30 78 25 58 Error code: 0x%X
016C    20 28 25 69 29 00                                (%i).
0172                          L$1764:
0172    54 68 69 73 20 64 69 61 6C 6F 67 20 73 68 6F 77 This dialog show
0182    73 20 65 72 72 6F 72 20 63 6F 64 65 73 2E 00    s error codes..
0191                          L$1765:
0191    25 73 5C 25 73 00                               %s\%s.
0197                          L$1766:
0197    25 73 25 73 00                                  %s%s.
019C                          L$1767:
019C    50 72 65 73 73 20 61 6E 79 20 6B 65 79 20 74 6F Press any key to
01AC    20 72 65 74 75 72 6E 20 74 6F 20 73 68 65 6C 6C  return to shell
01BC    2E 0A 00                                        ...
01BF                          L$1768:
01BF    43 61 6E 6E 6F 74 20 66 69 6E 64 20 25 73 00    Cannot find %s.
01CE                          L$1769:
01CE    2F 43 20 25 73 20 25 73 00                      /C %s %s.
01D7                          L$1770:
01D7    44 4F 53 48 2E 41 50 50 00                      DOSH.APP.
01E0                          L$1771:
01E0    25 73 2A 2E 2A 00                               %s*.*.
01E6                          L$1772:
01E6    50 41 54 48 00                                  PATH.
01EB                          L$1773:
01EB    43 4F 4D 53 50 45 43 00                         COMSPEC.
01F3                          L$1774:
01F3    43 4F 4D 4D 41 4E 44 2E 43 4F 4D 00             COMMAND.COM.
01FF                          L$1775:
01FF    49 43 4F 4E 53 2F 52 55 4E 50 52 4D 50 54 2E 49 ICONS/RUNPRMPT.I
020F    43 4F 00                                        CO.
0212                          L$1776:
0212    44 65 66 61 75 6C 74 20 70 72 69 76 69 6C 65 67 Default privileg
0222    65 73 00                                        es.
0225                          L$1777:
0225    11 53 61 76 65 00                               .Save.
022B                          L$1778:
022B    11 52 65 61 64 20 66 69 6C 65 73 79 73 74 65 6D .Read filesystem
023B    00                                              .
023C                          L$1779:
023C    11 4D 6F 64 69 66 79 20 66 69 6C 65 73 79 73 74 .Modify filesyst
024C    65 6D 00                                        em.
024F                          L$1780:
024F    52 11 6F 6F 74 20 66 69 6C 65 73 79 73 74 65 6D R.oot filesystem
025F    20 61 63 63 65 73 73 00                          access.
0267                          L$1781:
0267    11 50 72 6F 63 65 73 73 20 73 69 67 6E 61 6C 69 .Process signali
0277    6E 67 00                                        ng.
027A                          L$1782:
027A    11 55 73 65 20 6D 6F 64 75 6C 65 73 00          .Use modules.
0287                          L$1783:
0287    11 4C 6F 61 64 20 6D 6F 64 75 6C 65 73 20 61 6E .Load modules an
0297    64 20 72 75 6E 20 44 4F 53 20 70 72 6F 67 72 61 d run DOS progra
02A7    6D 73 00                                        ms.
02AA                          L$1784:
02AA    52 6F 6F 11 74 20 70 72 69 76 69 6C 65 67 65 73 Roo.t privileges
02BA    00                                              .
02BB                          L$1785:
02BB    53 65 6C 65 63 74 20 70 72 6F 67 72 61 6D 20 73 Select program s
02CB    74 61 72 74 2D 75 70 20 70 72 69 76 69 6C 65 67 tart-up privileg
02DB    65 73 3A 00                                     es:.
02DF                          L$1786:
02DF    00                                              .
02E0                          L$1787:
02E0    11 52 75 6E 00                                  .Run.
02E5                          L$1788:
02E5    52 75 6E 20 26 20 11 63 6C 6F 73 65 00          Run & .close.
02F2                          L$1789:
02F2    50 72 69 11 76 69 6C 65 67 65 73 00             Pri.vileges.
02FE                          L$1790:
02FE    50 72 6F 67 72 61 6D 20 70 61 74 68 00          Program path.
030B                          L$1791:
030B    41 72 67 75 6D 65 6E 74 73 00                   Arguments.
0315                          L$1792:
0315    57 6F 72 6B 69 6E 67 20 64 69 72 65 63 74 6F 72 Working director
0325    79 00                                           y.
0327                          L$1793:
0327    25 73 20 25 75 2E 20 25 75 2E 20 25 75 20 2D 20 %s %u. %u. %u - 
0337    25 69 3A 25 2E 32 69 3A 25 2E 32 69 00          %i:%.2i:%.2i.
0344                          L$1794:
0344    49 43 4F 4E 53 2F 43 4C 4F 43 4B 2E 49 43 4F 00 ICONS/CLOCK.ICO.
0354                          L$1795:
0354    66 69 6C 65 61 73 73 63 2E 64 61 74 00          fileassc.dat.
0361                          L$1796:
0361    25 73 5C 00                                     %s\.
0365                          L$1797:
0365    4F 70 65 6E 20 66 69 6C 65 20 77 69 74 68 20 70 Open file with p
0375    72 6F 67 72 61 6D 00                            rogram.
037C                          L$1798:
037C    47 6F 00                                        Go.
037F                          L$1799:
037F    4F 70 65 6E 20 66 69 6C 65 00                   Open file.
0389                          L$1800:
0389    75 73 69 6E 67 20 74 68 65 20 70 72 6F 67 72 61 using the progra
0399    6D 3A 00                                        m:.
039C                          L$1801:
039C    43 72 65 61 74 65 20 64 69 72 65 63 74 6F 72 79 Create directory
03AC    00                                              .
03AD                          L$1802:
03AD    43 72 65 61 74 65 20 6E 65 77 20 73 75 62 64 69 Create new subdi
03BD    72 65 63 74 6F 72 79 20 74 6F 00                rectory to.
03C8                          L$1803:
03C8    77 69 74 68 20 74 68 65 20 6E 61 6D 65 3A 00    with the name:.
03D7                          L$1804:
03D7    45 72 72 6F 72 20 25 75 20 77 68 65 6E 20 74 72 Error %u when tr
03E7    79 69 6E 67 20 74 6F 20 72 65 6E 61 6D 65 20 66 ying to rename f
03F7    69 6C 65 00                                     ile.
03FB                          L$1805:
03FB    43 68 61 6E 67 65 20 66 69 6C 65 20 6E 61 6D 65 Change file name
040B    00                                              .
040C                          L$1806:
040C    43 68 61 6E 67 65 20 66 69 6C 65 20 6E 61 6D 65 Change file name
041C    20 66 72 6F 6D 00                                from.
0422                          L$1807:
0422    74 6F 3A 00                                     to:.
0426                          L$1808:
0426    69 6E 20 00                                     in .
042A                          L$1809:
042A    4E 4F 54 45 50 41 44 2E 41 50 50 00             NOTEPAD.APP.
0436                          L$1810:
0436    25 73 20 25 73 20 2F 45 00                      %s %s /E.
043F                          L$1811:
043F    58 43 4F 50 59 00                               XCOPY.
0445                          L$1812:
0445    44 45 4C 54 52 45 45 00                         DELTREE.
044D                          L$1813:
044D    45 72 72 6F 72 20 77 68 69 6C 65 20 63 6F 70 79 Error while copy
045D    69 6E 67 20 66 69 6C 65 00                      ing file.
0466                          L$1814:
0466    25 75 20 25 25 00                               %u %%.
046C                          L$1815:
046C    43 6F 70 79 69 6E 67 20 66 69 6C 65 00          Copying file.
0479                          L$1816:
0479    25 73 20 25 73 00                               %s %s.
047F                          L$1817:
047F    4E 6F 74 68 69 6E 67 20 74 6F 20 70 61 73 74 65 Nothing to paste
048F    21 00                                           !.
0491                          L$1818:
0491    43 6F 70 79 20 64 69 72 65 63 74 6F 72 79 20 25 Copy directory %
04A1    73 20 75 73 69 6E 67 20 58 43 4F 50 59 3F 00    s using XCOPY?.
04B0                          L$1819:
04B0    43 6F 70 79 20 64 69 72 65 63 74 6F 72 79 00    Copy directory.
04BF                          L$1820:
04BF    52 65 70 6C 61 63 65 20 25 73 20 69 6E 20 74 68 Replace %s in th
04CF    65 20 64 65 73 74 69 6E 61 74 69 6F 6E 20 64 69 e destination di
04DF    72 65 63 74 6F 72 79 3F 00                      rectory?.
04E8                          L$1821:
04E8    46 69 6C 65 20 65 78 69 73 74 73 21 00          File exists!.
04F5                          L$1822:
04F5    44 65 6C 65 74 65 20 64 69 72 65 63 74 6F 72 79 Delete directory
0505    20 25 73 20 75 73 69 6E 67 20 44 45 4C 54 52 45  %s using DELTRE
0515    45 3F 00                                        E?.
0518                          L$1823:
0518    44 65 6C 65 74 65 20 64 69 72 65 63 74 6F 72 79 Delete directory
0528    00                                              .
0529                          L$1824:
0529    25 73 25 73 20 2F 59 00                         %s%s /Y.
0531                          L$1825:
0531    44 65 6C 65 74 65 20 66 69 6C 65 20 25 73 3F 00 Delete file %s?.
0541                          L$1826:
0541    44 65 6C 65 74 65 20 66 69 6C 65 00             Delete file.
054D                          L$1827:
054D    25 6C 75 20 25 73 25 73 00                      %lu %s%s.
0556                          L$1828:
0556    25 6C 75 20 25 73 00                            %lu %s.
055D                          L$1829:
055D    44 72 69 76 65 20 25 63 20 2D 20 49 6E 66 6F 00 Drive %c - Info.
056D                          L$1830:
056D    54 6F 74 61 6C 20 63 6C 75 73 74 65 72 73 3A 20 Total clusters: 
057D    25 75 00                                        %u.
0580                          L$1831:
0580    41 76 61 69 6C 61 62 6C 65 20 63 6C 75 73 74 65 Available cluste
0590    72 73 3A 20 25 75 00                            rs: %u.
0597                          L$1832:
0597    53 65 63 74 6F 72 73 2F 63 6C 75 73 74 65 72 3A Sectors/cluster:
05A7    20 25 75 00                                      %u.
05AB                          L$1833:
05AB    42 79 74 65 73 20 70 65 72 20 73 65 63 74 6F 72 Bytes per sector
05BB    3A 20 25 75 00                                  : %u.
05C0                          L$1834:
05C0    44 72 69 76 65 20 73 69 7A 65 3A 20 25 73 00    Drive size: %s.
05CF                          L$1835:
05CF    46 72 65 65 20 73 70 61 63 65 3A 20 25 73 00    Free space: %s.
05DE                          L$1836:
05DE    46 69 6C 65 20 6E 61 6D 65 3A 20 25 73 00       File name: %s.
05EC                          L$1837:
05EC    44 69 72 65 63 74 6F 72 79 3A 20 25 73 00       Directory: %s.
05FA                          L$1838:
05FA    53 69 7A 65 3A 20 25 73 00                      Size: %s.
0603                          L$1839:
0603    54 69 6D 65 73 74 61 6D 70 3A 20 25 75 2E 20 25 Timestamp: %u. %
0613    75 2E 20 25 75 20 25 2E 32 75 3A 25 2E 32 75 3A u. %u %.2u:%.2u:
0623    25 2E 32 75 00                                  %.2u.
0628                          L$1840:
0628    41 74 74 72 69 62 75 74 65 73 3A 00             Attributes:.
0634                          L$1841:
0634    52 65 61 64 20 6F 6E 6C 79 00                   Read only.
063E                          L$1842:
063E    48 69 64 64 65 6E 00                            Hidden.
0645                          L$1843:
0645    53 79 73 74 65 6D 00                            System.
064C                          L$1844:
064C    56 6F 6C 75 6D 65 20 49 44 00                   Volume ID.
0656                          L$1845:
0656    44 69 72 65 63 74 6F 72 79 00                   Directory.
0660                          L$1846:
0660    41 72 63 68 69 76 65 00                         Archive.
0668                          L$1847:
0668    25 73 20 2D 20 25 73 00                         %s - %s.
0670                          L$1848:
0670    5C 00                                           \.
0672                          L$1849:
0672    25 63 3A 00                                     %c:.
0676                          L$1850:
0676    41 3A 00                                        A:.
0679                          L$1851:
0679    49 43 4F 4E 53 2F 46 49 4C 45 4D 41 4E 2E 49 43 ICONS/FILEMAN.IC
0689    4F 00                                           O.
068B                          L$1852:
068B    44 69 72 65 63 74 6F 72 79 3A 00                Directory:.
0696                          L$1853:
0696    46 69 6C 65 20 6E 61 6D 65 73 3A 00             File names:.
06A2                          L$1854:
06A2    4F 70 65 6E 00                                  Open.
06A7                          L$1855:
06A7    11 56 69 65 77 00                               .View.
06AD                          L$1856:
06AD    43 6F 70 79 00                                  Copy.
06B2                          L$1857:
06B2    43 75 74 00                                     Cut.
06B6                          L$1858:
06B6    50 61 73 74 65 00                               Paste.
06BC                          L$1859:
06BC    44 65 6C 65 74 65 00                            Delete.
06C3                          L$1860:
06C3    46 69 6C 65 20 11 69 6E 66 6F 00                File .info.
06CE                          L$1861:
06CE    11 43 72 65 61 74 65 20 64 69 72 65 63 74 6F 72 .Create director
06DE    79 00                                           y.
06E0                          L$1862:
06E0    52 65 11 6E 61 6D 65 00                         Re.name.
06E8                          L$1863:
06E8    44 72 69 76 65 20 69 6E 66 11 6F 00             Drive inf.o.
06F4                          L$1864:
06F4    44 72 69 76 65 00                               Drive.
06FA                          L$1865:
06FA    43 72 69 74 69 63 61 6C 20 6F 75 74 20 6F 66 20 Critical out of 
070A    6D 65 6D 6F 72 79 20 65 72 72 6F 72 21 00       memory error!.
0718                          L$1866:
0718    53 43 45 44 49 54 4F 52 2E 43 4F 4D 00          SCEDITOR.COM.
0725                          L$1867:
0725    49 43 4F 4E 53 2F 53 43 45 44 49 54 4F 52 2E 49 ICONS/SCEDITOR.I
0735    43 4F 00                                        CO.
0738                          L$1868:
0738    4E 65 77 20 73 68 6F 72 74 63 75 74 00          New shortcut.
0745                          L$1869:
0745    53 68 6F 72 74 63 75 74 20 66 69 6C 65 6E 61 6D Shortcut filenam
0755    65 3A 00                                        e:.
0758                          L$1870:
0758    44 45 53 4B 54 4F 50 5C 00                      DESKTOP\.
0761                          L$1871:
0761    11 52 75 6E 20 73 68 6F 72 74 63 75 74 20 65 64 .Run shortcut ed
0771    69 74 6F 72 00                                  itor.
0776                          L$1872:
0776    43 4F 4E 46 49 47 2E 43 4F 4D 00                CONFIG.COM.
0781                          L$1873:
0781    41 53 43 53 46 58 2E 43 4F 4D 00                ASCSFX.COM.
078C                          L$1874:
078C    49 43 4F 4E 53 2F 43 50 41 4E 45 4C 2E 49 43 4F ICONS/CPANEL.ICO
079C    00                                              .
079D                          L$1875:
079D    43 6F 6E 74 72 6F 6C 20 50 61 6E 65 6C 00       Control Panel.
07AB                          L$1876:
07AB    49 43 4F 4E 53 2F 43 4F 4E 46 49 47 2E 49 43 4F ICONS/CONFIG.ICO
07BB    00                                              .
07BC                          L$1877:
07BC    11 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00    .Configuration.
07CB                          L$1878:
07CB    49 43 4F 4E 53 2F 41 53 43 53 46 58 2E 49 43 4F ICONS/ASCSFX.ICO
07DB    00                                              .
07DC                          L$1879:
07DC    11 46 69 6C 65 20 74 79 70 65 73 00             .File types.
07E8                          L$1880:
07E8    11 4E 65 77 20 73 68 6F 72 74 63 75 74 00       .New shortcut.
07F6                          L$1881:
07F6    11 41 62 6F 75 74 20 6C 45 45 74 2F 4F 53 00    .About lEEt/OS.
0805                          L$1882:
0805    11 53 68 6F 77 20 65 72 72 6F 72 20 6C 6F 67 00 .Show error log.
0815                          L$1883:
0815    53 43 52 4E 53 56 52 53 2F 25 73 00             SCRNSVRS/%s.
0821                          L$1884:
0821    5E 53 00                                        ^S.
0824                          L$1885:
0824    5E 51 00                                        ^Q.
0827                          L$1886:
0827    5E 5A 00                                        ^Z.
082A                          L$1887:
082A    5E 44 00                                        ^D.
082D                          L$1888:
082D    45 78 69 74 65 64 20 77 69 74 68 20 72 65 74 75 Exited with retu
083D    72 6E 20 63 6F 64 65 20 25 75 00                rn code %u.
0848                          L$1889:
0848    45 72 72 6F 72 21 00                            Error!.
084F                          L$1890:
084F    49 43 4F 4E 53 2F 56 50 55 43 4F 4E 2E 49 43 4F ICONS/VPUCON.ICO
085F    00                                              .
0860                          L$1891:
0860    54 65 72 6D 00                                  Term.
0865                          L$1892:
0865    4C 6F 63 61 6C 20 65 63 68 6F 00                Local echo.
0870                          L$1893:
0870    4C 69 6E 65 20 62 75 66 66 65 72 00             Line buffer.
087C                          L$1894:
087C    45 72 72 6F 72 20 77 68 69 6C 65 20 6C 6F 61 64 Error while load
088C    69 6E 67 20 61 70 70 6C 69 63 61 74 69 6F 6E 2E ing application.
089C    00                                              .
089D                          L$1895:
089D    4C 6F 61 64 69 6E 67 20 73 65 74 74 69 6E 67 73 Loading settings
08AD    2E 2E 2E 00                                     ....
08B1                          L$1896:
08B1    4C 6F 61 64 69 6E 67 20 73 79 73 74 65 6D 20 66 Loading system f
08C1    6F 6E 74 2E 2E 2E 00                            ont....
08C8                          L$1897:
08C8    53 65 74 74 69 6E 67 20 69 6E 74 65 72 72 75 70 Setting interrup
08D8    74 73 2E 2E 2E 00                               ts....
08DE                          L$1898:
08DE    53 65 74 74 69 6E 67 20 65 6E 76 69 72 6F 6E 6D Setting environm
08EE    65 6E 74 20 76 61 72 69 61 62 6C 65 73 2E 2E 2E ent variables...
08FE    00                                              .
08FF                          L$1899:
08FF    50 72 65 70 61 72 69 6E 67 20 64 65 73 6B 74 6F Preparing deskto
090F    70 2E 2E 2E 00                                  p....
0914                          L$1900:
0914    4C 6F 61 64 69 6E 67 20 64 65 73 6B 74 6F 70 20 Loading desktop 
0924    73 68 6F 72 74 63 75 74 73 2E 2E 2E 00          shortcuts....
0931                          L$1901:
0931    50 72 65 70 61 72 69 6E 67 20 76 61 72 69 61 62 Preparing variab
0941    6C 65 73 2E 2E 2E 00                            les....
0948                          L$1902:
0948    50 72 65 70 61 72 69 6E 67 20 76 69 72 74 75 61 Preparing virtua
0958    6C 20 74 65 72 6D 69 6E 61 6C 73 2E 2E 2E 00    l terminals....
0967                          L$1903:
0967    53 77 69 74 63 68 69 6E 67 20 74 6F 20 67 72 61 Switching to gra
0977    70 68 69 63 61 6C 20 64 69 73 70 6C 61 79 20 6D phical display m
0987    6F 64 65 2E 2E 2E 00                            ode....
098E                          L$1904:
098E    50 72 65 73 73 20 5B 59 65 73 5D 20 74 6F 20 65 Press [Yes] to e
099E    78 69 74 2C 20 5B 4E 6F 5D 20 74 6F 20 63 61 6E xit, [No] to can
09AE    63 65 6C 00                                     cel.
09B2                          L$1905:
09B2    45 78 69 74 00                                  Exit.
09B7                          L$1906:
09B7    45 78 69 74 20 74 6F 20 64 6F 73 3F 00          Exit to dos?.

Segment: CONST2 WORD USE16 00000000 bytes

Segment: _DATA WORD USE16 0000032C bytes
0000                          __TITLE_COLOR:
0000    00                                              .
0001                          __TITLE_COLOR_IA:
0001    00                                              .
0002                          __TITLE_TEXTCOLOR:
0002    01                                              .
0003                          __WINDOW_BGCOLOR:
0003    01                                              .
0004                          __MENU_BGCOLOR:
0004    01                                              .
0005                          __MENU_SELCOLOR:
0005    00                                              .
0006                          __MENU_LINECOLOR:
0006    00                                              .
0007                          __MENU_ATEXTCOLOR:
0007    01                                              .
0008                          __WINDOW_BASICTEXTCOLOR:
0008    00                                              .
0009                          __BORDERCOLOR_LIGHT:
0009    00                                              .
000A                          __BORDERCOLOR_SHADOW:
000A    00                                              .
000B                          __DESKTOP_BGCOLOR:
000B    FF                                              .
000C                          __ICON_ACOLOR:
000C    00                                              .
000D                          __ICON_ICOLOR:
000D    00                                              .
000E                          __TEXTBOX_BGCOLOR:
000E    01                                              .
000F                          __TEXTBOX_ABGCOLOR:
000F    01                                              .
0010                          __TEXTBOX_TEXTCOLOR:
0010    00                                              .
0011                          __TEXTBOX_ATEXTCOLOR:
0011    01                                              .
0012                          __SCROLLBAR_BGCOLOR:
0012    00                                              .
0013                          __ATEXT_BGCOLOR:
0013    00                                              .
0014                          _monospace_font:
0014    00 00 00 00                                     ....
0018                          _video:
0018    06                                              .
0019                          _mouse_dragboxes:
0019    00 00 00 00                                     ....
001D                          _titlebar_drag:
001D    00 00 00 00                                     ....
0021                          _windows:
0021    00 00 00 00                                     ....
0025                          _window_count:
0025    00 00                                           ..
0027                          _desktop_icon_count:
0027    00 00                                           ..
0029                          _icon_selected:
0029    00 00                                           ..
002B                          _active_window:
002B    FF FF                                           ..
002D                          _running_window:
002D    00 00 00 00                                     ....
0031                          _running_console:
0031    00 00 00 00                                     ....
0035                          _system_font_file:
0035    46 4F 4E 54 53 2F 43 47 41 2E 46 4F 4E 00       FONTS/CGA.FON.
0043                          _monospace_font_file:
0043    46 4F 4E 54 53 2F 43 47 41 4D 4F 4E 2E 46 4F 4E FONTS/CGAMON.FON
0053    00                                              .
0054                          _VPUCON_LINES:
0054    0F                                              .
0055                          _window_x:
0055    28 00                                           (.
0057                          _window_y:
0057    28 00                                           (.
0059                          _comsuf:
0059    2E 43 4F 4D 00                                  .COM.
005E                          _exesuf:
005E    2E 45 58 45 00                                  .EXE.
0063                          _batsuf:
0063    2E 42 41 54 00                                  .BAT.
0068                          _appsuf:
0068    2E 41 50 50 00                                  .APP.
006D                          _lnksuf:
006D    2E 4C 4E 4B 00                                  .LNK.
0072                          _shortcut_count:
0072    00 00                                           ..
0074                          _screensaver_delay:
0074    00 00                                           ..
0076                          _screen_redraw:
0076    01                                              .
0077                          _videodriver:
0077    FF FF                                           ..
0079                          _null_byte:
0079    00                                              .
007A                          _update_screen:
007A    00 00 00 00                                     ....
007E                          _infotitle:
007E    49 6E 66 6F 00                                  Info.
0083                          _tty:
0083    00                                              .
0084                          _new_tty:
0084    FF                                              .
0085                          _caret_visible:
0085    00                                              .
0086                          _versioninfo:
0086    6C 45 45 74 2F 4F 53 20 30 2E 39 2E 34 39 30 20 lEEt/OS 0.9.490 
0096    69 36 38 36 20 62 75 69 6C 64 20 2D 20 28 63 29 i686 build - (c)
00A6    20 53 61 6D 69 20 54 69 6B 6B 61 6E 65 6E 20 32  Sami Tikkanen 2
00B6    30 32 34 00                                     024.
00BA                          L$1907:
00BA    00 00 00 00                                     DD	_video
00BE    00 00 00 00                                     DD	__TITLE_COLOR
00C2    00 00 00 00                                     DD	__TITLE_COLOR_IA
00C6    00 00 00 00                                     DD	__TITLE_TEXTCOLOR
00CA    00 00 00 00                                     DD	__WINDOW_BGCOLOR
00CE    00 00 00 00                                     DD	__MENU_BGCOLOR
00D2    00 00 00 00                                     DD	__MENU_SELCOLOR
00D6    00 00 00 00                                     DD	__MENU_LINECOLOR
00DA    00 00 00 00                                     DD	__MENU_ATEXTCOLOR
00DE    00 00 00 00                                     DD	__WINDOW_BASICTEXTCOLOR
00E2    00 00 00 00                                     DD	__BORDERCOLOR_LIGHT
00E6    00 00 00 00                                     DD	__BORDERCOLOR_SHADOW
00EA    00 00 00 00                                     DD	__DESKTOP_BGCOLOR
00EE    00 00 00 00                                     DD	__ICON_ACOLOR
00F2    00 00 00 00                                     DD	__ICON_ICOLOR
00F6    00 00 00 00                                     DD	__TEXTBOX_BGCOLOR
00FA    00 00 00 00                                     DD	__TEXTBOX_ABGCOLOR
00FE    00 00 00 00                                     DD	__TEXTBOX_TEXTCOLOR
0102    00 00 00 00                                     DD	__TEXTBOX_ATEXTCOLOR
0106    00 00 00 00                                     DD	__SCROLLBAR_BGCOLOR
010A    00 00 00 00                                     DD	__ATEXT_BGCOLOR
010E                          L$1908:
010E    00 00 00 00                                     DD	_screensaver_delay
0112                          L$1909 equ $-2
0112                          L$1910:
0112    00 00 00 00                                     DD	_screensaver_program
0116    00 00 00 00                                     DD	_wallpaper
011A                          L$1911:
011A    00 0D 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
012A    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
	--- Above line repeats 5 times ---
018A    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
019A                          _draw_window_box:
019A    00 00 00 00                                     ....
019E                          _menu_selected:
019E    FF FF                                           ..
01A0                          L$1912:
01A0    FE FF                                           ..
01A2                          L$1913:
01A2    00 00                                           ..
01A4                          L$1914:
01A4    00 00 00 00                                     DD	DGROUP:L$1724
01A8    13 00 00 00                                     DD	DGROUP:L$1725
01AC    1F 00 00 00                                     DD	DGROUP:L$1726
01B0    31 00 00 00                                     DD	DGROUP:L$1727
01B4    3E 00 00 00                                     DD	DGROUP:L$1728
01B8    4F 00 00 00                                     DD	DGROUP:L$1729
01BC    5D 00 00 00                                     DD	DGROUP:L$1730
01C0    6D 00 00 00                                     DD	DGROUP:L$1731
01C4    73 00 00 00                                     DD	DGROUP:L$1732
01C8    84 00 00 00                                     DD	DGROUP:L$1733
01CC                          _mouse_cursor:
01CC    00 00 00 00                                     ....
01D0                          _normal_cursor:
01D0    00 00 00 00                                     ....
01D4                          _busy_cursor:
01D4    00 00 00 00 A0 00 64 00                         ......d.
01DC                          _upleft_move:
01DC    4D 6F 76 65 20 77 69 6E 64 6F 77 00             Move window.
01E8                          _upleft_close:
01E8    43 6C 6F 73 65 20 77 69 6E 64 6F 77 00          Close window.
01F5                          _upleft_maximize:
01F5    28 55 6E 29 6D 61 78 69 6D 69 7A 65 00          (Un)maximize.
0202                          _upleft_resize:
0202    52 65 73 69 7A 65 00                            Resize.
0209                          _upleft_minimize:
0209    4D 69 6E 69 6D 69 7A 65 00                      Minimize.
0212                          _dialog_ok:
0212    4F 4B 00                                        OK.
0215                          _dialog_cancel:
0215    43 61 6E 63 65 6C 00                            Cancel.
021C                          _dialog_yes:
021C    59 65 73 00                                     Yes.
0220                          _dialog_no:
0220    4E 6F 00                                        No.
0223                          _dialog_help:
0223    48 65 6C 70 20 5B 46 31 5D 00                   Help [F1].
022D                          L$1915:
022D    00                                              .
022E                          _edit_text_ptr:
022E    00 00 00 00                                     ....
0232                          _errortitle:
0232    45 72 72 6F 72 00                               Error.
0238                          _outofmemory:
0238    4F 75 74 20 6F 66 20 6D 65 6D 6F 72 79 2E 00    Out of memory..
0247                          _outofmemoryprompt:
0247    41 63 74 69 6F 6E 73 3A 0A 50 72 65 73 73 20 43 Actions:.Press C
0257    20 74 6F 20 74 65 72 6D 69 6E 61 74 65 2C 20 6F  to terminate, o
0267    72 20 4B 20 74 6F 20 6B 69 6C 6C 20 74 68 65 20 r K to kill the 
0277    63 75 72 72 65 6E 74 6C 79 20 65 78 65 63 75 74 currently execut
0287    69 6E 67 20 56 50 55 20 63 6F 6E 73 6F 6C 65 2E ing VPU console.
0297    00                                              .
0298                          _outofmemoryprompt2:
0298    50 72 65 73 73 20 61 6E 79 20 6F 74 68 65 72 20 Press any other 
02A8    6B 65 79 20 74 6F 20 63 6F 6E 74 69 6E 75 65 20 key to continue 
02B8    6F 72 20 77 61 69 74 00                         or wait.
02C0                          _outofmemoryprompt3:
02C0    73 65 63 6F 6E 64 73 2E 2E 00                   seconds...
02CA                          L$1916:
02CA    45 72 72 6F 72 20 63 6F 6E 73 6F 6C 65 00       Error console.
02D8                          L$1917:
02D8    FF FF                                           ..
02DA                          L$1918:
02DA    73 74 61 72 74 75 70 5C 00                      startup\.
02E3                          _weekdays:
02E3    90 00 00 00                                     DD	DGROUP:L$1734
02E7    94 00 00 00                                     DD	DGROUP:L$1735
02EB    98 00 00 00                                     DD	DGROUP:L$1736
02EF    9C 00 00 00                                     DD	DGROUP:L$1737
02F3    A0 00 00 00                                     DD	DGROUP:L$1738
02F7    A4 00 00 00                                     DD	DGROUP:L$1739
02FB    A8 00 00 00                                     DD	DGROUP:L$1740
02FF                          __FILEMAN_TITLE:
02FF    46 69 6C 65 20 4D 61 6E 61 67 65 72 00          File Manager.
030C                          _update_list:
030C    00                                              .
030D                          L$1919:
030D    AC 00 00 00                                     DD	DGROUP:L$1741
0311    B2 00 00 00                                     DD	DGROUP:L$1742
0315    B7 00 00 00                                     DD	DGROUP:L$1743
0319                          L$1920:
0319    5C 00                                           \.
031B                          L$1921:
031B    2A 2E                                           *.
031D                          L$1922:
031D    2A 00                                           *.
031F                          _vpuconsole_window_title:
031F    56 50 55 20 43 6F 6E 73 6F 6C 65 00             VPU Console.
032B                          L$1923:
032B    00                                              .

Segment: _BSS WORD USE16 000002C9 bytes
0000                          _mouse_background:
0060                          _clipboard:
0068                          _wallpaper_struct:
0070                          _cursor_row:
0074                          _cursor_col:
0078                          _menu_window:
007C                          _ttys:
0080                          _errorlog:
0084                          _comspec:
0088                          _old_fill_screen:
008C                          _mouse:
0090                          _old_get_pixel:
0094                          _old_put_pixel:
0098                          _old_draw_rectangle:
009C                          _desktop_shortcuts:
00A0                          _path:
00A4                          _default_icons:
00A8                          _VGA:
00AC                          _window_visibility_order:
00B0                          _desktop_icons:
00B4                          _desktop_menu:
00B8                          _system_font:
00BC                          _caret_screeny:
00BE                          _caret_screenx:
00C0                          _next_tty:
00C2                          _next_window:
00C4                          _old_yres:
00C6                          _screensaver_timer:
00C8                          _cwdrive:
00CA                          _old_xres:
00CC                          __RES_Y:
00CE                          __RES_X:
00D0                          _filename_clipboard:
012F                          _wallpaper:
013C                          _cwd:
018D                          _screensaver_program:
019A                          __FONT_HEIGHT:
019B                          L$1924:
019D                          L$1925:
019F                          L$1926:
01A1                          L$1927:
01A3                          L$1928:
01A5                          L$1929:
01A7                          L$1930:
01A9                          L$1931:
01AB                          L$1932:
01FB                          L$1933:
01FC                          L$1934:
01FD                          L$1935:
01FE                          L$1936:
01FF                          L$1937:
0201                          L$1938:
0202                          L$1939:
0203                          L$1940:
0205                          L$1941:
0255                          L$1942:
02AB                          L$1943:
02B3                          L$1944:
02C7                          L$1945:

BSS Size: 713 bytes

Segment: _TEXT WORD USE16 00000000 bytes

Routine Size: 0 bytes,    Routine Base: _TEXT + 0000

No disassembly errors

