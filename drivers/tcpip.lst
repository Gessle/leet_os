Module: D:\LEETSRC\491\DRIVERS\tcpip.c
GROUP: 'DGROUP' CONST,CONST2,_DATA

Segment: _TEXT BYTE USE16 00000300 bytes
0000                          _open_sockets:
0000    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
	--- Above line repeats 6 times ---
0070    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
0080                          _int21hdl:
0080    00 00 00 00                                     ....
0084                          _psp_seg:
0084    00 00                                           ..
0086                          _open_socket_count:
0086    00 00                                           ..
0088                          socket_read_:
0088    56                        push        si 
0089    06                        push        es 
008A    89 D6                     mov         si,dx 
008C    89 DA                     mov         dx,bx 
008E    8E C6                     mov         es,si 
0090    89 C3                     mov         bx,ax 
0092    B8 02 00                  mov         ax,0x0002 
0095    CD 61                     int         0x61 
0097    07                        pop         es 
0098    5E                        pop         si 
0099    CB                        retf        
009A                          socket_write_:
009A    56                        push        si 
009B    06                        push        es 
009C    89 D6                     mov         si,dx 
009E    89 DA                     mov         dx,bx 
00A0    8E C6                     mov         es,si 
00A2    89 C3                     mov         bx,ax 
00A4    B8 03 00                  mov         ax,0x0003 
00A7    CD 61                     int         0x61 
00A9    07                        pop         es 
00AA    5E                        pop         si 
00AB    CB                        retf        
00AC                          socket_is_open_:
00AC    53                        push        bx 
00AD    51                        push        cx 
00AE    52                        push        dx 
00AF    89 C1                     mov         cx,ax 
00B1    2E 8B 16 00 00            mov         dx,word ptr cs:_open_socket_count 
00B6                          L$1:
00B6    4A                        dec         dx 
00B7    83 FA FF                  cmp         dx,0xffff 
00BA    74 35                     je          L$3 
00BC    89 D3                     mov         bx,dx 
00BE    D1 E3                     shl         bx,0x01 
00C0    2E 8B 87 00 00            mov         ax,word ptr cs:_open_sockets[bx] 
00C5    39 C1                     cmp         cx,ax 
00C7    75 ED                     jne         L$1 
00C9    89 C3                     mov         bx,ax 
00CB    B8 07 00                  mov         ax,0x0007 
00CE    CD 61                     int         0x61 
00D0    85 C0                     test        ax,ax 
00D2    75 1D                     jne         L$3 
00D4    2E FF 0E 00 00            dec         word ptr cs:_open_socket_count 
00D9                          L$2:
00D9    2E 3B 16 00 00            cmp         dx,word ptr cs:_open_socket_count 
00DE    73 D6                     jae         L$1 
00E0    89 D3                     mov         bx,dx 
00E2    D1 E3                     shl         bx,0x01 
00E4    2E 8B 87 02 00            mov         ax,word ptr cs:_open_sockets+0x2[bx] 
00E9    2E 89 87 00 00            mov         word ptr cs:_open_sockets[bx],ax 
00EE    42                        inc         dx 
00EF    EB E8                     jmp         L$2 
00F1                          L$3:
00F1    89 D0                     mov         ax,dx 
00F3    5A                        pop         dx 
00F4    59                        pop         cx 
00F5    5B                        pop         bx 
00F6    C3                        ret         
00F7                          socket_close_:
00F7    53                        push        bx 
00F8    51                        push        cx 
00F9    52                        push        dx 
00FA    89 C1                     mov         cx,ax 
00FC    E8 00 00                  call        socket_is_open_ 
00FF    85 C0                     test        ax,ax 
0101    7C 1D                     jl          L$5 
0103    2E FF 0E 00 00            dec         word ptr cs:_open_socket_count 
0108                          L$4:
0108    2E 3B 06 00 00            cmp         ax,word ptr cs:_open_socket_count 
010D    73 11                     jae         L$5 
010F    89 C3                     mov         bx,ax 
0111    D1 E3                     shl         bx,0x01 
0113    2E 8B 97 02 00            mov         dx,word ptr cs:_open_sockets+0x2[bx] 
0118    2E 89 97 00 00            mov         word ptr cs:_open_sockets[bx],dx 
011D    40                        inc         ax 
011E    EB E8                     jmp         L$4 
0120                          L$5:
0120    89 CB                     mov         bx,cx 
0122    B8 04 00                  mov         ax,0x0004 
0125    CD 61                     int         0x61 
0127    5A                        pop         dx 
0128    59                        pop         cx 
0129    5B                        pop         bx 
012A    CB                        retf        
012B                          socket_open_:
012B    52                        push        dx 
012C    56                        push        si 
012D    89 D8                     mov         ax,bx 
012F    E8 00 00                  call        socket_is_open_ 
0132    85 C0                     test        ax,ax 
0134    7D 09                     jge         L$6 
0136    2E A1 00 00               mov         ax,word ptr cs:_open_socket_count 
013A    3D 3F 00                  cmp         ax,0x003f 
013D    75 06                     jne         L$7 
013F                          L$6:
013F    B8 FF FF                  mov         ax,0xffff 
0142    5E                        pop         si 
0143    5A                        pop         dx 
0144    CB                        retf        
0145                          L$7:
0145    89 C2                     mov         dx,ax 
0147    89 C6                     mov         si,ax 
0149    D1 E6                     shl         si,0x01 
014B    2E 89 9C 00 00            mov         word ptr cs:_open_sockets[si],bx 
0150    31 C0                     xor         ax,ax 
0152    42                        inc         dx 
0153    2E 89 16 00 00            mov         word ptr cs:_open_socket_count,dx 
0158    5E                        pop         si 
0159    5A                        pop         dx 
015A    CB                        retf        
015B                          open_port_:
015B    53                        push        bx 
015C    51                        push        cx 
015D    89 D1                     mov         cx,dx 
015F    89 C3                     mov         bx,ax 
0161    B8 05 00                  mov         ax,0x0005 
0164    CD 61                     int         0x61 
0166    59                        pop         cx 
0167    5B                        pop         bx 
0168    C3                        ret         
0169                          call_get_error_:
0169    B8 06 00                  mov         ax,0x0006 
016C    CD 61                     int         0x61 
016E    CB                        retf        
016F    FC                        cld         
0170                          L$8:
0170    96 01                                           DW	offset L$9
0172    9D 01                                           DW	offset L$10
0174    AE 01                                           DW	offset L$11
0176    C0 01                                           DW	offset L$12
0178    CA 01                                           DW	offset L$14
017A    D2 01                                           DW	offset L$15
017C                          tcp_cmd_:
017C    51                        push        cx 
017D    56                        push        si 
017E    1E                        push        ds 
017F    89 D9                     mov         cx,bx 
0181    89 C3                     mov         bx,ax 
0183    8E DA                     mov         ds,dx 
0185    8A 07                     mov         al,byte ptr [bx] 
0187    3C 05                     cmp         al,0x05 
0189    77 50                     ja          L$16 
018B    30 E4                     xor         ah,ah 
018D    89 C6                     mov         si,ax 
018F    D1 E6                     shl         si,0x01 
0191    2E FF A4 70 01            jmp         word ptr cs:L$8[si] 
0196                          L$9:
0196    B8 00 00                  mov         ax,0x0000 
0199    CD 61                     int         0x61 
019B    EB 41                     jmp         L$17 
019D                          L$10:
019D    8B 47 01                  mov         ax,word ptr 0x1[bx] 
01A0    8D 77 03                  lea         si,0x3[bx] 
01A3    31 C9                     xor         cx,cx 
01A5    89 C3                     mov         bx,ax 
01A7    B8 01 00                  mov         ax,0x0001 
01AA    CD 61                     int         0x61 
01AC    EB 30                     jmp         L$17 
01AE                          L$11:
01AE    8B 47 01                  mov         ax,word ptr 0x1[bx] 
01B1    8D 77 03                  lea         si,0x3[bx] 
01B4    B9 01 00                  mov         cx,0x0001 
01B7    89 C3                     mov         bx,ax 
01B9    B8 01 00                  mov         ax,0x0001 
01BC    CD 61                     int         0x61 
01BE    EB 1E                     jmp         L$17 
01C0                          L$12:
01C0    8B 47 01                  mov         ax,word ptr 0x1[bx] 
01C3    31 D2                     xor         dx,dx 
01C5                          L$13:
01C5    E8 00 00                  call        open_port_ 
01C8    EB 14                     jmp         L$17 
01CA                          L$14:
01CA    8B 47 01                  mov         ax,word ptr 0x1[bx] 
01CD    BA 01 00                  mov         dx,0x0001 
01D0    EB F3                     jmp         L$13 
01D2                          L$15:
01D2    89 CB                     mov         bx,cx 
01D4    B8 08 00                  mov         ax,0x0008 
01D7    CD 61                     int         0x61 
01D9    EB 03                     jmp         L$17 
01DB                          L$16:
01DB    B8 FF FF                  mov         ax,0xffff 
01DE                          L$17:
01DE    1F                        pop         ds 
01DF    5E                        pop         si 
01E0    59                        pop         cx 
01E1    CB                        retf        
01E2                          unload_:
01E2    B8 1A 00                  mov         ax,0x001a 
01E5    CD 61                     int         0x61 
01E7    58                        pop         ax 
01E8    07                        pop         es 
01E9    9C                        pushf       
01EA    06                        push        es 
01EB    50                        push        ax 
01EC    FA                        cli         
01ED    2E 8E 06 00 00            mov         es,word ptr cs:_psp_seg 
01F2    B4 49                     mov         ah,0x49 
01F4    2E FF 2E 00 00            jmp         dword ptr cs:_int21hdl 

Routine Size: 505 bytes,    Routine Base: _TEXT + 0000

01F9                          main_:
01F9    53                        push        bx 
01FA    51                        push        cx 
01FB    56                        push        si 
01FC    57                        push        di 
01FD    1E                        push        ds 
01FE    06                        push        es 
01FF    55                        push        bp 
0200    89 E5                     mov         bp,sp 
0202    83 EC 3E                  sub         sp,0x003e 
0205    50                        push        ax 
0206    52                        push        dx 
0207    B9 18 00                  mov         cx,0x0018 
020A    8C D0                     mov         ax,ss 
020C    8E C0                     mov         es,ax 
020E    8D 7E C2                  lea         di,-0x3e[bp] 
0211    B8 00 00                  mov         ax,DGROUP:CONST 
0214    8E D8                     mov         ds,ax 
0216    BE 00 00                  mov         si,offset DGROUP:L$30 
0219    F3 A5                     rep movsw   
021B    B4 51                     mov         ah,0x51 
021D    CD 21                     int         0x21 
021F    31 F6                     xor         si,si 
0221    8E DB                     mov         ds,bx 
0223    83 7E C0 02               cmp         word ptr -0x40[bp],0x0002 
0227    75 3E                     jne         L$19 
0229    B8 61 00                  mov         ax,0x0061 
022C    E8 00 00                  call        _dos_getvect_ 
022F    85 D2                     test        dx,dx 
0231    75 0A                     jne         L$18 
0233    85 C0                     test        ax,ax 
0235    75 06                     jne         L$18 
0237    B8 02 00                  mov         ax,0x0002 
023A    E9 B9 00                  jmp         L$28 
023D                          L$18:
023D    8C 56 F2                  mov         word ptr -0xe[bp],ss 
0240    8D 46 C2                  lea         ax,-0x3e[bp] 
0243    89 46 F4                  mov         word ptr -0xc[bp],ax 
0246    89 76 F6                  mov         word ptr -0xa[bp],si 
0249    B8 00 00                  mov         ax,DGROUP:CONST 
024C    8E C0                     mov         es,ax 
024E    8B 5E BE                  mov         bx,word ptr -0x42[bp] 
0251    26 8B 47 02               mov         ax,word ptr es:0x2[bx] 
0255    BB 10 00                  mov         bx,0x0010 
0258    31 D2                     xor         dx,dx 
025A    E8 00 00                  call        strtoul_ 
025D    3C 61                     cmp         al,0x61 
025F    75 09                     jne         L$20 
0261    B8 03 00                  mov         ax,0x0003 
0264    E9 8F 00                  jmp         L$28 
0267                          L$19:
0267    E9 89 00                  jmp         L$27 
026A                          L$20:
026A    30 E4                     xor         ah,ah 
026C    8D 5E F2                  lea         bx,-0xe[bp] 
026F    8D 56 F2                  lea         dx,-0xe[bp] 
0272    E8 00 00                  call        int86_ 
0275    83 7E F2 00               cmp         word ptr -0xe[bp],0x0000 
0279    74 34                     je          L$23 
027B    B8 00 00                  mov         ax,offset DGROUP:L$29 
027E    E8 00 00                  call        puts_ 
0281    8C C0                     mov         ax,es 
0283    8E D8                     mov         ds,ax 
0285    83 3E 02 00 00            cmp         word ptr ___iob+0x2,0x0000 
028A    7E 10                     jle         L$21 
028C    8B 1E 00 00               mov         bx,word ptr ___iob 
0290    8A 07                     mov         al,byte ptr [bx] 
0292    30 E4                     xor         ah,ah 
0294    2D 0D 00                  sub         ax,0x000d 
0297    3D 0D 00                  cmp         ax,0x000d 
029A    77 08                     ja          L$22 
029C                          L$21:
029C    B8 00 00                  mov         ax,offset ___iob 
029F    E8 00 00                  call        fgetc_ 
02A2    EB 4F                     jmp         L$27 
02A4                          L$22:
02A4    FF 0E 02 00               dec         word ptr ___iob+0x2 
02A8    43                        inc         bx 
02A9    89 1E 00 00               mov         word ptr ___iob,bx 
02AD    EB 44                     jmp         L$27 
02AF                          L$23:
02AF    31 D2                     xor         dx,dx 
02B1                          L$24:
02B1    89 D3                     mov         bx,dx 
02B3    B4 3E                     mov         ah,0x3e 
02B5    CD 21                     int         0x21 
02B7    72 02                     jb          L$25 
02B9    33 C0                     xor         ax,ax 
02BB                          L$25:
02BB    85 C0                     test        ax,ax 
02BD    75 03                     jne         L$26 
02BF    42                        inc         dx 
02C0    EB EF                     jmp         L$24 
02C2                          L$26:
02C2    8B 5C 2C                  mov         bx,word ptr 0x2c[si] 
02C5    B4 49                     mov         ah,0x49 
02C7    8E C3                     mov         es,bx 
02C9    CD 21                     int         0x21 
02CB    2E 8C 1E 00 00            mov         word ptr cs:_psp_seg,ds 
02D0    B8 21 00                  mov         ax,0x0021 
02D3    E8 00 00                  call        _dos_getvect_ 
02D6    2E A3 00 00               mov         word ptr cs:_int21hdl,ax 
02DA    2E 89 16 02 00            mov         word ptr cs:_int21hdl+0x2,dx 
02DF    B8 19 00                  mov         ax,0x0019 
02E2    CD 61                     int         0x61 
02E4    B1 04                     mov         cl,0x04 
02E6    BA 0F 00                  mov         dx,offset main_+0xf 
02E9    D3 EA                     shr         dx,cl 
02EB    83 C2 10                  add         dx,0x0010 
02EE    31 C0                     xor         ax,ax 
02F0    E8 00 00                  call        _dos_keep_ 
02F3                          L$27:
02F3    B8 01 00                  mov         ax,0x0001 
02F6                          L$28:
02F6    89 EC                     mov         sp,bp 
02F8    5D                        pop         bp 
02F9    07                        pop         es 
02FA    1F                        pop         ds 
02FB    5F                        pop         di 
02FC    5E                        pop         si 
02FD    59                        pop         cx 
02FE    5B                        pop         bx 
02FF    C3                        ret         

Routine Size: 263 bytes,    Routine Base: _TEXT + 01F9

No disassembly errors

Segment: CONST WORD USE16 00000030 bytes
0000                          L$29:
0000    45 72 72 6F 72 20 77 68 69 6C 65 20 6C 6F 61 64 Error while load
0010    69 6E 67 20 54 43 50 49 50 20 6D 6F 64 75 6C 65 ing TCPIP module
0020    2E 20 50 72 65 73 73 20 61 6E 79 20 6B 65 79 00 . Press any key.

Segment: CONST2 WORD USE16 00000000 bytes

Segment: _DATA WORD USE16 00000030 bytes
0000                          L$30:
0000    00 00 00 00                                     DD	tcp_cmd_
0004    00 00 00 00                                     DD	socket_read_
0008    00 00 00 00                                     DD	socket_write_
000C    00 00 00 00                                     DD	socket_open_
0010    00 00 00 00                                     DD	socket_close_
0014    00 00 00 00 00 00 00 00                         ........
001C    00 00 00 00                                     DD	call_get_error_
0020    00 00 00 00                                     DD	unload_
0024    FF FF FF FF 80 00 00 00 FF 7F 00 00             ............

