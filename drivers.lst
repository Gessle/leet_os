Module: D:\LEETSRC\490\drvmod\drivers.c
GROUP: 'DGROUP' CONST,CONST2,_DATA,_BSS

Segment: drivers_TEXT BYTE USE16 0000049D bytes
0000                          driver_id_:
0000    53                        push        bx 
0001    51                        push        cx 
0002    56                        push        si 
0003    57                        push        di 
0004    55                        push        bp 
0005    89 E5                     mov         bp,sp 
0007    50                        push        ax 
0008    89 D1                     mov         cx,dx 
000A    36 8B 16 00 00            mov         dx,word ptr ss:_driver_count 
000F    8E C1                     mov         es,cx 
0011    6B DA 2E                  imul        bx,dx,0x002e 
0014                          L$1:
0014    4A                        dec         dx 
0015    83 EB 2E                  sub         bx,0x002e 
0018    83 FA FF                  cmp         dx,0xffff 
001B    74 1D                     je          L$4 
001D    8B 7E FE                  mov         di,word ptr -0x2[bp] 
0020    36 C5 36 00 00            lds         si,dword ptr ss:_drivers 
0025    01 DE                     add         si,bx 
0027                          L$2:
0027    AC                        lodsb       
0028    26 8A 25                  mov         ah,byte ptr es:[di] 
002B    2A C4                     sub         al,ah 
002D    75 05                     jne         L$3 
002F    47                        inc         di 
0030    3A C4                     cmp         al,ah 
0032    75 F3                     jne         L$2 
0034                          L$3:
0034    18 E4                     sbb         ah,ah 
0036    85 C0                     test        ax,ax 
0038    75 DA                     jne         L$1 
003A                          L$4:
003A    89 D0                     mov         ax,dx 
003C                          L$5:
003C    C9                        leave       
003D    5F                        pop         di 
003E                          L$6:
003E    5E                        pop         si 
003F    59                        pop         cx 
0040    5B                        pop         bx 
0041    CB                        retf        

Routine Size: 66 bytes,    Routine Base: drivers_TEXT + 0000

0042                          dev_cmd_:
0042    56                        push        si 
0043    57                        push        di 
0044    C8 06 00 00               enter       0x0006,0x00 
0048    89 D6                     mov         si,dx 
004A    89 DA                     mov         dx,bx 
004C    6B C0 2E                  imul        ax,0x002e 
004F    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0054    01 C3                     add         bx,ax 
0056    89 46 FE                  mov         word ptr -0x2[bp],ax 
0059    8B 47 28                  mov         ax,word ptr 0x28[bx] 
005C    89 46 FC                  mov         word ptr -0x4[bp],ax 
005F    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
0062    85 C0                     test        ax,ax 
0064    75 06                     jne         L$7 
0066    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
006A    74 52                     je          L$11 
006C                          L$7:
006C    9A 00 00 00 00            call        reset_dosidle_handler_ 
0071    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0076    03 5E FE                  add         bx,word ptr -0x2[bp] 
0079    8B 47 28                  mov         ax,word ptr 0x28[bx] 
007C    89 46 FA                  mov         word ptr -0x6[bp],ax 
007F    8B 47 2A                  mov         ax,word ptr 0x2a[bx] 
0082    89 46 FC                  mov         word ptr -0x4[bp],ax 
0085    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
0088    36 A3 00 00               mov         word ptr ss:_driver_func_ptr,ax 
008C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
008F    36 A3 02 00               mov         word ptr ss:_driver_func_ptr+0x2,ax 
0093    8B 47 06                  mov         ax,word ptr 0x6[bx] 
0096    3D 01 00                  cmp         ax,0x0001 
0099    7C 08                     jl          L$8 
009B    16                        push        ss 
009C    07                        pop         es 
009D    89 D0                     mov         ax,dx 
009F    89 F3                     mov         bx,si 
00A1    EB 09                     jmp         L$9 
00A3                          L$8:
00A3    3D FF FF                  cmp         ax,0xffff 
00A6    75 0D                     jne         L$10 
00A8    16                        push        ss 
00A9    07                        pop         es 
00AA    89 D0                     mov         ax,dx 
00AC                          L$9:
00AC    89 CA                     mov         dx,cx 
00AE    26 FF 1E 00 00            call        dword ptr es:_driver_func_ptr 
00B3    89 C7                     mov         di,ax 
00B5                          L$10:
00B5    9A 00 00 00 00            call        set_dosidle_handler_ 
00BA    89 F8                     mov         ax,di 
00BC    EB 03                     jmp         L$12 
00BE                          L$11:
00BE    B8 FF FF                  mov         ax,0xffff 
00C1                          L$12:
00C1    C9                        leave       
00C2    5F                        pop         di 
00C3    5E                        pop         si 
00C4    CB                        retf        

Routine Size: 131 bytes,    Routine Base: drivers_TEXT + 0042

00C5                          dev_read_:
00C5    56                        push        si 
00C6    57                        push        di 
00C7    C8 04 00 00               enter       0x0004,0x00 
00CB    89 D7                     mov         di,dx 
00CD    89 CE                     mov         si,cx 
00CF    89 DA                     mov         dx,bx 
00D1    6B C8 2E                  imul        cx,ax,0x002e 
00D4    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
00D9    01 CB                     add         bx,cx 
00DB    8B 47 08                  mov         ax,word ptr 0x8[bx] 
00DE    89 46 FC                  mov         word ptr -0x4[bp],ax 
00E1    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
00E4    85 C0                     test        ax,ax 
00E6    75 06                     jne         L$13 
00E8    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
00EC    74 52                     je          L$19 
00EE                          L$13:
00EE    9A 00 00 00 00            call        reset_dosidle_handler_ 
00F3    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
00F8    01 CB                     add         bx,cx 
00FA    8B 4F 08                  mov         cx,word ptr 0x8[bx] 
00FD    8B 47 0A                  mov         ax,word ptr 0xa[bx] 
0100                          L$14:
0100    36 89 0E 00 00            mov         word ptr ss:_driver_func_ptr,cx 
0105    36 A3 02 00               mov         word ptr ss:_driver_func_ptr+0x2,ax 
0109    8B 47 06                  mov         ax,word ptr 0x6[bx] 
010C    3D 01 00                  cmp         ax,0x0001 
010F    7C 21                     jl          L$18 
0111    8B 4E 0A                  mov         cx,word ptr 0xa[bp] 
0114    16                        push        ss 
0115    07                        pop         es 
0116    89 D3                     mov         bx,dx 
0118    89 F8                     mov         ax,di 
011A                          L$15:
011A    89 F2                     mov         dx,si 
011C    26 FF 1E 00 00            call        dword ptr es:_driver_func_ptr 
0121    89 46 FE                  mov         word ptr -0x2[bp],ax 
0124                          L$16:
0124    9A 00 00 00 00            call        set_dosidle_handler_ 
0129    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
012C                          L$17:
012C    C9                        leave       
012D    5F                        pop         di 
012E    5E                        pop         si 
012F    CA 02 00                  retf        0x0002 
0132                          L$18:
0132    3D FF FF                  cmp         ax,0xffff 
0135    75 ED                     jne         L$16 
0137    8B 4E 0A                  mov         cx,word ptr 0xa[bp] 
013A    16                        push        ss 
013B    07                        pop         es 
013C    89 D3                     mov         bx,dx 
013E    EB DA                     jmp         L$15 
0140                          L$19:
0140    B8 FF FF                  mov         ax,0xffff 
0143    EB E7                     jmp         L$17 

Routine Size: 128 bytes,    Routine Base: drivers_TEXT + 00C5

0145                          dev_write_:
0145    56                        push        si 
0146    57                        push        di 
0147    C8 04 00 00               enter       0x0004,0x00 
014B    89 D7                     mov         di,dx 
014D    89 CE                     mov         si,cx 
014F    89 DA                     mov         dx,bx 
0151    6B C8 2E                  imul        cx,ax,0x002e 
0154    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0159    01 CB                     add         bx,cx 
015B    8B 47 0C                  mov         ax,word ptr 0xc[bx] 
015E    89 46 FC                  mov         word ptr -0x4[bp],ax 
0161    8B 47 0E                  mov         ax,word ptr 0xe[bx] 
0164    85 C0                     test        ax,ax 
0166    75 06                     jne         L$20 
0168    83 7E FC 00               cmp         word ptr -0x4[bp],0x0000 
016C    74 D2                     je          L$19 
016E                          L$20:
016E    9A 00 00 00 00            call        reset_dosidle_handler_ 
0173    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0178    01 CB                     add         bx,cx 
017A    8B 4F 0C                  mov         cx,word ptr 0xc[bx] 
017D    8B 47 0E                  mov         ax,word ptr 0xe[bx] 
0180    E9 7D FF                  jmp         L$14 

Routine Size: 62 bytes,    Routine Base: drivers_TEXT + 0145

0183                          dev_open_:
0183    51                        push        cx 
0184    56                        push        si 
0185    57                        push        di 
0186    C8 02 00 00               enter       0x0002,0x00 
018A    89 D1                     mov         cx,dx 
018C    89 DA                     mov         dx,bx 
018E    6B F0 2E                  imul        si,ax,0x002e 
0191    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0196    01 F3                     add         bx,si 
0198    8B 47 10                  mov         ax,word ptr 0x10[bx] 
019B    89 46 FE                  mov         word ptr -0x2[bp],ax 
019E    8B 47 12                  mov         ax,word ptr 0x12[bx] 
01A1    85 C0                     test        ax,ax 
01A3    75 06                     jne         L$21 
01A5    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
01A9    74 47                     je          L$27 
01AB                          L$21:
01AB    9A 00 00 00 00            call        reset_dosidle_handler_ 
01B0    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
01B5    01 F3                     add         bx,si 
01B7    8B 47 10                  mov         ax,word ptr 0x10[bx] 
01BA    8B 77 12                  mov         si,word ptr 0x12[bx] 
01BD                          L$22:
01BD    36 A3 00 00               mov         word ptr ss:_driver_func_ptr,ax 
01C1    36 89 36 02 00            mov         word ptr ss:_driver_func_ptr+0x2,si 
01C6    8B 47 06                  mov         ax,word ptr 0x6[bx] 
01C9    3D 01 00                  cmp         ax,0x0001 
01CC    7C 19                     jl          L$26 
01CE    16                        push        ss 
01CF    07                        pop         es 
01D0    89 D0                     mov         ax,dx 
01D2    89 CB                     mov         bx,cx 
01D4                          L$23:
01D4    26 FF 1E 00 00            call        dword ptr es:_driver_func_ptr 
01D9    89 C7                     mov         di,ax 
01DB                          L$24:
01DB    9A 00 00 00 00            call        set_dosidle_handler_ 
01E0    89 F8                     mov         ax,di 
01E2                          L$25:
01E2    C9                        leave       
01E3    5F                        pop         di 
01E4    5E                        pop         si 
01E5    59                        pop         cx 
01E6    CB                        retf        
01E7                          L$26:
01E7    3D FF FF                  cmp         ax,0xffff 
01EA    75 EF                     jne         L$24 
01EC    16                        push        ss 
01ED    07                        pop         es 
01EE    89 D0                     mov         ax,dx 
01F0    EB E2                     jmp         L$23 
01F2                          L$27:
01F2    B8 FF FF                  mov         ax,0xffff 
01F5    EB EB                     jmp         L$25 

Routine Size: 116 bytes,    Routine Base: drivers_TEXT + 0183

01F7                          dev_close_:
01F7    53                        push        bx 
01F8    51                        push        cx 
01F9    56                        push        si 
01FA    55                        push        bp 
01FB    31 ED                     xor         bp,bp 
01FD    6B F0 2E                  imul        si,ax,0x002e 
0200    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
0204    01 F3                     add         bx,si 
0206    8B 47 14                  mov         ax,word ptr 0x14[bx] 
0209    8B 5F 16                  mov         bx,word ptr 0x16[bx] 
020C    85 DB                     test        bx,bx 
020E    75 04                     jne         L$28 
0210    85 C0                     test        ax,ax 
0212    74 40                     je          L$34 
0214                          L$28:
0214    9A 00 00 00 00            call        reset_dosidle_handler_ 
0219    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
021D    01 F3                     add         bx,si 
021F    8B 47 14                  mov         ax,word ptr 0x14[bx] 
0222    8B 77 16                  mov         si,word ptr 0x16[bx] 
0225                          L$29:
0225    36 A3 00 00               mov         word ptr ss:_driver_func_ptr,ax 
0229    89 B6 02 00               mov         word ptr _driver_func_ptr+0x2[bp],si 
022D    8B 47 06                  mov         ax,word ptr 0x6[bx] 
0230    3D 01 00                  cmp         ax,0x0001 
0233    7C 16                     jl          L$33 
0235    16                        push        ss 
0236    07                        pop         es 
0237    89 D0                     mov         ax,dx 
0239                          L$30:
0239    26 FF 1E 00 00            call        dword ptr es:_driver_func_ptr 
023E    89 C1                     mov         cx,ax 
0240                          L$31:
0240    9A 00 00 00 00            call        set_dosidle_handler_ 
0245    89 C8                     mov         ax,cx 
0247                          L$32:
0247    5D                        pop         bp 
0248    E9 F3 FD                  jmp         L$6 
024B                          L$33:
024B    3D FF FF                  cmp         ax,0xffff 
024E    75 F0                     jne         L$31 
0250    16                        push        ss 
0251    07                        pop         es 
0252    EB E5                     jmp         L$30 
0254                          L$34:
0254    B8 FF FF                  mov         ax,0xffff 
0257    EB EE                     jmp         L$32 

Routine Size: 98 bytes,    Routine Base: drivers_TEXT + 01F7

0259                          dev_lseek_:
0259    51                        push        cx 
025A    56                        push        si 
025B    57                        push        di 
025C    C8 02 00 00               enter       0x0002,0x00 
0260    89 D1                     mov         cx,dx 
0262    89 DA                     mov         dx,bx 
0264    6B F0 2E                  imul        si,ax,0x002e 
0267    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
026C    01 F3                     add         bx,si 
026E    8B 47 18                  mov         ax,word ptr 0x18[bx] 
0271    89 46 FE                  mov         word ptr -0x2[bp],ax 
0274    8B 47 1A                  mov         ax,word ptr 0x1a[bx] 
0277    85 C0                     test        ax,ax 
0279    75 08                     jne         L$35 
027B    83 7E FE 00               cmp         word ptr -0x2[bp],0x0000 
027F    0F 84 6F FF               je          L$27 
0283                          L$35:
0283    9A 00 00 00 00            call        reset_dosidle_handler_ 
0288    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
028D    01 F3                     add         bx,si 
028F    8B 47 18                  mov         ax,word ptr 0x18[bx] 
0292    8B 77 1A                  mov         si,word ptr 0x1a[bx] 
0295    E9 25 FF                  jmp         L$22 

Routine Size: 63 bytes,    Routine Base: drivers_TEXT + 0259

0298                          dev_fsync_:
0298    53                        push        bx 
0299    51                        push        cx 
029A    56                        push        si 
029B    55                        push        bp 
029C    31 ED                     xor         bp,bp 
029E    6B F0 2E                  imul        si,ax,0x002e 
02A1    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
02A5    01 F3                     add         bx,si 
02A7    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
02AA    8B 5F 1E                  mov         bx,word ptr 0x1e[bx] 
02AD    85 DB                     test        bx,bx 
02AF    75 04                     jne         L$36 
02B1    85 C0                     test        ax,ax 
02B3    74 9F                     je          L$34 
02B5                          L$36:
02B5    9A 00 00 00 00            call        reset_dosidle_handler_ 
02BA    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
02BE    01 F3                     add         bx,si 
02C0    8B 47 1C                  mov         ax,word ptr 0x1c[bx] 
02C3    8B 77 1E                  mov         si,word ptr 0x1e[bx] 
02C6    E9 5C FF                  jmp         L$29 

Routine Size: 49 bytes,    Routine Base: drivers_TEXT + 0298

02C9                          dev_geterror_:
02C9    53                        push        bx 
02CA    51                        push        cx 
02CB    56                        push        si 
02CC    55                        push        bp 
02CD    31 ED                     xor         bp,bp 
02CF    6B F0 2E                  imul        si,ax,0x002e 
02D2    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
02D6    01 F3                     add         bx,si 
02D8    8B 47 20                  mov         ax,word ptr 0x20[bx] 
02DB    8B 5F 22                  mov         bx,word ptr 0x22[bx] 
02DE    85 DB                     test        bx,bx 
02E0    75 06                     jne         L$37 
02E2    85 C0                     test        ax,ax 
02E4    0F 84 6C FF               je          L$34 
02E8                          L$37:
02E8    9A 00 00 00 00            call        reset_dosidle_handler_ 
02ED    C5 9E 00 00               lds         bx,dword ptr _drivers[bp] 
02F1    01 F3                     add         bx,si 
02F3    8B 47 20                  mov         ax,word ptr 0x20[bx] 
02F6    8B 77 22                  mov         si,word ptr 0x22[bx] 
02F9    E9 29 FF                  jmp         L$29 

Routine Size: 51 bytes,    Routine Base: drivers_TEXT + 02C9

02FC                          unload_driver_:
02FC    53                        push        bx 
02FD    51                        push        cx 
02FE    52                        push        dx 
02FF    6B D8 2E                  imul        bx,ax,0x002e 
0302    36 8B 16 00 00            mov         dx,word ptr ss:_drivers 
0307    36 A1 02 00               mov         ax,word ptr ss:_drivers+0x2 
030B    01 D3                     add         bx,dx 
030D    8E D8                     mov         ds,ax 
030F    8B 57 26                  mov         dx,word ptr 0x26[bx] 
0312    8B 4F 24                  mov         cx,word ptr 0x24[bx] 
0315    85 D2                     test        dx,dx 
0317    75 04                     jne         L$38 
0319    85 C9                     test        cx,cx 
031B    74 07                     je          L$39 
031D                          L$38:
031D    FF 5F 24                  call        dword ptr 0x24[bx] 
0320    31 C0                     xor         ax,ax 
0322    EB 03                     jmp         L$40 
0324                          L$39:
0324    B8 01 00                  mov         ax,0x0001 
0327                          L$40:
0327    5A                        pop         dx 
0328    59                        pop         cx 
0329    5B                        pop         bx 
032A    CB                        retf        

Routine Size: 47 bytes,    Routine Base: drivers_TEXT + 02FC

032B                          unload_drivers_:
032B    52                        push        dx 
032C    36 8B 16 00 00            mov         dx,word ptr ss:_driver_count 
0331                          L$41:
0331    4A                        dec         dx 
0332    83 FA FF                  cmp         dx,0xffff 
0335    74 08                     je          L$42 
0337    89 D0                     mov         ax,dx 
0339    0E                        push        cs 
033A    E8 00 00                  call        unload_driver_ 
033D    EB F2                     jmp         L$41 
033F                          L$42:
033F    5A                        pop         dx 
0340    CB                        retf        

Routine Size: 22 bytes,    Routine Base: drivers_TEXT + 032B

0341                          unload_module_:
0341    53                        push        bx 
0342    51                        push        cx 
0343    56                        push        si 
0344    57                        push        di 
0345    C8 06 00 00               enter       0x0006,0x00 
0349    50                        push        ax 
034A    89 D1                     mov         cx,dx 
034C    36 8B 16 00 00            mov         dx,word ptr ss:_driver_count 
0351    8E C1                     mov         es,cx 
0353    6B DA 2E                  imul        bx,dx,0x002e 
0356                          L$43:
0356    4A                        dec         dx 
0357    83 EB 2E                  sub         bx,0x002e 
035A    83 FA FF                  cmp         dx,0xffff 
035D    0F 84 D9 FC               je          L$4 
0361    8B 7E F8                  mov         di,word ptr -0x8[bp] 
0364    36 8B 36 02 00            mov         si,word ptr ss:_drivers+0x2 
0369    36 A1 00 00               mov         ax,word ptr ss:_drivers 
036D    89 76 FA                  mov         word ptr -0x6[bp],si 
0370    89 C6                     mov         si,ax 
0372    8E 5E FA                  mov         ds,word ptr -0x6[bp] 
0375    01 DE                     add         si,bx 
0377                          L$44:
0377    AC                        lodsb       
0378    26 8A 25                  mov         ah,byte ptr es:[di] 
037B    2A C4                     sub         al,ah 
037D    75 05                     jne         L$45 
037F    47                        inc         di 
0380    3A C4                     cmp         al,ah 
0382    75 F3                     jne         L$44 
0384                          L$45:
0384    18 E4                     sbb         ah,ah 
0386    85 C0                     test        ax,ax 
0388    75 CC                     jne         L$43 
038A    89 D0                     mov         ax,dx 
038C    0E                        push        cs 
038D    E8 00 00                  call        unload_driver_ 
0390    89 46 FC                  mov         word ptr -0x4[bp],ax 
0393    6B C2 2E                  imul        ax,dx,0x002e 
0396    89 C3                     mov         bx,ax 
0398    05 2E 00                  add         ax,0x002e 
039B    36 FF 0E 00 00            dec         word ptr ss:_driver_count 
03A0    89 46 FE                  mov         word ptr -0x2[bp],ax 
03A3                          L$46:
03A3    36 3B 16 00 00            cmp         dx,word ptr ss:_driver_count 
03A8    73 23                     jae         L$47 
03AA    8B 76 FE                  mov         si,word ptr -0x2[bp] 
03AD    B9 17 00                  mov         cx,0x0017 
03B0    36 8B 3E 00 00            mov         di,word ptr ss:_drivers 
03B5    36 A1 02 00               mov         ax,word ptr ss:_drivers+0x2 
03B9    42                        inc         dx 
03BA    83 46 FE 2E               add         word ptr -0x2[bp],0x002e 
03BE    8E C0                     mov         es,ax 
03C0    8E D8                     mov         ds,ax 
03C2    01 FE                     add         si,di 
03C4    01 DF                     add         di,bx 
03C6    83 C3 2E                  add         bx,0x002e 
03C9    F3 A5                     rep movsw   
03CB    EB D6                     jmp         L$46 
03CD                          L$47:
03CD    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
03D0    E9 69 FC                  jmp         L$5 

Routine Size: 146 bytes,    Routine Base: drivers_TEXT + 0341

03D3                          load_driver_:
03D3    56                        push        si 
03D4    57                        push        di 
03D5    C8 0C 00 00               enter       0x000c,0x00 
03D9    50                        push        ax 
03DA    89 D7                     mov         di,dx 
03DC    89 5E F8                  mov         word ptr -0x8[bp],bx 
03DF    89 4E FC                  mov         word ptr -0x4[bp],cx 
03E2    36 A1 00 00               mov         ax,word ptr ss:_driver_count 
03E6    31 F6                     xor         si,si 
03E8    89 46 FE                  mov         word ptr -0x2[bp],ax 
03EB    B0 00                     mov         al,0x00 
03ED    CD 58                     int         0x58 
03EF    89 46 FA                  mov         word ptr -0x6[bp],ax 
03F2                          L$48:
03F2    46                        inc         si 
03F3    89 F0                     mov         ax,si 
03F5    9A 00 00 00 00            call        _dos_getvect_ 
03FA    85 D2                     test        dx,dx 
03FC    75 04                     jne         L$49 
03FE    85 C0                     test        ax,ax 
0400    74 07                     je          L$50 
0402                          L$49:
0402    85 F6                     test        si,si 
0404    75 EC                     jne         L$48 
0406    E9 B5 FC                  jmp         L$11 
0409                          L$50:
0409    56                        push        si 
040A    16                        push        ss 
040B    68 00 00                  push        offset DGROUP:L$52 
040E    16                        push        ss 
040F    8D 56 F4                  lea         dx,-0xc[bp] 
0412    52                        push        dx 
0413    BB 00 00                  mov         bx,offset driver_installer_ 
0416    9A 00 00 00 00            call        sprintf_ 
041B    83 C4 0A                  add         sp,0x000a 
041E    B9 00 00                  mov         cx,seg driver_installer_ 
0421    9A 00 00 00 00            call        reset_dosidle_handler_ 
0426    89 F0                     mov         ax,si 
0428    9A 00 00 00 00            call        _dos_setvect_ 
042D    BB 82 00                  mov         bx,0x0082 
0430    89 FA                     mov         dx,di 
0432    B0 01                     mov         al,0x01 
0434    CD 58                     int         0x58 
0436    8C D1                     mov         cx,ss 
0438    8D 5E F4                  lea         bx,-0xc[bp] 
043B    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
043E    9A 00 00 00 00            call        dosexec_ 
0443    0F B6 5E FA               movzx       bx,byte ptr -0x6[bp] 
0447    B0 01                     mov         al,0x01 
0449    CD 58                     int         0x58 
044B    9A 00 00 00 00            call        set_dosidle_handler_ 
0450    31 C9                     xor         cx,cx 
0452    89 F0                     mov         ax,si 
0454    31 DB                     xor         bx,bx 
0456    9A 00 00 00 00            call        _dos_setvect_ 
045B    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
045E    36 3B 06 00 00            cmp         ax,word ptr ss:_driver_count 
0463    74 2B                     je          L$51 
0465    6B F0 2E                  imul        si,ax,0x002e 
0468    6A 05                     push        0x0005 
046A    8B 5E F8                  mov         bx,word ptr -0x8[bp] 
046D    8B 4E FC                  mov         cx,word ptr -0x4[bp] 
0470    36 A1 00 00               mov         ax,word ptr ss:_drivers 
0474    36 8B 16 02 00            mov         dx,word ptr ss:_drivers+0x2 
0479    01 F0                     add         ax,si 
047B    9A 00 00 00 00            call        strncpy_ 
0480    36 C5 1E 00 00            lds         bx,dword ptr ss:_drivers 
0485    01 F3                     add         bx,si 
0487    31 C0                     xor         ax,ax 
0489    C6 47 05 00               mov         byte ptr 0x5[bx],0x00 
048D    E9 31 FC                  jmp         L$12 
0490                          L$51:
0490    9A 00 00 00 00            call        restore_videomode_ 
0495    9A 00 00 00 00            call        draw_screen_ 
049A    E9 21 FC                  jmp         L$11 

Routine Size: 202 bytes,    Routine Base: drivers_TEXT + 03D3

No disassembly errors

Segment: CONST WORD USE16 00000003 bytes
0000                          L$52:
0000    25 58 00                                        %X.

Segment: CONST2 WORD USE16 00000000 bytes

Segment: _DATA WORD USE16 00000002 bytes
0000                          _driver_count:
0000    00 00                                           ..

Segment: _BSS WORD USE16 00000008 bytes
0000                          _drivers:
0004                          _driver_func_ptr:

BSS Size: 8 bytes

